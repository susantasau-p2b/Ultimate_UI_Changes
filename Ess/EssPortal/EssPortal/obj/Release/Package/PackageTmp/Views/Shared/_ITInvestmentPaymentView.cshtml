@{
    Layout = null;
}
@model EssPortal.Models.FileModel
<html>
<style>
    .popup-content-label {
        width: 111px;
        display: block;
        float: left;
    }

    .row1 {
        width: 635px;
        display: inline-block;
    }

    .hide_textbox {
        display: none;
    }

    .container_div {
        border: 1px solid rgba(207, 207, 207, 0.91);
        margin-top: 15px;
        margin-bottom: 15px;
    }

    .section1_Leave {
        display: block;
        border: 1.5px solid rgba(207, 207, 207, 0.91);
        height: 554px;
        width: 534px;
        margin: 4px auto;
        position: absolute;
    }

    .section2_Leave {
        display: block;
        border: 1px solid #ddd;
        height: 554px;
        width: 610px;
        margin: 5px 4px;
        position: absolute;
        left: 546px;
    }

    .hide-div {
        display: none;
    }
    .header-title {
        display: block;
        height: 315px;
        width: 610px;
    }
     .heading {
        background: rgba(207, 207, 207, 0.91) none repeat scroll 0 0;
        color: #424242;
        display: block;
        font-size: 1em;
        font-weight: bold;
        height: 15px;
        margin: 3px auto;
        padding: 2px 0 1px 2px;
        width: 99%;
    }

    .hide-div {
        display: none;
    }

    .lv-label {
        width: 125px;
        font-size: 9px;
        padding: 1px;
        position: relative;
        float: left;
    }

    .lb-data {
        font-weight: bold;
        font-size: 11px;
        float: left;
    }
    .imgdata {
        width: 100%;
        height: 100%;
    }
</style>
</head>

<body>
    <form id="frmITInvestmentPaymentView" name="frmITInvestmentPaymentView" method="post">

        <input type="text" class="hide_textbox" name="authority" id="authority" />
        <input type="text" class="hide_textbox" name="isClose" id="isClose" />
        <input type="hidden" name="Investmentid_User" id="Investmentid_User" value="" />
        <input type="hidden" name="Subinvestment_Id_User" id="Subinvestment_Id_User" value="" />
        <div class="section_Method" id="lv-div" style="display:block">
            @*<div class="heading">Employee Info </div>
            <div class="row1 content_margine">
                <label class="lv-label">Employee :</label>
                <div id="Employee" class="lb-data"></div>
            </div>*@
            <div class="row1 content_margine">
                <label class="lv-label">FinancialYear:</label>
                <div id="FinancialYear" class="lb-data" style="width:391px;"></div>
            </div>
            <div class="row1 content_margine">
                <label class="lv-label">ITInvestment:</label>
                <div id="ITInvestment" class="lb-data"></div>
            </div>
            <div class="row1 content_margine">
                <label class="lv-label">ItSection:</label>
                <div id="ItSection" class="lb-data"></div>
            </div>
            <div class="row1 content_margine">
                <label class="lv-label">Status:</label>
                <div id="Status" class="lb-data"></div>
            </div>
            <div class="row1 content_margine">
                <label class="lv-label">InvestmentDate:</label>
                <div id="InvestmentDate" class="lb-data"></div>
            </div>
            <div class="row1 content_margine">
                <label class="lv-label">ActualInvestment:</label>
                <div id="ActualInvestment" class="lb-data"></div>
            </div>
            <div class="row1 content_margine">
                <label class="lv-label">DeclaredInvestment:</label>
                <div id="DeclaredInvestment" class="lb-data"></div>
            </div>
            <div class="row1 content_margine">
                <label class="lv-label">IsCacel:</label>
                <div id="IsCacel" class="lb-data"></div>
            </div>
            <div class="row1 content_margine">
                <label class="lv-label">Narration:</label>
                <div id="Narration" class="lb-data"></div>
            </div>

            <div class="row1 content_margine hide-div" id="SanctionReasonDiv">
                <label class="lv-label">Sanction Reason:</label>
                <div id="lvSanctionReason" class="lb-data"></div>
            </div>
            <div class="row1 content_margine hide-div" id="ApprovalReasonDiv">
                <label class="lv-label">Approval Reason:</label>
                <div id="lvApprovalReason" class="lb-data"></div>
            </div>
            <div class="section_Method hide-div" id="MySelf-div">
                <div id="MySelfDiv">
                    <div class="heading">MySelf Authority Views</div>
                    <div id="yes_no_div" class="row1 content_margine">
                        <label class="popup-content-label">
                            Is Cancel:
                        </label>
                        <div class="popup_radio_button">
                            <input type="radio" name="IsCancel" value="true" id="rdo5" /><label for="rdo5">Yes</label>
                            <input type="radio" name="IsCancel" id="rdo6" value="false" /><label for="rdo6">No</label>
                        </div>
                    </div>
                    <div class="row1 content_margine">
                        <label class="popup-content-label">Reason :</label>
                        <input type="text" id="Grid-ReasonIsCancel" name="ReasonIsCancel" />
                    </div>
                </div>
            </div>
            <div class="section_Method hide-div" id="Sanction-div">
                <div id="SanctionDiv">
                    <div class="heading">Sanction Authority Views</div>
                    <div id="yes_no_div" class="row1 content_margine">
                        <label class="popup-content-label must">
                            Sanction Status:
                        </label>
                        <div class="popup_radio_button">
                            <input type="radio" name="Sanction" value="true" id="rdo1" /><label for="rdo1">Yes</label>
                            <input type="radio" name="Sanction" id="rdo2" value="false" /><label for="rdo2">No</label>
                        </div>
                    </div>
                    <div class="row1 content_margine">
                        <label class="popup-content-label must">Reason :</label>
                        <input type="text" id="Grid-ReasonSanction" name="ReasonSanction" />
                    </div>
                </div>
            </div>
            <div class="section_Method hide-div" id="Approval-div">
                <div id="ApprovalDiv" class="row1 content_margine">
                    <div class="heading">Approval Authority View</div>
                    <label class="popup-content-label must">
                        Approval Status:
                    </label>
                    <div class="popup_radio_button">
                        <input type="radio" name="Approval" value="true" id="rdo3" /><label for="rdo3">Yes</label>
                        <input type="radio" name="Approval" id="rdo4" value="false" /><label for="rdo4">No</label>
                    </div>
                    <div class="row1 content_margine">
                        <label class="popup-content-label must">Reason :</label>
                        <input type="text" id="Grid-ReasonApproval" name="ReasonApproval" />
                    </div>
                </div>
            </div>
            <div class="form-horizontal" id="Upload_Div">
                <div class="form-group content_margine" id="FileBrowes_id">
                    @Html.LabelFor(model => model.files, htmlAttributes: new { @class = "control-label popup-content-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.files, "", new { @type = "file", @multiple = "multiple" }) <button id="Upload_btnUser" name="Upload_btnUser">Upload</button> @*<button id="Download_File" name="Download_File">Download</button>*@
                    </div>
                </div>
                <div class="row3 content_margine" id="FileDownload_idUser">
                    <label class="popup-content-label">File Download :</label><input type="text" class="popup-content-textbox" id="filepathiduser" /> <button id="Download_btnUser" name="Download_btnUser">Download</button>
                </div>
                <div style="height:100%;width:100%;overflow:auto;" id="user_investment" class="content_margine"></div>
                <canvas id="pdfViewer"></canvas>
                <div id="container2" class="container2">
                </div>
            </div>
        </div>
    </form>

</body>
</html>
<script>
    $(document).ready(function (e) {
        $('button').button();
        $('.popup_radio_button').buttonset();
        $('#filepathiduser').attr('disabled', 'disabled');
        console.log($.LocalStorageHelper.Get("Whois"));
        if ($.LocalStorageHelper.Get("Whois").toUpperCase() == "SANCTION".toUpperCase()) {
            $('#Sanction-div').show();
            $('#SanctionReasonDiv,#ApprovalReasonDiv').hide();
            $('#Upload_Div').hide();
            $('#authority').val($.LocalStorageHelper.Get("Whois"));
        } else {
            $('#Sanction-div').hide();
        }
        if ($.LocalStorageHelper.Get("Whois").toUpperCase() == "MySelf".toUpperCase()) {
            $('#MySelf-div').show();
            // $('#MySelfReasonDiv,#ApprovalReasonDiv').hide();
            $('#SanctionReasonDiv,#ApprovalReasonDiv').show();
            $('#authority').val($.LocalStorageHelper.Get("Whois"));
        } else {
            // $('#Sanction-div').hide();
        }
        if ($.LocalStorageHelper.Get("Whois").toUpperCase() == "ReComandtion".toUpperCase()) {
            $('#ReComandtion-div').show();
            $('#authority').val($.LocalStorageHelper.Get("Whois"));
        } else {
            $('#ReComandtion-div').hide();
        }
        if ($.LocalStorageHelper.Get("Whois").toUpperCase() == "Approval".toUpperCase()) {
            $('#Approval-div').show();
            $('#ApprovalReasonDiv').hide();
            $('#SanctionReasonDiv').show();
            $('#Upload_Div').hide();
            $('#authority').val($.LocalStorageHelper.Get("Whois"));
        } else {
            $('#Approval-div').hide();
        }
        if ($.LocalStorageHelper.Get("Whois").toUpperCase() == "HR".toUpperCase()) {
            $('#HR-div').show();

            $('#authority').val($.LocalStorageHelper.Get("Whois"));
        } else {
            $('#HR-div').hide();
        }
        if ($.LocalStorageHelper.Get("Whois").toUpperCase() == "Viewer".toUpperCase()) {
            //   $('#HR-div').show();
        } else {
            // $('#HR-div').hide();
        }
        if ($.LocalStorageHelper.Get("Whois").toUpperCase() == "MYSELF".toUpperCase()) {
        } else {
        }
        //} else {
        //    $('#HR-div').hide(); $('#Approval-div').hide(); $('#ReComandtion-div').hide(); $('#Sanction-div').hide();
        //}

    });
    $('#filepathid').attr('disabled', 'disabled');

    $('#Upload_btnUser').on("click", function (event) {
        debugger;
        var vidFileLength = $("#files")[0].files.length;
        if (vidFileLength === 0) {
            alert("No file selected.");
            return false;
        }
        var form = $("#frmITInvestmentPaymentView").serialize();
        var tempExcel = new FormData($("#frmITInvestmentPaymentView")[0]);
        $.post({
            url: "@Url.Action("ITnvestmentUploadUser", "ITInvestmentPayment")",
            data: tempExcel,
        datatype: "json",
        method: "POST",
        data: tempExcel,
        cache: false,
        processData: false,
        contentType: false,
        enctype: 'multipart/form-data',
        processData: false,
        success: function (data) {
            if (data.success) {
                alert("File Upload Successfully");
                return false;
            }
        },
        complete: function (data) {
            //$('#lblloader').hide();
        }
    });
    event.preventDefault();
    });
    $('#Download_btnUser').on("click", function (event) {
        debugger;
        var filepath = $('#filepathiduser').val();
        if (filepath != null) {
            $.post("@Url.Action("Filename", "ITInvestmentPayment")?filepath=" + filepath, function (data) {
                if (data != null && data != "") {
                    window.location = '@Url.Action("GetCompImage", "ITInvestmentPayment")?filepath=' + data.data;
                }
                else {
                    alert("Data Null");
                }
            })
        }
        event.preventDefault();
    });
    var imagesPreview = function (input, placeToInsertImagePreview) {
        debugger;
        if (input.files) {
            var filesAmount = input.files.length;
            $(placeToInsertImagePreview).empty();
            for (i = 0; i < filesAmount; i++) {
                var reader = new FileReader();

                reader.onload = function (event) {
                    $($.parseHTML('<img class="imgdata">')).attr('src', event.target.result).appendTo(placeToInsertImagePreview);
                }

                reader.readAsDataURL(input.files[i]);
            }
        }

    };
    // Loaded via <script> tag, create shortcut to access PDF.js exports.
    var pdfjsLib = window['pdfjs-dist/build/pdf'];
    $("#files").on("change", function (e) {
        debugger;
        var file = e.target.files[0]
        var filesize = e.target.files[0].size;
        var maxfilesize = 500000;//500kb
        if (filesize <= maxfilesize) {
            if (file.type == "application/pdf") {
                $('#container2').empty();
                $("#user_investment").hide();
                $("#pdfViewer").show();
                var fileReader = new FileReader();
                fileReader.onload = function () {
                    var pdfData = new Uint8Array(this.result);
                    // Using DocumentInitParameters object to load binary data.
                    var loadingTask = pdfjsLib.getDocument({ data: pdfData });
                    loadingTask.promise.then(function (pdf) {
                        console.log('PDF loaded');

                        // Fetch the first page
                        // var pageNumber = 1;
                        //var container = document.getElementById("container")
                        for (var i = 1; i <= pdf.numPages; i++) {
                            pdf.getPage(i).then(function (page) {
                                console.log('Page loaded');

                                var scale = 1.5;
                                var viewport = page.getViewport({ scale: scale });

                                var div = document.createElement("div");

                                // Set id attribute with page-#{pdf_page_number} format
                                div.setAttribute("id", "page-" + (page.pageIndex + 1));

                                // This will keep positions of child elements as per our needs
                                div.setAttribute("style", "position: relative");
                                div.setAttribute("class", "form-group content_margine");

                                // Append div within div#container
                                container2.appendChild(div);

                                // Create a new Canvas element
                                var canvas = document.createElement("canvas");

                                // Append Canvas within div#page-#{pdf_page_number}
                                div.appendChild(canvas);

                                var context = canvas.getContext('2d');
                                canvas.height = viewport.height;
                                canvas.width = viewport.width;

                                var renderContext = {
                                    canvasContext: context,
                                    viewport: viewport
                                };

                                // Render PDF page
                                var renderTask = page.render(renderContext);
                                renderTask.promise.then(function () {
                                    console.log('Page rendered');
                                });
                            });
                        }
                    }, function (reason) {
                        // PDF loading error
                        console.error(reason);
                    });
                };
                fileReader.readAsArrayBuffer(file);
            } if (file.type == "image/jpeg" || file.type == "image/png") {
                $('#container2').empty();
                $("#user_investment").show();
                $("#pdfViewer").hide();
                imagesPreview(this, '#user_investment')
            }
            // $('.ui-dialog-buttonpane').find('button:contains("Submit")').button('enable');
            $('#Upload_btnUser').button('enable');
        } else {
            alert("File Size Should Not Be Grater than 500kb");
            $('#Upload_btnUser').button('disable');
            // $('.ui-dialog-buttonpane').find('button:contains("Submit")').button('disable');
        }
    });

</script>