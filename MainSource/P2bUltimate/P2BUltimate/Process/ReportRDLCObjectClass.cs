using System.Web;
using System.Web.Mvc;
using System.Net;
using System.Data;
using System.Data.Entity.Infrastructure;
using System.Transactions;
using System.Text;
using System.IO;
using Newtonsoft.Json.Linq;
using System.Web.Script.Serialization;
using Microsoft.Reporting.WebForms;
using P2b.Global;
using P2BUltimate.App_Start;
using P2BUltimate.Models;
using P2BUltimate.Security;
using Payroll;
using ReportPayroll;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Data.Entity;
using System.Globalization;
using System.Linq;
using System.Linq.Dynamic;
using System.Threading.Tasks;
using Leave;
using Attendance;
using IR;
using Training;
using Appraisal;
using System.Configuration;
using P2B.UTILS;
namespace P2BUltimate.Process
{
    public class ReportRDLCObjectClass
    {
        public static List<GenericField100> GenerateBankStatement(Int32 CompId, List<int> EmpPayrollIdList, string mPayMonth, List<string> forithead, List<string> SpecialGroupslist, List<string> salheadlist)
        {
            using (DataBaseContext db = new DataBaseContext())
            {
                db.Configuration.AutoDetectChangesEnabled = false;
                //var OSalHead = db.CompanyPayroll
                //    .Include(e => e.SalaryHead)
                //    .Include(e => e.SalaryHead.Select(r => r.Type))
                //    .Where(d => d.Id == CompId).AsNoTracking().AsParallel().SingleOrDefault();

                List<EmployeePayroll> OEmpData = new List<EmployeePayroll>();




                foreach (var item in EmpPayrollIdList)
                {
                    var OEmpData_temp = db.EmployeePayroll
                        //.Include(e => e.SalaryT)
                        //.Include(e => e.SalaryT.Select(t => t.SalEarnDedT))
                        //.Include(e => e.SalaryT.Select(t => t.SalEarnDedT.Select(r => r.SalaryHead)))
                        //.Include(e => e.SalaryT.Select(t => t.SalEarnDedT.Select(r => r.SalaryHead.Type)))
                        //.Include(e => e.SalaryT.Select(t => t.SalEarnDedT.Select(r => r.SalaryHead.SalHeadOperationType)))
                            .Include(e => e.Employee)
                        //    .Include(e => e.Employee.EmpName)
                        //    .Include(e => e.Employee.EmpOffInfo)
                        //    .Include(e => e.Employee.EmpOffInfo.Bank)
                        //    .Include(e => e.Employee.EmpOffInfo.Branch)
                        //    .Include(e => e.Employee.EmpOffInfo.AccountType)
                        ////.Include(e => e.SalaryT.Select(r => r.Geostruct.Region))
                        //    .Include(e => e.SalaryT.Select(r => r.Geostruct.Location.LocationObj))
                        //    .Include(e => e.SalaryT.Select(r => r.Geostruct.Department.DepartmentObj))
                        ////.Include(e => e.SalaryT.Select(r => r.FuncStruct.Job))
                        ////.Include(e => e.SalaryT.Select(r => r.FuncStruct.Job.JobPosition))
                        //    .Include(e => e.SalaryT.Select(r => r.PayStruct.Grade))
                        ////.Include(e => e.SalaryT.Select(r => r.PayStruct.Grade.Levels))
                        ////.Include(e => e.SalaryT.Select(r => r.PayStruct.Grade.Levels))
                        ////.Include(e => e.SalaryT.Select(r => r.PayStruct.JobStatus))
                        ////.Include(e => e.SalaryT.Select(r => r.PayStruct.JobStatus.EmpActingStatus))
                        //.Include(e => e.SalaryT.Select(r => r.Geostruct))
                        //.Include(e => e.SalaryT.Select(r => r.PayStruct))
                        // .Include(e => e.SalaryT.Select(r => r.FuncStruct))

                            .Where(e => e.Employee.Id == item).AsNoTracking().AsParallel()

                            .FirstOrDefault();
                    List<string> BusiCategory = new List<string>();

                    if (OEmpData_temp != null)
                    {
                        if (salheadlist.Count() != 0 && salheadlist.Count() > 0)
                        {
                            BusiCategory.AddRange(salheadlist);

                            foreach (string ca1 in BusiCategory)
                            {
                                OEmpData_temp.Employee.EmpName = db.NameSingle.Find(OEmpData_temp.Employee.EmpName_Id);
                                OEmpData_temp.Employee.EmpOffInfo = db.EmpOff.Find(OEmpData_temp.Employee.EmpOffInfo_Id);
                                OEmpData_temp.Employee.EmpOffInfo.Bank = db.Bank.Find(OEmpData_temp.Employee.EmpOffInfo.Bank_Id);
                                OEmpData_temp.Employee.EmpOffInfo.Branch = db.Branch.Find(OEmpData_temp.Employee.EmpOffInfo.Branch_Id);
                                OEmpData_temp.Employee.EmpOffInfo.AccountType = db.LookupValue.Find(OEmpData_temp.Employee.EmpOffInfo.AccountType_Id);
                                OEmpData_temp.SalaryT = db.SalaryT.Where(e => e.EmployeePayroll_Id == OEmpData_temp.Id && e.PayMonth == mPayMonth).ToList();

                                if (OEmpData_temp.Employee != null && OEmpData_temp.Employee.EmpOffInfo != null && OEmpData_temp.Employee.EmpOffInfo.Bank_Id != null)
                                {
                                    if (OEmpData_temp.Employee.EmpOffInfo.Bank.Name.ToString().ToUpper() == ca1.ToUpper())
                                    {

                                        foreach (var item1 in OEmpData_temp.SalaryT)
                                        {
                                            item1.SalEarnDedT = db.SalaryT.Where(e => e.Id == item1.Id).Select(r => r.SalEarnDedT).AsNoTracking().AsParallel().FirstOrDefault();
                                            foreach (var item2 in item1.SalEarnDedT)
                                            {
                                                item2.SalaryHead = db.SalaryHead.Find(item2.SalaryHead_Id);
                                                item2.SalaryHead.Type = db.LookupValue.Find(item2.SalaryHead.Type_Id);
                                                item2.SalaryHead.SalHeadOperationType = db.LookupValue.Find(item2.SalaryHead.SalHeadOperationType_Id);
                                            }
                                            //item1.Geostruct = db.GeoStruct.Find(item1.Geostruct_Id);
                                            //item1.Geostruct.Location = db.Location.Find(item1.Geostruct.Location_Id);
                                            //if (item1.Geostruct != null && item1.Geostruct.Location != null)
                                            //{
                                            //    item1.Geostruct.Location.LocationObj  = db.LocationObj.Find(item1.Geostruct.Location.LocationObj_Id);
                                            //}
                                            //item1.Geostruct.Department = db.Department.Find(item1.Geostruct.Department_Id);
                                            //if (item1.Geostruct != null && item1.Geostruct.Department != null)
                                            //{
                                            //    item1.Geostruct.Department.DepartmentObj = db.DepartmentObj.Find(item1.Geostruct.Department.DepartmentObj_Id);
                                            //}
                                            //item1.PayStruct = db.PayStruct.Find(item1.PayStruct_Id);
                                            //item1.PayStruct.Grade = db.Grade.Find(item1.PayStruct.Grade_Id);
                                            //item1.FuncStruct = db.FuncStruct.Find(item1.FuncStruct_Id);
                                        }
                                        OEmpData.Add(OEmpData_temp);

                                    }
                                }
                            }
                        }

                        else
                        {
                            OEmpData_temp.Employee.EmpName = db.NameSingle.Find(OEmpData_temp.Employee.EmpName_Id);
                            OEmpData_temp.Employee.EmpOffInfo = db.EmpOff.Find(OEmpData_temp.Employee.EmpOffInfo_Id);
                            OEmpData_temp.Employee.EmpOffInfo.Bank = db.Bank.Find(OEmpData_temp.Employee.EmpOffInfo.Bank_Id);
                            OEmpData_temp.Employee.EmpOffInfo.Branch = db.Branch.Find(OEmpData_temp.Employee.EmpOffInfo.Branch_Id);
                            OEmpData_temp.Employee.EmpOffInfo.AccountType = db.LookupValue.Find(OEmpData_temp.Employee.EmpOffInfo.AccountType_Id);
                            OEmpData_temp.SalaryT = db.SalaryT.Where(e => e.EmployeePayroll_Id == OEmpData_temp.Id && e.PayMonth == mPayMonth).ToList();
                            foreach (var item1 in OEmpData_temp.SalaryT)
                            {
                                item1.SalEarnDedT = db.SalaryT.Where(e => e.Id == item1.Id).Select(r => r.SalEarnDedT).AsNoTracking().AsParallel().FirstOrDefault();
                                foreach (var item2 in item1.SalEarnDedT)
                                {
                                    item2.SalaryHead = db.SalaryHead.Find(item2.SalaryHead_Id);
                                    item2.SalaryHead.Type = db.LookupValue.Find(item2.SalaryHead.Type_Id);
                                    item2.SalaryHead.SalHeadOperationType = db.LookupValue.Find(item2.SalaryHead.SalHeadOperationType_Id);
                                }
                                //item1.Geostruct = db.GeoStruct.Find(item1.Geostruct_Id);
                                //item1.Geostruct.Location = db.Location.Find(item1.Geostruct.Location_Id);
                                //if (item1.Geostruct != null && item1.Geostruct.Location != null)
                                //{
                                //    item1.Geostruct.Location.LocationObj  = db.LocationObj.Find(item1.Geostruct.Location.LocationObj_Id);
                                //}
                                //item1.Geostruct.Department = db.Department.Find(item1.Geostruct.Department_Id);
                                //if (item1.Geostruct != null && item1.Geostruct.Department != null)
                                //{
                                //    item1.Geostruct.Department.DepartmentObj = db.DepartmentObj.Find(item1.Geostruct.Department.DepartmentObj_Id);
                                //}
                                //item1.PayStruct = db.PayStruct.Find(item1.PayStruct_Id);
                                //item1.PayStruct.Grade = db.Grade.Find(item1.PayStruct.Grade_Id);
                                //item1.FuncStruct = db.FuncStruct.Find(item1.FuncStruct_Id);
                            }
                            OEmpData.Add(OEmpData_temp);
                        }
                    }
                }
                var OSalTchk = OEmpData.Select(e => e.SalaryT).ToList();
                var mHeader = false;
                if (OEmpData.Count() == 0 || OSalTchk == null)
                {
                    return null;
                }

                ///////////else
                var SpGroup = SpecialGroupslist.ToList();
                var WorkLocation = false;
                var loanLocation = false;



                foreach (var item1 in SpGroup)
                {
                    if (item1 == "WorkingLocation")
                    {

                        WorkLocation = true;
                    }
                    if (item1 == "LoanLocation")
                    {

                        loanLocation = true;
                    }

                }
                // var month = false;
                var emp = false;
                var dept = false;
                var loca = false;
                var comp = false;
                var grp = false;
                var unit = false;
                var div = false;
                var regn = false;
                var grade = false;
                var lvl = false;
                var jobstat = false;
                var job = false;
                var jobpos = false;
                var vc = db.LookupValue.Where(a => forithead.Contains(a.Id.ToString())).ToList();

                foreach (var item in vc)
                {
                    //if (item.LookupVal.ToUpper() == "MONTH")
                    //{
                    //    month = true;
                    //}
                    if (item.LookupVal.ToUpper() == "LOCATION")
                    {

                        loca = true;
                    }
                    if (item.LookupVal.ToUpper() == "EMPLOYEE")
                    {
                        emp = true;
                    }
                    if (item.LookupVal.ToUpper() == "DEPARTMENT")
                    {
                        dept = true;
                    }
                    if (item.LookupVal.ToUpper() == "COMPANY")
                    {
                        comp = true;
                    }
                    if (item.LookupVal.ToUpper() == "GROUP")
                    {
                        grp = true;
                    }
                    if (item.LookupVal.ToUpper() == "UNIT")
                    {
                        unit = true;
                    }
                    if (item.LookupVal.ToUpper() == "DIVISION")
                    {
                        div = true;
                    }
                    if (item.LookupVal.ToUpper() == "REGION")
                    {
                        regn = true;
                    }
                    if (item.LookupVal.ToUpper() == "GRADE")
                    {
                        grade = true;
                    }
                    if (item.LookupVal.ToUpper() == "LEVEL")
                    {
                        lvl = true;
                    }
                    if (item.LookupVal.ToUpper() == "JOBSTATUS")
                    {
                        jobstat = true;
                    }

                    if (item.LookupVal.ToUpper() == "JOB")
                    {
                        job = true;
                    }
                    if (item.LookupVal.ToUpper() == "JOBPOSITION")
                    {
                        jobpos = true;
                    }
                }

                Utility.GetOrganizationDataClass GeoDataInd = new Utility.GetOrganizationDataClass();


                List<GenericField100> OGenericSalaryStatement = new List<GenericField100>();
                foreach (var OEmpsingle in OEmpData)
                {

                    int? geoid = OEmpsingle.Employee.GeoStruct_Id;

                    int? payid = OEmpsingle.Employee.PayStruct_Id;

                    int? funid = OEmpsingle.Employee.FuncStruct_Id;

                    GeoStruct geostruct = db.GeoStruct.Find(geoid);

                    PayStruct paystruct = db.PayStruct.Find(payid);

                    FuncStruct funstruct = db.FuncStruct.Find(funid);

                    GeoDataInd = ReportRDLCObjectClass.GetOrganizationDataInd(geostruct, paystruct, funstruct, 0);

                    if (GeoDataInd != null)
                    {
                        /////////new 
                        var LoanBranch = "";
                        var LocBranch = "";
                        var Loc = "";
                        if (loanLocation == true)
                        {
                            LoanBranch = GeoDataInd.GeoStruct_Location_Name;
                            Loc = "Working Location";
                            LocBranch = OEmpsingle.Employee.EmpOffInfo.Branch == null ? "" : OEmpsingle.Employee.EmpOffInfo.Branch.Name;
                        }
                        else
                        {
                            LoanBranch = OEmpsingle.Employee.EmpOffInfo.Branch == null ? "" : OEmpsingle.Employee.EmpOffInfo.Branch.Name;
                            Loc = "Bank Branch";
                            LocBranch = GeoDataInd.GeoStruct_Location_Name;

                        }

                        var OEarnDedData = OEmpsingle.SalaryT
                                .Select(e => e.SalEarnDedT.Where(y => y.SalaryHead.InPayslip == true)
                                .Select(r => new
                                {
                                    //regionid = e.Geostruct != null && e.Geostruct.Region != null ? e.Geostruct.Region.Id.ToString() : null,
                                    //regioncode = e.Geostruct != null && e.Geostruct.Region != null ? e.Geostruct.Region.Code : null,
                                    //regionname = e.Geostruct != null && e.Geostruct.Region != null ? e.Geostruct.Region.Name : null,
                                    //emppayrollid = OEmpsingle.Id.ToString(),
                                    //empid = OEmpsingle.Employee.Id.ToString(),
                                    empcode = OEmpsingle.Employee.EmpCode,
                                    empname = OEmpsingle.Employee.EmpName != null ? OEmpsingle.Employee.EmpName.FullNameFML : null,
                                    paymonth = e.PayMonth,
                                    //locid = e.Geostruct != null && e.Geostruct.Location != null ? e.Geostruct.Location.Id.ToString() : null,
                                    //loccode = e.Geostruct != null && e.Geostruct.Location != null && e.Geostruct.Location.LocationObj != null ? e.Geostruct.Location.LocationObj.LocCode : null,
                                    //locname = e.Geostruct != null && e.Geostruct.Location != null && e.Geostruct.Location.LocationObj != null ? e.Geostruct.Location.LocationObj.LocDesc : null,
                                    locname = GeoDataInd != null && GeoDataInd.GeoStruct_Location_Id != null ? GeoDataInd.GeoStruct_Location_Name : null,
                                    //DepartmentId = e.Geostruct != null && e.Geostruct.Department != null && e.Geostruct.Department.DepartmentObj != null ? e.Geostruct.Department.DepartmentObj.Id.ToString() : null,
                                    //DepartmentCode = e.Geostruct != null && e.Geostruct.Department != null && e.Geostruct.Department.DepartmentObj != null ? e.Geostruct.Department.DepartmentObj.DeptCode.ToString() : null,
                                    // DepartmentName = e.Geostruct != null && e.Geostruct.Department != null && e.Geostruct.Department.DepartmentObj != null ? e.Geostruct.Department.DepartmentObj.DeptDesc.ToString() : null,
                                    // GroupId = e.Geostruct != null && e.Geostruct.Group != null ? e.Geostruct.Group.Id.ToString() : null,
                                    // GroupName = e.Geostruct != null && e.Geostruct.Group != null ? e.Geostruct.Group.Name.ToString() : null,
                                    // GroupCode = e.Geostruct != null && e.Geostruct.Group != null ? e.Geostruct.Group.Code.ToString() : null,
                                    // JobStatusName = e.PayStruct != null && e.PayStruct.JobStatus != null && e.PayStruct.JobStatus.EmpActingStatus != null ? e.PayStruct.JobStatus.EmpActingStatus.LookupVal : null,
                                    //JobStatusId = e.PayStruct != null && e.PayStruct.JobStatus != null ? e.PayStruct.JobStatus.Id.ToString() : null,
                                    // GradeId = e.PayStruct != null && e.PayStruct.Grade != null ? e.PayStruct.Grade.Id.ToString() : null,
                                    //GradeName = e.PayStruct != null && e.PayStruct.Grade != null ? e.PayStruct.Grade.Name : null,
                                    GradeName = GeoDataInd != null && GeoDataInd.PayStruct_Grade_Id != null ? GeoDataInd.PayStruct_Grade_Name : null,
                                    //jobid = e.FuncStruct != null && e.FuncStruct.Job != null ? e.FuncStruct.Job.Id.ToString() : null,
                                    //jobcode = e.FuncStruct != null && e.FuncStruct.Job != null ? e.FuncStruct.Job.Code : null,
                                    //jobname = e.FuncStruct != null && e.FuncStruct.Job != null ? e.FuncStruct.Job.Name : null,
                                    //salcodeid = r.SalaryHead != null ? r.SalaryHead.Id.ToString() : null,
                                    //salcode = r.SalaryHead != null ? r.SalaryHead.Code.ToString() : null,
                                    //salname = r.SalaryHead != null ? r.SalaryHead.Name.ToString() : null,
                                    //amount = r.Amount,
                                    //saltype = r.SalaryHead != null && r.SalaryHead.Type != null ? r.SalaryHead.Type.LookupVal.ToString() : null,
                                    //salheadseqno = r.SalaryHead != null ? r.SalaryHead.SeqNo.ToString() : null,
                                    //salOptype = r.SalaryHead != null && r.SalaryHead.SalHeadOperationType != null ? r.SalaryHead.SalHeadOperationType.LookupVal.ToString() : null,
                                    //AccountType = OEmpsingle.Employee != null && OEmpsingle.Employee.EmpOffInfo != null && OEmpsingle.Employee.EmpOffInfo.AccountType != null ? OEmpsingle.Employee.EmpOffInfo.AccountType.LookupVal : null,
                                    AccountNo = OEmpsingle.Employee != null && OEmpsingle.Employee.EmpOffInfo != null ? OEmpsingle.Employee.EmpOffInfo.AccountNo : null,
                                    TotalEarning = e.TotalEarning.ToString(),
                                    TotalDeduction = e.TotalDeduction.ToString(),
                                    TotalNet = e.TotalNet.ToString(),
                                    //BranchId = OEmpsingle.Employee != null && OEmpsingle.Employee.EmpOffInfo != null && OEmpsingle.Employee.EmpOffInfo.Branch != null ? OEmpsingle.Employee.EmpOffInfo.Branch.Id.ToString() : null,
                                    //BankId = OEmpsingle.Employee != null && OEmpsingle.Employee.EmpOffInfo != null && OEmpsingle.Employee.EmpOffInfo.Bank != null ? OEmpsingle.Employee.EmpOffInfo.Bank.Id.ToString() : null,
                                    //BranchCode = OEmpsingle.Employee != null && OEmpsingle.Employee.EmpOffInfo != null && OEmpsingle.Employee.EmpOffInfo.Branch != null ? OEmpsingle.Employee.EmpOffInfo.Branch.Code : null,
                                    BranchCode = OEmpsingle.Employee != null && OEmpsingle.Employee.EmpOffInfo != null && OEmpsingle.Employee.EmpOffInfo.Branch != null ? OEmpsingle.Employee.EmpOffInfo.Branch.Code : null,
                                    // BankCode = OEmpsingle.Employee != null && OEmpsingle.Employee.EmpOffInfo != null && OEmpsingle.Employee.EmpOffInfo.Bank != null ? OEmpsingle.Employee.EmpOffInfo.Bank.Code : null,
                                    Paymentbank = OEmpsingle.Employee != null && OEmpsingle.Employee.EmpOffInfo != null && OEmpsingle.Employee.EmpOffInfo.Bank_Id != null ? OEmpsingle.Employee.EmpOffInfo.Bank.Name.ToString() : "",

                                }).FirstOrDefault());

                        var OEarnData = OEarnDedData.ToList();
                        if (OEarnData.Count > 0)
                        {
                            foreach (var ca in OEarnData)
                            {

                                GenericField100 OEarnStatement = new GenericField100()
                                {
                                    //Fld4 = ca.regionid,
                                    //Fld5 = ca.regioncode,
                                    //Fld6 = ca.regionname,
                                    //Fld7 = ca.locid,
                                    //Fld8 = ca.loccode,
                                    Fld9 = ca.locname,
                                    //Fld10 = ca.DepartmentId,
                                    //Fld11 = ca.DepartmentCode,
                                    //Fld12 = ca.DepartmentName,
                                    //Fld13 = ca.GroupId,
                                    //Fld14 = ca.GroupCode,
                                    //Fld15 = ca.GroupName,
                                    //Fld16 = ca.jobid,
                                    //Fld17 = ca.jobcode,
                                    //Fld18 = ca.jobname,
                                    //Fld19 = ca.JobStatusId,
                                    Fld20 = ca.GradeName,//
                                    //Fld21 = ca.jobname,
                                    //Fld22 = ca.emppayrollid,
                                    Fld23 = ca.empcode,//
                                    Fld24 = ca.empname,//
                                    Fld25 = ca.paymonth,//
                                    //Fld26 = ca.AccountType,
                                    Fld27 = ca.AccountNo,//
                                    //Fld28 = ca.BankId,
                                    //Fld29 = ca.BankCode,
                                    //Fld30 = ca.BranchId,
                                    Fld31 = LoanBranch,//
                                    Fld32 = ca.TotalEarning,//
                                    Fld33 = ca.TotalDeduction,//
                                    Fld34 = ca.TotalNet,//
                                    Fld35 = Loc,//
                                    Fld54 = ca.Paymentbank,

                                };

                                //if (month)
                                //{
                                //    OEarnStatement.Fld100 = OEmpsingle.ToString();
                                //}
                                if (comp)
                                {
                                    OEarnStatement.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                }
                                if (div)
                                {
                                    OEarnStatement.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                }
                                if (loca)
                                {
                                    OEarnStatement.Fld97 = LocBranch;
                                }
                                if (dept)
                                {
                                    OEarnStatement.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                }
                                if (grp)
                                {
                                    OEarnStatement.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                }
                                if (unit)
                                {
                                    OEarnStatement.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                }
                                if (grade)
                                {
                                    OEarnStatement.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                }
                                if (lvl)
                                {
                                    OEarnStatement.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                }
                                if (jobstat)
                                {
                                    OEarnStatement.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                }
                                if (job)
                                {
                                    OEarnStatement.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                }
                                if (jobpos)
                                {
                                    OEarnStatement.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                }
                                if (emp)
                                {
                                    OEarnStatement.Fld88 = OEmpsingle.Employee.ToString();
                                }

                                OGenericSalaryStatement.Add(OEarnStatement);
                            }
                        }
                    }
                }
                if (OGenericSalaryStatement != null && OGenericSalaryStatement.Count > 0)
                {

                    return OGenericSalaryStatement.Distinct().ToList();
                }
                else
                {
                    return null;
                }

            }
        }


        public static List<GenericField100> GenerateGlobalEmployee(Int32 CompId, List<int> EmpPayrollIdList, string mPayMonth)
        {
            using (DataBaseContext db = new DataBaseContext())
            {
                db.Configuration.AutoDetectChangesEnabled = false;
                List<GenericField100> OGenericPayrollStatement = new List<GenericField100>();
                var OEmpoffData1 = new List<EmployeePayroll>();
                foreach (var item in EmpPayrollIdList)
                {
                    var OEmpoffData_t1 = db.EmployeePayroll
                        //.Include(e => e.Employee)
                        //.Include(e => e.Employee.EmpName)
                        //.Include(e => e.Employee.EmpOffInfo)
                        //.Include(e => e.Employee.ServiceBookDates)
                        //.Include(e => e.Employee.EmpOffInfo.NationalityID)
                        //.Include(e => e.Employee.GeoStruct)
                        //.Include(e => e.Employee.GeoStruct.Location)
                        //.Include(e => e.Employee.GeoStruct.Location.LocationObj)
                        // .Include(e => e.Employee.GeoStruct.Department)
                        // .Include(e => e.Employee.GeoStruct.Department.DepartmentObj)
                        // .Include(e => e.Employee.PayStruct)
                        //.Include(e => e.Employee.PayStruct.Grade)
                        //   .Include(e => e.Employee.FuncStruct)
                        //.Include(e => e.Employee.FuncStruct.Job)
                        //.Include(e => e.Employee.EmpSocialInfo.Category)
                        //.Include(e => e.Employee.EmpSocialInfo.Caste)
                        //.Include(e => e.Employee.EmpSocialInfo.Religion)
                        //.Include(e => e.Employee.EmpmedicalInfo.BloodGroup)
                        //  .Include(e => e.Employee.Nominees.Select(q => q.BenefitList))
                        //.Include(e => e.Employee.Nominees.Select(q => q.NomineeName))
                        //   .Include(e => e.Employee.Nominees.Select(q => q.Relation))
                        //.Include(e => e.Employee.Nominees.Select(q => q.BenefitList.Select(b => b.BenefitType)))
                        //.Include(e => e.Employee.EmpAcademicInfo.QualificationDetails)
                        //.Include(e => e.Employee.EmpAcademicInfo.QualificationDetails.Select(a => a.Qualification.Select(b => b.QualificationType)))
                        //.Include(e => e.IncrementServiceBook)
                    .Include(e => e.Employee)
                        //.Include(e => e.Employee.EmpName)
                        //.Include(r => r.IncrementServiceBook.Select(t => t.IncrActivity))
                        //.Include(r => r.IncrementServiceBook.Select(t => t.IncrActivity.IncrList))
                        //.Include(r => r.IncrementServiceBook.Select(t => t.FuncStruct.Job))
                        //.Include(r => r.IncrementServiceBook.Select(t => t.PayStruct.Grade))
                        //.Include(r => r.PromotionServiceBook.Select(t => t.PromotionActivity))
                        //.Include(r => r.PromotionServiceBook.Select(t => t.PromotionActivity.PromoList))
                        //.Include(r => r.PromotionServiceBook.Select(t => t.PromotionActivity.PromoPolicy.IncrActivity))
                        //.Include(r => r.PromotionServiceBook.Select(t => t.NewFuncStruct.JobPosition))
                        //.Include(r => r.PromotionServiceBook.Select(t => t.NewFuncStruct))
                        //.Include(r => r.PromotionServiceBook.Select(t => t.NewPayStruct.Grade))
                        //.Include(r => r.PromotionServiceBook.Select(t => t.NewPayStruct.JobStatus.EmpActingStatus))
                    .AsNoTracking()
                    .Where(e => e.Employee.Id == item).AsParallel()
                    .FirstOrDefault();

                    if (OEmpoffData_t1 != null)
                    {
                        OEmpoffData_t1.Employee.GeoStruct = db.GeoStruct.Find(OEmpoffData_t1.Employee.GeoStruct_Id);
                        OEmpoffData_t1.Employee.GeoStruct.Location = db.Location.Find(OEmpoffData_t1.Employee.GeoStruct.Location_Id);
                        OEmpoffData_t1.Employee.GeoStruct.Location.LocationObj = db.LocationObj.Find(OEmpoffData_t1.Employee.GeoStruct.Location.LocationObj_Id);
                        OEmpoffData_t1.Employee.GeoStruct.Department = db.Department.Find(OEmpoffData_t1.Employee.GeoStruct.Department_Id);
                        if (OEmpoffData_t1.Employee.GeoStruct.Department != null)
                        {
                            OEmpoffData_t1.Employee.GeoStruct.Department.DepartmentObj = db.DepartmentObj.Find(OEmpoffData_t1.Employee.GeoStruct.Department.DepartmentObj_Id);
                        }
                        OEmpoffData_t1.Employee.PayStruct = db.PayStruct.Find(OEmpoffData_t1.Employee.PayStruct_Id);
                        OEmpoffData_t1.Employee.PayStruct.Grade = db.Grade.Find(OEmpoffData_t1.Employee.PayStruct.Grade_Id);
                        OEmpoffData_t1.Employee.Gender = db.LookupValue.Find(OEmpoffData_t1.Employee.Gender_Id);
                        OEmpoffData_t1.Employee.MaritalStatus = db.LookupValue.Find(OEmpoffData_t1.Employee.MaritalStatus_Id);
                        OEmpoffData_t1.Employee.EmpSocialInfo = db.EmpSocialInfo.Find(OEmpoffData_t1.Employee.EmpSocialInfo_Id);
                        if (OEmpoffData_t1.Employee.EmpmedicalInfo != null)
                        {
                            OEmpoffData_t1.Employee.EmpmedicalInfo = db.EmpMedicalInfo.Find(OEmpoffData_t1.Employee.EmpmedicalInfo_Id);
                            OEmpoffData_t1.Employee.EmpmedicalInfo.BloodGroup = db.LookupValue.Find(OEmpoffData_t1.Employee.EmpmedicalInfo.BloodGroup_Id);
                        }                             
                        OEmpoffData_t1.Employee.ResAddr = db.Address.Find(OEmpoffData_t1.Employee.ResAddr_Id);
                        OEmpoffData_t1.Employee.PerAddr = db.Address.Find(OEmpoffData_t1.Employee.PerAddr_Id);
                        OEmpoffData_t1.Employee.ResContact = db.ContactDetails.Include(e => e.ContactNumbers).Where(e => e.Id == OEmpoffData_t1.Employee.ResContact_Id).FirstOrDefault();
                        OEmpoffData_t1.Employee.EmpName = db.NameSingle.Find(OEmpoffData_t1.Employee.EmpName_Id);
                        OEmpoffData_t1.Employee.EmpOffInfo = db.EmpOff.Find(OEmpoffData_t1.Employee.EmpOffInfo_Id);
                        OEmpoffData_t1.Employee.ServiceBookDates = db.ServiceBookDates.Find(OEmpoffData_t1.Employee.ServiceBookDates_Id);
                        OEmpoffData_t1.Employee.EmpOffInfo.NationalityID = db.EmpOff.Where(e => e.Id == OEmpoffData_t1.Employee.EmpOffInfo_Id).Select(r => r.NationalityID).FirstOrDefault();
                        OEmpoffData_t1.Employee.EmpSocialInfo = db.EmpSocialInfo.Where(e => e.Id == OEmpoffData_t1.Employee.EmpSocialInfo_Id).FirstOrDefault();
                        if (OEmpoffData_t1.Employee.EmpSocialInfo != null)
                        {
                            OEmpoffData_t1.Employee.EmpSocialInfo.Category = db.LookupValue.Find(OEmpoffData_t1.Employee.EmpSocialInfo.Category_Id);
                            OEmpoffData_t1.Employee.EmpSocialInfo.Caste = db.LookupValue.Find(OEmpoffData_t1.Employee.EmpSocialInfo.Caste_Id);
                            OEmpoffData_t1.Employee.EmpSocialInfo.Religion = db.LookupValue.Find(OEmpoffData_t1.Employee.EmpSocialInfo.Religion_Id);
                        }
                        OEmpoffData_t1.Employee.Nominees = db.Employee.Where(e => e.Id == OEmpoffData_t1.Employee_Id).Select(r => r.Nominees.ToList()).FirstOrDefault();
                        foreach (var i in OEmpoffData_t1.Employee.Nominees)
                        {
                            i.BenefitList = db.BenefitNominees.Where(e => e.Id == i.Id).Select(r => r.BenefitList.ToList()).FirstOrDefault();
                            foreach (var j in i.BenefitList)
                            {
                                j.BenefitType = db.LookupValue.Find(j.BenefitType_Id);
                            }
                            i.NomineeName = db.NameSingle.Find(i.NomineeName_Id);
                            i.Relation = db.LookupValue.Find(i.Relation_Id);
                        }
                        OEmpoffData_t1.Employee.EmpAcademicInfo = db.EmpAcademicInfo.Find(OEmpoffData_t1.Employee.EmpAcademicInfo_Id);
                        if (OEmpoffData_t1.Employee.EmpAcademicInfo != null)
                        {
                            OEmpoffData_t1.Employee.EmpAcademicInfo.QualificationDetails = db.EmpAcademicInfo.Where(e => e.Id == OEmpoffData_t1.Employee.EmpAcademicInfo_Id).Select(r => r.QualificationDetails.ToList()).FirstOrDefault();
                            foreach (var k in OEmpoffData_t1.Employee.EmpAcademicInfo.QualificationDetails)
                            {
                                k.Qualification = db.QualificationDetails.Where(e => e.Id == k.Id).Select(r => r.Qualification.ToList()).FirstOrDefault();
                                foreach (var p in k.Qualification)
                                {
                                    p.QualificationType = db.Qualification.Where(e => e.Id == p.Id).Select(r => r.QualificationType).FirstOrDefault();
                                }
                            }
                        }
                        OEmpoffData_t1.IncrementServiceBook = db.EmployeePayroll.Where(e => e.Id == OEmpoffData_t1.Id).Select(r => r.IncrementServiceBook.ToList()).FirstOrDefault();
                        foreach (var q in OEmpoffData_t1.IncrementServiceBook)
                        {
                            q.IncrActivity = db.IncrActivity.Find(q.IncrActivity_Id);
                            q.IncrActivity.IncrList = db.LookupValue.Find(q.IncrActivity.IncrList_Id);
                            q.FuncStruct = db.FuncStruct.Find(q.FuncStruct_Id);
                            if (q.FuncStruct != null)
                            {
                                q.FuncStruct.Job = db.Job.Find(q.FuncStruct.Job_Id);
                            }
                            q.PayStruct = db.PayStruct.Find(q.PayStruct_Id);
                            if (q.PayStruct != null)
                            {
                                q.PayStruct.Grade = db.Grade.Find(q.PayStruct.Grade_Id);
                            }

                        }
                        OEmpoffData_t1.PromotionServiceBook = db.EmployeePayroll.Where(e => e.Id == OEmpoffData_t1.Id).Select(r => r.PromotionServiceBook.ToList()).FirstOrDefault();
                        foreach (var r in OEmpoffData_t1.PromotionServiceBook)
                        {
                            r.PromotionActivity = db.PromoActivity.Find(r.PromotionActivity_Id);
                            r.PromotionActivity.PromoList = db.LookupValue.Find(r.PromotionActivity.PromoList_Id);
                            r.PromotionActivity.PromoPolicy = db.PromoPolicy.Find(r.PromotionActivity.PromoPolicy_Id);
                            if (r.PromotionActivity.PromoPolicy != null)
                            {
                                r.PromotionActivity.PromoPolicy.IncrActivity = db.IncrActivity.Find(r.PromotionActivity.PromoPolicy.IncrActivity_Id);
                            }

                            r.NewFuncStruct = db.FuncStruct.Find(r.NewFuncStruct_Id);

                            if (r.NewFuncStruct != null)
                            {
                                r.NewFuncStruct.JobPosition = db.JobPosition.Find(r.NewFuncStruct.JobPosition_Id);
                            }
                            r.NewPayStruct = db.PayStruct.Find(r.NewPayStruct_Id);
                            if (r.NewPayStruct != null)
                            {
                                r.NewPayStruct.Grade = db.Grade.Find(r.NewPayStruct.Grade_Id);
                                r.NewPayStruct.JobStatus = db.JobStatus.Find(r.NewPayStruct.JobStatus_Id);
                            }

                            if (r.NewPayStruct.JobStatus != null)
                            {
                                r.NewPayStruct.JobStatus.EmpActingStatus = db.LookupValue.Find(r.NewPayStruct.JobStatus.EmpActingStatus_Id);
                            }

                        }
                        OEmpoffData1.Add(OEmpoffData_t1);
                    }

                }
                if (OEmpoffData1 == null || OEmpoffData1.Count() == 0)
                {
                    return null;
                }
                else
                {
                    foreach (var ca in OEmpoffData1)
                    {
                        GenericField100 OGenericObjStatement = new GenericField100()
                        {

                            Fld1 = ca.Employee.EmpOffInfo != null ? ca.Employee.EmpOffInfo.AccountNo : "",
                            Fld2 = ca.Employee.EmpOffInfo != null ? ca.Employee.EmpOffInfo.PFAppl.ToString() : "",
                            Fld3 = ca.Employee.EmpOffInfo != null ? ca.Employee.EmpOffInfo.SelfHandicap.ToString() : "",
                            Fld4 = ca.Employee.EmpOffInfo != null ? ca.Employee.EmpOffInfo.FamilyHandicap.ToString() : "",
                            //   Fld5 = ca.Employee.EmpOffInfo.HandicapRemark.ToString(),
                            Fld5 = ca.Employee.EmpOffInfo != null ? ca.Employee.EmpOffInfo.FamilyHandicap.ToString() : "",

                            Fld6 = ca.Employee.EmpOffInfo != null ? ca.Employee.EmpOffInfo.PTAppl.ToString() : "",
                            Fld7 = ca.Employee.EmpOffInfo != null ? ca.Employee.EmpOffInfo.ESICAppl.ToString() : "",
                            Fld8 = ca.Employee.EmpOffInfo != null ? ca.Employee.EmpOffInfo.LWFAppl.ToString() : "",
                            Fld9 = ca.Employee.EmpOffInfo != null ? ca.Employee.EmpOffInfo.VPFAppl.ToString() : "",
                            Fld14 = ca.Employee.EmpOffInfo != null && ca.Employee.EmpOffInfo.NationalityID != null ? ca.Employee.EmpOffInfo.NationalityID.PANNo.ToString() : "",
                            Fld15 = ca.Employee.EmpOffInfo != null && ca.Employee.EmpOffInfo.NationalityID != null ? ca.Employee.EmpOffInfo.NationalityID.AdharNo.ToString() : "",
                            Fld16 = ca.Employee.EmpOffInfo != null && ca.Employee.EmpOffInfo.NationalityID != null ? ca.Employee.EmpOffInfo.NationalityID.PFNo.ToString() : "",

                            //  Fld10 = ca.Employee.EmpOffInfo.VPFAmt.ToString(),
                            Fld10 = ca.Employee.EmpOffInfo != null ? ca.Employee.EmpOffInfo.VPFAmt.ToString() : "",
                            //  Fld11 = ca.Employee.EmpOffInfo.VPFPerc == null ? "" : ca.Employee.EmpOffInfo.VPFPerc.ToString(),
                            Fld11 = ca.Employee.ResContact != null && ca.Employee.ResContact.ContactNumbers.Count() != 0 ? ca.Employee.ResContact.ContactNumbers.FirstOrDefault().FullContactNumbers.ToString() : "",

                            Fld29 = ca.Employee.GeoStruct != null && ca.Employee.GeoStruct.Location != null ? ca.Employee.GeoStruct.Location.Id.ToString() : null,
                            //Fld30 = ca.Employee.GeoStruct != null && ca.Employee.GeoStruct.Location != null && ca.Employee.GeoStruct.Location.LocationObj != null ? ca.Employee.GeoStruct.Location.LocationObj.LocCode : null,
                            Fld39 = ca.Employee.GeoStruct != null && ca.Employee.GeoStruct.Location != null && ca.Employee.GeoStruct.Location.LocationObj != null ? ca.Employee.GeoStruct.Location.LocationObj.LocDesc : null,

                            //Fld32 = ca.Employee.GeoStruct != null && ca.Employee.GeoStruct.Department != null && ca.Employee.GeoStruct.Department.DepartmentObj != null ? ca.Employee.GeoStruct.Department.DepartmentObj.Id.ToString() : null,
                            //Fld33 = ca.Employee.GeoStruct != null && ca.Employee.GeoStruct.Department != null && ca.Employee.GeoStruct.Department.DepartmentObj != null ? ca.Employee.GeoStruct.Department.DepartmentObj.DeptCode.ToString() : null,
                            Fld37 = ca.Employee.GeoStruct != null && ca.Employee.GeoStruct.Department != null && ca.Employee.GeoStruct.Department.DepartmentObj != null ? ca.Employee.GeoStruct.Department.DepartmentObj.DeptDesc.ToString() : null,

                            //Fld35 = ca.Employee.PayStruct != null && ca.Employee.PayStruct.Grade != null ? ca.Employee.PayStruct.Grade.Id.ToString() : null,
                            //Fld36 = ca.Employee.PayStruct != null && ca.Employee.PayStruct.Grade != null ? ca.Employee.PayStruct.Grade.Code.ToString() : null,
                            Fld38 = ca.Employee.PayStruct != null && ca.Employee.PayStruct.Grade != null ? ca.Employee.PayStruct.Grade.Name : null,

                            //  Fld38 = ca.Employee.FuncStruct != null && ca.Employee.FuncStruct.Job != null ? ca.Employee.FuncStruct.Job.Id.ToString() : null,
                            //  Fld39 = ca.Employee.FuncStruct != null && ca.Employee.FuncStruct.Job != null ? ca.Employee.FuncStruct.Job.Code : null,
                            //  Fld40 = ca.Employee.FuncStruct != null && ca.Employee.FuncStruct.Job != null ? ca.Employee.FuncStruct.Job.Name : null,
                            Fld12 = ca.Employee.EmpName != null ? ca.Employee.EmpName.FullNameFML.ToString() : "",
                            Fld13 = ca.Employee.EmpCode,
                            Fld51 = ca.Employee.ServiceBookDates != null ? ca.Employee.ServiceBookDates.JoiningDate.Value.ToShortDateString() : "",
                            Fld52 = ca.Employee.ServiceBookDates != null ? ca.Employee.ServiceBookDates.ConfirmationDate.Value.ToShortDateString() : "",
                            Fld53 = ca.Employee.ServiceBookDates != null ? ca.Employee.ServiceBookDates.RetirementDate.Value.ToShortDateString() : "",

                            Fld54 = ca.Employee.ServiceBookDates != null ? ca.Employee.ServiceBookDates.BirthDate.Value.ToShortDateString() : "",
                            Fld55 = ca.Employee.MaritalStatus != null ? ca.Employee.MaritalStatus.LookupVal.ToString() : "",
                            Fld56 = ca.Employee.ResAddr != null ? ca.Employee.ResAddr.FullAddress.ToString() : "",
                            Fld77 = ca.Employee.ResContact != null ? ca.Employee.ResContact.EmailId : "",
                            Fld57 = ca.Employee.PerAddr != null ? ca.Employee.PerAddr.FullAddress.ToString() : "",
                            Fld58 = ca.Employee.Gender != null ? ca.Employee.Gender.LookupVal.ToString() : "",
                            Fld17 = ca.Employee.EmpSocialInfo != null && ca.Employee.EmpSocialInfo.Category != null ? ca.Employee.EmpSocialInfo.Category.LookupVal.ToString() : "",
                            Fld18 = ca.Employee.EmpSocialInfo != null && ca.Employee.EmpSocialInfo.Caste != null ? ca.Employee.EmpSocialInfo.Caste.LookupVal.ToString() : "",
                            Fld19 = ca.Employee.EmpSocialInfo != null && ca.Employee.EmpSocialInfo.Religion != null ? ca.Employee.EmpSocialInfo.Religion.LookupVal.ToString() : "",
                            Fld20 = ca.Employee.EmpmedicalInfo != null && ca.Employee.EmpmedicalInfo.BloodGroup != null ? ca.Employee.EmpmedicalInfo.BloodGroup.LookupVal.ToString() : ""
                        };
                        OGenericPayrollStatement.Add(OGenericObjStatement);
                    }


                    foreach (var ca in OEmpoffData1)
                    {
                        foreach (var ca1 in ca.Employee.Nominees)
                        {

                            if (ca1 != null)
                            {
                                if (ca1.BenefitList.Count != 0)
                                {
                                    var da = ca1.BenefitList.ToList();
                                    foreach (var item in da)
                                    {
                                        string Mage = "";
                                        if (ca1.DateofBirth != null)
                                        {
                                            DateTime start = ca1.DateofBirth.Value;
                                            DateTime end = DateTime.Now.Date;
                                            int compMonth = (end.Month + end.Year * 12) - (start.Month + start.Year * 12);
                                            // double daysInEndMonth = (end - end.AddMonths(1)).Days;
                                            double daysInEndMonth = (end.AddMonths(1) - end).Days;
                                            double months = compMonth + Math.Abs((start.Day - end.Day) / daysInEndMonth);
                                            double mAge = Math.Round((months / 12), 0);
                                            Mage = mAge.ToString();

                                        }

                                        GenericField100 OGenericObjStatement = new GenericField100
                                        {
                                            Fld21 = ca1 == null ? "" : ca1.NomineeName == null ? "" : ca1.NomineeName.FullNameFML.ToString(),
                                            Fld22 = ca1 == null ? "" : ca1.Relation == null ? "" : ca1.Relation.LookupVal.ToString(),
                                            Fld23 = ca1 == null ? "" : ca1.DateofBirth == null ? "" : ca1.DateofBirth.Value.ToShortDateString(),
                                            Fld24 = item == null ? "" : item.BenefitType == null ? "" : item.BenefitType.LookupVal.ToString(),
                                            Fld29 = item == null ? "" : item.BenefitPerc == 0 ? "" : item.BenefitPerc.ToString(),
                                            Fld77 = Mage,
                                        };
                                        OGenericPayrollStatement.Add(OGenericObjStatement);
                                    }
                                }
                            }
                        }
                    }

                    foreach (var ca in OEmpoffData1)
                    {
                        if (ca.Employee.EmpAcademicInfo != null)
                        {
                            var v2 = ca.Employee.EmpAcademicInfo.QualificationDetails.ToList();
                            foreach (var item in v2)
                            {
                                if (item.Qualification.Count != 0)
                                {

                                    var it = item.Qualification.ToList();
                                    foreach (var item1 in it)
                                    {

                                        GenericField100 OGenericObjStatement = new GenericField100
                                        {

                                            Fld25 = item1 == null ? "" : item1.QualificationShortName.ToString(),
                                            Fld26 = item == null ? "" : item.SpecilisedBranch.ToString(),
                                            Fld27 = item == null ? "" : item.Institute.ToString(),
                                            Fld28 = item == null ? "" : item.University == null ? "" : item.University.ToString(),

                                        };
                                        OGenericPayrollStatement.Add(OGenericObjStatement);
                                    }
                                }
                            }
                        }
                    }

                    foreach (var ca in OEmpoffData1)
                    {
                        if (ca.IncrementServiceBook != null && ca.IncrementServiceBook.Count() != 0)
                        {
                            //var OITTrans = ca.IncrementServiceBook.Where(e => mPayMonth.Contains(e.ProcessIncrDate.Value.ToString("MM/yyyy"))).AsParallel().ToList();
                            var OITTrans = ca.IncrementServiceBook.ToList();
                            //  var OITTrans = ca.IncrementServiceBook.Contains(ProcessI)
                            if (OITTrans != null && OITTrans.Count() != 0)
                            {
                                foreach (var ca1 in OITTrans)
                                {
                                    GenericField100 OGenericObjStatement = new GenericField100()
                                    //write data to generic class
                                    {

                                        Fld30 = ca1.IncrActivity == null ? "" : ca1.IncrActivity.Name,
                                        //=   Fld6 = ca1.IncrActivity == null ? "" : ca1.IncrActivity.IncrList.LookupVal.ToUpper(),

                                        Fld31 = ca1.ProcessIncrDate.Value.ToShortDateString(),
                                        Fld34 = ca1.OldBasic.ToString(),
                                        Fld35 = ca1.NewBasic.ToString(),
                                        Fld36 = ca1.Narration == null ? "" : ca1.Narration.ToString(),
                                        Fld32 = ca1.FuncStruct.Job == null ? "" : ca1.FuncStruct.Job.Name.ToString(),
                                        Fld33 = ca1.PayStruct.Grade == null ? "" : ca1.PayStruct.Grade.Name,

                                    };
                                    OGenericPayrollStatement.Add(OGenericObjStatement);
                                }
                            }


                        }

                    }



                    foreach (var ca in OEmpoffData1)
                    {
                        if (ca.PromotionServiceBook != null && ca.PromotionServiceBook.Count() != 0)
                        {
                            //var OITTrans = ca.PromotionServiceBook.Where(e => mPayMonth.Contains(e.ProcessPromoDate.Value.ToString("MM/yyyy"))).AsParallel().ToList();
                            var OITTrans = ca.PromotionServiceBook.ToList();
                            if (OITTrans != null && OITTrans.Count() != 0)
                            {
                                foreach (var ca1 in OITTrans)
                                {
                                    GenericField100 OGenericObjStatement = new GenericField100()
                                    //write data to generic class
                                    {

                                        Fld40 = ca1.PromotionActivity == null ? "" : ca1.PromotionActivity.Name,
                                        // Fld6 = ca1.PromotionActivity == null ? "" : ca1.PromotionActivity.PromoList == null ? "" : ca1.PromotionActivity.PromoList.LookupVal.ToUpper(),
                                        Fld41 = ca1.ProcessPromoDate == null ? "" : ca1.ProcessPromoDate.Value.ToShortDateString(),
                                        Fld42 = ca1.OldBasic == null ? "" : ca1.OldBasic.ToString(),
                                        Fld43 = ca1.NewBasic == null ? "" : ca1.NewBasic.ToString(),
                                        Fld44 = ca1.Narration == null ? "" : ca1.Narration,
                                        Fld45 = ca1.NewFuncStruct == null ? "" : ca1.NewFuncStruct.Job == null ? "" : ca1.NewFuncStruct.Job.Name,
                                        Fld46 = ca1.NewPayStruct == null ? "" : ca1.NewPayStruct.Grade == null ? "" : ca1.NewPayStruct.Grade.Name,
                                        Fld47 = ca1.NewPayStruct == null ? "" : ca1.NewPayStruct.JobStatus == null ? "" : ca1.NewPayStruct.JobStatus.EmpActingStatus.LookupVal.ToString()


                                    };
                                    OGenericPayrollStatement.Add(OGenericObjStatement);
                                }
                            }

                        }


                    }
                    var OEmpoffData2 = new List<EmployeePayroll>();
                    foreach (var item in EmpPayrollIdList)
                    {
                        var OEmpoffData_t2 = db.EmployeePayroll
                         .Include(e => e.Employee)
                         .Include(e => e.Employee.EmpName)


                      .Include(r => r.TransferServiceBook.Select(t => t.TransActivity))
                      .Include(r => r.TransferServiceBook.Select(t => t.TransActivity.TransList))
                      .Include(r => r.TransferServiceBook.Select(t => t.OldGeoStruct.Location.LocationObj))
                      .Include(r => r.TransferServiceBook.Select(t => t.OldGeoStruct.Department.DepartmentObj))
                      .Include(r => r.TransferServiceBook.Select(t => t.NewGeoStruct.Location.LocationObj))
                      .Include(r => r.TransferServiceBook.Select(t => t.NewGeoStruct.Department.DepartmentObj))


                      .Include(r => r.OtherServiceBook.Select(t => t.OthServiceBookActivity))
                      .Include(r => r.OtherServiceBook.Select(t => t.OthServiceBookActivity.OtherSerBookActList))

                      .Include(r => r.OtherServiceBook.Select(t => t.OldFuncStruct.Job))
                      .Include(r => r.OtherServiceBook.Select(t => t.NewFuncStruct.Job))

                      .Include(r => r.OtherServiceBook.Select(t => t.OldFuncStruct.JobPosition))
                      .Include(r => r.OtherServiceBook.Select(t => t.NewFuncStruct.JobPosition))

                      .Include(r => r.OtherServiceBook.Select(t => t.OldPayStruct.JobStatus.EmpStatus))
                      .Include(r => r.OtherServiceBook.Select(t => t.OldPayStruct.JobStatus.EmpActingStatus))

                      .Include(r => r.OtherServiceBook.Select(t => t.NewPayStruct.JobStatus.EmpStatus))
                      .Include(r => r.OtherServiceBook.Select(t => t.NewPayStruct.JobStatus.EmpActingStatus))
                      .Include(r => r.OtherServiceBook.Select(t => t.NewPayStruct.Grade))
                      .Include(r => r.OtherServiceBook.Select(t => t.OthServiceBookActivity.OtherSerBookActList)).AsNoTracking()





                      .Where(e => e.Employee.Id == item).AsParallel()
                      .FirstOrDefault();

                        if (OEmpoffData_t2 != null)
                        {
                            OEmpoffData2.Add(OEmpoffData_t2);
                        }

                    }
                    if (OEmpoffData2 == null || OEmpoffData2.Count() == 0)
                    {
                        return null;
                    }

                    foreach (var ca in OEmpoffData2)
                    {
                        if (ca.TransferServiceBook != null && ca.TransferServiceBook.Count() != 0)
                        {
                            //  var OITTrans = ca.TransferServiceBook.Where(e => mPayMonth.Contains(e.ProcessTransDate.Value.ToString("MM/yyyy"))).ToList();
                            var OITTrans = ca.TransferServiceBook.ToList();
                            if (OITTrans != null && OITTrans.Count() != 0)
                            {
                                foreach (var ca1 in OITTrans)
                                {
                                    GenericField100 OGenericObjStatement = new GenericField100()
                                    //write data to generic class
                                    {

                                        Fld48 = ca1.ProcessTransDate == null ? "" : ca1.ProcessTransDate.Value.ToShortDateString(),
                                        Fld49 = ca1.OldGeoStruct.Location == null ? "" : ca1.OldGeoStruct.Location.LocationObj.LocDesc,
                                        Fld60 = ca1.NewGeoStruct.Location == null ? "" : ca1.NewGeoStruct.Location.LocationObj.LocDesc,
                                        Fld50 = ca1.OldGeoStruct.Department == null ? "" : ca1.OldGeoStruct.Department.DepartmentObj.DeptDesc,
                                        Fld61 = ca1.NewGeoStruct.Department == null ? "" : ca1.NewGeoStruct.Department.DepartmentObj.DeptDesc,

                                    };
                                    OGenericPayrollStatement.Add(OGenericObjStatement);
                                }
                            }

                        }

                    }



                    foreach (var ca in OEmpoffData2)
                    {
                        if (ca.OtherServiceBook != null && ca.OtherServiceBook.Count() != 0)
                        {


                            //var OITTrans = ca.OtherServiceBook.Where(e => mPayMonth.Contains(e.ProcessOthDate.Value.ToString("MM/yyyy"))).ToList();
                            var OITTrans = ca.OtherServiceBook.ToList();
                            if (OITTrans != null && OITTrans.Count() != 0)
                            {
                                foreach (var ca1 in OITTrans)
                                {
                                    GenericField100 OGenericObjStatement = new GenericField100()
                                    //write data to generic class
                                    {
                                        Fld66 = ca1.ProcessOthDate != null ? ca1.ProcessOthDate.Value.ToShortDateString() : null,
                                        //  Fld8 = ca1.ReleaseFlag.ToString(),
                                        //   Fld9 = ca1.ReleaseDate != null ? ca1.ReleaseDate.Value.ToShortDateString() : null,
                                        Fld63 = ca1.Narration,
                                        //  Fld11 = ca1.IsBasicChangeAppl.ToString(),
                                        Fld62 = ca1.NewBasic.ToString(),
                                        Fld64 = ca1.OthServiceBookActivity != null && ca1.OthServiceBookActivity.OtherSerBookActList != null ? ca1.OthServiceBookActivity.OtherSerBookActList.LookupVal.ToUpper() : null,
                                        Fld65 = ca1.OldPayStruct == null ? "" : ca1.OldPayStruct.JobStatus == null ? "" : ca1.OldPayStruct.JobStatus.EmpActingStatus.LookupVal.ToString(),
                                        Fld67 = ca1.NewPayStruct == null ? "" : ca1.NewPayStruct.Grade == null ? "" : ca1.NewPayStruct.Grade.Name,
                                        Fld68 = ca1.OthServiceBookActivity == null ? "" : ca1.OthServiceBookActivity.OtherSerBookActList == null ? "" : ca1.OthServiceBookActivity.OtherSerBookActList.LookupVal.ToString()

                                    };
                                    OGenericPayrollStatement.Add(OGenericObjStatement);
                                }
                            }
                        }

                    }



                    foreach (var item in EmpPayrollIdList)
                    {
                        var OEmpoffData_t2 = db.EmployeePayroll
                         .Include(e => e.Employee)
                         .Include(e => e.Employee.EmpName).AsNoTracking()

                      .Where(e => e.Employee.Id == item).AsParallel()
                      .FirstOrDefault();

                        if (OEmpoffData_t2 != null)
                        {
                            OEmpoffData2.Add(OEmpoffData_t2);
                        }
                    }
                    var OLvLedger = new List<EmployeeLeave>();
                    foreach (var item1 in OEmpoffData2)
                    {
                        var empd = item1.Employee.Id;

                        var OLvLedger_t = db.EmployeeLeave.Include(e => e.Employee)
                              .Include(e => e.LvNewReq)
                        .Include(e => e.LvNewReq.Select(r => r.ContactNo))
                        .Include(e => e.LvNewReq.Select(r => r.LeaveHead))
                        .Include(e => e.LvNewReq.Select(r => r.LeaveCalendar))
                        .Include(e => e.LvNewReq.Select(r => r.FromStat))
                        .Include(e => e.LvNewReq.Select(r => r.ToStat))
                        .Include(e => e.LvNewReq.Select(r => r.WFStatus))
                        .Include(e => e.Employee)
                        .Include(e => e.Employee.EmpName)
                        .Include(e => e.Employee.FuncStruct)
                        .Include(e => e.Employee.FuncStruct.Job)
                        .Include(e => e.Employee.FuncStruct.JobPosition)
                        .Include(e => e.Employee.PayStruct)
                        .Include(e => e.Employee.PayStruct.Grade)
                        .Include(e => e.Employee.PayStruct.Level)
                        .Include(e => e.Employee.PayStruct.JobStatus)
                        .Include(e => e.Employee.PayStruct.JobStatus.EmpStatus)
                        .Include(e => e.Employee.PayStruct.JobStatus.EmpActingStatus)
                        .Include(e => e.Employee.GeoStruct)
                        .Include(e => e.Employee.GeoStruct.Division)
                        .Include(e => e.Employee.GeoStruct.Location)
                        .Include(e => e.Employee.GeoStruct.Location.LocationObj)
                        .Include(e => e.Employee.GeoStruct.Department)
                        .Include(e => e.Employee.GeoStruct.Department.DepartmentObj)
                        .Include(e => e.Employee.GeoStruct.Group)
                        .Include(e => e.Employee.GeoStruct.Unit).AsNoTracking()
                         .Where(e => e.Employee.Id == empd).AsParallel()
                                           .FirstOrDefault();


                        if (OLvLedger_t != null)
                        {
                            OLvLedger.Add(OLvLedger_t);
                        }
                    }
                    if (OLvLedger == null || OLvLedger.Count() == 0)
                    {
                        return null;
                    }
                    else
                    {
                        foreach (var ca in OLvLedger)
                        {
                            if (ca.LvNewReq != null && ca.LvNewReq.Count() != 0)
                            {
                                var OLvReq = ca.LvNewReq.ToList();
                                if (OLvReq != null && OLvReq.Count() != 0)
                                {
                                    foreach (var ca1 in OLvReq)
                                    {


                                        GenericField100 OGenericObjStatement = new GenericField100()
                                        //write data to generic class
                                        {
                                            Fld69 = ca1.ReqDate != null ? ca1.ReqDate.Value.ToShortDateString() : null,
                                            Fld70 = ca1.LeaveHead.LvName,
                                            Fld71 = ca1.FromDate != null ? ca1.FromDate.Value.ToShortDateString() : null,
                                            Fld72 = ca1.ToDate != null ? ca1.ToDate.Value.ToShortDateString() : null,
                                            Fld73 = ca1.OpenBal.ToString(),
                                            Fld74 = ca1.DebitDays.ToString(),
                                            Fld75 = ca1.CreditDays.ToString(),
                                            Fld76 = ca1.CloseBal.ToString(),
                                            //Fld1 = ca1.Id.ToString(),
                                        };
                                        OGenericPayrollStatement.Add(OGenericObjStatement);
                                    }
                                }
                            }
                        }
                    }


                    foreach (var item in EmpPayrollIdList)
                    {
                        var OEmpoffData_t2 = db.EmployeePayroll
                         .Include(e => e.Employee)
                         .Include(e => e.Employee.EmpName)

                      .Where(e => e.Employee.Id == item)
                      .FirstOrDefault();

                        if (OEmpoffData_t2 != null)
                        {
                            OEmpoffData2.Add(OEmpoffData_t2);
                        }
                    }
                    var OEmpTrain = new List<EmployeeTraining>();
                    //foreach (var item1 in OEmpoffData2)
                    //{
                    //    var empd = item1.Employee.Id;

                    //    var OLvLedger_t = db.EmployeeTraining.Include(e => e.Employee)

                    //    .Include(e => e.TrainingDetails)
                    //    .Include(e => e.TrainingDetails.Select(a => a.TrainingEvaluation))
                    //    .Include(e => e.TrainingDetails.Select(a => a.TrainingSchedule))
                    //    .Include(e => e.TrainingDetails.Select(a => a.TrainingSchedule.Select(b => b.TrainingCalendar)))
                    //     .Include(e => e.TrainingDetails.Select(a => a.TrainingSchedule.Select(b => b.TrainingCalendar.ProgramList)))
                    //     .Include(e => e.TrainingDetails.Select(a => a.TrainingSchedule.Select(b => b.TrainingCalendar.ProgramList.TrainingType)))
                    //     .Include(e => e.TrainingDetails.Select(a => a.TrainingSchedule.Select(b => b.Session)))
                    //     .Include(e => e.TrainingDetails.Select(a => a.TrainingSchedule.Select(b => b.Session.Select(c => c.SessionType))))
                    //     .Include(e => e.TrainingDetails.Select(a => a.TrainingSchedule.Select(b => b.Session.Select(c => c.Faculty))))
                    //      .Include(e => e.TrainingDetails.Select(a => a.TrainingSchedule.Select(b => b.Session.Select(c => c.Faculty.TrainingInstitue))))
                    //      .Include(e => e.TrainingDetails.Select(a => a.TrainingSchedule.Select(b => b.Session.Select(c => c.Faculty.TrainingInstitue.InstituteType))))
                    //      .Include(e => e.TrainingDetails.Select(a => a.TrainingSchedule.Select(b => b.Expenses)))
                    //  .Include(e => e.TrainingDetails.Select(a => a.TrainingSchedule.Select(b => b.City)))
                    // .Include(e => e.TrainingDetails.Select(a => a.TrainingSchedule.Select(b => b.Venue))).AsNoTracking()
                    //     .Where(e => e.Employee.Id == empd).AsParallel()
                    //                       .FirstOrDefault();


                    //    if (OLvLedger_t != null)
                    //    {
                    //        OEmpTrain.Add(OLvLedger_t);
                    //    }
                    //}
                    //if (OEmpTrain == null || OEmpTrain.Count() == 0)
                    //{
                    //    //  break;
                    //}
                    //else
                    //{
                    //    foreach (var ca in OEmpTrain)
                    //    {
                    //        if (ca.TrainingDetails != null && ca.TrainingDetails.Count() != 0)
                    //        {
                    //            var OTr = ca.TrainingDetails.ToList();
                    //            foreach (var item in OTr)
                    //            {



                    //                if (OTr != null && OTr.Count() != 0)
                    //                {
                    //                    foreach (var ca1 in item.TrainingSchedule)
                    //                    {
                    //                        if (ca1.TrainingCalendar.ProgramList != null)
                    //                        {


                    //                            var cat = ca1.TrainingCalendar.ProgramList.Id;
                    //                            //  var catt = db.Category.Include(a => a.SubCategory.Select(b => b.ProgramList)).Where( == cat).SingleOrDefault();
                    //                            var catt = db.Category.Include(a => a.SubCategory.Select(b => b.ProgramList)).AsNoTracking().ToList();
                    //                            foreach (var itm in catt)
                    //                            {

                    //                                if (itm.Id == cat)
                    //                                {

                    //                                }
                    //                            }
                    //                            var ses = ca1.Session.Select(a => a.Faculty.TrainingInstitue).SingleOrDefault();
                    //                            GenericField100 OGenericObjStatement = new GenericField100()
                    //                            //write data to generic class
                    //                            {
                    //                                Fld78 = ca1.City == null ? "" : ca1.City.Name.ToString(),
                    //                                Fld79 = ca1.Venue == null ? "" : ca1.Venue.Name.ToString(),
                    //                                Fld80 = ca1.Expenses == null ? "" : ca1.Expenses.FoodFees.ToString(),
                    //                                Fld81 = ca1.Expenses == null ? "" : ca1.Expenses.MiscFees.ToString(),
                    //                                Fld82 = ca1.Expenses == null ? "" : ca1.Expenses.StayFees.ToString(),
                    //                                Fld83 = ca1.Expenses == null ? "" : ca1.Expenses.TrainingFees.ToString(),
                    //                                Fld84 = ca1.Expenses == null ? "" : ca1.Expenses.TravelFees.ToString(),
                    //                                Fld85 = ca1.TrainingCalendar == null ? "" : ca1.TrainingCalendar.StartDate == null ? "" : ca1.TrainingCalendar.StartDate.Value.ToShortDateString(),
                    //                                Fld86 = ca1.TrainingCalendar == null ? "" : ca1.TrainingCalendar.EndDate == null ? "" : ca1.TrainingCalendar.EndDate.Value.ToShortDateString(),
                    //                                Fld87 = ca1.TrainingCalendar == null ? "" : ca1.TrainingCalendar.ProgramList == null ? "" : ca1.TrainingCalendar.ProgramList.Subject == null ? "" : ca1.TrainingCalendar.ProgramList.Subject.ToString(),
                    //                                Fld88 = ca1.TrainingCalendar == null ? "" : ca1.TrainingCalendar.ProgramList == null ? "" : ca1.TrainingCalendar.ProgramList.TrainingType == null ? "" : ca1.TrainingCalendar.ProgramList.TrainingType.LookupVal.ToString(),
                    //                                Fld89 = ca1.Venue == null ? "" : ca1.Venue.ContactPerson.ToString(),///new
                    //                                Fld90 = ses == null ? "" : ses.Name.ToString()

                    //                            };
                    //                            OGenericPayrollStatement.Add(OGenericObjStatement);
                    //                        }
                    //                    }
                    //                }
                    //            }
                    //        }
                    //    }
                    //}
                    return OGenericPayrollStatement;
                }
            }
        }

        public static List<GenericField100> GenerateSalRegisterSummary(int CompanyPayrollId, List<int> EmpPayrollIdList, List<string> mPayMonth, List<string> forithead, List<string> SpecialGroupslist, List<string> salheadlist)
        {
            using (DataBaseContext db = new DataBaseContext())
            {
                db.Configuration.AutoDetectChangesEnabled = false;
                var Id = Convert.ToInt32(SessionManager.CompanyId);
                string _CompCode = db.Company.Where(e => e.Id == Id).SingleOrDefault().Code.ToUpper();

                CompanyPayroll OSalHead = db.CompanyPayroll
                    .Include(e => e.SalaryHead)
                    .Include(e => e.SalaryHead.Select(r => r.Type)).AsNoTracking()
                    .Where(d => d.Id == CompanyPayrollId).OrderBy(e => e.Id).AsParallel().FirstOrDefault();


                List<EmployeePayroll> OEmpData = new List<EmployeePayroll>();
                foreach (var item in EmpPayrollIdList)
                {
                    EmployeePayroll OEmpData_temp = db.EmployeePayroll.Where(e => e.Employee_Id == item)
                        // .Include(e => e.SalaryT)
                        //.Include(e => e.SalaryT.Select(t => t.SalEarnDedT))
                        //.Include(e => e.SalaryT.Select(t => t.SalEarnDedT.Select(r => r.SalaryHead)))
                        //.Include(e => e.SalaryT.Select(t => t.SalEarnDedT.Select(r => r.SalaryHead.Type)))
                        //.Include(e => e.SalaryT.Select(t => t.SalEarnDedT.Select(r => r.SalaryHead.SalHeadOperationType)))
                        // .Include(e => e.Employee)
                        // .Include(e => e.Employee.EmpName)
                        //.Include(e => e.SalaryT.Select(r => r.Geostruct.Location.LocationObj))
                        //.Include(e => e.SalaryT.Select(r => r.Geostruct.Department.DepartmentObj))
                        //.Include(e => e.SalaryT.Select(r => r.FuncStruct.Job))
                        //.Include(e => e.SalaryT.Select(r => r.FuncStruct.Job.JobPosition))
                        //.Include(e => e.SalaryT.Select(r => r.PayStruct.Grade))
                        //.Include(e => e.SalaryT.Select(r => r.PayStruct.Grade.Levels))
                        //.Include(e => e.SalaryT.Select(r => r.PayStruct.Grade.Levels))
                        //.Include(e => e.SalaryT.Select(r => r.PayStruct.JobStatus))
                        //.Include(e => e.SalaryT.Select(r => r.PayStruct.JobStatus.EmpActingStatus)).AsNoTracking()
                            .AsNoTracking()
                            .AsParallel().OrderBy(e => e.Id)
                            .FirstOrDefault();

                    //OEmpData_temp.Employee = db.Employee.Find(OEmpData_temp.Employee_Id);
                    //OEmpData_temp.Employee.EmpName = db.NameSingle.Where(e => e.Id == OEmpData_temp.Employee.EmpName_Id).FirstOrDefault();

                    //OEmpData_temp.SalaryT = db.SalaryT.Where(e => e.EmployeePayroll_Id == OEmpData_temp.Id).ToList();
                    // List<string> BusiCategory = new List<string>();
                    string monthc = mPayMonth.FirstOrDefault();

                    if (OEmpData_temp != null)
                    {

                        if (salheadlist.Count() != 0 && salheadlist.Count() > 0)
                        {
                            // BusiCategory.AddRange(salheadlist);

                            foreach (string ca1 in salheadlist)
                            {
                                OEmpData_temp.Employee = db.Employee.Find(OEmpData_temp.Employee_Id);
                                OEmpData_temp.Employee.EmpName = db.NameSingle.Find(OEmpData_temp.Employee.EmpName_Id);
                                OEmpData_temp.SalaryT = db.SalaryT.Where(e => e.EmployeePayroll_Id == OEmpData_temp.Id && e.PayMonth == monthc).ToList();
                                OEmpData_temp.Employee.EmpOffInfo = db.EmpOff.Find(OEmpData_temp.Employee.EmpOffInfo_Id);
                                OEmpData_temp.Employee.EmpOffInfo.Bank = db.Bank.Where(e => e.Id == OEmpData_temp.Employee.EmpOffInfo.Bank_Id && salheadlist.Contains(e.Name)).AsNoTracking().FirstOrDefault();

                                foreach (var i in OEmpData_temp.SalaryT)
                                {
                                    i.Geostruct = db.GeoStruct.Find(i.Geostruct_Id);
                                    i.Geostruct.Location = db.Location.Find(i.Geostruct.Location_Id);
                                    i.Geostruct.Location.LocationObj = db.LocationObj.Find(i.Geostruct.Location.LocationObj_Id);
                                    i.Geostruct.Location.BusinessCategory = db.LookupValue.Find(i.Geostruct.Location.BusinessCategory_Id);
                                    i.FuncStruct = db.FuncStruct.Find(i.FuncStruct_Id);
                                    i.FuncStruct.Job = db.Job.Find(i.FuncStruct.Job_Id);
                                }

                                if (OEmpData_temp.Employee.EmpOffInfo != null && OEmpData_temp.Employee.EmpOffInfo.Bank != null)
                                {

                                    OEmpData.Add(OEmpData_temp);

                                }

                            }
                        }

                        else
                        {
                            OEmpData_temp.Employee = db.Employee.Find(OEmpData_temp.Employee_Id);
                            OEmpData_temp.Employee.EmpName = db.NameSingle.Find(OEmpData_temp.Employee.EmpName_Id);
                            OEmpData_temp.SalaryT = db.SalaryT.Where(e => e.EmployeePayroll_Id == OEmpData_temp.Id && e.PayMonth == monthc).ToList();
                            OEmpData_temp.Employee.EmpOffInfo = db.EmpOff.Find(OEmpData_temp.Employee.EmpOffInfo_Id);
                            OEmpData_temp.Employee.EmpOffInfo.Bank = db.Bank.Where(e => e.Id == OEmpData_temp.Employee.EmpOffInfo.Bank_Id).AsNoTracking().FirstOrDefault();

                            foreach (var i in OEmpData_temp.SalaryT)
                            {
                                i.Geostruct = db.GeoStruct.Find(i.Geostruct_Id);
                                i.Geostruct.Location = db.Location.Find(i.Geostruct.Location_Id);
                                i.Geostruct.Location.LocationObj = db.LocationObj.Find(i.Geostruct.Location.LocationObj_Id);
                                i.Geostruct.Location.BusinessCategory = db.LookupValue.Find(i.Geostruct.Location.BusinessCategory_Id);
                                i.FuncStruct = db.FuncStruct.Find(i.FuncStruct_Id);
                                i.FuncStruct.Job = db.Job.Find(i.FuncStruct.Job_Id);
                            }

                            OEmpData.Add(OEmpData_temp);
                        }

                    }
                }

                var OSalTchk = OEmpData.Select(e => e.SalaryT.ToList());
                var mHeader = false;
                if (OEmpData.Count() == 0 || OSalHead == null || OSalTchk == null)
                {
                    return null;
                }
                else
                {

                    var SpGroup = SpecialGroupslist.ToList();
                    var Empstatus = false;

                    foreach (var item1 in SpGroup)
                    {
                        if (item1 == "Empstatus")
                        {

                            Empstatus = true;
                        }

                    }

                    var emp = false;
                    var dept = false;
                    var loca = false;
                    var comp = false;
                    var grp = false;
                    var unit = false;
                    var div = false;
                    var regn = false;
                    var grade = false;
                    var lvl = false;
                    var jobstat = false;
                    var job = false;
                    var jobpos = false;
                    var paymentbank = false;
                    var vc = db.LookupValue.Where(a => forithead.Contains(a.Id.ToString())).ToList();

                    foreach (var item in vc)
                    {
                        //if (item.LookupVal.ToUpper() == "MONTH")
                        //{
                        //    month = true;
                        //}
                        //if (item.LookupVal.ToUpper() == "LOCATION")
                        //{

                        //    loca = true;
                        //}
                        if (item.LookupVal.ToUpper() == "EMPLOYEE")
                        {
                            emp = true;
                        }
                        if (item.LookupVal.ToUpper() == "DEPARTMENT")
                        {
                            dept = true;
                        }
                        if (item.LookupVal.ToUpper() == "COMPANY")
                        {
                            comp = true;
                        }
                        if (item.LookupVal.ToUpper() == "GROUP")
                        {
                            grp = true;
                        }
                        if (item.LookupVal.ToUpper() == "UNIT")
                        {
                            unit = true;
                        }
                        if (item.LookupVal.ToUpper() == "DIVISION")
                        {
                            div = true;
                        }
                        if (item.LookupVal.ToUpper() == "REGION")
                        {
                            regn = true;
                        }
                        if (item.LookupVal.ToUpper() == "GRADE")
                        {
                            grade = true;
                        }
                        if (item.LookupVal.ToUpper() == "LEVEL")
                        {
                            lvl = true;
                        }
                        if (item.LookupVal.ToUpper() == "JOBSTATUS")
                        {
                            jobstat = true;
                        }

                        if (item.LookupVal.ToUpper() == "JOB")
                        {
                            job = true;
                        }
                        if (item.LookupVal.ToUpper() == "JOBPOSITION")
                        {
                            jobpos = true;
                        }
                        if (item.LookupVal.ToUpper() == "PAYMENTBANK")
                        {
                            paymentbank = true;
                        }
                    }

                    //List<Utility.ReportClass> GeoData = new List<Utility.ReportClass>();
                    //List<Utility.ReportClass> Paydata = new List<Utility.ReportClass>();
                    //List<Utility.ReportClass> Funcdata = new List<Utility.ReportClass>();

                    //Utility.ReportClass GeoDataInd = new Utility.ReportClass();
                    //Utility.ReportClass PaydataInd = new Utility.ReportClass();
                    //Utility.ReportClass FuncdataInd = new Utility.ReportClass();

                    //GeoData = GetViewData(0);
                    //Paydata = GetViewData(1);
                    //Funcdata = GetViewData(2);

                    Utility.GetOrganizationDataClass GeoDataInd = new Utility.GetOrganizationDataClass();


                    List<GenericField100> OEmpSalReg = new List<GenericField100>();
                    foreach (var OEmpsingle in OEmpData)
                    {
                        int paeyid = Convert.ToInt32(OEmpsingle.Id.ToString());

                        //int geoid = empc.Employee.GeoStruct.Id;

                        //int payid = empc.Employee.PayStruct.Id;

                        //int funid = empc.Employee.FuncStruct.Id;



                        string month = mPayMonth.FirstOrDefault();
                        //List<SalaryT> OEmpSingleData = db.SalaryT.Where(e => e.EmployeePayroll_Id == OEmpsingle.Id)
                        //    .Include(e => e.SalEarnDedT)
                        //    .Include(e => e.SalEarnDedT.Select(r => r.SalaryHead))
                        //    .Include(e => e.SalEarnDedT.Select(r => r.SalaryHead.Type))
                        //    .Include(e => e.SalEarnDedT.Select(r => r.SalaryHead.SalHeadOperationType))
                        //    .Include(e => e.Geostruct.Location.LocationObj)
                        //    .Include(e => e.Geostruct.Department.DepartmentObj)
                        //    .Include(e => e.FuncStruct.Job)
                        //    .Include(e => e.FuncStruct.Job.JobPosition)
                        //    .Include(e => e.PayStruct.Grade)
                        //    .Include(e => e.PayStruct.Grade.Levels)
                        //    .Include(e => e.PayStruct.JobStatus)
                        //    .Include(e => e.PayStruct.JobStatus.EmpStatus)
                        //    .Include(e => e.PayStruct.JobStatus.EmpActingStatus).AsNoTracking()
                        //   .AsParallel().OrderBy(e => e.Id)
                        //   .ToList();

                        List<SalaryT> SalaryTList = new List<SalaryT>();
                        var SalaryT = new SalaryT();
                        SalaryT = OEmpsingle.SalaryT.Where(e => e.PayMonth == month).FirstOrDefault();
                        if (SalaryT != null)
                        {

                            //var GeoStruct = db.GeoStruct.Find(SalaryT.Geostruct_Id);
                            //var PayStruct = db.PayStruct.Find(SalaryT.PayStruct_Id);
                            //var FuncStruct = db.FuncStruct.Find(SalaryT.FuncStruct_Id);//db.SalaryT.Where(e => e.Id == SalaryT.Id).Select(r => r.FuncStruct).FirstOrDefault();
                            //var Company = db.Company.Find(GeoStruct.Company_Id);//db.GeoStruct.Where(e => e.Id == GeoStruct.Id).Select(r => r.Company).FirstOrDefault();
                            //var Location = db.Location.Find(GeoStruct.Location_Id);//db.GeoStruct.Where(e => e.Id == GeoStruct.Id).Select(r => r.Location).FirstOrDefault();
                            //var Location_LocationObj = db.LocationObj.Find(Location.LocationObj_Id); //db.Location.Where(e => e.Id == Location.Id).Select(r => r.LocationObj).FirstOrDefault();

                            //var Department = db.Department.Find(GeoStruct.Department_Id);//db.GeoStruct.Where(e => e.Id == GeoStruct.Id).Select(r => r.Department).FirstOrDefault();
                            //var Department_DepartmentObj = Department != null ? db.DepartmentObj.Find(Department.DepartmentObj_Id) : null;//Department != null ? db.Department.Where(e => e.Id == Department.Id).Select(r => r.DepartmentObj).FirstOrDefault() : null;

                            //var Job = db.Job.Find(FuncStruct.Job_Id);//db.FuncStruct.Where(e => e.Id == FuncStruct.Id).Select(r => r.Job).FirstOrDefault();
                            //var JobPosition = Job != null ? db.Job.Where(e => e.Id == Job.Id).Select(r => r.JobPosition).FirstOrDefault() : null;
                            //var Grade = db.Grade.Find(PayStruct.Grade_Id);//db.PayStruct.Where(e => e.Id == PayStruct.Id).Select(r => r.Grade).FirstOrDefault();
                            //var Grade_level = db.Grade.Where(e => e.Id == Grade.Id).Select(r => r.Levels).FirstOrDefault();
                            //var JobStatus = db.JobStatus.Find(PayStruct.JobStatus_Id); //db.PayStruct.Where(e => e.Id == PayStruct.Id).Select(r => r.JobStatus).FirstOrDefault();
                            //var EmpStatus = JobStatus != null ? db.JobStatus.Where(e => e.Id == JobStatus.Id).FirstOrDefault().EmpStatus : null;
                            //var EmpActingStatus = JobStatus != null ? db.JobStatus.Where(e => e.Id == JobStatus.Id).FirstOrDefault().EmpActingStatus : null;

                            List<SalEarnDedT> SalEarnDedT = db.SalaryT.Where(e => e.Id == SalaryT.Id).Select(r => r.SalEarnDedT.ToList()).FirstOrDefault();
                            foreach (var i in SalEarnDedT)
                            {

                                //var SalEarnDedTObj = db.SalaryHead.Find(i.SalaryHead_Id);//db.SalEarnDedT.Where(e => e.Id == i.Id).Select(r => r.SalaryHead).FirstOrDefault();
                                //var SalaryHead = db.SalaryHead.Where(e => e.Id == SalEarnDedTObj.Id).FirstOrDefault();
                                //var SalaryHead = db.SalaryHead.Find(i.SalaryHead_Id);
                                //var SalHeadOperationType = db.SalaryHead.Where(e => e.Id == SalaryHead.Id).FirstOrDefault().SalHeadOperationType;
                                //var Type = db.SalaryHead.Where(e => e.Id == SalaryHead.Id).FirstOrDefault().Type;
                                i.SalaryHead = db.SalaryHead.Find(i.SalaryHead_Id);
                                i.SalaryHead.SalHeadOperationType = db.LookupValue.Find(i.SalaryHead.SalHeadOperationType_Id);// db.SalaryHead.Where(e => e.Id == i.SalaryHead.Id).FirstOrDefault().SalHeadOperationType;
                                i.SalaryHead.Type = db.LookupValue.Find(i.SalaryHead.Type_Id);//db.SalaryHead.Where(e => e.Id == i.SalaryHead.Id).FirstOrDefault().Type;

                            }
                            //SalaryT.PayStruct = PayStruct;
                            //SalaryT.FuncStruct = FuncStruct;
                            //SalaryT.Geostruct = GeoStruct;
                            //SalaryT.Geostruct.Location = Location;
                            //SalaryT.Geostruct.Location.LocationObj = Location_LocationObj;
                            //SalaryT.Geostruct.Department = Department;
                            //// SalaryT.Geostruct.Department.DepartmentObj = Department_DepartmentObj;
                            //SalaryT.FuncStruct.Job = Job;
                            //SalaryT.FuncStruct.Job.JobPosition = JobPosition;
                            //SalaryT.PayStruct.Grade = Grade;
                            //SalaryT.PayStruct.Grade.Levels = Grade_level;
                            //SalaryT.PayStruct.JobStatus = JobStatus;
                            //SalaryT.PayStruct.JobStatus.EmpStatus = EmpStatus;
                            //SalaryT.PayStruct.JobStatus.EmpActingStatus = EmpActingStatus;

                            SalaryTList.Add(SalaryT);
                        }
                        //var OEarnDedData1 = SalaryTList.Where(g => month == g.PayMonth)
                        //    .Select(e => new
                        //    {
                        //        gid = e.Geostruct != null ? e.Geostruct.Id : 0,
                        //        pid = e.PayStruct != null ? e.PayStruct.Id : 0,
                        //        fid = e.FuncStruct != null ? e.FuncStruct.Id : 0,
                        //    }
                        //       ).AsParallel().FirstOrDefault();
                        if (SalaryTList != null && SalaryTList.Count() > 0)
                        {

                            //int geoid = OEarnDedData1.gid;

                            //int payid = OEarnDedData1.pid;

                            //int funid = OEarnDedData1.fid;

                            //GeoDataInd = GetViewDataIndiv(geoid, payid, funid, GeoData, 0);
                            //PaydataInd = GetViewDataIndiv(geoid, payid, funid, Paydata, 1);
                            //FuncdataInd = GetViewDataIndiv(geoid, payid, funid, Funcdata, 2);

                            int? geoid = SalaryTList.Where(g => month == g.PayMonth).FirstOrDefault().Geostruct_Id;

                            int? payid = SalaryTList.Where(g => month == g.PayMonth).FirstOrDefault().PayStruct_Id;

                            int? funid = SalaryTList.Where(g => month == g.PayMonth).FirstOrDefault().FuncStruct_Id;

                            GeoStruct geostruct = db.GeoStruct.Find(geoid);

                            PayStruct paystruct = db.PayStruct.Find(payid);

                            FuncStruct funstruct = db.FuncStruct.Find(funid);

                            GeoDataInd = ReportRDLCObjectClass.GetOrganizationDataInd(geostruct, paystruct, funstruct, 0);
                        }
                        else
                        {
                            var empc = db.EmployeePayroll.Where(e => e.Id == paeyid)
                                //        .Include(e => e.Employee)
                                //  .Include(e => e.Employee.GeoStruct)
                                //.Include(e => e.Employee.PayStruct)
                                //.Include(e => e.Employee.FuncStruct)
                        .AsNoTracking().OrderBy(e => e.Id)
                         .FirstOrDefault();

                            empc.Employee = db.Employee.Find(empc.Employee_Id);

                            int? geoid = empc.Employee.GeoStruct_Id;

                            int? payid = empc.Employee.PayStruct_Id;

                            int? funid = empc.Employee.FuncStruct_Id;
                            //GeoDataInd = GetViewDataIndiv(geoid, payid, funid, GeoData, 0);
                            //PaydataInd = GetViewDataIndiv(geoid, payid, funid, Paydata, 1);
                            //FuncdataInd = GetViewDataIndiv(geoid, payid, funid, Funcdata, 2);

                            GeoStruct geostruct = db.GeoStruct.Find(geoid);

                            PayStruct paystruct = db.PayStruct.Find(payid);

                            FuncStruct funstruct = db.FuncStruct.Find(funid);

                            GeoDataInd = ReportRDLCObjectClass.GetOrganizationDataInd(geostruct, paystruct, funstruct, 0);
                        }


                        var OEarnDedData = SalaryTList.Where(g => month == g.PayMonth && g.SalEarnDedT != null)
                                 .Select(e => e.SalEarnDedT.Where(y => y.SalaryHead.InPayslip == true).GroupBy(y => new { y.SalaryHead }).Select(z => new
                                 {
                                     SalaryHead = z.Key.SalaryHead,
                                     SalaryHead_Id = z.Key.SalaryHead.Id,
                                     Amount = z.Sum(w => w.Amount),
                                 })
                                .Select(r => new
                                {
                                    gid = e.Geostruct != null ? e.Geostruct.Id.ToString() : null,
                                    pid = e.PayStruct != null ? e.PayStruct.Id.ToString() : null,
                                    fid = e.FuncStruct != null ? e.FuncStruct.Id.ToString() : null,
                                    regionid = e.Geostruct != null && e.Geostruct.Region != null ? e.Geostruct.Region_Id.ToString() : null,
                                    regioncode = e.Geostruct != null && e.Geostruct.Region != null ? e.Geostruct.Region.Code : null,
                                    regionname = e.Geostruct != null && e.Geostruct.Region != null ? e.Geostruct.Region.Name : null,
                                    emppayrollid = OEmpsingle.Id.ToString(),
                                    empid = OEmpsingle.Employee.Id.ToString(),
                                    empcode = OEmpsingle.Employee.EmpCode,
                                    empname = OEmpsingle.Employee != null && OEmpsingle.Employee.EmpName != null ? OEmpsingle.Employee.EmpName.FullNameFML : null,
                                    paymonth = e.PayMonth,
                                    locid = e.Geostruct != null && e.Geostruct.Location != null ? e.Geostruct.Location.Id.ToString() : null,
                                    loccode = e.Geostruct != null && e.Geostruct.Location != null && e.Geostruct.Location.LocationObj != null ? e.Geostruct.Location.LocationObj.LocCode : null,
                                    locname = e.Geostruct != null && e.Geostruct.Location != null && e.Geostruct.Location.LocationObj != null ? e.Geostruct.Location.LocationObj.LocDesc : null,
                                    DepartmentId = e.Geostruct != null && e.Geostruct.Department != null && e.Geostruct.Department.DepartmentObj != null ? e.Geostruct.Department.DepartmentObj.Id.ToString() : null,
                                    DepartmentCode = e.Geostruct != null && e.Geostruct.Department != null && e.Geostruct.Department.DepartmentObj != null ? e.Geostruct.Department.DepartmentObj.DeptCode.ToString() : null,
                                    DepartmentName = e.Geostruct != null && e.Geostruct.Department != null && e.Geostruct.Department.DepartmentObj != null ? e.Geostruct.Department.DepartmentObj.DeptDesc.ToString() : null,
                                    GroupId = e.Geostruct != null && e.Geostruct.Group != null ? e.Geostruct.Group.Id.ToString() : null,
                                    GroupName = e.Geostruct != null && e.Geostruct.Group != null ? e.Geostruct.Group.Name.ToString() : null,
                                    GroupCode = e.Geostruct != null && e.Geostruct.Group != null ? e.Geostruct.Group.Code.ToString() : null,
                                    JobStatusName = e.PayStruct != null && e.PayStruct.JobStatus != null && e.PayStruct.JobStatus.EmpActingStatus != null ? e.PayStruct.JobStatus.EmpActingStatus.LookupVal : null,
                                    JobStatusId = e.PayStruct != null && e.PayStruct.JobStatus != null ? e.PayStruct.JobStatus.Id.ToString() : null,
                                    jobid = e.FuncStruct != null && e.FuncStruct.Job != null ? e.FuncStruct.Job.Id.ToString() : null,
                                    jobcode = e.FuncStruct != null && e.FuncStruct.Job != null ? e.FuncStruct.Job.Code : null,
                                    jobname = e.FuncStruct != null && e.FuncStruct.Job != null ? e.FuncStruct.Job.Name : null,
                                    salcodeid = r.SalaryHead != null ? r.SalaryHead.Id.ToString() : null,
                                    salcode = r.SalaryHead != null ? r.SalaryHead.Code.ToString() : null,
                                    salname = r.SalaryHead != null ? r.SalaryHead.Name.ToString() : null,
                                    amount = r.Amount,
                                    saltype = r.SalaryHead != null && r.SalaryHead.Type != null ? r.SalaryHead.Type.LookupVal.ToString() : null,
                                    salheadseqno = r.SalaryHead != null ? r.SalaryHead.SeqNo.ToString() : null,
                                    salOptype = r.SalaryHead != null && r.SalaryHead.SalHeadOperationType != null ? r.SalaryHead.SalHeadOperationType.LookupVal.ToString() : null,
                                    EmpStatusName = e.PayStruct != null && e.PayStruct.JobStatus != null && e.PayStruct.JobStatus.EmpStatus != null ? e.PayStruct.JobStatus.EmpStatus.LookupVal : null,
                                    Businesscategory = e.Geostruct != null && e.Geostruct.Location != null && e.Geostruct.Location.BusinessCategory != null ? e.Geostruct.Location.BusinessCategory.LookupVal.ToString() : null,
                                    Paybank = OEmpsingle.Employee != null && OEmpsingle.Employee.EmpOffInfo != null && OEmpsingle.Employee.EmpOffInfo.Bank != null && OEmpsingle.Employee.EmpOffInfo.Bank.Name != null ? OEmpsingle.Employee.EmpOffInfo.Bank.Name : null,

                                }
                                )).AsParallel().FirstOrDefault();
                        GenericField100 OEarnStatement = new GenericField100();
                        if (mHeader == false)//write header to first two lines
                        { }
                        if (OEarnDedData != null)
                        {
                            foreach (var ca in OEarnDedData)
                            {
                                OEarnStatement.Fld4 = ca.regionid;
                                OEarnStatement.Fld5 = ca.regioncode;
                                OEarnStatement.Fld6 = ca.regionname;
                                OEarnStatement.Fld7 = ca.locid;
                                OEarnStatement.Fld8 = ca.loccode;
                                //OEarnStatement.Fld9 = ca.locname + " " + ca.Paybank;
                                OEarnStatement.Fld97 = ca.locname + " " + ca.Paybank;
                                OEarnStatement.Fld10 = ca.DepartmentId;
                                OEarnStatement.Fld11 = ca.DepartmentCode;
                                OEarnStatement.Fld12 = ca.DepartmentName;
                                OEarnStatement.Fld13 = ca.GroupId;
                                OEarnStatement.Fld14 = ca.GroupCode;
                                OEarnStatement.Fld15 = ca.GroupName;
                                OEarnStatement.Fld16 = ca.jobid;
                                OEarnStatement.Fld17 = ca.jobcode;
                                OEarnStatement.Fld18 = ca.jobname;
                                OEarnStatement.Fld19 = ca.JobStatusId;
                                OEarnStatement.Fld20 = ca.JobStatusName;
                                OEarnStatement.Fld21 = ca.jobname;
                                OEarnStatement.Fld22 = ca.emppayrollid;
                                OEarnStatement.Fld23 = ca.empcode;
                                OEarnStatement.Fld24 = ca.empname;
                                OEarnStatement.Fld25 = ca.paymonth;
                                break;


                            }
                            if (_CompCode == "AWDCC")
                            {
                                OEarnStatement.Fld86 = "Authorised Signature :";
                            }
                            else
                            {
                                OEarnStatement.Fld86 = "";
                            }


                            //GenericField100 OSalRegObj = new GenericField100();
                            //  var OEarnData = OEarnDedData.Where(e => e.saltype.ToUpper() == "EARNING").ToList();

                            if (mHeader == false)//write header to first two lines
                            {

                                List<CompanyPayroll> BindCompList = db.CompanyPayroll.Where(e => e.Id == CompanyPayrollId).Include(e => e.SalaryHead)
                                    .Include(e => e.SalaryHead.Select(r => r.Type)).AsNoTracking().AsParallel().OrderBy(e => e.Id)
                                    .ToList();

                                foreach (CompanyPayroll ca1 in BindCompList)
                                {
                                    if (ca1.SalaryHead != null)
                                    {
                                        foreach (SalaryHead ca in ca1.SalaryHead)
                                        {
                                            if (ca.Type.LookupVal.ToUpper() == "EARNING")
                                            {


                                                switch (ca.SeqNo.ToString())
                                                {
                                                    case "1":
                                                        OEarnStatement.Fld26 = ca.Code.ToString();
                                                        break;
                                                    case "2":
                                                        OEarnStatement.Fld27 = ca.Code.ToString();
                                                        break;
                                                    case "3":
                                                        OEarnStatement.Fld28 = ca.Code.ToString();
                                                        break;
                                                    case "4":
                                                        OEarnStatement.Fld29 = ca.Code.ToString();
                                                        break;
                                                    case "5":
                                                        OEarnStatement.Fld30 = ca.Code.ToString();
                                                        break;
                                                    case "6":
                                                        OEarnStatement.Fld31 = ca.Code.ToString();
                                                        break;
                                                    case "7":
                                                        OEarnStatement.Fld32 = ca.Code.ToString();
                                                        break;
                                                    case "8":
                                                        OEarnStatement.Fld33 = ca.Code.ToString();
                                                        break;
                                                    case "9":
                                                        OEarnStatement.Fld34 = ca.Code.ToString();
                                                        break;
                                                    case "10":
                                                        OEarnStatement.Fld35 = ca.Code.ToString();
                                                        break;
                                                    case "11":
                                                        OEarnStatement.Fld36 = ca.Code.ToString();
                                                        break;
                                                    case "12":
                                                        OEarnStatement.Fld37 = ca.Code.ToString();
                                                        break;
                                                    case "13":
                                                        OEarnStatement.Fld38 = ca.Code.ToString();
                                                        break;
                                                    case "14":
                                                        OEarnStatement.Fld39 = ca.Code.ToString();
                                                        break;
                                                    case "15":
                                                        OEarnStatement.Fld40 = ca.Code.ToString();

                                                        break;
                                                }
                                            }
                                        }
                                    }

                                }
                                //   var ODedData = OEarnDedData.Where(e => e.saltype.ToUpper() == "DEDUCTION").ToList();
                                foreach (CompanyPayroll ca1 in BindCompList)
                                {
                                    if (ca1.SalaryHead != null)
                                    {
                                        foreach (SalaryHead ca in ca1.SalaryHead)
                                        {
                                            if (ca.Type.LookupVal.ToUpper() == "DEDUCTION")
                                            {
                                                switch (ca.SeqNo.ToString())
                                                {
                                                    case "1":
                                                        OEarnStatement.Fld41 = ca.Code.ToString();
                                                        break;
                                                    case "2":
                                                        OEarnStatement.Fld42 = ca.Code.ToString();
                                                        break;
                                                    case "3":
                                                        OEarnStatement.Fld43 = ca.Code.ToString();
                                                        break;
                                                    case "4":
                                                        OEarnStatement.Fld44 = ca.Code.ToString();
                                                        break;
                                                    case "5":
                                                        OEarnStatement.Fld45 = ca.Code.ToString();
                                                        break;
                                                    case "6":
                                                        OEarnStatement.Fld46 = ca.Code.ToString();
                                                        break;
                                                    case "7":
                                                        OEarnStatement.Fld47 = ca.Code.ToString();
                                                        break;
                                                    case "8":
                                                        OEarnStatement.Fld48 = ca.Code.ToString();
                                                        break;
                                                    case "9":
                                                        OEarnStatement.Fld49 = ca.Code.ToString();
                                                        break;
                                                    case "10":
                                                        OEarnStatement.Fld50 = ca.Code.ToString();
                                                        break;
                                                    case "11":
                                                        OEarnStatement.Fld51 = ca.Code.ToString();
                                                        break;
                                                    case "12":
                                                        OEarnStatement.Fld52 = ca.Code.ToString();
                                                        break;
                                                    case "13":
                                                        OEarnStatement.Fld53 = ca.Code.ToString();
                                                        break;
                                                    case "14":
                                                        OEarnStatement.Fld54 = ca.Code.ToString();
                                                        break;
                                                    case "15":
                                                        OEarnStatement.Fld55 = ca.Code.ToString();

                                                        break;
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                            mHeader = true;
                            var OEarnAmtData = OEarnDedData.Where(e => e.saltype.ToUpper() == "EARNING").ToList();

                            double Exsepseqearn = 0;
                            double Exsepseqded = 0;

                            if (OEarnAmtData.Count() > 0)
                            {
                                OEarnStatement.Fld56 = "0";
                                OEarnStatement.Fld57 = "0";
                                OEarnStatement.Fld58 = "0";
                                OEarnStatement.Fld59 = "0";
                                OEarnStatement.Fld60 = "0";
                                OEarnStatement.Fld61 = "0";
                                OEarnStatement.Fld62 = "0";
                                OEarnStatement.Fld63 = "0";
                                OEarnStatement.Fld64 = "0";
                                OEarnStatement.Fld65 = "0";
                                OEarnStatement.Fld66 = "0";
                                OEarnStatement.Fld67 = "0";
                                OEarnStatement.Fld68 = "0";
                                OEarnStatement.Fld69 = "0";
                                OEarnStatement.Fld70 = "0";

                                foreach (var ca in OEarnAmtData)
                                {
                                    if (Convert.ToInt32(ca.salheadseqno) != 0 && Convert.ToInt32(ca.salheadseqno) > 15)
                                    {
                                        Exsepseqearn = Exsepseqearn + ca.amount;
                                    }


                                    switch (ca.salheadseqno)
                                    {
                                        case "1":
                                            OEarnStatement.Fld56 = ca.amount.ToString();
                                            break;
                                        case "2":
                                            OEarnStatement.Fld57 = ca.amount.ToString();
                                            break;
                                        case "3":
                                            OEarnStatement.Fld58 = ca.amount.ToString();
                                            break;
                                        case "4":
                                            OEarnStatement.Fld59 = ca.amount.ToString();
                                            break;
                                        case "5":
                                            OEarnStatement.Fld60 = ca.amount.ToString();
                                            break;
                                        case "6":
                                            OEarnStatement.Fld61 = ca.amount.ToString();
                                            break;
                                        case "7":
                                            OEarnStatement.Fld62 = ca.amount.ToString();
                                            break;
                                        case "8":
                                            OEarnStatement.Fld63 = ca.amount.ToString();
                                            break;
                                        case "9":
                                            OEarnStatement.Fld64 = ca.amount.ToString();
                                            break;
                                        case "10":
                                            OEarnStatement.Fld65 = ca.amount.ToString();
                                            break;
                                        case "11":
                                            OEarnStatement.Fld66 = ca.amount.ToString();
                                            break;
                                        case "12":
                                            OEarnStatement.Fld67 = ca.amount.ToString();
                                            break;
                                        case "13":
                                            OEarnStatement.Fld68 = ca.amount.ToString();
                                            break;
                                        case "14":
                                            OEarnStatement.Fld69 = ca.amount.ToString();
                                            break;
                                        case "15":
                                            OEarnStatement.Fld70 = ca.amount.ToString();

                                            break;
                                    }
                                }
                                OEarnStatement.Fld2 = Exsepseqearn.ToString();
                            }
                            var ODedAmtData = OEarnDedData.Where(e => e.saltype.ToUpper() == "DEDUCTION").ToList();
                            if (ODedAmtData.Count() > 0)
                            {
                                OEarnStatement.Fld71 = "0";
                                OEarnStatement.Fld72 = "0";
                                OEarnStatement.Fld73 = "0";
                                OEarnStatement.Fld74 = "0";
                                OEarnStatement.Fld75 = "0";
                                OEarnStatement.Fld76 = "0";
                                OEarnStatement.Fld77 = "0";
                                OEarnStatement.Fld78 = "0";
                                OEarnStatement.Fld79 = "0";
                                OEarnStatement.Fld80 = "0";
                                OEarnStatement.Fld81 = "0";
                                OEarnStatement.Fld82 = "0";
                                OEarnStatement.Fld83 = "0";
                                OEarnStatement.Fld84 = "0";
                                OEarnStatement.Fld85 = "0";
                                foreach (var ca in ODedAmtData)
                                {
                                    if (Convert.ToInt32(ca.salheadseqno) != 0 && Convert.ToInt32(ca.salheadseqno) > 15)
                                    {
                                        Exsepseqded = Exsepseqded + ca.amount;
                                    }


                                    switch (ca.salheadseqno)
                                    {
                                        case "1":
                                            OEarnStatement.Fld71 = ca.amount.ToString();
                                            break;
                                        case "2":
                                            OEarnStatement.Fld72 = ca.amount.ToString();
                                            break;
                                        case "3":
                                            OEarnStatement.Fld73 = ca.amount.ToString();
                                            break;
                                        case "4":
                                            OEarnStatement.Fld74 = ca.amount.ToString();
                                            break;
                                        case "5":
                                            OEarnStatement.Fld75 = ca.amount.ToString();
                                            break;
                                        case "6":
                                            OEarnStatement.Fld76 = ca.amount.ToString();
                                            break;
                                        case "7":
                                            OEarnStatement.Fld77 = ca.amount.ToString();
                                            break;
                                        case "8":
                                            OEarnStatement.Fld78 = ca.amount.ToString();
                                            break;
                                        case "9":
                                            OEarnStatement.Fld79 = ca.amount.ToString();
                                            break;
                                        case "10":
                                            OEarnStatement.Fld80 = ca.amount.ToString();
                                            break;
                                        case "11":
                                            OEarnStatement.Fld81 = ca.amount.ToString();
                                            break;
                                        case "12":
                                            OEarnStatement.Fld82 = ca.amount.ToString();
                                            break;
                                        case "13":
                                            OEarnStatement.Fld83 = ca.amount.ToString();
                                            break;
                                        case "14":
                                            OEarnStatement.Fld84 = ca.amount.ToString();
                                            break;
                                        case "15":
                                            OEarnStatement.Fld85 = ca.amount.ToString();

                                            break;

                                    }
                                    if (comp)
                                    {
                                        OEarnStatement.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                    }
                                    if (div)
                                    {
                                        OEarnStatement.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                    }
                                    if (loca)
                                    {
                                        if (_CompCode == "AWDCC")
                                        {
                                            if (ca.loccode.Length == 6)
                                            {
                                                OEarnStatement.Fld97 = GeoDataInd.GeoStruct_Location_Code + " " + GeoDataInd.GeoStruct_Location_Name;
                                            }
                                            else if (ca.loccode.Length == 5)
                                            {
                                                OEarnStatement.Fld97 = "0" + GeoDataInd.GeoStruct_Location_Code + " " + GeoDataInd.GeoStruct_Location_Name;
                                            }
                                            else if (ca.loccode.Length == 4)
                                            {
                                                OEarnStatement.Fld97 = "00" + GeoDataInd.GeoStruct_Location_Code + " " + GeoDataInd.GeoStruct_Location_Name;
                                            }
                                            else if (ca.loccode.Length == 3)
                                            {
                                                OEarnStatement.Fld97 = "000" + GeoDataInd.GeoStruct_Location_Code + " " + GeoDataInd.GeoStruct_Location_Name;
                                            }
                                            else if (ca.loccode.Length == 2)
                                            {
                                                OEarnStatement.Fld97 = "0000" + GeoDataInd.GeoStruct_Location_Code + " " + GeoDataInd.GeoStruct_Location_Name;
                                            }
                                            else if (ca.loccode.Length == 1)
                                            {
                                                OEarnStatement.Fld97 = "00000" + GeoDataInd.GeoStruct_Location_Code + " " + GeoDataInd.GeoStruct_Location_Name;
                                            }
                                        }
                                        //else
                                        //{
                                        //    OEarnStatement.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                        //}

                                    }
                                    if (dept)
                                    {
                                        OEarnStatement.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                    }
                                    if (grp)
                                    {
                                        OEarnStatement.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                    }
                                    if (unit)
                                    {
                                        OEarnStatement.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                    }
                                    if (grade)
                                    {
                                        OEarnStatement.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                    }
                                    if (lvl)
                                    {
                                        OEarnStatement.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                    }
                                    if (jobstat)
                                    {
                                        OEarnStatement.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                    }
                                    if (job)
                                    {
                                        OEarnStatement.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                    }
                                    if (jobpos)
                                    {
                                        OEarnStatement.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                    }
                                    if (emp)
                                    {
                                        OEarnStatement.Fld88 = ca.empcode.ToString();
                                    }
                                    if (Empstatus)
                                    {
                                        OEarnStatement.Fld87 = ca.EmpStatusName != null ? ca.EmpStatusName.ToString() : null;

                                    }
                                    if (paymentbank)
                                    {
                                        OEarnStatement.Fld1 = db.Employee.Where(e => e.EmpCode == OEmpsingle.Employee.EmpCode).Select(a => a.EmpOffInfo.Bank.Name).AsNoTracking().FirstOrDefault() != null ? db.Employee.Where(e => e.EmpCode == OEmpsingle.Employee.EmpCode).Select(a => a.EmpOffInfo.Bank.Name).AsNoTracking().FirstOrDefault() : null;
                                    }

                                }
                                OEarnStatement.Fld3 = Exsepseqded.ToString();
                            }
                            //}
                            OEmpSalReg.Add(OEarnStatement);
                        }
                    }

                    if (OEmpSalReg.Count > 0 && OEmpSalReg != null)
                    {
                        //db.GenericField100.AddRange(OEmpSalReg.Distinct());
                        //db.SaveChanges();
                        return OEmpSalReg.Distinct().ToList();

                    }
                    else
                    {
                        return null;
                    }
                }
            }
        }


        public static List<GenericField100> GenerateSalRegister(int CompanyPayrollId, List<int> EmpPayrollIdList, List<string> mPayMonth, List<string> forithead, List<string> SpecialGroupslist, List<string> salheadlist, List<string> Sortingslist)
        {
            using (DataBaseContext db = new DataBaseContext())
            {
                db.Configuration.AutoDetectChangesEnabled = false;
                var Id = Convert.ToInt32(SessionManager.CompanyId);
                string _CompCode = db.Company.Where(e => e.Id == Id).SingleOrDefault().Code.ToUpper();

                CompanyPayroll OSalHead = db.CompanyPayroll
                    .Include(e => e.SalaryHead)
                    .Include(e => e.SalaryHead.Select(r => r.Type)).AsNoTracking()
                    .Where(d => d.Id == CompanyPayrollId).OrderBy(e => e.Id).AsParallel().FirstOrDefault();


                List<EmployeePayroll> OEmpData = new List<EmployeePayroll>();
                foreach (var item in EmpPayrollIdList)
                {
                    EmployeePayroll OEmpData_temp = db.EmployeePayroll.Where(e => e.Employee_Id == item)
                        // .Include(e => e.SalaryT)
                        //.Include(e => e.SalaryT.Select(t => t.SalEarnDedT))
                        //.Include(e => e.SalaryT.Select(t => t.SalEarnDedT.Select(r => r.SalaryHead)))
                        //.Include(e => e.SalaryT.Select(t => t.SalEarnDedT.Select(r => r.SalaryHead.Type)))
                        //.Include(e => e.SalaryT.Select(t => t.SalEarnDedT.Select(r => r.SalaryHead.SalHeadOperationType)))
                        // .Include(e => e.Employee)
                        // .Include(e => e.Employee.EmpName)
                        //.Include(e => e.SalaryT.Select(r => r.Geostruct.Location.LocationObj))
                        //.Include(e => e.SalaryT.Select(r => r.Geostruct.Department.DepartmentObj))
                        //.Include(e => e.SalaryT.Select(r => r.FuncStruct.Job))
                        //.Include(e => e.SalaryT.Select(r => r.FuncStruct.Job.JobPosition))
                        //.Include(e => e.SalaryT.Select(r => r.PayStruct.Grade))
                        //.Include(e => e.SalaryT.Select(r => r.PayStruct.Grade.Levels))
                        //.Include(e => e.SalaryT.Select(r => r.PayStruct.Grade.Levels))
                        //.Include(e => e.SalaryT.Select(r => r.PayStruct.JobStatus))
                        //.Include(e => e.SalaryT.Select(r => r.PayStruct.JobStatus.EmpActingStatus)).AsNoTracking()
                            .AsNoTracking()
                            .AsParallel().OrderBy(e => e.Id)
                            .FirstOrDefault();

                    //OEmpData_temp.Employee = db.Employee.Find(OEmpData_temp.Employee_Id);
                    //OEmpData_temp.Employee.EmpName = db.NameSingle.Where(e => e.Id == OEmpData_temp.Employee.EmpName_Id).FirstOrDefault();

                    //OEmpData_temp.SalaryT = db.SalaryT.Where(e => e.EmployeePayroll_Id == OEmpData_temp.Id).ToList();
                    // List<string> BusiCategory = new List<string>();
                    string monthc = mPayMonth.FirstOrDefault();

                    if (OEmpData_temp != null)
                    {

                        if (salheadlist.Count() != 0 && salheadlist.Count() > 0)
                        {
                            // BusiCategory.AddRange(salheadlist);

                            foreach (string ca1 in salheadlist)
                            {
                                OEmpData_temp.Employee = db.Employee.Find(OEmpData_temp.Employee_Id);
                                OEmpData_temp.Employee.EmpName = db.NameSingle.Find(OEmpData_temp.Employee.EmpName_Id);
                                OEmpData_temp.SalaryT = db.SalaryT.Where(e => e.EmployeePayroll_Id == OEmpData_temp.Id && e.PayMonth == monthc).ToList();
                                OEmpData_temp.Employee.EmpOffInfo = db.EmpOff.Find(OEmpData_temp.Employee.EmpOffInfo_Id);
                                OEmpData_temp.Employee.EmpOffInfo.Bank = db.Bank.Where(e => e.Id == OEmpData_temp.Employee.EmpOffInfo.Bank_Id && salheadlist.Contains(e.Name)).AsNoTracking().FirstOrDefault();
                                OEmpData_temp.Employee.ServiceBookDates = db.ServiceBookDates.Find(OEmpData_temp.Employee.ServiceBookDates_Id);
                                OEmpData_temp.SalAttendance = db.SalAttendanceT.Where(e => e.EmployeePayroll_Id == OEmpData_temp.Id && e.PayMonth == monthc).ToList();

                                foreach (var i in OEmpData_temp.SalaryT)
                                {
                                    i.Geostruct = db.GeoStruct.Find(i.Geostruct_Id);
                                    i.Geostruct.Location = db.Location.Find(i.Geostruct.Location_Id);
                                    i.Geostruct.Location.LocationObj = db.LocationObj.Find(i.Geostruct.Location.LocationObj_Id);
                                    i.Geostruct.Location.BusinessCategory = db.LookupValue.Find(i.Geostruct.Location.BusinessCategory_Id);
                                    i.FuncStruct = db.FuncStruct.Find(i.FuncStruct_Id);
                                    i.FuncStruct.Job = db.Job.Find(i.FuncStruct.Job_Id);
                                    i.PayStruct = db.PayStruct.Find(i.PayStruct_Id);
                                    i.PayStruct.Grade = db.Grade.Find(i.PayStruct.Grade_Id);

                                }


                                if (OEmpData_temp.Employee.EmpOffInfo != null && OEmpData_temp.Employee.EmpOffInfo.Bank != null)
                                {

                                    OEmpData.Add(OEmpData_temp);

                                }

                            }
                        }

                        else
                        {
                            OEmpData_temp.Employee = db.Employee.Find(OEmpData_temp.Employee_Id);
                            OEmpData_temp.Employee.EmpName = db.NameSingle.Find(OEmpData_temp.Employee.EmpName_Id);
                            OEmpData_temp.SalaryT = db.SalaryT.Where(e => e.EmployeePayroll_Id == OEmpData_temp.Id && e.PayMonth == monthc).ToList();
                            OEmpData_temp.Employee.EmpOffInfo = db.EmpOff.Find(OEmpData_temp.Employee.EmpOffInfo_Id);
                            OEmpData_temp.Employee.EmpOffInfo.Bank = db.Bank.Where(e => e.Id == OEmpData_temp.Employee.EmpOffInfo.Bank_Id).AsNoTracking().FirstOrDefault();
                            OEmpData_temp.Employee.ServiceBookDates = db.ServiceBookDates.Find(OEmpData_temp.Employee.ServiceBookDates_Id);
                            OEmpData_temp.SalAttendance = db.SalAttendanceT.Where(e => e.EmployeePayroll_Id == OEmpData_temp.Id && e.PayMonth == monthc).ToList();

                            foreach (var i in OEmpData_temp.SalaryT)
                            {
                                i.Geostruct = db.GeoStruct.Find(i.Geostruct_Id);
                                i.Geostruct.Location = db.Location.Find(i.Geostruct.Location_Id);
                                i.Geostruct.Location.LocationObj = db.LocationObj.Find(i.Geostruct.Location.LocationObj_Id);
                                i.Geostruct.Location.BusinessCategory = db.LookupValue.Find(i.Geostruct.Location.BusinessCategory_Id);
                                i.FuncStruct = db.FuncStruct.Find(i.FuncStruct_Id);
                                i.FuncStruct.Job = db.Job.Find(i.FuncStruct.Job_Id);
                                i.PayStruct = db.PayStruct.Find(i.PayStruct_Id);
                                i.PayStruct.Grade = db.Grade.Find(i.PayStruct.Grade_Id);
                            }

                            OEmpData.Add(OEmpData_temp);
                        }

                    }
                }

                var OSalTchk = OEmpData.Select(e => e.SalaryT.ToList());
                var mHeader = false;
                if (OEmpData.Count() == 0 || OSalHead == null || OSalTchk == null)
                {
                    return null;
                }
                else
                {

                    var SpGroup = SpecialGroupslist.ToList();
                    var Empstatus = false;
                    var SeniorityNo = false;

                    foreach (var item1 in SpGroup)
                    {
                        if (item1 == "Empstatus")
                        {

                            Empstatus = true;
                        }
                        if (item1 == "SeniorityNo")
                        {

                            SeniorityNo = true;
                        }

                    }

                    var emp = false;
                    var dept = false;
                    var loca = false;
                    var comp = false;
                    var grp = false;
                    var unit = false;
                    var div = false;
                    var regn = false;
                    var grade = false;
                    var lvl = false;
                    var jobstat = false;
                    var job = false;
                    var jobpos = false;
                    var paymentbank = false;
                    var vc = db.LookupValue.Where(a => forithead.Contains(a.Id.ToString())).ToList();

                    foreach (var item in vc)
                    {
                        //if (item.LookupVal.ToUpper() == "MONTH")
                        //{
                        //    month = true;
                        //}
                        if (item.LookupVal.ToUpper() == "LOCATION")
                        {

                            loca = true;
                        }
                        if (item.LookupVal.ToUpper() == "EMPLOYEE")
                        {
                            emp = true;
                        }
                        if (item.LookupVal.ToUpper() == "DEPARTMENT")
                        {
                            dept = true;
                        }
                        if (item.LookupVal.ToUpper() == "COMPANY")
                        {
                            comp = true;
                        }
                        if (item.LookupVal.ToUpper() == "GROUP")
                        {
                            grp = true;
                        }
                        if (item.LookupVal.ToUpper() == "UNIT")
                        {
                            unit = true;
                        }
                        if (item.LookupVal.ToUpper() == "DIVISION")
                        {
                            div = true;
                        }
                        if (item.LookupVal.ToUpper() == "REGION")
                        {
                            regn = true;
                        }
                        if (item.LookupVal.ToUpper() == "GRADE")
                        {
                            grade = true;
                        }
                        if (item.LookupVal.ToUpper() == "LEVEL")
                        {
                            lvl = true;
                        }
                        if (item.LookupVal.ToUpper() == "JOBSTATUS")
                        {
                            jobstat = true;
                        }

                        if (item.LookupVal.ToUpper() == "JOB")
                        {
                            job = true;
                        }
                        if (item.LookupVal.ToUpper() == "JOBPOSITION")
                        {
                            jobpos = true;
                        }
                        if (item.LookupVal.ToUpper() == "PAYMENTBANK")
                        {
                            paymentbank = true;
                        }
                    }


                    ///ddd
                    var SpSort = Sortingslist.ToList();
                    var LOCCODE = false;
                    var DEPARTMENTCODE = false;
                    var GRADECODE = false;
                    var DESIGNATIONCODE = false;
                    var EMPCODE = false;

                    foreach (var item1 in SpSort)
                    {
                        if (item1 == "LOCCODE")
                        {

                            LOCCODE = true;
                        }
                        if (item1 == "DEPARTMENTCODE")
                        {

                            DEPARTMENTCODE = true;
                        }
                        if (item1 == "GRADECODE")
                        {

                            GRADECODE = true;
                        }
                        if (item1 == "DESIGNATIONCODE")
                        {

                            DESIGNATIONCODE = true;
                        }
                        if (item1 == "EMPCODE")
                        {

                            EMPCODE = true;
                        }

                    }

                    //List<Utility.ReportClass> GeoData = new List<Utility.ReportClass>();
                    //List<Utility.ReportClass> Paydata = new List<Utility.ReportClass>();
                    //List<Utility.ReportClass> Funcdata = new List<Utility.ReportClass>();

                    //Utility.ReportClass GeoDataInd = new Utility.ReportClass();
                    //Utility.ReportClass PaydataInd = new Utility.ReportClass();
                    //Utility.ReportClass FuncdataInd = new Utility.ReportClass();

                    //GeoData = GetViewData(0);
                    //Paydata = GetViewData(1);
                    //Funcdata = GetViewData(2);

                    Utility.GetOrganizationDataClass GeoDataInd = new Utility.GetOrganizationDataClass();


                    List<GenericField100> OEmpSalReg = new List<GenericField100>();
                    foreach (var OEmpsingle in OEmpData)
                    {
                        int paeyid = Convert.ToInt32(OEmpsingle.Id.ToString());

                        //int geoid = empc.Employee.GeoStruct.Id;

                        //int payid = empc.Employee.PayStruct.Id;

                        //int funid = empc.Employee.FuncStruct.Id;



                        string month = mPayMonth.FirstOrDefault();
                        //List<SalaryT> OEmpSingleData = db.SalaryT.Where(e => e.EmployeePayroll_Id == OEmpsingle.Id)
                        //    .Include(e => e.SalEarnDedT)
                        //    .Include(e => e.SalEarnDedT.Select(r => r.SalaryHead))
                        //    .Include(e => e.SalEarnDedT.Select(r => r.SalaryHead.Type))
                        //    .Include(e => e.SalEarnDedT.Select(r => r.SalaryHead.SalHeadOperationType))
                        //    .Include(e => e.Geostruct.Location.LocationObj)
                        //    .Include(e => e.Geostruct.Department.DepartmentObj)
                        //    .Include(e => e.FuncStruct.Job)
                        //    .Include(e => e.FuncStruct.Job.JobPosition)
                        //    .Include(e => e.PayStruct.Grade)
                        //    .Include(e => e.PayStruct.Grade.Levels)
                        //    .Include(e => e.PayStruct.JobStatus)
                        //    .Include(e => e.PayStruct.JobStatus.EmpStatus)
                        //    .Include(e => e.PayStruct.JobStatus.EmpActingStatus).AsNoTracking()
                        //   .AsParallel().OrderBy(e => e.Id)
                        //   .ToList();

                        List<SalaryT> SalaryTList = new List<SalaryT>();
                        var SalaryT = new SalaryT();
                        SalaryT = OEmpsingle.SalaryT.Where(e => e.PayMonth == month).FirstOrDefault();
                        if (SalaryT != null)
                        {

                            //var GeoStruct = db.GeoStruct.Find(SalaryT.Geostruct_Id);
                            //var PayStruct = db.PayStruct.Find(SalaryT.PayStruct_Id);
                            //var FuncStruct = db.FuncStruct.Find(SalaryT.FuncStruct_Id);//db.SalaryT.Where(e => e.Id == SalaryT.Id).Select(r => r.FuncStruct).FirstOrDefault();
                            //var Company = db.Company.Find(GeoStruct.Company_Id);//db.GeoStruct.Where(e => e.Id == GeoStruct.Id).Select(r => r.Company).FirstOrDefault();
                            //var Location = db.Location.Find(GeoStruct.Location_Id);//db.GeoStruct.Where(e => e.Id == GeoStruct.Id).Select(r => r.Location).FirstOrDefault();
                            //var Location_LocationObj = db.LocationObj.Find(Location.LocationObj_Id); //db.Location.Where(e => e.Id == Location.Id).Select(r => r.LocationObj).FirstOrDefault();

                            //var Department = db.Department.Find(GeoStruct.Department_Id);//db.GeoStruct.Where(e => e.Id == GeoStruct.Id).Select(r => r.Department).FirstOrDefault();
                            //var Department_DepartmentObj = Department != null ? db.DepartmentObj.Find(Department.DepartmentObj_Id) : null;//Department != null ? db.Department.Where(e => e.Id == Department.Id).Select(r => r.DepartmentObj).FirstOrDefault() : null;

                            //var Job = db.Job.Find(FuncStruct.Job_Id);//db.FuncStruct.Where(e => e.Id == FuncStruct.Id).Select(r => r.Job).FirstOrDefault();
                            //var JobPosition = Job != null ? db.Job.Where(e => e.Id == Job.Id).Select(r => r.JobPosition).FirstOrDefault() : null;
                            //var Grade = db.Grade.Find(PayStruct.Grade_Id);//db.PayStruct.Where(e => e.Id == PayStruct.Id).Select(r => r.Grade).FirstOrDefault();
                            //var Grade_level = db.Grade.Where(e => e.Id == Grade.Id).Select(r => r.Levels).FirstOrDefault();
                            //var JobStatus = db.JobStatus.Find(PayStruct.JobStatus_Id); //db.PayStruct.Where(e => e.Id == PayStruct.Id).Select(r => r.JobStatus).FirstOrDefault();
                            //var EmpStatus = JobStatus != null ? db.JobStatus.Where(e => e.Id == JobStatus.Id).FirstOrDefault().EmpStatus : null;
                            //var EmpActingStatus = JobStatus != null ? db.JobStatus.Where(e => e.Id == JobStatus.Id).FirstOrDefault().EmpActingStatus : null;

                            List<SalEarnDedT> SalEarnDedT = db.SalaryT.Where(e => e.Id == SalaryT.Id).Select(r => r.SalEarnDedT.Where(e => e.Amount != 0).ToList()).FirstOrDefault();
                            foreach (var i in SalEarnDedT)
                            {

                                //var SalEarnDedTObj = db.SalaryHead.Find(i.SalaryHead_Id);//db.SalEarnDedT.Where(e => e.Id == i.Id).Select(r => r.SalaryHead).FirstOrDefault();
                                //var SalaryHead = db.SalaryHead.Where(e => e.Id == SalEarnDedTObj.Id).FirstOrDefault();
                                //var SalaryHead = db.SalaryHead.Find(i.SalaryHead_Id);
                                //var SalHeadOperationType = db.SalaryHead.Where(e => e.Id == SalaryHead.Id).FirstOrDefault().SalHeadOperationType;
                                //var Type = db.SalaryHead.Where(e => e.Id == SalaryHead.Id).FirstOrDefault().Type;
                                i.SalaryHead = db.SalaryHead.Find(i.SalaryHead_Id);
                                i.SalaryHead.SalHeadOperationType = db.LookupValue.Find(i.SalaryHead.SalHeadOperationType_Id);// db.SalaryHead.Where(e => e.Id == i.SalaryHead.Id).FirstOrDefault().SalHeadOperationType;
                                i.SalaryHead.Type = db.LookupValue.Find(i.SalaryHead.Type_Id);//db.SalaryHead.Where(e => e.Id == i.SalaryHead.Id).FirstOrDefault().Type;

                            }
                            //SalaryT.PayStruct = PayStruct;
                            //SalaryT.FuncStruct = FuncStruct;
                            //SalaryT.Geostruct = GeoStruct;
                            //SalaryT.Geostruct.Location = Location;
                            //SalaryT.Geostruct.Location.LocationObj = Location_LocationObj;
                            //SalaryT.Geostruct.Department = Department;
                            //// SalaryT.Geostruct.Department.DepartmentObj = Department_DepartmentObj;
                            //SalaryT.FuncStruct.Job = Job;
                            //SalaryT.FuncStruct.Job.JobPosition = JobPosition;
                            //SalaryT.PayStruct.Grade = Grade;
                            //SalaryT.PayStruct.Grade.Levels = Grade_level;
                            //SalaryT.PayStruct.JobStatus = JobStatus;
                            //SalaryT.PayStruct.JobStatus.EmpStatus = EmpStatus;
                            //SalaryT.PayStruct.JobStatus.EmpActingStatus = EmpActingStatus;

                            SalaryTList.Add(SalaryT);
                        }
                        //var OEarnDedData1 = SalaryTList.Where(g => month == g.PayMonth)
                        //    .Select(e => new
                        //    {
                        //        gid = e.Geostruct != null ? e.Geostruct.Id : 0,
                        //        pid = e.PayStruct != null ? e.PayStruct.Id : 0,
                        //        fid = e.FuncStruct != null ? e.FuncStruct.Id : 0,
                        //    }
                        //       ).AsParallel().FirstOrDefault();
                        if (SalaryTList != null && SalaryTList.Count() > 0)
                        {

                            //int geoid = OEarnDedData1.gid;

                            //int payid = OEarnDedData1.pid;

                            //int funid = OEarnDedData1.fid;

                            //GeoDataInd = GetViewDataIndiv(geoid, payid, funid, GeoData, 0);
                            //PaydataInd = GetViewDataIndiv(geoid, payid, funid, Paydata, 1);
                            //FuncdataInd = GetViewDataIndiv(geoid, payid, funid, Funcdata, 2);

                            int? geoid = SalaryTList.Where(g => month == g.PayMonth).FirstOrDefault().Geostruct_Id;

                            int? payid = SalaryTList.Where(g => month == g.PayMonth).FirstOrDefault().PayStruct_Id;

                            int? funid = SalaryTList.Where(g => month == g.PayMonth).FirstOrDefault().FuncStruct_Id;

                            GeoStruct geostruct = db.GeoStruct.Find(geoid);

                            PayStruct paystruct = db.PayStruct.Find(payid);

                            FuncStruct funstruct = db.FuncStruct.Find(funid);

                            GeoDataInd = ReportRDLCObjectClass.GetOrganizationDataInd(geostruct, paystruct, funstruct, 0);
                        }
                        else
                        {
                            var empc = db.EmployeePayroll.Where(e => e.Id == paeyid)
                                //        .Include(e => e.Employee)
                                //  .Include(e => e.Employee.GeoStruct)
                                //.Include(e => e.Employee.PayStruct)
                                //.Include(e => e.Employee.FuncStruct)
                        .AsNoTracking().OrderBy(e => e.Id)
                         .FirstOrDefault();

                            empc.Employee = db.Employee.Find(empc.Employee_Id);

                            int? geoid = empc.Employee.GeoStruct_Id;

                            int? payid = empc.Employee.PayStruct_Id;

                            int? funid = empc.Employee.FuncStruct_Id;
                            //GeoDataInd = GetViewDataIndiv(geoid, payid, funid, GeoData, 0);
                            //PaydataInd = GetViewDataIndiv(geoid, payid, funid, Paydata, 1);
                            //FuncdataInd = GetViewDataIndiv(geoid, payid, funid, Funcdata, 2);

                            GeoStruct geostruct = db.GeoStruct.Find(geoid);

                            PayStruct paystruct = db.PayStruct.Find(payid);

                            FuncStruct funstruct = db.FuncStruct.Find(funid);

                            GeoDataInd = ReportRDLCObjectClass.GetOrganizationDataInd(geostruct, paystruct, funstruct, 0);
                        }


                        var OEarnDedData = SalaryTList.Where(g => month == g.PayMonth && g.SalEarnDedT != null)
                                 .Select(e => e.SalEarnDedT.Where(y => y.SalaryHead.InPayslip == true && y.Amount != 0).GroupBy(y => new { y.SalaryHead }).Select(z => new
                                 {
                                     SalaryHead = z.Key.SalaryHead,
                                     SalaryHead_Id = z.Key.SalaryHead.Id,
                                     Amount = z.Sum(w => w.Amount),
                                 })
                                .Select(r => new
                                {
                                    gid = e.Geostruct != null ? e.Geostruct.Id.ToString() : null,
                                    pid = e.PayStruct != null ? e.PayStruct.Id.ToString() : null,
                                    fid = e.FuncStruct != null ? e.FuncStruct.Id.ToString() : null,
                                    regionid = e.Geostruct != null && e.Geostruct.Region != null ? e.Geostruct.Region_Id.ToString() : null,
                                    regioncode = e.Geostruct != null && e.Geostruct.Region != null ? e.Geostruct.Region.Code : null,
                                    regionname = e.Geostruct != null && e.Geostruct.Region != null ? e.Geostruct.Region.Name : null,
                                    emppayrollid = OEmpsingle.Id.ToString(),
                                    empid = OEmpsingle.Employee.Id.ToString(),
                                    empcode = OEmpsingle.Employee.EmpCode,
                                    empname = OEmpsingle.Employee != null && OEmpsingle.Employee.EmpName != null ? OEmpsingle.Employee.EmpName.FullNameFML : null,
                                    paymonth = e.PayMonth,
                                    locid = e.Geostruct != null && e.Geostruct.Location != null ? e.Geostruct.Location.Id.ToString() : null,
                                    loccode = e.Geostruct != null && e.Geostruct.Location != null && e.Geostruct.Location.LocationObj != null ? e.Geostruct.Location.LocationObj.LocCode : null,
                                    locname = e.Geostruct != null && e.Geostruct.Location != null && e.Geostruct.Location.LocationObj != null ? e.Geostruct.Location.LocationObj.LocDesc : null,
                                    DepartmentId = e.Geostruct != null && e.Geostruct.Department != null && e.Geostruct.Department.DepartmentObj != null ? e.Geostruct.Department.DepartmentObj.Id.ToString() : null,
                                    DepartmentCode = e.Geostruct != null && e.Geostruct.Department != null && e.Geostruct.Department.DepartmentObj != null ? e.Geostruct.Department.DepartmentObj.DeptCode.ToString() : null,
                                    DepartmentName = e.Geostruct != null && e.Geostruct.Department != null && e.Geostruct.Department.DepartmentObj != null ? e.Geostruct.Department.DepartmentObj.DeptDesc.ToString() : null,
                                    GroupId = e.Geostruct != null && e.Geostruct.Group != null ? e.Geostruct.Group.Id.ToString() : null,
                                    GroupName = e.Geostruct != null && e.Geostruct.Group != null ? e.Geostruct.Group.Name.ToString() : null,
                                    GroupCode = e.Geostruct != null && e.Geostruct.Group != null ? e.Geostruct.Group.Code.ToString() : null,
                                    JobStatusName = e.PayStruct != null && e.PayStruct.JobStatus != null && e.PayStruct.JobStatus.EmpActingStatus != null ? e.PayStruct.JobStatus.EmpActingStatus.LookupVal : null,
                                    JobStatusId = e.PayStruct != null && e.PayStruct.JobStatus != null ? e.PayStruct.JobStatus.Id.ToString() : null,
                                    jobid = e.FuncStruct != null && e.FuncStruct.Job != null ? e.FuncStruct.Job.Id.ToString() : null,
                                    jobcode = e.FuncStruct != null && e.FuncStruct.Job != null ? e.FuncStruct.Job.Code : null,
                                    jobname = e.FuncStruct != null && e.FuncStruct.Job != null ? e.FuncStruct.Job.Name : null,
                                    salcodeid = r.SalaryHead != null ? r.SalaryHead.Id.ToString() : null,
                                    salcode = r.SalaryHead != null ? r.SalaryHead.Code.ToString() : null,
                                    salname = r.SalaryHead != null ? r.SalaryHead.Name.ToString() : null,
                                    amount = r.Amount,
                                    saltype = r.SalaryHead != null && r.SalaryHead.Type != null ? r.SalaryHead.Type.LookupVal.ToString() : null,
                                    salheadseqno = r.SalaryHead != null ? r.SalaryHead.SeqNo.ToString() : null,
                                    salOptype = r.SalaryHead != null && r.SalaryHead.SalHeadOperationType != null ? r.SalaryHead.SalHeadOperationType.LookupVal.ToString() : null,
                                    EmpStatusName = e.PayStruct != null && e.PayStruct.JobStatus != null && e.PayStruct.JobStatus.EmpStatus != null ? e.PayStruct.JobStatus.EmpStatus.LookupVal : null,
                                    Businesscategory = e.Geostruct != null && e.Geostruct.Location != null && e.Geostruct.Location.BusinessCategory != null ? e.Geostruct.Location.BusinessCategory.LookupVal.ToString() : null,
                                    Paybank = OEmpsingle.Employee != null && OEmpsingle.Employee.EmpOffInfo != null && OEmpsingle.Employee.EmpOffInfo.Bank != null && OEmpsingle.Employee.EmpOffInfo.Bank.Name != null ? OEmpsingle.Employee.EmpOffInfo.Bank.Name : null,
                                    SeniorityNo = OEmpsingle.Employee.ServiceBookDates.SeniorityNo != null ? OEmpsingle.Employee.ServiceBookDates.SeniorityNo : "0",
                                    PayableDays = Convert.ToString(OEmpsingle.SalAttendance.FirstOrDefault().PaybleDays - OEmpsingle.SalAttendance.FirstOrDefault().LWPDays),
                                    Grade = e.PayStruct != null && e.PayStruct.Grade != null ? e.PayStruct.Grade.Code + " " + e.PayStruct.Grade.Name : "",
                                   
                                }
                                )).AsParallel().FirstOrDefault();



                        GenericField100 OEarnStatement = new GenericField100();
                        if (mHeader == false)//write header to first two lines
                        { }
                        string requiredPath = Path.GetDirectoryName(Path.GetDirectoryName(System.IO.Path.GetDirectoryName(System.Reflection.Assembly.GetExecutingAssembly().GetName().CodeBase))) + "\\P2BUltimate\\App_Data\\Menu_Json";
                        bool exists = System.IO.Directory.Exists(requiredPath);
                        string localPath;
                        if (!exists)
                        {
                            localPath = new Uri(requiredPath).LocalPath;
                            System.IO.Directory.CreateDirectory(localPath);
                        }
                        string path = requiredPath + @"\SalRule" + ".txt";
                        localPath = new Uri(path).LocalPath;
                        Boolean locnamepaybank = false;
                        using (var streamReader = new StreamReader(localPath))
                        {
                            string line;

                            while ((line = streamReader.ReadLine()) != null)
                            {
                                locnamepaybank = true;
                            }
                        }

                        if (OEarnDedData != null)
                        {
                            foreach (var ca in OEarnDedData)
                            {
                                OEarnStatement.Fld4 = ca.regionid;
                                OEarnStatement.Fld5 = ca.regioncode;
                                OEarnStatement.Fld6 = ca.regionname;
                                OEarnStatement.Fld7 = ca.locid;
                                OEarnStatement.Fld8 = ca.PayableDays;
                                OEarnStatement.Fld9 = locnamepaybank == true ? ca.locname + " " + ca.Paybank : ca.loccode + " " + ca.locname;                               
                                OEarnStatement.Fld10 = ca.DepartmentId;
                                OEarnStatement.Fld11 = ca.DepartmentCode;
                                OEarnStatement.Fld12 = ca.DepartmentName;
                                OEarnStatement.Fld13 = ca.GroupId;
                                OEarnStatement.Fld14 = ca.GroupCode;
                                OEarnStatement.Fld15 = ca.GroupName;
                                OEarnStatement.Fld16 = ca.jobid;
                                OEarnStatement.Fld17 = ca.Grade;
                                OEarnStatement.Fld18 = ca.SeniorityNo;

                                OEarnStatement.Fld19 = ca.JobStatusId;
                                OEarnStatement.Fld20 = ca.JobStatusName;
                                OEarnStatement.Fld21 = ca.jobcode + " " + ca.jobname;
                                OEarnStatement.Fld22 = ca.emppayrollid;
                                OEarnStatement.Fld23 = ca.empcode;
                                OEarnStatement.Fld24 = ca.empname;
                                OEarnStatement.Fld25 = ca.paymonth;
                                
                                break;


                            }
                            if (_CompCode == "AWDCC")
                            {
                                OEarnStatement.Fld86 = "Authorised Signature :";
                            }
                            else
                            {
                                OEarnStatement.Fld86 = "";
                            }


                            //GenericField100 OSalRegObj = new GenericField100();
                            //  var OEarnData = OEarnDedData.Where(e => e.saltype.ToUpper() == "EARNING").ToList();

                            //if (mHeader == false)//write header to first two lines
                            //{

                            List<CompanyPayroll> BindCompList = db.CompanyPayroll.Where(e => e.Id == CompanyPayrollId).Include(e => e.SalaryHead)
                                .Include(e => e.SalaryHead.Select(r => r.Type)).AsNoTracking().AsParallel().OrderBy(e => e.Id)
                                .ToList();

                            foreach (CompanyPayroll ca1 in BindCompList)
                            {
                                if (ca1.SalaryHead != null)
                                {
                                    foreach (SalaryHead ca in ca1.SalaryHead.Where(e => e.InPayslip == true))
                                    {
                                        if (ca.Type.LookupVal.ToUpper() == "EARNING")
                                        {


                                            switch (ca.SeqNo.ToString())
                                            {
                                                case "1":
                                                    OEarnStatement.Fld26 = ca.Code.ToString();
                                                    break;
                                                case "2":
                                                    OEarnStatement.Fld27 = ca.Code.ToString();
                                                    break;
                                                case "3":
                                                    OEarnStatement.Fld28 = ca.Code.ToString();
                                                    break;
                                                case "4":
                                                    OEarnStatement.Fld29 = ca.Code.ToString();
                                                    break;
                                                case "5":
                                                    OEarnStatement.Fld30 = ca.Code.ToString();
                                                    break;
                                                case "6":
                                                    OEarnStatement.Fld31 = ca.Code.ToString();
                                                    break;
                                                case "7":
                                                    OEarnStatement.Fld32 = ca.Code.ToString();
                                                    break;
                                                case "8":
                                                    OEarnStatement.Fld33 = ca.Code.ToString();
                                                    break;
                                                case "9":
                                                    OEarnStatement.Fld34 = ca.Code.ToString();
                                                    break;
                                                case "10":
                                                    OEarnStatement.Fld35 = ca.Code.ToString();
                                                    break;
                                                case "11":
                                                    OEarnStatement.Fld36 = ca.Code.ToString();
                                                    break;
                                                case "12":
                                                    OEarnStatement.Fld37 = ca.Code.ToString();
                                                    break;
                                                case "13":
                                                    OEarnStatement.Fld38 = ca.Code.ToString();
                                                    break;
                                                case "14":
                                                    OEarnStatement.Fld39 = ca.Code.ToString();
                                                    break;
                                                case "15":
                                                    OEarnStatement.Fld40 = ca.Code.ToString();

                                                    break;
                                            }
                                        }

                                    }
                                }

                            }
                            //   var ODedData = OEarnDedData.Where(e => e.saltype.ToUpper() == "DEDUCTION").ToList();
                            foreach (CompanyPayroll ca1 in BindCompList)
                            {
                                if (ca1.SalaryHead != null)
                                {
                                    foreach (SalaryHead ca in ca1.SalaryHead.Where(e => e.InPayslip == true))
                                    {
                                        if (ca.Type.LookupVal.ToUpper() == "DEDUCTION")
                                        {
                                            switch (ca.SeqNo.ToString())
                                            {
                                                case "1":
                                                    OEarnStatement.Fld41 = ca.Code.ToString();
                                                    break;
                                                case "2":
                                                    OEarnStatement.Fld42 = ca.Code.ToString();
                                                    break;
                                                case "3":
                                                    OEarnStatement.Fld43 = ca.Code.ToString();
                                                    break;
                                                case "4":
                                                    OEarnStatement.Fld44 = ca.Code.ToString();
                                                    break;
                                                case "5":
                                                    OEarnStatement.Fld45 = ca.Code.ToString();
                                                    break;
                                                case "6":
                                                    OEarnStatement.Fld46 = ca.Code.ToString();
                                                    break;
                                                case "7":
                                                    OEarnStatement.Fld47 = ca.Code.ToString();
                                                    break;
                                                case "8":
                                                    OEarnStatement.Fld48 = ca.Code.ToString();
                                                    break;
                                                case "9":
                                                    OEarnStatement.Fld49 = ca.Code.ToString();
                                                    break;
                                                case "10":
                                                    OEarnStatement.Fld50 = ca.Code.ToString();
                                                    break;
                                                case "11":
                                                    OEarnStatement.Fld51 = ca.Code.ToString();
                                                    break;
                                                case "12":
                                                    OEarnStatement.Fld52 = ca.Code.ToString();
                                                    break;
                                                case "13":
                                                    OEarnStatement.Fld53 = ca.Code.ToString();
                                                    break;
                                                case "14":
                                                    OEarnStatement.Fld54 = ca.Code.ToString();
                                                    break;
                                                case "15":
                                                    OEarnStatement.Fld55 = ca.Code.ToString();

                                                    break;
                                            }
                                        }
                                    }
                                }
                            }
                            //}
                            mHeader = true;
                            var OEarnAmtData = OEarnDedData.Where(e => e.saltype.ToUpper() == "EARNING").ToList();

                            double Exsepseqearn = 0;
                            double Exsepseqded = 0;

                            if (OEarnAmtData.Count() > 0)
                            {
                                OEarnStatement.Fld56 = "0";
                                OEarnStatement.Fld57 = "0";
                                OEarnStatement.Fld58 = "0";
                                OEarnStatement.Fld59 = "0";
                                OEarnStatement.Fld60 = "0";
                                OEarnStatement.Fld61 = "0";
                                OEarnStatement.Fld62 = "0";
                                OEarnStatement.Fld63 = "0";
                                OEarnStatement.Fld64 = "0";
                                OEarnStatement.Fld65 = "0";
                                OEarnStatement.Fld66 = "0";
                                OEarnStatement.Fld67 = "0";
                                OEarnStatement.Fld68 = "0";
                                OEarnStatement.Fld69 = "0";
                                OEarnStatement.Fld70 = "0";

                                foreach (var ca in OEarnAmtData)
                                {
                                    if (Convert.ToInt32(ca.salheadseqno) != 0 && Convert.ToInt32(ca.salheadseqno) > 15)
                                    {
                                        Exsepseqearn = Exsepseqearn + ca.amount;
                                    }


                                    switch (ca.salheadseqno)
                                    {
                                        case "1":
                                            OEarnStatement.Fld56 = ca.amount.ToString();
                                            break;
                                        case "2":
                                            OEarnStatement.Fld57 = ca.amount.ToString();
                                            break;
                                        case "3":
                                            OEarnStatement.Fld58 = ca.amount.ToString();
                                            break;
                                        case "4":
                                            OEarnStatement.Fld59 = ca.amount.ToString();
                                            break;
                                        case "5":
                                            OEarnStatement.Fld60 = ca.amount.ToString();
                                            break;
                                        case "6":
                                            OEarnStatement.Fld61 = ca.amount.ToString();
                                            break;
                                        case "7":
                                            OEarnStatement.Fld62 = ca.amount.ToString();
                                            break;
                                        case "8":
                                            OEarnStatement.Fld63 = ca.amount.ToString();
                                            break;
                                        case "9":
                                            OEarnStatement.Fld64 = ca.amount.ToString();
                                            break;
                                        case "10":
                                            OEarnStatement.Fld65 = ca.amount.ToString();
                                            break;
                                        case "11":
                                            OEarnStatement.Fld66 = ca.amount.ToString();
                                            break;
                                        case "12":
                                            OEarnStatement.Fld67 = ca.amount.ToString();
                                            break;
                                        case "13":
                                            OEarnStatement.Fld68 = ca.amount.ToString();
                                            break;
                                        case "14":
                                            OEarnStatement.Fld69 = ca.amount.ToString();
                                            break;
                                        case "15":
                                            OEarnStatement.Fld70 = ca.amount.ToString();

                                            break;
                                    }
                                }
                                OEarnStatement.Fld2 = Exsepseqearn.ToString();
                            }
                            var ODedAmtData = OEarnDedData.Where(e => e.saltype.ToUpper() == "DEDUCTION").ToList();
                            if (ODedAmtData.Count() > 0)
                            {
                                OEarnStatement.Fld71 = "0";
                                OEarnStatement.Fld72 = "0";
                                OEarnStatement.Fld73 = "0";
                                OEarnStatement.Fld74 = "0";
                                OEarnStatement.Fld75 = "0";
                                OEarnStatement.Fld76 = "0";
                                OEarnStatement.Fld77 = "0";
                                OEarnStatement.Fld78 = "0";
                                OEarnStatement.Fld79 = "0";
                                OEarnStatement.Fld80 = "0";
                                OEarnStatement.Fld81 = "0";
                                OEarnStatement.Fld82 = "0";
                                OEarnStatement.Fld83 = "0";
                                OEarnStatement.Fld84 = "0";
                                OEarnStatement.Fld85 = "0";
                                foreach (var ca in ODedAmtData)
                                {
                                    if (Convert.ToInt32(ca.salheadseqno) != 0 && Convert.ToInt32(ca.salheadseqno) > 15)
                                    {
                                        Exsepseqded = Exsepseqded + ca.amount;
                                    }


                                    switch (ca.salheadseqno)
                                    {
                                        case "1":
                                            OEarnStatement.Fld71 = ca.amount.ToString();
                                            break;
                                        case "2":
                                            OEarnStatement.Fld72 = ca.amount.ToString();
                                            break;
                                        case "3":
                                            OEarnStatement.Fld73 = ca.amount.ToString();
                                            break;
                                        case "4":
                                            OEarnStatement.Fld74 = ca.amount.ToString();
                                            break;
                                        case "5":
                                            OEarnStatement.Fld75 = ca.amount.ToString();
                                            break;
                                        case "6":
                                            OEarnStatement.Fld76 = ca.amount.ToString();
                                            break;
                                        case "7":
                                            OEarnStatement.Fld77 = ca.amount.ToString();
                                            break;
                                        case "8":
                                            OEarnStatement.Fld78 = ca.amount.ToString();
                                            break;
                                        case "9":
                                            OEarnStatement.Fld79 = ca.amount.ToString();
                                            break;
                                        case "10":
                                            OEarnStatement.Fld80 = ca.amount.ToString();
                                            break;
                                        case "11":
                                            OEarnStatement.Fld81 = ca.amount.ToString();
                                            break;
                                        case "12":
                                            OEarnStatement.Fld82 = ca.amount.ToString();
                                            break;
                                        case "13":
                                            OEarnStatement.Fld83 = ca.amount.ToString();
                                            break;
                                        case "14":
                                            OEarnStatement.Fld84 = ca.amount.ToString();
                                            break;
                                        case "15":
                                            OEarnStatement.Fld85 = ca.amount.ToString();

                                            break;

                                    }
                                    if (comp)
                                    {
                                        OEarnStatement.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                    }
                                    if (div)
                                    {
                                        OEarnStatement.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                    }
                                    if (loca)
                                    {
                                        if (_CompCode == "AWDCC")
                                        {
                                            if (ca.loccode.Length == 6)
                                            {
                                                OEarnStatement.Fld97 = GeoDataInd.GeoStruct_Location_Code + " " + GeoDataInd.GeoStruct_Location_Name;
                                            }
                                            else if (ca.loccode.Length == 5)
                                            {
                                                OEarnStatement.Fld97 = "0" + GeoDataInd.GeoStruct_Location_Code + " " + GeoDataInd.GeoStruct_Location_Name;
                                            }
                                            else if (ca.loccode.Length == 4)
                                            {
                                                OEarnStatement.Fld97 = "00" + GeoDataInd.GeoStruct_Location_Code + " " + GeoDataInd.GeoStruct_Location_Name;
                                            }
                                            else if (ca.loccode.Length == 3)
                                            {
                                                OEarnStatement.Fld97 = "000" + GeoDataInd.GeoStruct_Location_Code + " " + GeoDataInd.GeoStruct_Location_Name;
                                            }
                                            else if (ca.loccode.Length == 2)
                                            {
                                                OEarnStatement.Fld97 = "0000" + GeoDataInd.GeoStruct_Location_Code + " " + GeoDataInd.GeoStruct_Location_Name;
                                            }
                                            else if (ca.loccode.Length == 1)
                                            {
                                                OEarnStatement.Fld97 = "00000" + GeoDataInd.GeoStruct_Location_Code + " " + GeoDataInd.GeoStruct_Location_Name;
                                            }
                                        }
                                        else
                                        {
                                            OEarnStatement.Fld97 = GeoDataInd.GeoStruct_Location_Code + " " + GeoDataInd.GeoStruct_Location_Name;
                                        }

                                    }

                                                                     
                                    if (dept)
                                    {
                                        OEarnStatement.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                    }
                                    if (grp)
                                    {
                                        OEarnStatement.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                    }
                                    if (unit)
                                    {
                                        OEarnStatement.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                    }
                                    if (grade)
                                    {
                                        OEarnStatement.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                    }
                                    if (lvl)
                                    {
                                        OEarnStatement.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                    }
                                    if (jobstat)
                                    {
                                        OEarnStatement.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                    }
                                    if (job)
                                    {
                                        OEarnStatement.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                    }
                                    if (jobpos)
                                    {
                                        OEarnStatement.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                    }
                                    if (emp)
                                    {
                                        OEarnStatement.Fld88 = ca.empcode.ToString();
                                    }
                                    if (Empstatus)
                                    {
                                        OEarnStatement.Fld87 = GeoDataInd.PayStruct_JobStatus_EmpStatus; //ca.EmpStatusName != null ? ca.EmpStatusName.ToString() : null;

                                    }
                                    //if (SeniorityNo)
                                    //{
                                    //    OEarnStatement.Fld18 = ca.SeniorityNo; 
                                    //}
                                    if (paymentbank)
                                    {
                                        OEarnStatement.Fld1 = db.Employee.Where(e => e.EmpCode == OEmpsingle.Employee.EmpCode).Select(a => a.EmpOffInfo.Bank.Name).AsNoTracking().FirstOrDefault() != null ? db.Employee.Where(e => e.EmpCode == OEmpsingle.Employee.EmpCode).Select(a => a.EmpOffInfo.Bank.Name).AsNoTracking().FirstOrDefault() : null;
                                    }

                                }

                                OEarnStatement.Fld3 = Exsepseqded.ToString();
                            }
                            //}
                            OEmpSalReg.Add(OEarnStatement);
                        }

                    }

                    if (LOCCODE == true && DEPARTMENTCODE == true && GRADECODE == true && DESIGNATIONCODE == true && EMPCODE == true)
                    {
                        OEmpSalReg = OEmpSalReg.OrderBy(e => e.Fld9).ThenBy(e => e.Fld11).ThenBy(e => e.Fld17).ThenBy(e => e.Fld21).ThenBy(e => e.Fld23).ToList();
                        if (OEmpSalReg.Count > 0 && OEmpSalReg != null)
                        {
                            
                            return OEmpSalReg.Distinct().ToList();

                        }
                    }
                    if (LOCCODE == true && DEPARTMENTCODE == true && GRADECODE == true && DESIGNATIONCODE == true)
                    {
                        OEmpSalReg = OEmpSalReg.OrderBy(e => e.Fld9).ThenBy(e => e.Fld11).ThenBy(e => e.Fld17).ThenBy(e => e.Fld21).ToList();
                        if (OEmpSalReg.Count > 0 && OEmpSalReg != null)
                        {
                           
                            return OEmpSalReg.Distinct().ToList();

                        }
                    }
                    if (LOCCODE == true && DEPARTMENTCODE == true && GRADECODE == true && EMPCODE == true)
                    {
                        OEmpSalReg = OEmpSalReg.OrderBy(e => e.Fld9).ThenBy(e => e.Fld11).ThenBy(e => e.Fld17).ThenBy(e => e.Fld23).ToList();
                        if (OEmpSalReg.Count > 0 && OEmpSalReg != null)
                        {
                            
                            return OEmpSalReg.Distinct().ToList();

                        }
                    }
                    if (LOCCODE == true && DEPARTMENTCODE == true && GRADECODE == true && DESIGNATIONCODE == true)
                    {
                        OEmpSalReg = OEmpSalReg.OrderBy(e => e.Fld9).ThenBy(e => e.Fld11).ThenBy(e => e.Fld17).ThenBy(e => e.Fld21).ToList();
                        if (OEmpSalReg.Count > 0 && OEmpSalReg != null)
                        {
                             
                            return OEmpSalReg.Distinct().ToList();

                        }
                    }
                    if (DEPARTMENTCODE == true && GRADECODE == true && DESIGNATIONCODE == true && EMPCODE == true)
                    {
                        OEmpSalReg = OEmpSalReg.OrderBy(e => e.Fld11).ThenBy(e => e.Fld17).ThenBy(e => e.Fld21).ThenBy(e => e.Fld23).ToList();
                        if (OEmpSalReg.Count > 0 && OEmpSalReg != null)
                        {
                             
                            return OEmpSalReg.Distinct().ToList();

                        }
                    }
                    if (DEPARTMENTCODE == true && GRADECODE == true && DESIGNATIONCODE == true)
                    {
                        OEmpSalReg = OEmpSalReg.OrderBy(e => e.Fld11).ThenBy(e => e.Fld17).ThenBy(e => e.Fld21).ToList();
                        if (OEmpSalReg.Count > 0 && OEmpSalReg != null)
                        {
                             
                            return OEmpSalReg.Distinct().ToList();

                        }
                    }
                    if (GRADECODE == true && DESIGNATIONCODE == true && EMPCODE == true)
                    {
                        OEmpSalReg = OEmpSalReg.OrderBy(e => e.Fld17).ThenBy(e => e.Fld21).ThenBy(e => e.Fld23).ToList();
                        if (OEmpSalReg.Count > 0 && OEmpSalReg != null)
                        {
                             
                            return OEmpSalReg.Distinct().ToList();

                        }
                    }
                    if (LOCCODE == true && DEPARTMENTCODE == true && GRADECODE == true)
                    {
                        OEmpSalReg = OEmpSalReg.OrderBy(e => e.Fld9).ThenBy(e => e.Fld11).ThenBy(e => e.Fld17).ToList();
                        if (OEmpSalReg.Count > 0 && OEmpSalReg != null)
                        {
                            
                            return OEmpSalReg.Distinct().ToList();

                        }
                    }
                    if (LOCCODE == true && DEPARTMENTCODE == true && DESIGNATIONCODE == true)
                    {
                        OEmpSalReg = OEmpSalReg.OrderBy(e => e.Fld9).ThenBy(e => e.Fld11).ThenBy(e => e.Fld21).ToList();
                        if (OEmpSalReg.Count > 0 && OEmpSalReg != null)
                        {
                             
                            return OEmpSalReg.Distinct().ToList();

                        }
                    }
                    if (LOCCODE == true && DEPARTMENTCODE == true && EMPCODE == true)
                    {
                        OEmpSalReg = OEmpSalReg.OrderBy(e => e.Fld9).ThenBy(e => e.Fld11).ThenBy(e => e.Fld23).ToList();
                        if (OEmpSalReg.Count > 0 && OEmpSalReg != null)
                        {
                            
                            return OEmpSalReg.Distinct().ToList();

                        }
                    }
                    if (LOCCODE == true && GRADECODE == true && DESIGNATIONCODE == true)
                    {
                        OEmpSalReg = OEmpSalReg.OrderBy(e => e.Fld9).ThenBy(e => e.Fld17).ThenBy(e => e.Fld21).ToList();
                        if (OEmpSalReg.Count > 0 && OEmpSalReg != null)
                        {
                             
                            return OEmpSalReg.Distinct().ToList();

                        }
                    }
                    if (LOCCODE == true && GRADECODE == true && EMPCODE == true)
                    {
                        OEmpSalReg = OEmpSalReg.OrderBy(e => e.Fld9).ThenBy(e => e.Fld17).ThenBy(e => e.Fld23).ToList();
                        if (OEmpSalReg.Count > 0 && OEmpSalReg != null)
                        {
                            
                            return OEmpSalReg.Distinct().ToList();

                        }
                    }
                    if (LOCCODE == true && DESIGNATIONCODE == true)
                    {
                        OEmpSalReg = OEmpSalReg.OrderBy(e => e.Fld9).ThenBy(e => e.Fld21).ToList();
                        if (OEmpSalReg.Count > 0 && OEmpSalReg != null)
                        {
                             
                            return OEmpSalReg.Distinct().ToList();

                        }
                    }
                    if (DEPARTMENTCODE == true && EMPCODE == true)
                    {
                        OEmpSalReg = OEmpSalReg.OrderBy(e => e.Fld11).ThenBy(e => e.Fld23).ToList();
                        if (OEmpSalReg.Count > 0 && OEmpSalReg != null)
                        {
                             
                            return OEmpSalReg.Distinct().ToList();

                        }
                    }
                    if (DEPARTMENTCODE == true && GRADECODE == true)
                    {
                        OEmpSalReg = OEmpSalReg.OrderBy(e => e.Fld11).ThenBy(e => e.Fld17).ToList();
                        if (OEmpSalReg.Count > 0 && OEmpSalReg != null)
                        {
                             
                            return OEmpSalReg.Distinct().ToList();

                        }
                    }
                    if (DEPARTMENTCODE == true && DESIGNATIONCODE == true)
                    {
                        OEmpSalReg = OEmpSalReg.OrderBy(e => e.Fld11).ThenBy(e => e.Fld21).ToList();
                        if (OEmpSalReg.Count > 0 && OEmpSalReg != null)
                        {
                             
                            return OEmpSalReg.Distinct().ToList();

                        }
                    }
                    if (LOCCODE == true && EMPCODE == true)
                    {
                        OEmpSalReg = OEmpSalReg.OrderBy(e => e.Fld9).ThenBy(e => e.Fld23).ToList();
                        if (OEmpSalReg.Count > 0 && OEmpSalReg != null)
                        {
                             
                            return OEmpSalReg.Distinct().ToList();

                        }
                    }
                    if (LOCCODE == true && DESIGNATIONCODE == true)
                    {
                        OEmpSalReg = OEmpSalReg.OrderBy(e => e.Fld9).ThenBy(e => e.Fld21).ToList();
                        if (OEmpSalReg.Count > 0 && OEmpSalReg != null)
                        {
                             
                            return OEmpSalReg.Distinct().ToList();

                        }
                    }
                    if (LOCCODE == true && EMPCODE == true)
                    {
                        OEmpSalReg = OEmpSalReg.OrderBy(e => e.Fld9).ThenBy(e => e.Fld23).ToList();
                        if (OEmpSalReg.Count > 0 && OEmpSalReg != null)
                        {
                            
                            return OEmpSalReg.Distinct().ToList();

                        }
                    }
                    if (LOCCODE == true && GRADECODE == true)
                    {
                        OEmpSalReg = OEmpSalReg.OrderBy(e => e.Fld9).ThenBy(e => e.Fld17).ToList();
                        if (OEmpSalReg.Count > 0 && OEmpSalReg != null)
                        {
                            
                            return OEmpSalReg.Distinct().ToList();

                        }
                    }
                    if (LOCCODE == true && DEPARTMENTCODE == true)
                    {
                        OEmpSalReg = OEmpSalReg.OrderBy(e => e.Fld9).ThenBy(e => e.Fld11).ToList();
                        if (OEmpSalReg.Count > 0 && OEmpSalReg != null)
                        {
                             
                            return OEmpSalReg.Distinct().ToList();

                        }
                    }
                    if (GRADECODE == true && DESIGNATIONCODE == true)
                    {
                        OEmpSalReg = OEmpSalReg.OrderBy(e => e.Fld17).ThenBy(e => e.Fld21).ToList();
                        if (OEmpSalReg.Count > 0 && OEmpSalReg != null)
                        {
                             
                            return OEmpSalReg.Distinct().ToList();

                        }
                    }
                    if (GRADECODE == true && EMPCODE == true)
                    {
                        OEmpSalReg = OEmpSalReg.OrderBy(e => e.Fld17).ThenBy(e => e.Fld23).ToList();
                        if (OEmpSalReg.Count > 0 && OEmpSalReg != null)
                        {
                             
                            return OEmpSalReg.Distinct().ToList();

                        }
                    }
                    if (DESIGNATIONCODE == true && EMPCODE == true)
                    {
                        OEmpSalReg = OEmpSalReg.OrderBy(e => e.Fld21).ThenBy(e => e.Fld23).ToList();
                        if (OEmpSalReg.Count > 0 && OEmpSalReg != null)
                        {
                            
                            return OEmpSalReg.Distinct().ToList();

                        }
                    }



                    if (LOCCODE == true)
                    {
                        OEmpSalReg = OEmpSalReg.OrderBy(e => e.Fld9).ToList();
                    }
                    if (DEPARTMENTCODE == true)
                    {
                        OEmpSalReg = OEmpSalReg.OrderBy(e => e.Fld11).ToList();
                    }
                    if (GRADECODE == true)
                    {
                        OEmpSalReg = OEmpSalReg.OrderBy(e => e.Fld17).ToList();
                        //OEmpSalReg = OEmpSalReg.OrderBy(e => e.Fld17).ToList();
                    }
                    if (DESIGNATIONCODE == true)
                    {
                        OEmpSalReg = OEmpSalReg.OrderBy(e => e.Fld21).ToList();
                    }

                    if (EMPCODE == true)
                    {
                        OEmpSalReg = OEmpSalReg.OrderBy(e => e.Fld23).ToList();
                    }

                 

                    if (OEmpSalReg.Count > 0 && OEmpSalReg != null)
                    {
                        //db.GenericField100.AddRange(OEmpSalReg.Distinct());
                        //db.SaveChanges();
                        return OEmpSalReg.Distinct().ToList();
                   
                    }
                   
                    else
                    {  
                        return null;
                        
                    }
                   
                    
                }

            }
        }

        public static List<GenericField100>
           GenerateCoreReport(int CompanyPayrollId, List<int> EmpPayrollIdList, List<string> mPayMonth, string mObjectName, int CompanyId)
        {
            List<GenericField100> OGenericCoreStatement = new List<GenericField100>();
            using (DataBaseContext db = new DataBaseContext())
            {
                switch (mObjectName)
                {

                    case "COMPANYMASTER":
                        var OGeoCompData = db.Company
                        .Include(e => e.Address.FullAddress)
                        .Include(e => e.ContactDetails.FullContactDetails).AsNoTracking()
                        .Where(d => d.Id == CompanyId).AsParallel().SingleOrDefault();

                        if (OGeoCompData == null)
                        {
                            return null;
                        }
                        else
                        {
                            GenericField100 OGenericGeoObjStatement = new GenericField100()
                            {
                                Fld1 = OGeoCompData.Id.ToString(),
                                Fld2 = OGeoCompData.Code,
                                Fld3 = OGeoCompData.Name,
                                Fld4 = OGeoCompData.Address == null ? "" : OGeoCompData.Address.FullAddress,
                                Fld5 = OGeoCompData.ContactDetails == null ? "" : OGeoCompData.ContactDetails.FullContactDetails,
                                Fld6 = OGeoCompData.CINNo,
                                Fld7 = OGeoCompData.CSTNo,
                                Fld8 = OGeoCompData.ESICNo,
                                Fld9 = OGeoCompData.EstablishmentNo,
                                Fld10 = OGeoCompData.LBTNO,
                                Fld11 = OGeoCompData.PANNo,
                                Fld12 = OGeoCompData.PTECNO,
                                Fld13 = OGeoCompData.PTRCNO,
                                Fld14 = OGeoCompData.RegistrationNo,
                                Fld15 = OGeoCompData.RegistrationDate.ToString(),
                                Fld16 = OGeoCompData.ServiceTaxNo,
                                Fld17 = OGeoCompData.TANNo,
                                Fld18 = OGeoCompData.VATNo,
                            };
                            OGenericCoreStatement.Add(OGenericGeoObjStatement);
                            return OGenericCoreStatement;
                        }

                        break;

                    case "LOCATIONMASTER":
                        var OGeoLocData = db.Company
                        .Include(e => e.Location)
                        .Include(e => e.Location.Select(r => r.Address))
                        .Include(e => e.Location.Select(r => r.ContactDetails))
                        .Include(e => e.Location.Select(r => r.BusinessCategory))
                        .Include(e => e.Location.Select(r => r.Incharge))
                        .Include(e => e.Location.Select(r => r.Incharge.EmpName))
                        .Include(e => e.Location.Select(r => r.Incharge.CorContact))
                        .Include(e => e.Location.Select(r => r.LocationObj))
                        .Include(e => e.Location.Select(r => r.Type))
                        .Where(d => d.Id == CompanyId).AsNoTracking().SingleOrDefault();
                        if (OGeoLocData.Location == null || OGeoLocData.Location.Count == 0)
                            return null;
                        else
                        {
                            foreach (var ca in OGeoLocData.Location)
                            {
                                GenericField100 OGenericGeoObjStatement = new GenericField100()
                                {
                                    Fld1 = ca.Id.ToString(),
                                    Fld2 = ca.LocationObj == null ? "" : ca.LocationObj.LocCode,
                                    Fld3 = ca.LocationObj == null ? "" : ca.LocationObj.LocDesc,
                                    Fld4 = ca.OpeningDate.ToString(),
                                    Fld5 = ca.Type == null ? "" : ca.Type.LookupVal.ToUpper(),
                                    Fld6 = ca.BusinessCategory == null ? "" : ca.BusinessCategory.LookupVal.ToUpper(),
                                    Fld7 = ca.Address == null ? "" : ca.Address.FullAddress,
                                    Fld8 = ca.ContactDetails == null ? "" : ca.ContactDetails.FullContactDetails,
                                    Fld9 = ca.Incharge == null ? "" : ca.Incharge.EmpCode,
                                    Fld10 = ca.Incharge == null ? "" : ca.Incharge.EmpName.FullNameFML,
                                    Fld11 = ca.Incharge == null ? "" : ca.Incharge.CorContact.FullContactDetails,
                                    Fld12 = ca.WeeklyOffCalendar == null ? "" : ca.WeeklyOffCalendar.LastOrDefault().Id.ToString(),
                                    Fld13 = ca.HolidayCalendar == null ? "" : ca.HolidayCalendar.LastOrDefault().Id.ToString(),

                                };
                                //write data to generic class
                                OGenericCoreStatement.Add(OGenericGeoObjStatement);

                            }
                            return OGenericCoreStatement;
                        }
                        break;
                    case "DIVISIONMASTER":
                        var OGeoDivData = db.Company
                        .Include(e => e.Divisions)
                        .Include(e => e.Divisions.Select(r => r.Address))
                        .Include(e => e.Divisions.Select(r => r.ContactDetails))
                        .Include(e => e.Divisions.Select(r => r.Incharge))
                        .Include(e => e.Divisions.Select(r => r.Incharge.EmpName))
                        .Include(e => e.Divisions.Select(r => r.Incharge.CorContact))
                        .Include(e => e.Divisions.Select(r => r.Incharge.CorAddr))
                        .Include(e => e.Divisions.Select(r => r.Type)).AsNoTracking()
                        .Where(d => d.Id == CompanyId).AsNoTracking().SingleOrDefault();
                        if (OGeoDivData == null)
                            return null;
                        else
                        {
                            if (OGeoDivData.Divisions == null || OGeoDivData.Divisions.Count() == 0)
                                return null;
                            else
                            {
                                foreach (var ca in OGeoDivData.Divisions)
                                {
                                    GenericField100 OGenericGeoObjStatement = new GenericField100()
                                    {
                                        Fld1 = ca.Id.ToString(),
                                        Fld2 = ca.Code,
                                        Fld3 = ca.Name,
                                        Fld4 = ca.OpeningDate.Value.ToShortDateString(),
                                        Fld5 = ca.Type == null ? "" : ca.Type.LookupVal.ToUpper(),
                                        Fld6 = ca.Address == null ? "" : ca.Address.FullAddress,
                                        Fld7 = ca.ContactDetails == null ? "" : ca.ContactDetails.FullContactDetails,
                                        Fld8 = ca.Incharge == null ? "" : ca.Incharge.EmpCode,
                                        Fld9 = ca.Incharge == null ? "" : ca.Incharge.EmpName.FullNameFML,
                                        Fld10 = ca.Incharge == null ? "" : ca.Incharge.CorContact.FullContactDetails,
                                        Fld11 = ca.Incharge == null ? "" : ca.Incharge.CorAddr.FullAddress,

                                    };
                                    //write data to generic class
                                    OGenericCoreStatement.Add(OGenericGeoObjStatement);
                                }
                                return OGenericCoreStatement;
                            }
                        }
                        break;

                    case "DEPARTMENTMASTER":
                        var OGeoDeptData = db.Company
                        .Include(e => e.Department)
                        .Include(e => e.Department.Select(r => r.Address))
                        .Include(e => e.Department.Select(r => r.ContactDetails))
                        .Include(e => e.Department.Select(r => r.Incharge))
                        .Include(e => e.Department.Select(r => r.Incharge.EmpName))
                        .Include(e => e.Department.Select(r => r.Type))
                        .Include(e => e.Department.Select(r => r.DepartmentObj))
                        .Include(e => e.Department.Select(r => r.Incharge.CorContact))
                        .Include(e => e.Department.Select(r => r.Incharge.CorAddr)).AsNoTracking()

                        .Where(d => d.Id == CompanyId).AsParallel().SingleOrDefault();
                        if (OGeoDeptData.Department == null || OGeoDeptData.Department.Count() == 0)
                        {
                            return null;
                        }

                        else
                        {
                            foreach (var ca in OGeoDeptData.Department)
                            {
                                GenericField100 OGenericGeoObjStatement = new GenericField100()
                                {
                                    Fld1 = ca.Id.ToString(),
                                    Fld2 = ca.DepartmentObj == null ? "" : ca.DepartmentObj.DeptCode,
                                    Fld3 = ca.DepartmentObj == null ? "" : ca.DepartmentObj.DeptDesc,
                                    Fld4 = ca.OpeningDate.ToString(),
                                    Fld5 = ca.Type == null ? "" : ca.Type.LookupVal.ToUpper(),
                                    Fld6 = ca.Address == null ? "" : ca.Address.FullAddress,
                                    Fld7 = ca.ContactDetails == null ? "" : ca.ContactDetails.FullContactDetails,
                                    Fld8 = ca.Incharge == null ? "" : ca.Incharge.EmpCode,
                                    Fld9 = ca.Incharge == null ? "" : ca.Incharge.EmpName.FullNameFML,
                                    Fld10 = ca.Incharge == null ? "" : ca.Incharge.CorContact.FullContactDetails,
                                    Fld11 = ca.Incharge == null ? "" : ca.Incharge.CorAddr.FullAddress,

                                };
                                OGenericCoreStatement.Add(OGenericGeoObjStatement);


                                //write data to generic class

                            }
                            return OGenericCoreStatement;

                        }
                        break;
                    case "GROUPRMASTER":
                        var OGeoGrpData = db.Company
                        .Include(e => e.Group)
                        .Include(e => e.Group.Select(r => r.ContactDetails))
                        .Include(e => e.Group.Select(r => r.Incharge))
                        .Include(e => e.Group.Select(r => r.Incharge.EmpName))
                        .Include(e => e.Group.Select(r => r.Incharge.CorAddr))
                        .Include(e => e.Group.Select(r => r.Incharge.CorContact))
                        .Include(e => e.Group.Select(r => r.Type)).AsNoTracking()
                        .Where(d => d.Id == CompanyId).AsParallel().SingleOrDefault();
                        if (OGeoGrpData.Group == null || OGeoGrpData.Group.Count() == 0)
                        {
                            return null;
                        }

                        else
                        {
                            foreach (var ca in OGeoGrpData.Group)
                            {
                                GenericField100 OGenericGeoObjStatement = new GenericField100()
                                {
                                    Fld1 = ca.Id.ToString(),
                                    Fld2 = ca.Code,
                                    Fld3 = ca.Name,
                                    Fld4 = ca.OpeningDate.Value.ToShortDateString(),
                                    Fld5 = ca.Type == null ? "" : ca.Type.LookupVal.ToUpper(),
                                    Fld6 = ca.ContactDetails == null ? "" : ca.ContactDetails.FullContactDetails,
                                    Fld7 = ca.Incharge == null ? "" : ca.Incharge.EmpCode,
                                    Fld8 = ca.Incharge == null ? "" : ca.Incharge.EmpName.FullNameFML,
                                    Fld9 = ca.Incharge == null ? "" : ca.Incharge.CorContact.FullContactDetails,
                                    Fld10 = ca.Incharge == null ? "" : ca.Incharge.CorAddr.FullAddress,
                                };
                                //write data to generic class
                                OGenericCoreStatement.Add(OGenericGeoObjStatement);
                            }

                            return OGenericCoreStatement;

                        }
                        break;
                    default:
                        return null;
                        break;
                }
            }
        }

        public static List<GenericField100> GenerateLoginMaster(string mObjectName, int CompanyId, List<int> EmpId, DateTime pFromDate, DateTime pToDate, List<string> forithead)
        {
            List<GenericField100> OGenericLoginmasterStatement = new List<GenericField100>();
            using (DataBaseContext db = new DataBaseContext())
            {
                switch (mObjectName)
                {
                    case "RESIGNATIONREQUEST":
                        var EmployeeExitResignation = db.EmployeeExit
                               .Include(e => e.Employee)
                               .Include(e => e.Employee.EmpName)
                               .Include(e => e.SeperationProcessT)
                               .Include(e => e.SeperationProcessT.ResignationRequest)
                               .Where(a => EmpId.Contains(a.Employee.Id)).AsNoTracking().AsParallel().ToList();

                        if (EmployeeExitResignation == null || EmployeeExitResignation.Count() == 0)
                        {
                            return null;
                        }
                        else
                        {
                            var emp = false;
                            var dept = false;
                            var loca = false;
                            var comp = false;
                            var grp = false;
                            var unit = false;
                            var div = false;
                            var regn = false;
                            var grade = false;
                            var lvl = false;
                            var jobstat = false;
                            var job = false;
                            var jobpos = false;

                            var vc = db.LookupValue.Where(a => forithead.Contains(a.Id.ToString())).ToList();

                            foreach (var item in vc)
                            {
                                //if (item.LookupVal.ToUpper() == "MONTH")
                                //{
                                //    month = true;
                                //}
                                if (item.LookupVal.ToUpper() == "LOCATION")
                                {

                                    loca = true;
                                }
                                if (item.LookupVal.ToUpper() == "EMPLOYEE")
                                {
                                    emp = true;
                                }
                                if (item.LookupVal.ToUpper() == "DEPARTMENT")
                                {
                                    dept = true;
                                }
                                if (item.LookupVal.ToUpper() == "COMPANY")
                                {
                                    comp = true;
                                }
                                if (item.LookupVal.ToUpper() == "GROUP")
                                {
                                    grp = true;
                                }
                                if (item.LookupVal.ToUpper() == "UNIT")
                                {
                                    unit = true;
                                }
                                if (item.LookupVal.ToUpper() == "DIVISION")
                                {
                                    div = true;
                                }
                                if (item.LookupVal.ToUpper() == "REGION")
                                {
                                    regn = true;
                                }
                                if (item.LookupVal.ToUpper() == "GRADE")
                                {
                                    grade = true;
                                }
                                if (item.LookupVal.ToUpper() == "LEVEL")
                                {
                                    lvl = true;
                                }
                                if (item.LookupVal.ToUpper() == "JOBSTATUS")
                                {
                                    jobstat = true;
                                }

                                if (item.LookupVal.ToUpper() == "JOB")
                                {
                                    job = true;
                                }
                                if (item.LookupVal.ToUpper() == "JOBPOSITION")
                                {
                                    jobpos = true;
                                }
                            }

                            Utility.GetOrganizationDataClass GeoDataInd = new Utility.GetOrganizationDataClass();

                            foreach (var ca in EmployeeExitResignation.Where(e => e.SeperationProcessT.ResignationRequest.ResignDate >= pFromDate && e.SeperationProcessT.ResignationRequest.ResignDate <= pToDate))
                            {

                                int? geoid = ca.Employee.GeoStruct_Id;

                                int? payid = ca.Employee.PayStruct_Id;

                                int? funid = ca.Employee.FuncStruct_Id;

                                GeoStruct geostruct = db.GeoStruct.Find(geoid);

                                PayStruct paystruct = db.PayStruct.Find(payid);

                                FuncStruct funstruct = db.FuncStruct.Find(funid);

                                GeoDataInd = ReportRDLCObjectClass.GetOrganizationDataInd(geostruct, paystruct, funstruct, 0);

                                GenericField100 oGenericField100 = new GenericField100()
                                {
                                    Fld1 = ca.Employee.EmpCode,
                                    Fld2 = ca.Employee.EmpName != null ? ca.Employee.EmpName.FullNameFML.ToString() : null,
                                    Fld3 = ca.SeperationProcessT != null && ca.SeperationProcessT.ResignationRequest != null ? ca.SeperationProcessT.ResignationRequest.ResignDate.ToShortDateString() : "",
                                    Fld4 = ca.SeperationProcessT != null && ca.SeperationProcessT.ResignationRequest != null ? ca.SeperationProcessT.ResignationRequest.LastWorkingDateByEmp.ToShortDateString() : "",
                                    Fld5 = ca.SeperationProcessT != null && ca.SeperationProcessT.ResignationRequest != null ? ca.SeperationProcessT.ResignationRequest.LastWorkingDateByPolicy.ToShortDateString() : "",
                                    Fld6 = ca.SeperationProcessT != null && ca.SeperationProcessT.ResignationRequest != null ? ca.SeperationProcessT.ResignationRequest.IsRequestForNoticePeriodWaiveOff.ToString() : "",
                                    Fld7 = ca.SeperationProcessT != null && ca.SeperationProcessT.ResignationRequest != null ? ca.SeperationProcessT.ResignationRequest.IsReadyForNoticePeriodPay.ToString() : "",
                                    Fld8 = ca.SeperationProcessT != null && ca.SeperationProcessT.ResignationRequest != null ? ca.SeperationProcessT.ResignationRequest.ReasonOfLeaving : "",
                                    Fld9 = ca.SeperationProcessT != null && ca.SeperationProcessT.ResignationRequest != null ? ca.SeperationProcessT.ResignationRequest.Narration : "",
                                    Fld10 = ca.SeperationProcessT != null && ca.SeperationProcessT.ResignationRequest != null ? ca.SeperationProcessT.ResignationRequest.IsRequestAck.ToString() : "",
                                    Fld11 = ca.SeperationProcessT != null && ca.SeperationProcessT.ResignationRequest != null ? ca.SeperationProcessT.ResignationRequest.RequestAckDate.Value.ToShortDateString() : "",
                                };

                                if (comp)
                                {
                                    oGenericField100.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                }
                                if (div)
                                {
                                    oGenericField100.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                }
                                if (loca)
                                {
                                    oGenericField100.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                }
                                if (dept)
                                {
                                    oGenericField100.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                }
                                if (grp)
                                {
                                    oGenericField100.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                }
                                if (unit)
                                {
                                    oGenericField100.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                }
                                if (grade)
                                {
                                    oGenericField100.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                }
                                if (lvl)
                                {
                                    oGenericField100.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                }
                                if (jobstat)
                                {
                                    oGenericField100.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                }
                                if (job)
                                {
                                    oGenericField100.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                }
                                if (jobpos)
                                {
                                    oGenericField100.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                }
                                if (emp)
                                {
                                    oGenericField100.Fld88 = ca.Employee.EmpName.FullNameFML;
                                }

                                OGenericLoginmasterStatement.Add(oGenericField100);
                            }


                            return OGenericLoginmasterStatement;
                        }

                        break;

                    case "NOTICEPERIODPROCESS":
                        var EmployeeExitNotice = db.EmployeeExit
                               .Include(e => e.Employee)
                               .Include(e => e.Employee.EmpName)
                               .Include(e => e.SeperationProcessT)
                               .Include(e => e.SeperationProcessT.ResignationRequest)
                               .Include(e => e.SeperationProcessT.NoticePeriodProcess)
                               .Include(e => e.SeperationProcessT.NoticePeriodProcess.NoticePeriod_Object)
                               .Where(a => EmpId.Contains(a.Employee.Id)).AsNoTracking().AsParallel().ToList();

                        if (EmployeeExitNotice == null || EmployeeExitNotice.Count() == 0)
                        {
                            return null;
                        }
                        else
                        {
                            var emp = false;
                            var dept = false;
                            var loca = false;
                            var comp = false;
                            var grp = false;
                            var unit = false;
                            var div = false;
                            var regn = false;
                            var grade = false;
                            var lvl = false;
                            var jobstat = false;
                            var job = false;
                            var jobpos = false;

                            var vc = db.LookupValue.Where(a => forithead.Contains(a.Id.ToString())).ToList();

                            foreach (var item in vc)
                            {
                                //if (item.LookupVal.ToUpper() == "MONTH")
                                //{
                                //    month = true;
                                //}
                                if (item.LookupVal.ToUpper() == "LOCATION")
                                {

                                    loca = true;
                                }
                                if (item.LookupVal.ToUpper() == "EMPLOYEE")
                                {
                                    emp = true;
                                }
                                if (item.LookupVal.ToUpper() == "DEPARTMENT")
                                {
                                    dept = true;
                                }
                                if (item.LookupVal.ToUpper() == "COMPANY")
                                {
                                    comp = true;
                                }
                                if (item.LookupVal.ToUpper() == "GROUP")
                                {
                                    grp = true;
                                }
                                if (item.LookupVal.ToUpper() == "UNIT")
                                {
                                    unit = true;
                                }
                                if (item.LookupVal.ToUpper() == "DIVISION")
                                {
                                    div = true;
                                }
                                if (item.LookupVal.ToUpper() == "REGION")
                                {
                                    regn = true;
                                }
                                if (item.LookupVal.ToUpper() == "GRADE")
                                {
                                    grade = true;
                                }
                                if (item.LookupVal.ToUpper() == "LEVEL")
                                {
                                    lvl = true;
                                }
                                if (item.LookupVal.ToUpper() == "JOBSTATUS")
                                {
                                    jobstat = true;
                                }

                                if (item.LookupVal.ToUpper() == "JOB")
                                {
                                    job = true;
                                }
                                if (item.LookupVal.ToUpper() == "JOBPOSITION")
                                {
                                    jobpos = true;
                                }
                            }

                            Utility.GetOrganizationDataClass GeoDataInd = new Utility.GetOrganizationDataClass();

                            foreach (var ca in EmployeeExitNotice.Where(e => e.SeperationProcessT.ResignationRequest.ResignDate >= pFromDate && e.SeperationProcessT.ResignationRequest.ResignDate <= pToDate))
                            {

                                int? geoid = ca.Employee.GeoStruct_Id;

                                int? payid = ca.Employee.PayStruct_Id;

                                int? funid = ca.Employee.FuncStruct_Id;

                                GeoStruct geostruct = db.GeoStruct.Find(geoid);

                                PayStruct paystruct = db.PayStruct.Find(payid);

                                FuncStruct funstruct = db.FuncStruct.Find(funid);

                                GeoDataInd = ReportRDLCObjectClass.GetOrganizationDataInd(geostruct, paystruct, funstruct, 0);

                                GenericField100 oGenericField100 = new GenericField100()
                                {
                                    Fld1 = ca.Employee.EmpCode,
                                    Fld2 = ca.Employee.EmpName != null ? ca.Employee.EmpName.FullNameFML.ToString() : null,
                                    Fld3 = ca.SeperationProcessT != null && ca.SeperationProcessT.NoticePeriodProcess != null && ca.SeperationProcessT.NoticePeriodProcess.NoticePeriod_Object != null ? "NoticePeriod:" + ca.SeperationProcessT.NoticePeriodProcess.NoticePeriod_Object.NoticePeriod.ToString() + "" + "PolicyName:" + ca.SeperationProcessT.NoticePeriodProcess.NoticePeriod_Object.PolicyName.ToString() : "",
                                    Fld4 = ca.SeperationProcessT != null && ca.SeperationProcessT.NoticePeriodProcess != null ? ca.SeperationProcessT.NoticePeriodProcess.LastWorkDateByComp.Value.ToShortDateString() : "",
                                    Fld5 = ca.SeperationProcessT != null && ca.SeperationProcessT.NoticePeriodProcess != null ? ca.SeperationProcessT.NoticePeriodProcess.IsNoticePeriodWaived.ToString() : "",
                                    Fld6 = ca.SeperationProcessT != null && ca.SeperationProcessT.NoticePeriodProcess != null ? ca.SeperationProcessT.NoticePeriodProcess.WaiveDays.ToString() : "",
                                    Fld7 = ca.SeperationProcessT != null && ca.SeperationProcessT.NoticePeriodProcess != null ? ca.SeperationProcessT.NoticePeriodProcess.LastWorkDateApproved.Value.ToShortDateString() : "",
                                    Fld8 = ca.SeperationProcessT != null && ca.SeperationProcessT.NoticePeriodProcess != null ? ca.SeperationProcessT.NoticePeriodProcess.IsLeaveAdjustInNoticePeriodRecovery.ToString() : "",
                                    Fld9 = ca.SeperationProcessT != null && ca.SeperationProcessT.NoticePeriodProcess != null ? ca.SeperationProcessT.NoticePeriodProcess.LeaveAdjustDays.ToString() : "",
                                    Fld10 = ca.SeperationProcessT != null && ca.SeperationProcessT.NoticePeriodProcess != null ? ca.SeperationProcessT.NoticePeriodProcess.Reason.ToString() : "",
                                };

                                if (comp)
                                {
                                    oGenericField100.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                }
                                if (div)
                                {
                                    oGenericField100.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                }
                                if (loca)
                                {
                                    oGenericField100.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                }
                                if (dept)
                                {
                                    oGenericField100.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                }
                                if (grp)
                                {
                                    oGenericField100.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                }
                                if (unit)
                                {
                                    oGenericField100.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                }
                                if (grade)
                                {
                                    oGenericField100.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                }
                                if (lvl)
                                {
                                    oGenericField100.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                }
                                if (jobstat)
                                {
                                    oGenericField100.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                }
                                if (job)
                                {
                                    oGenericField100.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                }
                                if (jobpos)
                                {
                                    oGenericField100.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                }
                                if (emp)
                                {
                                    oGenericField100.Fld88 = ca.Employee.EmpName.FullNameFML;
                                }

                                OGenericLoginmasterStatement.Add(oGenericField100);
                            }


                            return OGenericLoginmasterStatement;
                        }

                        break;


                    case "FFSLEAVEENCASHMENT":
                        var lvencheadvar = db.SalaryHead.Select(x => new
                        {
                            SalaryHeadCode = x.Code,
                            SalHeadOperationTypeLookupVal = x.SalHeadOperationType.LookupVal
                        }).Where(e => e.SalHeadOperationTypeLookupVal.ToUpper() == "LVENCASH" || e.SalHeadOperationTypeLookupVal.ToUpper() == "LVENCASHEXEMPTED").ToList();


                        var lvenchead = lvencheadvar.Select(y => y.SalaryHeadCode).ToList();



                        var EmployeeExitFFSTDetailT = db.EmployeeExit.Select(d => new
                        {
                            EmployeeId = d.Employee.Id,
                            EmpCode = d.Employee.EmpCode,
                            EmpName = d.Employee.EmpName.FullNameFML,
                            JobName = d.Employee.FuncStruct.Job.Name,
                            LocDesc = d.Employee.GeoStruct.Location.LocationObj.LocDesc,
                            RetirementDate = d.Employee.ServiceBookDates.RetirementDate,
                            ResignReason = d.Employee.ServiceBookDates.ResignReason,
                            GeoStruct_Id = d.Employee.GeoStruct_Id,
                            PayStruct_Id = d.Employee.PayStruct_Id,
                            FuncStruct_Id = d.Employee.FuncStruct_Id,
                            FFSSettlementDetailT = d.SeperationProcessT.FFSSettlementDetailT.Select(o => new
                            {
                                Id = o.Id,
                                SalaryHeadCode = o.SalaryHead,
                                ProcessMonth = o.ProcessMonth,
                                EncashDays = o.LvEncashReq == null ? 0 : o.LvEncashReq.EncashDays,
                                LvHeadId = o.LvEncashReq == null ? 0 : o.LvEncashReq.LvHead_Id,
                                LvCode = o.LvEncashReq == null ? " " : o.LvEncashReq.LvHead.LvCode

                            }).Where(e => lvenchead.Contains(e.SalaryHeadCode)).ToList()
                        }).Where(a => EmpId.Contains(a.EmployeeId)).ToList();


                        if (EmployeeExitFFSTDetailT == null || EmployeeExitFFSTDetailT.Count() == 0)
                        {
                            return null;
                        }
                        else
                        {
                            var emp = false;
                            var dept = false;
                            var loca = false;
                            var comp = false;
                            var grp = false;
                            var unit = false;
                            var div = false;
                            var regn = false;
                            var grade = false;
                            var lvl = false;
                            var jobstat = false;
                            var job = false;
                            var jobpos = false;

                            var vc = db.LookupValue.Where(a => forithead.Contains(a.Id.ToString())).ToList();

                            foreach (var item in vc)
                            {
                                //if (item.LookupVal.ToUpper() == "MONTH")
                                //{
                                //    month = true;
                                //}
                                if (item.LookupVal.ToUpper() == "LOCATION")
                                {

                                    loca = true;
                                }
                                if (item.LookupVal.ToUpper() == "EMPLOYEE")
                                {
                                    emp = true;
                                }
                                if (item.LookupVal.ToUpper() == "DEPARTMENT")
                                {
                                    dept = true;
                                }
                                if (item.LookupVal.ToUpper() == "COMPANY")
                                {
                                    comp = true;
                                }
                                if (item.LookupVal.ToUpper() == "GROUP")
                                {
                                    grp = true;
                                }
                                if (item.LookupVal.ToUpper() == "UNIT")
                                {
                                    unit = true;
                                }
                                if (item.LookupVal.ToUpper() == "DIVISION")
                                {
                                    div = true;
                                }
                                if (item.LookupVal.ToUpper() == "REGION")
                                {
                                    regn = true;
                                }
                                if (item.LookupVal.ToUpper() == "GRADE")
                                {
                                    grade = true;
                                }
                                if (item.LookupVal.ToUpper() == "LEVEL")
                                {
                                    lvl = true;
                                }
                                if (item.LookupVal.ToUpper() == "JOBSTATUS")
                                {
                                    jobstat = true;
                                }

                                if (item.LookupVal.ToUpper() == "JOB")
                                {
                                    job = true;
                                }
                                if (item.LookupVal.ToUpper() == "JOBPOSITION")
                                {
                                    jobpos = true;
                                }
                            }

                            Utility.GetOrganizationDataClass GeoDataInd = new Utility.GetOrganizationDataClass();

                            foreach (var ca in EmployeeExitFFSTDetailT)
                            {

                                int? geoid = ca.GeoStruct_Id;

                                int? payid = ca.PayStruct_Id;

                                int? funid = ca.FuncStruct_Id;

                                GeoStruct geostruct = db.GeoStruct.Find(geoid);

                                PayStruct paystruct = db.PayStruct.Find(payid);

                                FuncStruct funstruct = db.FuncStruct.Find(funid);

                                GeoDataInd = ReportRDLCObjectClass.GetOrganizationDataInd(geostruct, paystruct, funstruct, 0);
                                //var lvenchead = db.SalaryHead.Include(x => x.SalHeadOperationType).Where(e => e.SalHeadOperationType.LookupVal.ToUpper() == "LVENCASH" || e.SalHeadOperationType.LookupVal.ToUpper() == "LVENCASHEXEMPTED").Select(e => e.Code).ToList();

                                //if (ca.SeperationProcessT != null && ca.SeperationProcessT.FFSSettlementDetailT != null)
                                //{
                                if (ca.FFSSettlementDetailT.Count() != 0)
                                {
                                    //var FFSSettlementDetailTlist = ca.SeperationProcessT.FFSSettlementDetailT.Where(e => e.SalaryHead == lvenchead.Code).OrderBy(e => e.Id).ToList();
                                    //var FFSSettlementDetailTlist = ca.SeperationProcessT.FFSSettlementDetailT.Where(e => lvenchead.Contains(e.SalaryHead)).OrderBy(e => e.Id).ToList();
                                    var FFSSettlementDetailTlist = ca.FFSSettlementDetailT.OrderBy(e => e.Id).ToList();
                                    EmployeeLeave _Prv_EmpLvDatabal = db.EmployeeLeave.Include(e => e.Employee).Where(a => a.Employee.Id == ca.EmployeeId).SingleOrDefault();
                                    double TotalCloseBal = 0;
                                    double TLAmt = 0;
                                    double CountDays = 0;
                                    foreach (var items in FFSSettlementDetailTlist)
                                    {
                                        var lvnewreq = db.LvNewReq.Include(e => e.LeaveHead).Include(e => e.WFStatus).Where(e => e.EmployeeLeave_Id == _Prv_EmpLvDatabal.Id && e.LeaveHead_Id == items.LvHeadId && e.WFStatus.LookupVal != "2").OrderByDescending(e => e.Id).FirstOrDefault();
                                        TotalCloseBal = TotalCloseBal + lvnewreq.CloseBal;

                                    }

                                    Boolean structurewg = false;

                                    foreach (var item in FFSSettlementDetailTlist)
                                    {
                                        //var lvencashreq = item.LvEncashReq;
                                        var OEmployeePayroll = db.EmployeePayroll.Include(e => e.Employee)
                                       .Include(e => e.LvEncashPayment)
                                       .Include(e => e.SalaryT)
                                       .Include(e => e.SalaryT.Select(r => r.SalEarnDedT))
                                       .Include(e => e.EmpSalStruct)
                                       .Include(e => e.SalAttendance)
                                       .Include(e => e.EmpSalStruct.Select(r => r.EmpSalStructDetails.Select(t => t.SalaryHead.SalHeadOperationType)))
                                       .Include(e => e.EmpSalStruct.Select(r => r.EmpSalStructDetails.Select(t => t.SalHeadFormula)))
                                       .Where(e => e.Employee_Id == ca.EmployeeId).SingleOrDefault();

                                        double mLvEncashAmount = 0;
                                        var OEmpSalStruct = OEmployeePayroll.EmpSalStruct.OrderByDescending(e => e.Id).FirstOrDefault();
                                        var OEmpSalDetails = OEmpSalStruct.EmpSalStructDetails.Where(e => e.SalaryHead.SalHeadOperationType.LookupVal.ToUpper() == "LVENCASH").SingleOrDefault();

                                        LvEncashPolicy encashpolicy = null;
                                        EmployeeLeave _Prv_EmpLvData = db.EmployeeLeave.Include(e => e.Employee).Where(a => a.Employee.Id == OEmployeePayroll.Employee.Id).SingleOrDefault();
                                        EmployeeLvStruct OLvSalStruct = db.EmployeeLvStruct
                                                                       .Include(e => e.EmployeeLvStructDetails)
                                                                       .Include(e => e.EmployeeLvStructDetails.Select(q => q.LvHead))
                                                                       .Include(e => e.EmployeeLvStructDetails.Select(q => q.LvHeadFormula))
                                                                       .Include(e => e.EmployeeLvStructDetails.Select(q => q.LvHeadFormula.LvEncashPolicy))
                                                                       .Include(e => e.EmployeeLvStructDetails.Select(q => q.LvHeadFormula.LvEncashPolicy.PayMonthConcept))
                                                                       .Where(e => e.EndDate == null && e.EmployeeLeave_Id == _Prv_EmpLvData.Id).SingleOrDefault();

                                        encashpolicy = OLvSalStruct.EmployeeLvStructDetails.Where(e => e.LvHead.Id == item.LvHeadId && e.LvHeadFormula != null && e.LvHeadFormula.LvEncashPolicy != null).Select(r => r.LvHeadFormula.LvEncashPolicy).FirstOrDefault();

                                        var OSalChk = OEmployeePayroll.SalaryT.Where(e => e.PayMonth == item.ProcessMonth.Value.ToString("MM/yyyy")).SingleOrDefault();
                                        var CompanyIdl = Convert.ToInt32(SessionManager.CompanyId);
                                        var Loc = db.Company.Include(e => e.Address).Include(e => e.Address.State)
                                            .Where(e => e.Id == CompanyIdl).SingleOrDefault().Address.State.Code.ToUpper();

                                        var companyCode = db.Company.Where(e => e.Id == CompanyIdl).SingleOrDefault();

                                        if (OSalChk == null)
                                        {
                                            SalHeadFormula LVEncashFormula = OEmpSalDetails.SalHeadFormula;// Process.SalaryHeadGenProcess.SalFormulaFinder(OEmpSalStruct, OEmpSalDetails.SalaryHead.Id, db);
                                            if (LVEncashFormula != null)
                                            {
                                                var OSalHeadFormualQuery = db.SalHeadFormula.Where(e => e.Id == LVEncashFormula.Id)
                                                                           .Include(e => e.SalWages)
                                                                           .Include(e => e.SalWages.RateMaster).Include(e => e.SalWages.RateMaster.Select(r => r.SalHead)).FirstOrDefault();

                                                var salhead = OSalHeadFormualQuery.SalWages.RateMaster.Select(a => a.SalHead_Id).ToList();

                                                var salheadwg = OSalHeadFormualQuery.SalWages.RateMaster.Select(a => a.SalHead_Id).ToList();
                                                foreach (var Sg in salheadwg)
                                                {
                                                    double mLvEncashWagesg = Process.SalaryHeadGenProcess.Wagecalc(LVEncashFormula, null, OEmpSalStruct.EmpSalStructDetails.Where(e => e.SalaryHead_Id == Sg).ToList());
                                                    TLAmt = TLAmt + mLvEncashWagesg;
                                                }
                                                foreach (var Sh in salhead)
                                                {
                                                    mLvEncashAmount = 0;
                                                    double mLvEncashWages = Process.SalaryHeadGenProcess.Wagecalc(LVEncashFormula, null, OEmpSalStruct.EmpSalStructDetails.Where(e => e.SalaryHead_Id == Sh).ToList());
                                                    if (structurewg == false)
                                                    {
                                                        TLAmt = TLAmt;
                                                    }

                                                    //Leave encash calc fun
                                                    DateTime processdt = Convert.ToDateTime("01/" + item.ProcessMonth.Value.ToString("MM/yyyy"));
                                                    int year = processdt.Year;
                                                    int month = processdt.Month;
                                                    var oDay = DateTime.DaysInMonth(year, month);
                                                    if (encashpolicy.PayMonthConcept.LookupVal.ToString().ToUpper() == "FIXED30DAYS")//(OPayProcGrp.PayMonthConcept.LookupVal.ToString().ToUpper() == "FIXED30DAYS")
                                                    {
                                                        CountDays = 30;
                                                        //mLvEncashAmount = (mLvEncashWages / 30) * item.LvEncashReq.EncashDays;
                                                        mLvEncashAmount = (mLvEncashWages / 30) * item.EncashDays;
                                                    }
                                                    else if (encashpolicy.PayMonthConcept.LookupVal.ToString().ToUpper() == "30DAYS")//(OPayProcGrp.PayMonthConcept.LookupVal.ToString().ToUpper() == "30DAYS")
                                                    {
                                                        mLvEncashAmount = (mLvEncashWages) - ((oDay - item.EncashDays) / 30) * mLvEncashWages;
                                                    }
                                                    else if (encashpolicy.PayMonthConcept.LookupVal.ToString().ToUpper() == "CALENDAR")//(OPayProcGrp.PayMonthConcept.LookupVal.ToString().ToUpper() == "CALENDAR")
                                                    {
                                                        CountDays = oDay;
                                                        if (companyCode.Code == "KDCC")
                                                        {
                                                            mLvEncashAmount = (mLvEncashWages / 30) * item.EncashDays;
                                                        }
                                                        else
                                                        {
                                                            mLvEncashAmount = (mLvEncashWages / oDay) * item.EncashDays;
                                                        }
                                                    }

                                                    //mLvEncashAmount = SalaryHeadGenProcess.RoundingFunction(OEmpSalDetails.SalaryHead, mLvEncashAmount);
                                                    //mLvEncashAmount = Math.Round(mLvEncashAmount, 2);
                                                    mLvEncashAmount = Math.Round(mLvEncashAmount, 0);
                                                    //Leave encash calc fun
                                                    var salaryhead = db.SalaryHead.Where(e => e.Id == Sh).FirstOrDefault();
                                                    var lvnewreq = db.LvNewReq.Include(e => e.LeaveHead).Include(e => e.WFStatus).Where(e => e.EmployeeLeave_Id == _Prv_EmpLvData.Id && e.LeaveHead_Id == item.LvHeadId && e.WFStatus.LookupVal != "2").OrderByDescending(e => e.Id).FirstOrDefault();
                                                    // var lvnewreq = db.LvNewReq.Include(e => e.LeaveHead).Where(e => e.EmployeeLeave_Id == _Prv_EmpLvData.Id && e.LeaveHead_Id == item.LvHeadId && e.Narration == "Settlement Process").FirstOrDefault();
                                                    double CalAmt = ((TLAmt / CountDays) * TotalCloseBal);
                                                    //CalAmt = Math.Round(CalAmt, 2);
                                                    CalAmt = Math.Round(CalAmt, 0);
                                                    string processmonth = item.ProcessMonth.ToString();
                                                    string date = Convert.ToDateTime(processmonth).ToString("MM/yyyy");
                                                    string AlphaNumericval = NumToWords.ConvertAmount(CalAmt);
                                                    GenericField100 oGenericField100 = new GenericField100()
                                                    {
                                                        Fld1 = ca.EmpCode == null ? "" : ca.EmpCode,
                                                        Fld2 = ca.EmpName == null ? "" : ca.EmpName,
                                                        Fld3 = ca.JobName == null ? "" : ca.JobName,
                                                        Fld4 = ca.LocDesc == null ? "" : ca.LocDesc,
                                                        Fld5 = ca.RetirementDate == null ? "" : ca.RetirementDate.Value.ToShortDateString(),
                                                        Fld6 = ca.ResignReason == null ? "" : ca.ResignReason,
                                                        //Fld7 = ca.SeperationProcessT != null ? ca.SeperationProcessT.Id.ToString() : "",
                                                        Fld8 = lvnewreq != null ? lvnewreq.LeaveHead.LvName.ToString() : "",
                                                        Fld9 = lvnewreq != null ? lvnewreq.CloseBal.ToString() : "",
                                                        Fld10 = salaryhead != null ? salaryhead.Code.ToString() : "",

                                                        Fld12 = item.LvCode == null ? "" : item.LvCode,
                                                        Fld13 = mLvEncashAmount.ToString(),
                                                        Fld19 = TotalCloseBal.ToString(),
                                                        Fld21 = date,
                                                        Fld11 = mLvEncashWages.ToString(),
                                                        Fld22 = salaryhead != null ? salaryhead.Code.ToString() : "",
                                                        Fld23 = TLAmt.ToString(),
                                                        Fld25 = CalAmt.ToString(),
                                                        Fld26 = CountDays.ToString(),
                                                        Fld27 = AlphaNumericval.ToString(),
                                                    };

                                                    if (comp)
                                                    {
                                                        oGenericField100.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                    }
                                                    if (div)
                                                    {
                                                        oGenericField100.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                    }
                                                    if (loca)
                                                    {
                                                        oGenericField100.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                    }
                                                    if (dept)
                                                    {
                                                        oGenericField100.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                    }
                                                    if (grp)
                                                    {
                                                        oGenericField100.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                    }
                                                    if (unit)
                                                    {
                                                        oGenericField100.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                    }
                                                    if (grade)
                                                    {
                                                        oGenericField100.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                    }
                                                    if (lvl)
                                                    {
                                                        oGenericField100.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                    }
                                                    if (jobstat)
                                                    {
                                                        oGenericField100.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                    }
                                                    if (job)
                                                    {
                                                        oGenericField100.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                    }
                                                    if (jobpos)
                                                    {
                                                        oGenericField100.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                    }
                                                    if (emp)
                                                    {
                                                        oGenericField100.Fld88 = ca.EmpName;
                                                    }

                                                    OGenericLoginmasterStatement.Add(oGenericField100);
                                                }




                                            }
                                        }
                                        else
                                        {
                                            SalHeadFormula LVEncashFormula = OEmpSalDetails.SalHeadFormula;// Process.SalaryHeadGenProcess.SalFormulaFinder(OEmpSalStruct, OEmpSalDetails.SalaryHead.Id, db);

                                            if (LVEncashFormula != null)
                                            {
                                                var OSalHeadFormualQuery = db.SalHeadFormula.Where(e => e.Id == LVEncashFormula.Id)
                                                                         .Include(e => e.SalWages)
                                                                         .Include(e => e.SalWages.RateMaster).Include(e => e.SalWages.RateMaster.Select(r => r.SalHead)).FirstOrDefault();

                                                var salhead = OSalHeadFormualQuery.SalWages.RateMaster.Select(a => a.SalHead_Id).ToList();

                                                var salheadwg = OSalHeadFormualQuery.SalWages.RateMaster.Select(a => a.SalHead_Id).ToList();
                                                foreach (var Sg in salheadwg)
                                                {
                                                    double mLvEncashWagesg = Process.SalaryHeadGenProcess.Wagecalc(LVEncashFormula, OSalChk.SalEarnDedT.Where(e => e.SalaryHead_Id == Sg).ToList(), null);
                                                    TLAmt = TLAmt + mLvEncashWagesg;
                                                }

                                                foreach (var Sh in salhead)
                                                {

                                                    mLvEncashAmount = 0;
                                                    var OAttChk = OEmployeePayroll.SalAttendance.Where(e => e.PayMonth == item.ProcessMonth.Value.ToString("MM/yyyy")).SingleOrDefault();
                                                    double mLvEncashWages = Process.SalaryHeadGenProcess.Wagecalc(LVEncashFormula, OSalChk.SalEarnDedT.Where(e => e.SalaryHead_Id == Sh).ToList(), null);
                                                    if (structurewg == false)
                                                    {
                                                        TLAmt = TLAmt;
                                                    }
                                                    //Leave encash calc fun
                                                    if (Loc == "TAMILNADU")
                                                    {

                                                        encashpolicy.PayMonthConcept.LookupVal = "FIXED30DAYS";
                                                    }
                                                    if (encashpolicy.PayMonthConcept.LookupVal.ToString().ToUpper() == "FIXED30DAYS")//(OPayProcGrp.PayMonthConcept.LookupVal.ToString().ToUpper() == "FIXED30DAYS")
                                                    {
                                                        CountDays = 30;
                                                        mLvEncashAmount = (mLvEncashWages / 30) * item.EncashDays;
                                                    }
                                                    else if (encashpolicy.PayMonthConcept.LookupVal.ToString().ToUpper() == "30DAYS")//(OPayProcGrp.PayMonthConcept.LookupVal.ToString().ToUpper() == "30DAYS")
                                                    {
                                                        mLvEncashAmount = (mLvEncashWages) - ((OAttChk.MonthDays - OAttChk.PaybleDays) / 30) * mLvEncashWages;
                                                    }
                                                    else if (encashpolicy.PayMonthConcept.LookupVal.ToString().ToUpper() == "CALENDAR")//(OPayProcGrp.PayMonthConcept.LookupVal.ToString().ToUpper() == "CALENDAR")
                                                    {
                                                        CountDays = OAttChk.MonthDays;
                                                        //ca.Amount * ((SalAttendanceT_PayableDays) / (SalAttendanceT_monthDays));
                                                        //mLvEncashAmount = (mLvEncashWages) - ((OAttChk.MonthDays - OAttChk.PaybleDays) / 30) * mLvEncashWages;
                                                        if (companyCode.Code == "KDCC")
                                                        {

                                                            mLvEncashAmount = (((mLvEncashWages * OAttChk.MonthDays) / OAttChk.PaybleDays) / 30) * item.EncashDays;
                                                        }
                                                        else
                                                        {
                                                            mLvEncashAmount = (mLvEncashWages / OAttChk.PaybleDays) * item.EncashDays;
                                                        }
                                                    }

                                                    //  mLvEncashAmount = SalaryHeadGenProcess.RoundingFunction(OEmpSalDetails.SalaryHead, mLvEncashAmount);
                                                    //mLvEncashAmount = Math.Round(mLvEncashAmount, 2);
                                                    mLvEncashAmount = Math.Round(mLvEncashAmount, 0);
                                                    //Leave encash calc fun
                                                    var salaryhead = db.SalaryHead.Where(e => e.Id == Sh).FirstOrDefault();
                                                    var lvnewreq = db.LvNewReq.Include(e => e.LeaveHead).Include(e => e.WFStatus).Where(e => e.EmployeeLeave_Id == _Prv_EmpLvData.Id && e.LeaveHead_Id == item.LvHeadId && e.WFStatus.LookupVal != "2").OrderByDescending(e => e.Id).FirstOrDefault();
                                                    //var lvnewreq = db.LvNewReq.Include(e => e.LeaveHead).Where(e => e.EmployeeLeave_Id == _Prv_EmpLvData.Id && e.LeaveHead_Id == item.LvHeadId && e.Narration == "Settlement Process").FirstOrDefault();
                                                    double CalAmt = ((TLAmt / CountDays) * TotalCloseBal);
                                                    //CalAmt = Math.Round(CalAmt, 2);
                                                    CalAmt = Math.Round(CalAmt, 0);
                                                    string AlphaNumericval = NumToWords.ConvertAmount(CalAmt);
                                                    string processmonth = item.ProcessMonth.ToString();
                                                    string date = Convert.ToDateTime(processmonth).ToString("MM/yyyy");
                                                    GenericField100 oGenericField100 = new GenericField100()
                                                    {
                                                        Fld1 = ca.EmpCode == null ? "" : ca.EmpCode,
                                                        Fld2 = ca.EmpName == null ? "" : ca.EmpName,
                                                        Fld3 = ca.JobName == null ? "" : ca.JobName,
                                                        Fld4 = ca.LocDesc == null ? "" : ca.LocDesc,
                                                        Fld5 = ca.RetirementDate == null ? "" : ca.RetirementDate.Value.ToShortDateString(),
                                                        Fld6 = ca.ResignReason == null ? "" : ca.ResignReason,
                                                        //Fld7 = ca.SeperationProcessT != null ? ca.SeperationProcessT.Id.ToString() : "",
                                                        Fld8 = lvnewreq != null ? lvnewreq.LeaveHead.LvName.ToString() : "",
                                                        Fld9 = lvnewreq != null ? lvnewreq.CloseBal.ToString() : "",
                                                        Fld10 = salaryhead != null ? salaryhead.Code.ToString() : "",

                                                        Fld12 = item.LvCode == null ? "" : item.LvCode,
                                                        Fld13 = mLvEncashAmount.ToString(),
                                                        Fld19 = TotalCloseBal.ToString(),
                                                        Fld21 = date,
                                                        Fld11 = mLvEncashWages.ToString(),
                                                        Fld22 = salaryhead != null ? salaryhead.Code.ToString() : "",
                                                        Fld23 = TLAmt.ToString(),
                                                        Fld25 = CalAmt.ToString(),
                                                        Fld26 = CountDays.ToString(),
                                                        Fld27 = AlphaNumericval.ToString(),
                                                    };

                                                    if (comp)
                                                    {
                                                        oGenericField100.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                    }
                                                    if (div)
                                                    {
                                                        oGenericField100.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                    }
                                                    if (loca)
                                                    {
                                                        oGenericField100.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                    }
                                                    if (dept)
                                                    {
                                                        oGenericField100.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                    }
                                                    if (grp)
                                                    {
                                                        oGenericField100.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                    }
                                                    if (unit)
                                                    {
                                                        oGenericField100.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                    }
                                                    if (grade)
                                                    {
                                                        oGenericField100.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                    }
                                                    if (lvl)
                                                    {
                                                        oGenericField100.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                    }
                                                    if (jobstat)
                                                    {
                                                        oGenericField100.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                    }
                                                    if (job)
                                                    {
                                                        oGenericField100.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                    }
                                                    if (jobpos)
                                                    {
                                                        oGenericField100.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                    }
                                                    if (emp)
                                                    {
                                                        oGenericField100.Fld88 = ca.EmpName;
                                                    }

                                                    OGenericLoginmasterStatement.Add(oGenericField100);

                                                }
                                            }
                                        }
                                    }
                                    structurewg = true;
                                }
                            }


                            return OGenericLoginmasterStatement;
                        }

                        break;

                    case "LOGINMASTER":

                        var EmpList = db.Employee
                            .Include(a => a.LogRegister)
                            .Include(a => a.Login)
                            .Include(a => a.PayStruct.Grade)
                            .Include(a => a.FuncStruct.Company)
                            .Include(a => a.GeoStruct)
                             .Include(a => a.GeoStruct.Location)
                            .Include(a => a.GeoStruct.Location.LocationObj)
                            .Include(a => a.EmpName)
                            .Where(a => EmpId.Contains(a.Id)).AsNoTracking().AsParallel().ToList();

                        if (EmpList == null || EmpList.Count() == 0)
                        {
                            return null;
                        }
                        else
                        {
                            var emp = false;
                            var dept = false;
                            var loca = false;
                            var comp = false;
                            var grp = false;
                            var unit = false;
                            var div = false;
                            var regn = false;
                            var grade = false;
                            var lvl = false;
                            var jobstat = false;
                            var job = false;
                            var jobpos = false;

                            var vc = db.LookupValue.Where(a => forithead.Contains(a.Id.ToString())).ToList();

                            foreach (var item in vc)
                            {
                                //if (item.LookupVal.ToUpper() == "MONTH")
                                //{
                                //    month = true;
                                //}
                                if (item.LookupVal.ToUpper() == "LOCATION")
                                {

                                    loca = true;
                                }
                                if (item.LookupVal.ToUpper() == "EMPLOYEE")
                                {
                                    emp = true;
                                }
                                if (item.LookupVal.ToUpper() == "DEPARTMENT")
                                {
                                    dept = true;
                                }
                                if (item.LookupVal.ToUpper() == "COMPANY")
                                {
                                    comp = true;
                                }
                                if (item.LookupVal.ToUpper() == "GROUP")
                                {
                                    grp = true;
                                }
                                if (item.LookupVal.ToUpper() == "UNIT")
                                {
                                    unit = true;
                                }
                                if (item.LookupVal.ToUpper() == "DIVISION")
                                {
                                    div = true;
                                }
                                if (item.LookupVal.ToUpper() == "REGION")
                                {
                                    regn = true;
                                }
                                if (item.LookupVal.ToUpper() == "GRADE")
                                {
                                    grade = true;
                                }
                                if (item.LookupVal.ToUpper() == "LEVEL")
                                {
                                    lvl = true;
                                }
                                if (item.LookupVal.ToUpper() == "JOBSTATUS")
                                {
                                    jobstat = true;
                                }

                                if (item.LookupVal.ToUpper() == "JOB")
                                {
                                    job = true;
                                }
                                if (item.LookupVal.ToUpper() == "JOBPOSITION")
                                {
                                    jobpos = true;
                                }
                            }

                            List<Utility.ReportClass> GeoData = new List<Utility.ReportClass>();
                            List<Utility.ReportClass> Paydata = new List<Utility.ReportClass>();
                            List<Utility.ReportClass> Funcdata = new List<Utility.ReportClass>();

                            Utility.ReportClass GeoDataInd = new Utility.ReportClass();
                            Utility.ReportClass PaydataInd = new Utility.ReportClass();
                            Utility.ReportClass FuncdataInd = new Utility.ReportClass();

                            GeoData = GetViewData(0);
                            Paydata = GetViewData(1);
                            Funcdata = GetViewData(2);


                            foreach (var ca in EmpList)
                            {
                                if (ca.LogRegister != null && ca.LogRegister.Count() != 0)
                                {
                                    int geoid = ca.GeoStruct.Id;

                                    int payid = ca.PayStruct.Id;

                                    int funid = ca.FuncStruct.Id;

                                    GeoDataInd = GetViewDataIndiv(geoid, payid, funid, GeoData, 0);
                                    PaydataInd = GetViewDataIndiv(geoid, payid, funid, Paydata, 1);
                                    FuncdataInd = GetViewDataIndiv(geoid, payid, funid, Funcdata, 2);

                                    var logreg = ca.LogRegister.Where(a => a.LogInDate.Value.Date >= pFromDate && a.LogInDate.Value.Date <= pToDate).ToList();
                                    foreach (var single_LogRegister in logreg)
                                    {
                                        var compare = "";
                                        if (single_LogRegister.LogInTime != null)
                                        {
                                            var logitme = Convert.ToDateTime(single_LogRegister.LogInDate);
                                            compare = logitme.ToString("hh\\:mm\\:ss");
                                        }
                                        GenericField100 oGenericField100 = new GenericField100()
                                        {
                                            Fld1 = ca.EmpCode,
                                            Fld2 = ca.EmpName != null ? ca.EmpName.FullNameFML.ToString() : null,
                                            Fld3 = ca.PayStruct != null && ca.PayStruct.Grade != null ? ca.PayStruct.Grade.Code.ToString() : null,
                                            Fld4 = ca.GeoStruct != null && ca.GeoStruct.Location != null && ca.GeoStruct.Location.LocationObj != null ? ca.GeoStruct.Location.LocationObj.LocCode.ToString() : null,
                                            Fld16 = ca.Login.UserId.ToString(),
                                            Fld19 = single_LogRegister.Id.ToString(),
                                            Fld5 = single_LogRegister.LogInAttempt.ToString(),
                                            //Fld6 = single_LogRegister.LogInTime != null ? single_LogRegister.LogInTime.ToString() : null,
                                            Fld6 = compare,
                                            Fld8 = single_LogRegister.LogOutType.ToString(),
                                            Fld10 = single_LogRegister.Suspend.ToString(),
                                            Fld11 = single_LogRegister.Lock.ToString(),
                                            Fld12 = single_LogRegister.IP.ToString(),
                                            Fld13 = single_LogRegister.Browser.ToString(),
                                            Fld14 = single_LogRegister.ComputerName.ToString(),
                                            Fld15 = single_LogRegister.LogInDate != null ? single_LogRegister.LogInDate.Value.ToShortDateString() : null,
                                            Fld17 = single_LogRegister.LogOutDate != null ? single_LogRegister.LogOutDate.Value.ToShortDateString() : null,
                                            Fld18 = single_LogRegister.LogOutTime,
                                            //Fld18 = single_LogRegister..ToString(),
                                        };
                                        if (comp)
                                        {
                                            oGenericField100.Fld99 = GeoDataInd.Company_Name;
                                        }
                                        if (div)
                                        {
                                            oGenericField100.Fld98 = GeoDataInd.Division_Name;
                                        }
                                        if (loca)
                                        {
                                            oGenericField100.Fld97 = GeoDataInd.LocDesc;
                                        }
                                        if (dept)
                                        {
                                            oGenericField100.Fld96 = GeoDataInd.DeptDesc;
                                        }
                                        if (grp)
                                        {
                                            oGenericField100.Fld95 = GeoDataInd.Group_Name;
                                        }
                                        if (unit)
                                        {
                                            oGenericField100.Fld94 = GeoDataInd.Unit_Name;
                                        }
                                        if (grade)
                                        {
                                            oGenericField100.Fld93 = PaydataInd.Grade_Name;
                                        }
                                        if (lvl)
                                        {
                                            oGenericField100.Fld92 = PaydataInd.Level_Name;
                                        }
                                        if (jobstat)
                                        {
                                            oGenericField100.Fld91 = GeoDataInd.JobStatus_Id.ToString();
                                        }
                                        if (job)
                                        {
                                            oGenericField100.Fld90 = FuncdataInd.Job_Name;
                                        }
                                        if (jobpos)
                                        {
                                            oGenericField100.Fld89 = FuncdataInd.JobPositionDesc;
                                        }
                                        if (emp)
                                        {
                                            oGenericField100.Fld88 = ca.EmpName.FullNameFML;
                                        }

                                        OGenericLoginmasterStatement.Add(oGenericField100);
                                    }
                                }
                            }
                            return OGenericLoginmasterStatement;
                        }

                        break;

                    case "PAYROLLUSER":

                        var EmpListpayroll = db.Employee
                            .Include(a => a.Login)
                            .Include(a => a.PayStruct.Grade)
                            .Include(a => a.FuncStruct.Company)
                            .Include(a => a.GeoStruct)
                             .Include(a => a.GeoStruct.Location)
                            .Include(a => a.GeoStruct.Location.LocationObj)
                            .Include(a => a.EmpName)
                            .Include(a => a.ServiceBookDates)
                            .Where(a => EmpId.Contains(a.Id) && a.Login != null && a.ServiceBookDates != null && a.ServiceBookDates.ServiceLastDate == null).AsNoTracking().AsParallel().ToList();

                        if (EmpListpayroll == null || EmpListpayroll.Count() == 0)
                        {
                            return null;
                        }
                        else
                        {
                            var emp = false;
                            var dept = false;
                            var loca = false;
                            var comp = false;
                            var grp = false;
                            var unit = false;
                            var div = false;
                            var regn = false;
                            var grade = false;
                            var lvl = false;
                            var jobstat = false;
                            var job = false;
                            var jobpos = false;

                            var vc = db.LookupValue.Where(a => forithead.Contains(a.Id.ToString())).ToList();

                            foreach (var item in vc)
                            {
                                //if (item.LookupVal.ToUpper() == "MONTH")
                                //{
                                //    month = true;
                                //}
                                if (item.LookupVal.ToUpper() == "LOCATION")
                                {

                                    loca = true;
                                }
                                if (item.LookupVal.ToUpper() == "EMPLOYEE")
                                {
                                    emp = true;
                                }
                                if (item.LookupVal.ToUpper() == "DEPARTMENT")
                                {
                                    dept = true;
                                }
                                if (item.LookupVal.ToUpper() == "COMPANY")
                                {
                                    comp = true;
                                }
                                if (item.LookupVal.ToUpper() == "GROUP")
                                {
                                    grp = true;
                                }
                                if (item.LookupVal.ToUpper() == "UNIT")
                                {
                                    unit = true;
                                }
                                if (item.LookupVal.ToUpper() == "DIVISION")
                                {
                                    div = true;
                                }
                                if (item.LookupVal.ToUpper() == "REGION")
                                {
                                    regn = true;
                                }
                                if (item.LookupVal.ToUpper() == "GRADE")
                                {
                                    grade = true;
                                }
                                if (item.LookupVal.ToUpper() == "LEVEL")
                                {
                                    lvl = true;
                                }
                                if (item.LookupVal.ToUpper() == "JOBSTATUS")
                                {
                                    jobstat = true;
                                }

                                if (item.LookupVal.ToUpper() == "JOB")
                                {
                                    job = true;
                                }
                                if (item.LookupVal.ToUpper() == "JOBPOSITION")
                                {
                                    jobpos = true;
                                }
                            }

                            List<Utility.ReportClass> GeoData = new List<Utility.ReportClass>();
                            List<Utility.ReportClass> Paydata = new List<Utility.ReportClass>();
                            List<Utility.ReportClass> Funcdata = new List<Utility.ReportClass>();

                            Utility.ReportClass GeoDataInd = new Utility.ReportClass();
                            Utility.ReportClass PaydataInd = new Utility.ReportClass();
                            Utility.ReportClass FuncdataInd = new Utility.ReportClass();

                            GeoData = GetViewData(0);
                            Paydata = GetViewData(1);
                            Funcdata = GetViewData(2);


                            foreach (var ca in EmpListpayroll)
                            {
                                //var path = "";
                                //path = Server.MapPath("~/App_Data/Menu_Json/" + ca.EmpCode + ".json");
                                if (ca.Login.UserId == "admin")
                                {
                                    int geoid = ca.GeoStruct.Id;

                                    int payid = ca.PayStruct.Id;

                                    int funid = ca.FuncStruct.Id;

                                    GeoDataInd = GetViewDataIndiv(geoid, payid, funid, GeoData, 0);
                                    PaydataInd = GetViewDataIndiv(geoid, payid, funid, Paydata, 1);
                                    FuncdataInd = GetViewDataIndiv(geoid, payid, funid, Funcdata, 2);
                                    GenericField100 oGenericField100 = new GenericField100()
                                    {
                                        Fld1 = ca.EmpCode,
                                        Fld2 = ca.EmpName != null ? ca.EmpName.FullNameFML.ToString() : null,
                                        Fld3 = ca.PayStruct != null && ca.PayStruct.Grade != null ? ca.PayStruct.Grade.Code.ToString() : null,
                                        Fld4 = ca.GeoStruct != null && ca.GeoStruct.Location != null && ca.GeoStruct.Location.LocationObj != null ? ca.GeoStruct.Location.LocationObj.LocCode.ToString() : null,
                                        Fld16 = ca.Login.UserId.ToString(),


                                    };
                                    if (comp)
                                    {
                                        oGenericField100.Fld99 = GeoDataInd.Company_Name;
                                    }
                                    if (div)
                                    {
                                        oGenericField100.Fld98 = GeoDataInd.Division_Name;
                                    }
                                    if (loca)
                                    {
                                        oGenericField100.Fld97 = GeoDataInd.LocDesc;
                                    }
                                    if (dept)
                                    {
                                        oGenericField100.Fld96 = GeoDataInd.DeptDesc;
                                    }
                                    if (grp)
                                    {
                                        oGenericField100.Fld95 = GeoDataInd.Group_Name;
                                    }
                                    if (unit)
                                    {
                                        oGenericField100.Fld94 = GeoDataInd.Unit_Name;
                                    }
                                    if (grade)
                                    {
                                        oGenericField100.Fld93 = PaydataInd.Grade_Name;
                                    }
                                    if (lvl)
                                    {
                                        oGenericField100.Fld92 = PaydataInd.Level_Name;
                                    }
                                    if (jobstat)
                                    {
                                        oGenericField100.Fld91 = GeoDataInd.JobStatus_Id.ToString();
                                    }
                                    if (job)
                                    {
                                        oGenericField100.Fld90 = FuncdataInd.Job_Name;
                                    }
                                    if (jobpos)
                                    {
                                        oGenericField100.Fld89 = FuncdataInd.JobPositionDesc;
                                    }
                                    if (emp)
                                    {
                                        oGenericField100.Fld88 = ca.EmpName.FullNameFML;
                                    }

                                    OGenericLoginmasterStatement.Add(oGenericField100);
                                }

                                string requiredPath = Path.GetDirectoryName(Path.GetDirectoryName(System.IO.Path.GetDirectoryName(System.Reflection.Assembly.GetExecutingAssembly().GetName().CodeBase))) + "\\P2BUltimate";
                                bool exists = System.IO.Directory.Exists(requiredPath);
                                string localPath;
                                string path = requiredPath + @"/App_Data/Menu_Json/" + ca.EmpCode + ".json";
                                localPath = new Uri(path).LocalPath;


                                if (File.Exists(localPath))
                                {

                                    if (ca.Login != null)
                                    {
                                        int geoid = ca.GeoStruct.Id;

                                        int payid = ca.PayStruct.Id;

                                        int funid = ca.FuncStruct.Id;

                                        GeoDataInd = GetViewDataIndiv(geoid, payid, funid, GeoData, 0);
                                        PaydataInd = GetViewDataIndiv(geoid, payid, funid, Paydata, 1);
                                        FuncdataInd = GetViewDataIndiv(geoid, payid, funid, Funcdata, 2);



                                        GenericField100 oGenericField100 = new GenericField100()
                                        {
                                            Fld1 = ca.EmpCode,
                                            Fld2 = ca.EmpName != null ? ca.EmpName.FullNameFML.ToString() : null,
                                            Fld3 = ca.PayStruct != null && ca.PayStruct.Grade != null ? ca.PayStruct.Grade.Code.ToString() : null,
                                            Fld4 = ca.GeoStruct != null && ca.GeoStruct.Location != null && ca.GeoStruct.Location.LocationObj != null ? ca.GeoStruct.Location.LocationObj.LocCode.ToString() : null,
                                            Fld16 = ca.Login.UserId.ToString(),


                                        };
                                        if (comp)
                                        {
                                            oGenericField100.Fld99 = GeoDataInd.Company_Name;
                                        }
                                        if (div)
                                        {
                                            oGenericField100.Fld98 = GeoDataInd.Division_Name;
                                        }
                                        if (loca)
                                        {
                                            oGenericField100.Fld97 = GeoDataInd.LocDesc;
                                        }
                                        if (dept)
                                        {
                                            oGenericField100.Fld96 = GeoDataInd.DeptDesc;
                                        }
                                        if (grp)
                                        {
                                            oGenericField100.Fld95 = GeoDataInd.Group_Name;
                                        }
                                        if (unit)
                                        {
                                            oGenericField100.Fld94 = GeoDataInd.Unit_Name;
                                        }
                                        if (grade)
                                        {
                                            oGenericField100.Fld93 = PaydataInd.Grade_Name;
                                        }
                                        if (lvl)
                                        {
                                            oGenericField100.Fld92 = PaydataInd.Level_Name;
                                        }
                                        if (jobstat)
                                        {
                                            oGenericField100.Fld91 = GeoDataInd.JobStatus_Id.ToString();
                                        }
                                        if (job)
                                        {
                                            oGenericField100.Fld90 = FuncdataInd.Job_Name;
                                        }
                                        if (jobpos)
                                        {
                                            oGenericField100.Fld89 = FuncdataInd.JobPositionDesc;
                                        }
                                        if (emp)
                                        {
                                            oGenericField100.Fld88 = ca.EmpName.FullNameFML;
                                        }

                                        OGenericLoginmasterStatement.Add(oGenericField100);

                                    }
                                }
                            }
                            return OGenericLoginmasterStatement;
                        }

                        break;
                    // ess
                    case "ESSUSER":

                        var EmpListpayrollEss = db.Employee
                            .Include(a => a.Login)
                            .Include(a => a.PayStruct.Grade)
                            .Include(a => a.FuncStruct.Company)
                            .Include(a => a.GeoStruct)
                             .Include(a => a.GeoStruct.Location)
                            .Include(a => a.GeoStruct.Location.LocationObj)
                            .Include(a => a.EmpName)
                            .Include(a => a.ServiceBookDates)
                            .Where(a => EmpId.Contains(a.Id) && a.Login != null && a.ServiceBookDates != null && a.ServiceBookDates.ServiceLastDate == null).AsNoTracking().AsParallel().ToList();

                        if (EmpListpayrollEss == null || EmpListpayrollEss.Count() == 0)
                        {
                            return null;
                        }
                        else
                        {
                            var emp = false;
                            var dept = false;
                            var loca = false;
                            var comp = false;
                            var grp = false;
                            var unit = false;
                            var div = false;
                            var regn = false;
                            var grade = false;
                            var lvl = false;
                            var jobstat = false;
                            var job = false;
                            var jobpos = false;

                            var vc = db.LookupValue.Where(a => forithead.Contains(a.Id.ToString())).ToList();

                            foreach (var item in vc)
                            {
                                //if (item.LookupVal.ToUpper() == "MONTH")
                                //{
                                //    month = true;
                                //}
                                if (item.LookupVal.ToUpper() == "LOCATION")
                                {

                                    loca = true;
                                }
                                if (item.LookupVal.ToUpper() == "EMPLOYEE")
                                {
                                    emp = true;
                                }
                                if (item.LookupVal.ToUpper() == "DEPARTMENT")
                                {
                                    dept = true;
                                }
                                if (item.LookupVal.ToUpper() == "COMPANY")
                                {
                                    comp = true;
                                }
                                if (item.LookupVal.ToUpper() == "GROUP")
                                {
                                    grp = true;
                                }
                                if (item.LookupVal.ToUpper() == "UNIT")
                                {
                                    unit = true;
                                }
                                if (item.LookupVal.ToUpper() == "DIVISION")
                                {
                                    div = true;
                                }
                                if (item.LookupVal.ToUpper() == "REGION")
                                {
                                    regn = true;
                                }
                                if (item.LookupVal.ToUpper() == "GRADE")
                                {
                                    grade = true;
                                }
                                if (item.LookupVal.ToUpper() == "LEVEL")
                                {
                                    lvl = true;
                                }
                                if (item.LookupVal.ToUpper() == "JOBSTATUS")
                                {
                                    jobstat = true;
                                }

                                if (item.LookupVal.ToUpper() == "JOB")
                                {
                                    job = true;
                                }
                                if (item.LookupVal.ToUpper() == "JOBPOSITION")
                                {
                                    jobpos = true;
                                }
                            }

                            List<Utility.ReportClass> GeoData = new List<Utility.ReportClass>();
                            List<Utility.ReportClass> Paydata = new List<Utility.ReportClass>();
                            List<Utility.ReportClass> Funcdata = new List<Utility.ReportClass>();

                            Utility.ReportClass GeoDataInd = new Utility.ReportClass();
                            Utility.ReportClass PaydataInd = new Utility.ReportClass();
                            Utility.ReportClass FuncdataInd = new Utility.ReportClass();

                            GeoData = GetViewData(0);
                            Paydata = GetViewData(1);
                            Funcdata = GetViewData(2);


                            foreach (var ca in EmpListpayrollEss)
                            {
                                //var path = "";
                                //path = Server.MapPath("~/App_Data/Menu_Json/" + ca.EmpCode + ".json");
                                if (ca.Login.UserId != null)
                                {
                                    int geoid = ca.GeoStruct.Id;

                                    int payid = ca.PayStruct.Id;

                                    int funid = ca.FuncStruct.Id;

                                    GeoDataInd = GetViewDataIndiv(geoid, payid, funid, GeoData, 0);
                                    PaydataInd = GetViewDataIndiv(geoid, payid, funid, Paydata, 1);
                                    FuncdataInd = GetViewDataIndiv(geoid, payid, funid, Funcdata, 2);
                                    GenericField100 oGenericField100 = new GenericField100()
                                    {
                                        Fld1 = ca.EmpCode,
                                        Fld2 = ca.EmpName != null ? ca.EmpName.FullNameFML.ToString() : null,
                                        Fld3 = ca.PayStruct != null && ca.PayStruct.Grade != null ? ca.PayStruct.Grade.Code.ToString() : null,
                                        Fld4 = ca.GeoStruct != null && ca.GeoStruct.Location != null && ca.GeoStruct.Location.LocationObj != null ? ca.GeoStruct.Location.LocationObj.LocCode.ToString() : null,
                                        Fld16 = ca.Login.UserId.ToString(),


                                    };
                                    if (comp)
                                    {
                                        oGenericField100.Fld99 = GeoDataInd.Company_Name;
                                    }
                                    if (div)
                                    {
                                        oGenericField100.Fld98 = GeoDataInd.Division_Name;
                                    }
                                    if (loca)
                                    {
                                        oGenericField100.Fld97 = GeoDataInd.LocDesc;
                                    }
                                    if (dept)
                                    {
                                        oGenericField100.Fld96 = GeoDataInd.DeptDesc;
                                    }
                                    if (grp)
                                    {
                                        oGenericField100.Fld95 = GeoDataInd.Group_Name;
                                    }
                                    if (unit)
                                    {
                                        oGenericField100.Fld94 = GeoDataInd.Unit_Name;
                                    }
                                    if (grade)
                                    {
                                        oGenericField100.Fld93 = PaydataInd.Grade_Name;
                                    }
                                    if (lvl)
                                    {
                                        oGenericField100.Fld92 = PaydataInd.Level_Name;
                                    }
                                    if (jobstat)
                                    {
                                        oGenericField100.Fld91 = GeoDataInd.JobStatus_Id.ToString();
                                    }
                                    if (job)
                                    {
                                        oGenericField100.Fld90 = FuncdataInd.Job_Name;
                                    }
                                    if (jobpos)
                                    {
                                        oGenericField100.Fld89 = FuncdataInd.JobPositionDesc;
                                    }
                                    if (emp)
                                    {
                                        oGenericField100.Fld88 = ca.EmpName.FullNameFML;
                                    }

                                    OGenericLoginmasterStatement.Add(oGenericField100);
                                }




                            }
                            return OGenericLoginmasterStatement;
                        }

                        break;
                    default:
                        return null;
                        break;


                }

            }
        }

        public static EmployeePayroll _returnGetEmployeeData(Int32 item, string MonYr)
        {
            using (DataBaseContext db = new DataBaseContext())
            {
                //////var OPayslipData_temp = db.EmployeePayroll
                //////               .Include(e => e.Employee.EmpOffInfo.PayProcessGroup)
                //////           .Include(e => e.SalaryT.Select(r => r.PayslipR))
                //////           .Include(e => e.SalaryT.Select(r => r.PayslipR.Select(a => a.GeoStruct.Location.LocationObj)))
                //////           .Include(e => e.SalaryT.Select(r => r.PayslipR.Select(t => t.PaySlipDetailEarnR)))
                //////           .Include(e => e.SalaryT.Select(r => r.PayslipR.Select(t => t.PaySlipDetailDedR)))
                //////           .Include(e => e.SalaryT.Select(r => r.PayslipR.Select(t => t.PaySlipDetailLeaveR)))
                //////           .Where(e => e.Employee.Id == item).AsParallel()
                //////           .FirstOrDefault();
                //////return OPayslipData_temp;

                var empPayroll = db.EmployeePayroll.Include(e => e.Employee).Include(e => e.Employee.EmpOffInfo)
                    .Include(e => e.Employee.EmpOffInfo.Bank)
                    .Where(e => e.Employee.Id == item).OrderBy(e => e.Id).SingleOrDefault();

                db.Entry(empPayroll).Collection(x => x.SalaryT).Query().Where(t => t.PayMonth == MonYr).Load();
                if (empPayroll.SalaryT != null)
                {
                    db.Entry(empPayroll.SalaryT.First()).Collection(x => x.PayslipR).Load();
                    if (db.Entry(empPayroll.SalaryT.First()).Collection(x => x.PayslipR).Query().Count() != 0)
                    {
                        db.Entry(empPayroll.SalaryT.First().PayslipR.First()).Collection(x => x.PaySlipDetailEarnR).Load();
                        db.Entry(empPayroll.SalaryT.First().PayslipR.First()).Collection(x => x.PaySlipDetailDedR).Load();
                        db.Entry(empPayroll.SalaryT.First().PayslipR.First()).Collection(x => x.PaySlipDetailLeaveR).Load();
                        db.Entry(empPayroll.SalaryT.First().PayslipR.First()).Reference(x => x.GeoStruct).Load();
                        db.Entry(empPayroll.SalaryT.First().PayslipR.First().GeoStruct).Reference(x => x.Location).Load();
                        db.Entry(empPayroll.SalaryT.First().PayslipR.First().GeoStruct.Location).Reference(x => x.LocationObj).Load();
                        db.Entry(empPayroll.SalaryT.First().PayslipR.First().GeoStruct.Location).Reference(x => x.BusinessCategory).Load();
                        db.Entry(empPayroll.SalaryT.First().PayslipR.First()).Reference(x => x.PayStruct).Load();
                        db.Entry(empPayroll.SalaryT.First().PayslipR.First().PayStruct).Reference(x => x.Grade).Load();
                        db.Entry(empPayroll.SalaryT.First().PayslipR.First()).Reference(x => x.FuncStruct).Load();
                        db.Entry(empPayroll.SalaryT.First().PayslipR.First().FuncStruct).Reference(x => x.Job).Load();


                    }
                }


                return empPayroll;
            }
        }

        public static List<GenericField100> GenerateTrainingReport(int CompanyAttendanceId, List<int> EmpAttendanceIdList, DateTime mFomDate, DateTime mToDate, string mObjectName, int CompanyId)
        {
            List<GenericField100> OGeneticAppraisalStatement = new List<GenericField100>();

            using (DataBaseContext db = new DataBaseContext())
            {


                switch (mObjectName)
                {

                    case "TRAININGSESSION":
                        //    var OAppCatMasterReportData = db.TrainingSession
                        //        .Include(e => e.SessionType)
                        //         .Include(e => e.Faculty)
                        //         .Include(q => q.Faculty).Include(q => q.Faculty.FacultyType).ToList();


                        //    if (OAppCatMasterReportData == null || OAppCatMasterReportData.Count() == 0)
                        //    {
                        //        return null;
                        //    }
                        //    else
                        //    {
                        //        foreach (var ca in OAppCatMasterReportData)
                        //        {
                        //            var v = ca.Faculty.FacultyType.LookupVal.ToString();
                        //            GenericField100 OGeneticApprStatement = new GenericField100()
                        //            {
                        //                Fld1 = ca.StartTime.ToString(),
                        //                Fld2 = ca.EndTime.ToString(),
                        //                Fld3 = ca.TotalHours.ToString(),
                        //                Fld4 = ca.SessionType.LookupVal.ToString(),
                        //                Fld5 = v
                        //            };
                        //            OGeneticAppraisalStatement.Add(OGeneticApprStatement);
                        //        }
                        //    }
                        return OGeneticAppraisalStatement;
                    default:
                        return null;
                        break;

                        break;
                }
            }
        }
        public class returnClass
        {
            public Int32 Id { get; set; }
            public string EmpCode { get; set; }
            public string PFNo { get; set; }
            public string PTNo { get; set; }
            public string PANNo { get; set; }
            public string AdharNo { get; set; }
            public string UANNo { get; set; }
            public string PensionNo { get; set; }
            public string ESICNo { get; set; }
            public string LWFNo { get; set; }
            public string EDLINo { get; set; }
            public string VCNo { get; set; }

            public string BirthDate { get; set; }
            public string JoiningDate { get; set; }
            public string ProbationPeriod { get; set; }
            public string ProbationDate { get; set; }
            public string ConfirmPeriod { get; set; }
            public string ConfirmationDate { get; set; }
            public string LastIncrementDate { get; set; }
            public string LastPromotionDate { get; set; }
            public string LastTransferDate { get; set; }
            public string SeniorityDate { get; set; }
            public string SeniorityNo { get; set; }
            public string RetirementDate { get; set; }
            public string ServiceLastDate { get; set; }
            public string PFJoingDate { get; set; }
            public string PensionJoingDate { get; set; }
            public string PFExitDate { get; set; }
            public string PensionExitDate { get; set; }
            // public ServiceBookDates ServiceBookDates { get; set; }
        }
        public static List<GenericField100> GenerateEmployeeInformation(int Comp_id, List<int> EmployeePayroll, List<String> Field, String Level)
        {
            using (DataBaseContext db = new DataBaseContext())
            {
                var DataRet = db.EmployeePayroll
                    .Include(e => e.Employee)
                    .Include(e => e.Employee.EmpName)
                    .Include(e => e.Employee.ServiceBookDates)
                    .Include(e => e.Employee.EmpOffInfo.NationalityID).Where(a => EmployeePayroll.Contains(a.Id))
                    .ToList();
                var fld1 = "";
                var fld2 = "";
                //if()
                // Utility.StringIdsToListString(Field);
                var fliter = string.Join(",", Field);
                //  var fliter = Field[0] + ", " + Field[1];
                var ListGenericField100 = new List<GenericField100>();
                foreach (var item in DataRet)
                {
                    GenericField100 oGenericField100 = new GenericField100();
                    oGenericField100.Fld1 = item.Employee.EmpCode;
                    oGenericField100.Fld2 = item.Employee.EmpName != null ? item.Employee.EmpName.FullNameFML : null;
                    var id = item.Employee.Id;

                    var qurey = db.Employee.Where(a => a.Id == id).Select("new (" + fliter + ")");
                    if (qurey != null)
                    {
                        Type t = null;
                        List<string> newString = new List<string>();
                        for (int i = 0; i < Field.Count; i++)
                        {

                            var d1 = qurey.Select(Field[i].Split('.')[Field[i].Split('.').Length - 1]).ToListAsync().Result[0];
                            if (d1 != null)
                            {
                                t = d1.GetType();
                                if (t.Name.Equals("DateTime"))
                                {
                                    fld1 = Convert.ToDateTime(d1).ToShortDateString();
                                }
                                else
                                {
                                    fld1 = d1.ToString();
                                }
                                newString.Add(fld1);
                            }
                        }
                        if (newString.Count == 1)
                        {
                            oGenericField100.Fld3 = newString[0];
                        }
                        if (newString.Count > 1)
                        {
                            oGenericField100.Fld3 = newString[0];
                            oGenericField100.Fld4 = newString[1];
                        }

                    }
                    ListGenericField100.Add(oGenericField100);
                }

                return ListGenericField100;
            }
        }

        public static List<GenericField100> GenerateEEISNWReport(int CompanyPayrollId, List<int> EmpPayrollIdList, List<string> mPayMonth, string mObjectName, int CompanyId, List<string> oth_idlist, List<string> salheadlist, List<string> loanadvidlist, List<string> SpecialGroupslist, List<int> EmpLeaveIdList, List<string> forithead, DateTime mFromDate, DateTime mToDate, DateTime pFromDate, DateTime pToDate, List<string> salheadlistLevel1, List<string> salheadlistLevel2, string ReportType)
        {
            using (DataBaseContext db = new DataBaseContext())
            {
                List<GenericField100> OGenericEEISSNWtatement = new List<GenericField100>();
                switch (mObjectName)
                {
                    case "WORKSUMMARY":

                        var iWorkSummaryDetails = db.Employee.Select(r => new
                        {
                            iEmployeeId = r.Id,
                            iGeoStructId = r.GeoStruct_Id,
                            iPayStructId = r.PayStruct_Id,
                            iFuncStructId = r.FuncStruct_Id,
                            iEmpCode = r.EmpCode,
                            iEmpName = r.EmpName.FullNameFML,
                            iLocationId = r.GeoStruct.Location_Id,
                            iDepartmentId = r.GeoStruct.Department_Id,

                        }).Where(e => EmpPayrollIdList.Contains(e.iEmployeeId)).ToList();

                        if (iWorkSummaryDetails == null || iWorkSummaryDetails.Count() == 0)
                        {
                            return null;
                        }
                        else
                        {
                            var month = false;
                            var emp = false;
                            var dept = false;
                            var loca = false;
                            var comp = false;
                            var grp = false;
                            var unit = false;
                            var div = false;
                            var regn = false;
                            var grade = false;
                            var lvl = false;
                            var jobstat = false;
                            var job = false;
                            var jobpos = false;
                            var vc = db.LookupValue.Where(a => forithead.Contains(a.Id.ToString())).ToList();

                            foreach (var item in vc)
                            {
                                if (item.LookupVal.ToUpper() == "MONTH")
                                {
                                    month = true;
                                }
                                if (item.LookupVal.ToUpper() == "LOCATION")
                                {

                                    loca = true;
                                }
                                if (item.LookupVal.ToUpper() == "EMPLOYEE")
                                {
                                    emp = true;
                                }
                                if (item.LookupVal.ToUpper() == "DEPARTMENT")
                                {
                                    dept = true;
                                }
                                if (item.LookupVal.ToUpper() == "COMPANY")
                                {
                                    comp = true;
                                }
                                if (item.LookupVal.ToUpper() == "GROUP")
                                {
                                    grp = true;
                                }
                                if (item.LookupVal.ToUpper() == "UNIT")
                                {
                                    unit = true;
                                }
                                if (item.LookupVal.ToUpper() == "DIVISION")
                                {
                                    div = true;
                                }
                                if (item.LookupVal.ToUpper() == "REGION")
                                {
                                    regn = true;
                                }
                                if (item.LookupVal.ToUpper() == "GRADE")
                                {
                                    grade = true;
                                }
                                if (item.LookupVal.ToUpper() == "LEVEL")
                                {
                                    lvl = true;
                                }
                                if (item.LookupVal.ToUpper() == "JOBSTATUS")
                                {
                                    jobstat = true;
                                }

                                if (item.LookupVal.ToUpper() == "JOB")
                                {
                                    job = true;
                                }
                                if (item.LookupVal.ToUpper() == "JOBPOSITION")
                                {
                                    jobpos = true;
                                }
                            }

                            Utility.GetOrganizationDataClass GeoDataInd = new Utility.GetOrganizationDataClass();

                            foreach (var ca in iWorkSummaryDetails)
                            {
                                int? geoid = ca.iGeoStructId;

                                int? payid = ca.iPayStructId;

                                int? funid = ca.iFuncStructId;

                                GeoStruct geostruct = db.GeoStruct.Find(geoid);

                                PayStruct paystruct = db.PayStruct.Find(payid);

                                FuncStruct funstruct = db.FuncStruct.Find(funid);

                                GeoDataInd = ReportRDLCObjectClass.GetOrganizationDataInd(geostruct, paystruct, funstruct, 0);

                                int HoCount = 0;
                                Employee OEmployee = db.Employee.Include(e => e.GeoStruct).Include(e => e.GeoStruct.Location).Where(e => e.Id == ca.iEmployeeId).SingleOrDefault();

                                for (DateTime i = pFromDate; i <= pToDate; i = i.AddDays(1))
                                {
                                    string HOWO = AttendanceProcess.iCheck_HWWO(Convert.ToInt32(SessionManager.CompanyId), OEmployee, i);
                                    if (HOWO.ToUpper() == "HOLIDAYOFF")
                                    {
                                        HoCount++;
                                    }
                                }
                                double LvCount = 0;
                                List<LvNewReq> OLvNewReq = db.LvNewReq.Include(e => e.EmployeeLeave).Include(e => e.EmployeeLeave.Employee).Where(e => (e.FromDate >= pFromDate && e.ToDate <= pToDate)
                                    && (e.EmployeeLeave.Employee.Id == ca.iEmployeeId)
                                    && (e.IsCancel == false && e.TrReject == false)).ToList();
                                if (OLvNewReq.Count() != 0)
                                {
                                    LvCount = OLvNewReq.Sum(r => r.DebitDays);
                                }


                                List<int> DiaryOffWeekCount = AttendanceProcess.iCheck_OFWeeklyOff(OEmployee, pFromDate, pToDate);
                                int iOffWCount = DiaryOffWeekCount.ElementAtOrDefault(0);
                                int iWeekOffCount = DiaryOffWeekCount.ElementAtOrDefault(1);
                                int OthRecoveryCount = DiaryOffWeekCount.ElementAtOrDefault(2);
                                int MainKacheriAssemblyCount = DiaryOffWeekCount.ElementAtOrDefault(3);
                                int BranchInspectionCount = DiaryOffWeekCount.ElementAtOrDefault(4);

                                List<KeyValuePair<string, int>> list = new List<KeyValuePair<string, int>> {

                                     new KeyValuePair<string, int>("HoliDays", HoCount),
                                     new KeyValuePair<string, int>("Leave", Convert.ToInt32(LvCount)),
                                     new KeyValuePair<string, int>("Office Work", iOffWCount),
                                     new KeyValuePair<string, int>("Weekly Off", iWeekOffCount),
                                     new KeyValuePair<string, int>("Other Recovery",OthRecoveryCount),
                                     new KeyValuePair<string, int>("Main Kacheri Assembly",MainKacheriAssemblyCount),
                                     new KeyValuePair<string, int>("Branch Inspection",BranchInspectionCount)
                                };

                                foreach (var item in list)
                                {
                                    GenericField100 OGenericObjStatement = new GenericField100()
                                    {

                                        Fld2 = ca.iEmpCode == null ? "" : ca.iEmpCode,
                                        Fld3 = ca.iEmpName == null ? "" : ca.iEmpName,
                                        Fld4 = pFromDate == null ? "" : pFromDate.ToShortDateString(),
                                        Fld5 = pToDate == null ? "" : pToDate.ToShortDateString(),
                                        Fld6 = GeoDataInd == null ? "" : GeoDataInd.GeoStruct_Location_Name,
                                        Fld7 = GeoDataInd == null ? "" : GeoDataInd.FuncStruct_Job_Name,
                                        Fld8 = item.Key,
                                        Fld9 = item.Value == 0 ? "0" : item.Value.ToString()

                                    };

                                    if (comp)
                                    {
                                        OGenericObjStatement.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                    }
                                    if (div)
                                    {
                                        OGenericObjStatement.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                    }
                                    if (loca)
                                    {
                                        OGenericObjStatement.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                    }
                                    if (dept)
                                    {
                                        OGenericObjStatement.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                    }
                                    if (grp)
                                    {
                                        OGenericObjStatement.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                    }
                                    if (unit)
                                    {
                                        OGenericObjStatement.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                    }
                                    if (grade)
                                    {
                                        OGenericObjStatement.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                    }
                                    if (lvl)
                                    {
                                        OGenericObjStatement.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                    }
                                    if (jobstat)
                                    {
                                        OGenericObjStatement.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                    }
                                    if (job)
                                    {
                                        OGenericObjStatement.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                    }
                                    if (jobpos)
                                    {
                                        OGenericObjStatement.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                    }
                                    if (emp)
                                    {
                                        OGenericObjStatement.Fld88 = ca.iEmpName;
                                    }

                                    OGenericEEISSNWtatement.Add(OGenericObjStatement);
                                }


                            }
                        }
                        return OGenericEEISSNWtatement;
                        break;

                    case "FINALAMOUNTSUMMARY":

                        var iFinalAmountSummaryDetails = db.Employee.Select(r => new
                        {
                            iEmployeeId = r.Id,
                            iGeoStructId = r.GeoStruct_Id,
                            iPayStructId = r.PayStruct_Id,
                            iFuncStructId = r.FuncStruct_Id,
                            iEmpCode = r.EmpCode,
                            iEmpName = r.EmpName.FullNameFML,
                            iLocationId = r.GeoStruct.Location_Id,
                            iDepartmentId = r.GeoStruct.Department_Id,

                        }).Where(e => EmpPayrollIdList.Contains(e.iEmployeeId)).ToList();

                        if (iFinalAmountSummaryDetails == null || iFinalAmountSummaryDetails.Count() == 0)
                        {
                            return null;
                        }
                        else
                        {
                            var month = false;
                            var emp = false;
                            var dept = false;
                            var loca = false;
                            var comp = false;
                            var grp = false;
                            var unit = false;
                            var div = false;
                            var regn = false;
                            var grade = false;
                            var lvl = false;
                            var jobstat = false;
                            var job = false;
                            var jobpos = false;
                            var vc = db.LookupValue.Where(a => forithead.Contains(a.Id.ToString())).ToList();

                            foreach (var item in vc)
                            {
                                if (item.LookupVal.ToUpper() == "MONTH")
                                {
                                    month = true;
                                }
                                if (item.LookupVal.ToUpper() == "LOCATION")
                                {

                                    loca = true;
                                }
                                if (item.LookupVal.ToUpper() == "EMPLOYEE")
                                {
                                    emp = true;
                                }
                                if (item.LookupVal.ToUpper() == "DEPARTMENT")
                                {
                                    dept = true;
                                }
                                if (item.LookupVal.ToUpper() == "COMPANY")
                                {
                                    comp = true;
                                }
                                if (item.LookupVal.ToUpper() == "GROUP")
                                {
                                    grp = true;
                                }
                                if (item.LookupVal.ToUpper() == "UNIT")
                                {
                                    unit = true;
                                }
                                if (item.LookupVal.ToUpper() == "DIVISION")
                                {
                                    div = true;
                                }
                                if (item.LookupVal.ToUpper() == "REGION")
                                {
                                    regn = true;
                                }
                                if (item.LookupVal.ToUpper() == "GRADE")
                                {
                                    grade = true;
                                }
                                if (item.LookupVal.ToUpper() == "LEVEL")
                                {
                                    lvl = true;
                                }
                                if (item.LookupVal.ToUpper() == "JOBSTATUS")
                                {
                                    jobstat = true;
                                }

                                if (item.LookupVal.ToUpper() == "JOB")
                                {
                                    job = true;
                                }
                                if (item.LookupVal.ToUpper() == "JOBPOSITION")
                                {
                                    jobpos = true;
                                }
                            }

                            Utility.GetOrganizationDataClass GeoDataInd = new Utility.GetOrganizationDataClass();

                            foreach (var ca in iFinalAmountSummaryDetails)
                            {
                                int? geoid = ca.iGeoStructId;

                                int? payid = ca.iPayStructId;

                                int? funid = ca.iFuncStructId;

                                GeoStruct geostruct = db.GeoStruct.Find(geoid);

                                PayStruct paystruct = db.PayStruct.Find(payid);

                                FuncStruct funstruct = db.FuncStruct.Find(funid);

                                GeoDataInd = ReportRDLCObjectClass.GetOrganizationDataInd(geostruct, paystruct, funstruct, 0);


                                Employee OEmployee = db.Employee.Include(e => e.GeoStruct).Include(e => e.GeoStruct.Location).Where(e => e.Id == ca.iEmployeeId).SingleOrDefault();

                                List<Utility.diaryleaveholidaylist> list = new List<Utility.diaryleaveholidaylist>();


                                for (DateTime i = pFromDate; i <= pToDate; i = i.AddDays(1))
                                {
                                    string HOWO = AttendanceProcess.iCheck_HWWO(Convert.ToInt32(SessionManager.CompanyId), OEmployee, i);
                                    if (HOWO.ToUpper() == "HOLIDAYOFF")
                                    {
                                        list.Add(new Utility.diaryleaveholidaylist
                                        {
                                            Date = i.ToShortDateString(),
                                            Amount = "0",
                                            Reason = "HoliDays",
                                            Remark = ""
                                        });
                                    }
                                }

                                List<LvNewReq> OLvNewReq = db.LvNewReq.Include(e => e.LeaveHead).Include(e => e.EmployeeLeave).Include(e => e.EmployeeLeave.Employee).Where(e => (e.FromDate >= pFromDate && e.ToDate <= pToDate)
                                    && (e.EmployeeLeave.Employee.Id == ca.iEmployeeId)
                                    && (e.IsCancel == false && e.TrReject == false)).ToList();
                                foreach (var item in OLvNewReq)
                                {
                                    DateTime iFromDate = Convert.ToDateTime(item.FromDate);
                                    DateTime iToDate = Convert.ToDateTime(item.ToDate);

                                    for (DateTime j = iFromDate; j <= iToDate; j = j.AddDays(1))
                                    {
                                        list.Add(new Utility.diaryleaveholidaylist
                                        {
                                            Date = j.ToShortDateString(),
                                            Amount = "0",
                                            Reason = item.LeaveHead.LvCode + " - " + item.Reason,
                                            Remark = ""
                                        });
                                    }
                                }


                                List<Utility.diaryleaveholidaylist> DiarySlmentDatelist = AttendanceProcess.iCheck_OFWeeklyOffDate(OEmployee, pFromDate, pToDate);

                                list.AddRange(DiarySlmentDatelist);

                                foreach (var item in list)
                                {
                                    GenericField100 OGenericObjStatement = new GenericField100()
                                    {

                                        Fld2 = ca.iEmpCode == null ? "" : ca.iEmpCode,
                                        Fld3 = ca.iEmpName == null ? "" : ca.iEmpName,
                                        Fld4 = pFromDate == null ? "" : pFromDate.ToShortDateString(),
                                        Fld5 = pToDate == null ? "" : pToDate.ToShortDateString(),
                                        Fld6 = GeoDataInd == null ? "" : GeoDataInd.GeoStruct_Location_Name,
                                        Fld7 = GeoDataInd == null ? "" : GeoDataInd.FuncStruct_Job_Name,
                                        Fld8 = item.Date == null ? "" : item.Date,
                                        Fld9 = item.Amount == null ? "" : item.Amount,
                                        Fld10 = item.Reason == null ? "" : item.Reason,
                                        Fld11 = item.Remark == null ? "" : item.Remark
                                    };

                                    if (comp)
                                    {
                                        OGenericObjStatement.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                    }
                                    if (div)
                                    {
                                        OGenericObjStatement.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                    }
                                    if (loca)
                                    {
                                        OGenericObjStatement.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                    }
                                    if (dept)
                                    {
                                        OGenericObjStatement.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                    }
                                    if (grp)
                                    {
                                        OGenericObjStatement.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                    }
                                    if (unit)
                                    {
                                        OGenericObjStatement.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                    }
                                    if (grade)
                                    {
                                        OGenericObjStatement.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                    }
                                    if (lvl)
                                    {
                                        OGenericObjStatement.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                    }
                                    if (jobstat)
                                    {
                                        OGenericObjStatement.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                    }
                                    if (job)
                                    {
                                        OGenericObjStatement.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                    }
                                    if (jobpos)
                                    {
                                        OGenericObjStatement.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                    }
                                    if (emp)
                                    {
                                        OGenericObjStatement.Fld88 = ca.iEmpName;
                                    }

                                    OGenericEEISSNWtatement.Add(OGenericObjStatement);
                                }


                            }
                        }
                        return OGenericEEISSNWtatement;
                        break;

                    case "MONTHLYSUMMARY":

                        var iMonthlySummaryDetails = db.Employee.Select(r => new
                        {
                            iEmployeeId = r.Id,
                            iGeoStructId = r.GeoStruct_Id,
                            iPayStructId = r.PayStruct_Id,
                            iFuncStructId = r.FuncStruct_Id,
                            iEmpCode = r.EmpCode,
                            iEmpName = r.EmpName.FullNameFML,
                            iLocationId = r.GeoStruct.Location_Id,
                            iDepartmentId = r.GeoStruct.Department_Id,

                        }).Where(e => EmpPayrollIdList.Contains(e.iEmployeeId)).ToList();

                        if (iMonthlySummaryDetails == null || iMonthlySummaryDetails.Count() == 0)
                        {
                            return null;
                        }
                        else
                        {
                            var month = false;
                            var emp = false;
                            var dept = false;
                            var loca = false;
                            var comp = false;
                            var grp = false;
                            var unit = false;
                            var div = false;
                            var regn = false;
                            var grade = false;
                            var lvl = false;
                            var jobstat = false;
                            var job = false;
                            var jobpos = false;
                            var vc = db.LookupValue.Where(a => forithead.Contains(a.Id.ToString())).ToList();

                            foreach (var item in vc)
                            {
                                if (item.LookupVal.ToUpper() == "MONTH")
                                {
                                    month = true;
                                }
                                if (item.LookupVal.ToUpper() == "LOCATION")
                                {

                                    loca = true;
                                }
                                if (item.LookupVal.ToUpper() == "EMPLOYEE")
                                {
                                    emp = true;
                                }
                                if (item.LookupVal.ToUpper() == "DEPARTMENT")
                                {
                                    dept = true;
                                }
                                if (item.LookupVal.ToUpper() == "COMPANY")
                                {
                                    comp = true;
                                }
                                if (item.LookupVal.ToUpper() == "GROUP")
                                {
                                    grp = true;
                                }
                                if (item.LookupVal.ToUpper() == "UNIT")
                                {
                                    unit = true;
                                }
                                if (item.LookupVal.ToUpper() == "DIVISION")
                                {
                                    div = true;
                                }
                                if (item.LookupVal.ToUpper() == "REGION")
                                {
                                    regn = true;
                                }
                                if (item.LookupVal.ToUpper() == "GRADE")
                                {
                                    grade = true;
                                }
                                if (item.LookupVal.ToUpper() == "LEVEL")
                                {
                                    lvl = true;
                                }
                                if (item.LookupVal.ToUpper() == "JOBSTATUS")
                                {
                                    jobstat = true;
                                }

                                if (item.LookupVal.ToUpper() == "JOB")
                                {
                                    job = true;
                                }
                                if (item.LookupVal.ToUpper() == "JOBPOSITION")
                                {
                                    jobpos = true;
                                }
                            }

                            Utility.GetOrganizationDataClass GeoDataInd = new Utility.GetOrganizationDataClass();

                            foreach (var ca in iMonthlySummaryDetails)
                            {
                                int? geoid = ca.iGeoStructId;

                                int? payid = ca.iPayStructId;

                                int? funid = ca.iFuncStructId;

                                GeoStruct geostruct = db.GeoStruct.Find(geoid);

                                PayStruct paystruct = db.PayStruct.Find(payid);

                                FuncStruct funstruct = db.FuncStruct.Find(funid);

                                GeoDataInd = ReportRDLCObjectClass.GetOrganizationDataInd(geostruct, paystruct, funstruct, 0);

                                int HoCount = 0;
                                Employee OEmployee = db.Employee.Include(e => e.GeoStruct).Include(e => e.GeoStruct.Location).Where(e => e.Id == ca.iEmployeeId).SingleOrDefault();

                                for (DateTime i = pFromDate; i <= pToDate; i = i.AddDays(1))
                                {
                                    string HOWO = AttendanceProcess.iCheck_HWWO(Convert.ToInt32(SessionManager.CompanyId), OEmployee, i);
                                    if (HOWO.ToUpper() == "HOLIDAYOFF")
                                    {
                                        HoCount++;
                                    }
                                }
                                double LvCount = 0;
                                List<LvNewReq> OLvNewReq = db.LvNewReq.Include(e => e.EmployeeLeave).Include(e => e.EmployeeLeave.Employee).Where(e => (e.FromDate >= pFromDate && e.ToDate <= pToDate)
                                    && (e.EmployeeLeave.Employee.Id == ca.iEmployeeId)
                                    && (e.IsCancel == false && e.TrReject == false)).ToList();
                                if (OLvNewReq.Count() != 0)
                                {
                                    LvCount = OLvNewReq.Sum(r => r.DebitDays);
                                }

                                List<int> DiaryOffWeekCount = AttendanceProcess.iCheck_OFWeeklyOff(OEmployee, pFromDate, pToDate);
                                int iOffWCount = DiaryOffWeekCount.ElementAtOrDefault(0);
                                int iWeekOffCount = DiaryOffWeekCount.ElementAtOrDefault(1);
                                int OthRecoveryCount = DiaryOffWeekCount.ElementAtOrDefault(2);
                                int MainKacheriAssemblyCount = DiaryOffWeekCount.ElementAtOrDefault(3);
                                int BranchInspectionCount = DiaryOffWeekCount.ElementAtOrDefault(4);

                                int SumofDiarySlment = ((iOffWCount + iWeekOffCount) + (OthRecoveryCount + MainKacheriAssemblyCount + BranchInspectionCount));
                                int TotalDays = 0;
                                for (DateTime m = pFromDate; m < pToDate; m = m.AddDays(1))
                                {
                                    TotalDays++;
                                }

                                int SumofOutdoor = TotalDays - ((HoCount + Convert.ToInt32(LvCount)) + SumofDiarySlment);

                                GenericField100 OGenericObjStatement = new GenericField100()
                                {

                                    Fld2 = ca.iEmpCode == null ? "" : ca.iEmpCode,
                                    Fld3 = ca.iEmpName == null ? "" : ca.iEmpName,
                                    Fld4 = pFromDate == null ? "" : pFromDate.ToShortDateString(),
                                    Fld5 = pToDate == null ? "" : pToDate.ToShortDateString(),
                                    Fld6 = GeoDataInd == null ? "" : GeoDataInd.GeoStruct_Location_Name,
                                    Fld7 = GeoDataInd == null ? "" : GeoDataInd.FuncStruct_Job_Name,
                                    Fld8 = TotalDays==null ? "0" : TotalDays.ToString(),
                                    Fld9 = SumofOutdoor == null ? "0" : SumofOutdoor.ToString(),
                                    Fld10 = LvCount == null ? "0" : LvCount.ToString(),
                                    Fld11 = HoCount== null ? "0" : HoCount.ToString(),
                                    Fld12 = SumofDiarySlment == null ? "0" : SumofDiarySlment.ToString(),
                                    Fld13 = TotalDays == null ? "0" : TotalDays.ToString()
                                };

                                if (comp)
                                {
                                    OGenericObjStatement.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                }
                                if (div)
                                {
                                    OGenericObjStatement.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                }
                                if (loca)
                                {
                                    OGenericObjStatement.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                }
                                if (dept)
                                {
                                    OGenericObjStatement.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                }
                                if (grp)
                                {
                                    OGenericObjStatement.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                }
                                if (unit)
                                {
                                    OGenericObjStatement.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                }
                                if (grade)
                                {
                                    OGenericObjStatement.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                }
                                if (lvl)
                                {
                                    OGenericObjStatement.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                }
                                if (jobstat)
                                {
                                    OGenericObjStatement.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                }
                                if (job)
                                {
                                    OGenericObjStatement.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                }
                                if (jobpos)
                                {
                                    OGenericObjStatement.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                }
                                if (emp)
                                {
                                    OGenericObjStatement.Fld88 = ca.iEmpName;
                                }

                                OGenericEEISSNWtatement.Add(OGenericObjStatement);



                            }
                        }
                        return OGenericEEISSNWtatement;
                        break;

                    case "APPRAISALEVALUATION":
                        //var OAppcatReportDataratingeval = db.EmployeeAppraisal
                        //.Include(e => e.EmpAppEvaluation)
                        //.Include(x => x.EmpAppEvaluation.Select(e => e.AppraisalPeriodCalendar))
                        //.Include(x => x.EmpAppEvaluation.Select(e => e.AppraisalSchedule))
                        //.Include(x => x.EmpAppEvaluation.Select(e => e.AppraisalSchedule.AppraisalPublish))
                        //.Include(e => e.EmpAppEvaluation.Select(r => r.EmpAppRatingConclusion))
                        //.Include(e => e.EmpAppEvaluation.Select(r => r.EmpAppRatingConclusion.Select(t => t.AppraisalAssistance)))
                        //.Include(e => e.EmpAppEvaluation.Select(r => r.EmpAppRatingConclusion.Select(t => t.EmpAppRating)))
                        // .Include(e => e.EmpAppEvaluation.Select(r => r.EmpAppRatingConclusion.Select(t => t.EmpAppRating.Select(y => y.AppAssignment))))
                        // .Include(e => e.EmpAppEvaluation.Select(r => r.EmpAppRatingConclusion.Select(t => t.EmpAppRating.Select(y => y.AppAssignment.AppCategory))))
                        // .Include(e => e.EmpAppEvaluation.Select(r => r.EmpAppRatingConclusion.Select(t => t.EmpAppRating.Select(y => y.AppAssignment.AppSubCategory))))
                        // .Include(x => x.Employee)
                        //     .Include(x => x.Employee.EmpName)
                        //     .Include(x => x.Employee.FuncStruct)
                        //      .Include(x => x.Employee.PayStruct)
                        //       .Include(x => x.Employee.GeoStruct)
                        //     .Where(e => EmpPayrollIdList.Contains(e.Employee.Id)).ToList();


                        var OAppcatReportDataratingeval = db.EmployeeAppraisal.Select(d => new
                        {

                            OEmployeeId = d.Employee.Id,
                            OEmpCode = d.Employee.EmpCode,
                            OEmpName = d.Employee.EmpName.FullNameFML,
                            OGeoStructId = d.Employee.GeoStruct.Id,
                            OPayStructId = d.Employee.PayStruct.Id,
                            OFuncStructId = d.Employee.FuncStruct.Id,
                            OJobName = d.Employee.FuncStruct.Job.Name,
                            ODeptDesc = d.Employee.GeoStruct.Department.DepartmentObj.DeptDesc,
                            ODivisionName = d.Employee.GeoStruct.Division.Name,
                            OGradeName = d.Employee.PayStruct.Grade.Name,
                            OEmpAppEvaluation = d.EmpAppEvaluation.Select(p => new
                            {
                                OAppraisalPeriodCalendarFromDate = p.AppraisalPeriodCalendar.FromDate,
                                OAppraisalPeriodCalendarToDate = p.AppraisalPeriodCalendar.ToDate,
                                OAppraisalPeriodCalendarFullDetails = p.AppraisalPeriodCalendar.FullDetails,
                                OAppraisalScheduleBatchCode = p.AppraisalSchedule.BatchCode,
                                OAppraisalScheduleBatchName = p.AppraisalSchedule.BatchName,
                                OMaxPoints = p.MaxPoints,
                                OSecurePoints = p.SecurePoints,
                                OIncPercent = p.IncPercent,
                                OIsRecommendDiscussion = p.IsRecommendDiscussion,
                                ODiscussionSchedule = p.DiscussionSchedule,
                                OScorePercentage = p.ScorePercentage,
                                OHrRecommendIncrement = p.HrRecommendIncrement,
                                OIsRecommnedPromotion = p.IsRecommnedPromotion,
                                OIsRecommendTraining = p.IsRecommendTraining,
                                OIsTrClose = p.IsTrClose,
                                OEmpAppRatingConclusion = p.EmpAppRatingConclusion.Select(z => new
                                {
                                    OAppraisalAssistanceLookupVal = z.AppraisalAssistance.LookupVal,
                                    OEmpAppRating = z.EmpAppRating.Select(w => new
                                    {
                                        ORatingPoints = w.RatingPoints,
                                        OAppAssignment = w.AppAssignment,
                                        OAppAssignmentAppCategoryName = w.AppAssignment.AppCategory.Name,
                                        OAppAssignmentAppSubCategoryName = w.AppAssignment.AppSubCategory.Name,
                                    }).ToList()
                                }).ToList()
                            }).ToList()

                        }).Where(e => EmpPayrollIdList.Contains(e.OEmployeeId)).ToList();

                        if (OAppcatReportDataratingeval == null || OAppcatReportDataratingeval.Count() == 0)
                        {
                            return null;
                        }
                        else
                        {
                            var hrlist = SpecialGroupslist.ToList();
                            var state = false;
                            var hrvar = false;

                            foreach (var item1 in hrlist)
                            {
                                if (item1 == "Further Discussion")
                                {
                                    hrvar = true;
                                }
                                else if (item1 == "Increment")
                                {
                                    hrvar = true;
                                }
                                else if (item1 == "Promotion")
                                {
                                    hrvar = true;
                                }
                                else if (item1 == "Training")
                                {
                                    hrvar = true;
                                }
                            }
                            var emp = false;
                            var dept = false;
                            var loca = false;
                            var comp = false;
                            var grp = false;
                            var unit = false;
                            var div = false;
                            var regn = false;
                            var grade = false;
                            var lvl = false;
                            var jobstat = false;
                            var job = false;
                            var jobpos = false;
                            var vc = db.LookupValue.Where(a => forithead.Contains(a.Id.ToString())).ToList();


                            foreach (var item in vc)
                            {
                                //if (item.LookupVal.ToUpper() == "MONTH")
                                //{
                                //    month = true;
                                //}
                                if (item.LookupVal.ToUpper() == "LOCATION")
                                {

                                    loca = true;
                                }
                                if (item.LookupVal.ToUpper() == "EMPLOYEE")
                                {
                                    emp = true;
                                }
                                if (item.LookupVal.ToUpper() == "DEPARTMENT")
                                {
                                    dept = true;
                                }
                                if (item.LookupVal.ToUpper() == "COMPANY")
                                {
                                    comp = true;
                                }
                                if (item.LookupVal.ToUpper() == "GROUP")
                                {
                                    grp = true;
                                }
                                if (item.LookupVal.ToUpper() == "UNIT")
                                {
                                    unit = true;
                                }
                                if (item.LookupVal.ToUpper() == "DIVISION")
                                {
                                    div = true;
                                }
                                if (item.LookupVal.ToUpper() == "REGION")
                                {
                                    regn = true;
                                }
                                if (item.LookupVal.ToUpper() == "GRADE")
                                {
                                    grade = true;
                                }
                                if (item.LookupVal.ToUpper() == "LEVEL")
                                {
                                    lvl = true;
                                }
                                if (item.LookupVal.ToUpper() == "JOBSTATUS")
                                {
                                    jobstat = true;
                                }

                                if (item.LookupVal.ToUpper() == "JOB")
                                {
                                    job = true;
                                }
                                if (item.LookupVal.ToUpper() == "JOBPOSITION")
                                {
                                    jobpos = true;
                                }
                            }

                            Utility.GetOrganizationDataClass GeoDataInd = new Utility.GetOrganizationDataClass();

                            foreach (var ca in OAppcatReportDataratingeval)
                            {
                                foreach (var item in ca.OEmpAppEvaluation)
                                {
                                    if (item.OAppraisalPeriodCalendarFromDate >= pFromDate && item.OAppraisalPeriodCalendarToDate <= pToDate)
                                    {
                                        //var pub = item.AppraisalSchedule.AppraisalPublish.ToList();

                                        int? geoid = ca.OGeoStructId;

                                        int? payid = ca.OPayStructId;

                                        int? funid = ca.OFuncStructId;

                                        GeoStruct geostruct = db.GeoStruct.Find(geoid);

                                        PayStruct paystruct = db.PayStruct.Find(payid);

                                        FuncStruct funstruct = db.FuncStruct.Find(funid);

                                        GeoDataInd = ReportRDLCObjectClass.GetOrganizationDataInd(geostruct, paystruct, funstruct, 0);

                                        if (salheadlist.Count() > 0)
                                        {
                                            foreach (var batch in salheadlist)
                                            {

                                                if (batch.ToUpper() == item.OAppraisalScheduleBatchName.ToUpper())
                                                {

                                                    if (GeoDataInd != null)
                                                    {
                                                        foreach (var item1 in item.OEmpAppRatingConclusion)
                                                        {
                                                            foreach (var item2 in item1.OEmpAppRating)
                                                            {
                                                                if (item2.OAppAssignment != null)
                                                                {
                                                                    if (SpecialGroupslist.Count() != 0)
                                                                    {
                                                                        foreach (var item3 in SpecialGroupslist)
                                                                        {
                                                                            if (item3 == "Increment" && item.OHrRecommendIncrement == true)
                                                                            {

                                                                                GenericField100 OGeneticApprStatement = new GenericField100()
                                                                                {
                                                                                    Fld5 = item.OAppraisalPeriodCalendarFullDetails == null ? "" : item.OAppraisalPeriodCalendarFullDetails,
                                                                                    // Fld1 = item.AppraisalSchedule == null ? "" : item.AppraisalSchedule.BatchCode.ToString(),
                                                                                    Fld2 = item.OAppraisalScheduleBatchName == null ? "" : item.OAppraisalScheduleBatchName,
                                                                                    Fld3 = item.OMaxPoints == null ? "" : item.OMaxPoints.ToString(),
                                                                                    Fld4 = item.OSecurePoints == null ? "" : item.OSecurePoints.ToString(),
                                                                                    Fld6 = item.OIncPercent == null ? "" : item.OIncPercent.ToString(),
                                                                                    // Fld7 = item1.IsTrClose == null ? "" : item1.IsTrClose.ToString(),
                                                                                    Fld8 = ca.OEmpCode == null ? "" : ca.OEmpCode,
                                                                                    Fld9 = ca.OEmpName == null ? "" : ca.OEmpName,

                                                                                    Fld7 = item3 == "Further Discussion" && item.OIsRecommendDiscussion == true ? "Further Discussion Date" : "",
                                                                                    //Fld7 = item.OIsRecommendDiscussion == true ? "" : "value",

                                                                                    Fld11 = item.ODiscussionSchedule == null ? "" : item.ODiscussionSchedule.Value.ToShortDateString(),
                                                                                    Fld12 = item.OScorePercentage == null ? "" : item.OScorePercentage.ToString(),
                                                                                    Fld13 = item.OHrRecommendIncrement == null ? "" : item.OHrRecommendIncrement.ToString(),
                                                                                    Fld14 = item.OIsRecommnedPromotion == null ? "" : item.OIsRecommnedPromotion.ToString(),
                                                                                    Fld15 = item.OIsRecommendTraining == null ? "" : item.OIsRecommendTraining.ToString(),
                                                                                    Fld16 = item.OIsTrClose == null ? "" : item.OIsTrClose.ToString(),
                                                                                    Fld18 = item2.OAppAssignmentAppCategoryName == null ? "" : item2.OAppAssignmentAppCategoryName,
                                                                                    Fld17 = item2.OAppAssignmentAppSubCategoryName == null ? "" : item2.OAppAssignmentAppSubCategoryName,
                                                                                };
                                                                                if (comp)
                                                                                {
                                                                                    OGeneticApprStatement.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                                                }
                                                                                if (div)
                                                                                {
                                                                                    OGeneticApprStatement.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                                                }
                                                                                if (loca)
                                                                                {
                                                                                    OGeneticApprStatement.Fld97 = GeoDataInd.GeoStruct_Location_Code;
                                                                                }
                                                                                if (dept)
                                                                                {
                                                                                    OGeneticApprStatement.Fld96 = GeoDataInd.GeoStruct_Department_Code;
                                                                                }
                                                                                if (grp)
                                                                                {
                                                                                    OGeneticApprStatement.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                                                }
                                                                                if (unit)
                                                                                {
                                                                                    OGeneticApprStatement.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                                                }
                                                                                if (hrvar)
                                                                                {
                                                                                    OGeneticApprStatement.Fld87 = item3;
                                                                                }

                                                                                OGenericEEISSNWtatement.Add(OGeneticApprStatement);
                                                                            }
                                                                            else if (item3 == "Promotion" && item.OIsRecommnedPromotion == true)
                                                                            {

                                                                                GenericField100 OGeneticApprStatement = new GenericField100()
                                                                                {
                                                                                    Fld5 = item.OAppraisalPeriodCalendarFullDetails == null ? "" : item.OAppraisalPeriodCalendarFullDetails,
                                                                                    // Fld1 = item.AppraisalSchedule == null ? "" : item.AppraisalSchedule.BatchCode.ToString(),
                                                                                    Fld2 = item.OAppraisalScheduleBatchName == null ? "" : item.OAppraisalScheduleBatchName,
                                                                                    Fld3 = item.OMaxPoints == null ? "" : item.OMaxPoints.ToString(),
                                                                                    Fld4 = item.OSecurePoints == null ? "" : item.OSecurePoints.ToString(),
                                                                                    Fld6 = item.OIncPercent == null ? "" : item.OIncPercent.ToString(),
                                                                                    // Fld7 = item1.IsTrClose == null ? "" : item1.IsTrClose.ToString(),
                                                                                    Fld8 = ca.OEmpCode == null ? "" : ca.OEmpCode,
                                                                                    Fld9 = ca.OEmpName == null ? "" : ca.OEmpName,

                                                                                    Fld7 = item3 == "Further Discussion" && item.OIsRecommendDiscussion == true ? "Further Discussion Date" : "",
                                                                                    //Fld7 = item.OIsRecommendDiscussion == true ? "" : "value",

                                                                                    Fld11 = item.ODiscussionSchedule == null ? "" : item.ODiscussionSchedule.Value.ToShortDateString(),
                                                                                    Fld12 = item.OScorePercentage == null ? "" : item.OScorePercentage.ToString(),
                                                                                    Fld13 = item.OHrRecommendIncrement == null ? "" : item.OHrRecommendIncrement.ToString(),
                                                                                    Fld14 = item.OIsRecommnedPromotion == null ? "" : item.OIsRecommnedPromotion.ToString(),
                                                                                    Fld15 = item.OIsRecommendTraining == null ? "" : item.OIsRecommendTraining.ToString(),
                                                                                    Fld16 = item.OIsTrClose == null ? "" : item.OIsTrClose.ToString(),
                                                                                    Fld18 = item2.OAppAssignmentAppCategoryName == null ? "" : item2.OAppAssignmentAppCategoryName,
                                                                                    Fld17 = item2.OAppAssignmentAppSubCategoryName == null ? "" : item2.OAppAssignmentAppSubCategoryName,
                                                                                };
                                                                                if (comp)
                                                                                {
                                                                                    OGeneticApprStatement.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                                                }
                                                                                if (div)
                                                                                {
                                                                                    OGeneticApprStatement.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                                                }
                                                                                if (loca)
                                                                                {
                                                                                    OGeneticApprStatement.Fld97 = GeoDataInd.GeoStruct_Location_Code;
                                                                                }
                                                                                if (dept)
                                                                                {
                                                                                    OGeneticApprStatement.Fld96 = GeoDataInd.GeoStruct_Department_Code;
                                                                                }
                                                                                if (grp)
                                                                                {
                                                                                    OGeneticApprStatement.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                                                }
                                                                                if (unit)
                                                                                {
                                                                                    OGeneticApprStatement.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                                                }
                                                                                if (hrvar)
                                                                                {
                                                                                    OGeneticApprStatement.Fld87 = item3;
                                                                                }

                                                                                OGenericEEISSNWtatement.Add(OGeneticApprStatement);
                                                                            }
                                                                            else if (item3 == "Training" && item.OIsRecommendTraining == true)
                                                                            {

                                                                                GenericField100 OGeneticApprStatement = new GenericField100()
                                                                                {
                                                                                    Fld5 = item.OAppraisalPeriodCalendarFullDetails == null ? "" : item.OAppraisalPeriodCalendarFullDetails,
                                                                                    // Fld1 = item.AppraisalSchedule == null ? "" : item.AppraisalSchedule.BatchCode.ToString(),
                                                                                    Fld2 = item.OAppraisalScheduleBatchName == null ? "" : item.OAppraisalScheduleBatchName,
                                                                                    Fld3 = item.OMaxPoints == null ? "" : item.OMaxPoints.ToString(),
                                                                                    Fld4 = item.OSecurePoints == null ? "" : item.OSecurePoints.ToString(),
                                                                                    Fld6 = item.OIncPercent == null ? "" : item.OIncPercent.ToString(),
                                                                                    // Fld7 = item1.IsTrClose == null ? "" : item1.IsTrClose.ToString(),
                                                                                    Fld8 = ca.OEmpCode == null ? "" : ca.OEmpCode,
                                                                                    Fld9 = ca.OEmpName == null ? "" : ca.OEmpName,

                                                                                    Fld7 = item3 == "Further Discussion" && item.OIsRecommendDiscussion == true ? "Further Discussion Date" : "",
                                                                                    //Fld7 = item.OIsRecommendDiscussion == true ? "" : "value",

                                                                                    Fld11 = item.ODiscussionSchedule == null ? "" : item.ODiscussionSchedule.Value.ToShortDateString(),
                                                                                    Fld12 = item.OScorePercentage == null ? "" : item.OScorePercentage.ToString(),
                                                                                    Fld13 = item.OHrRecommendIncrement == null ? "" : item.OHrRecommendIncrement.ToString(),
                                                                                    Fld14 = item.OIsRecommnedPromotion == null ? "" : item.OIsRecommnedPromotion.ToString(),
                                                                                    Fld15 = item.OIsRecommendTraining == null ? "" : item.OIsRecommendTraining.ToString(),
                                                                                    Fld16 = item.OIsTrClose == null ? "" : item.OIsTrClose.ToString(),
                                                                                    Fld18 = item2.OAppAssignmentAppCategoryName == null ? "" : item2.OAppAssignmentAppCategoryName,
                                                                                    Fld17 = item2.OAppAssignmentAppSubCategoryName == null ? "" : item2.OAppAssignmentAppSubCategoryName,
                                                                                };
                                                                                if (comp)
                                                                                {
                                                                                    OGeneticApprStatement.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                                                }
                                                                                if (div)
                                                                                {
                                                                                    OGeneticApprStatement.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                                                }
                                                                                if (loca)
                                                                                {
                                                                                    OGeneticApprStatement.Fld97 = GeoDataInd.GeoStruct_Location_Code;
                                                                                }
                                                                                if (dept)
                                                                                {
                                                                                    OGeneticApprStatement.Fld96 = GeoDataInd.GeoStruct_Department_Code;
                                                                                }
                                                                                if (grp)
                                                                                {
                                                                                    OGeneticApprStatement.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                                                }
                                                                                if (unit)
                                                                                {
                                                                                    OGeneticApprStatement.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                                                }
                                                                                if (hrvar)
                                                                                {
                                                                                    OGeneticApprStatement.Fld87 = item3;
                                                                                }

                                                                                OGenericEEISSNWtatement.Add(OGeneticApprStatement);
                                                                            }
                                                                            else if (item3 == "Further Discussion" && item.OIsRecommendDiscussion == true)
                                                                            {

                                                                                GenericField100 OGeneticApprStatement = new GenericField100()
                                                                                {
                                                                                    Fld5 = item.OAppraisalPeriodCalendarFullDetails == null ? "" : item.OAppraisalPeriodCalendarFullDetails,
                                                                                    // Fld1 = item.AppraisalSchedule == null ? "" : item.AppraisalSchedule.BatchCode.ToString(),
                                                                                    Fld2 = item.OAppraisalScheduleBatchName == null ? "" : item.OAppraisalScheduleBatchName,
                                                                                    Fld3 = item.OMaxPoints == null ? "" : item.OMaxPoints.ToString(),
                                                                                    Fld4 = item.OSecurePoints == null ? "" : item.OSecurePoints.ToString(),
                                                                                    Fld6 = item.OIncPercent == null ? "" : item.OIncPercent.ToString(),
                                                                                    // Fld7 = item1.IsTrClose == null ? "" : item1.IsTrClose.ToString(),
                                                                                    Fld8 = ca.OEmpCode == null ? "" : ca.OEmpCode,
                                                                                    Fld9 = ca.OEmpName == null ? "" : ca.OEmpName,

                                                                                    Fld7 = item3 == "Further Discussion" && item.OIsRecommendDiscussion == true ? "Further Discussion Date" : "",
                                                                                    //Fld7 = item.OIsRecommendDiscussion == true ? "" : "value",

                                                                                    Fld11 = item.ODiscussionSchedule == null ? "" : item.ODiscussionSchedule.Value.ToShortDateString(),
                                                                                    Fld12 = item.OScorePercentage == null ? "" : item.OScorePercentage.ToString(),
                                                                                    Fld13 = item.OHrRecommendIncrement == null ? "" : item.OHrRecommendIncrement.ToString(),
                                                                                    Fld14 = item.OIsRecommnedPromotion == null ? "" : item.OIsRecommnedPromotion.ToString(),
                                                                                    Fld15 = item.OIsRecommendTraining == null ? "" : item.OIsRecommendTraining.ToString(),
                                                                                    Fld16 = item.OIsTrClose == null ? "" : item.OIsTrClose.ToString(),
                                                                                    Fld18 = item2.OAppAssignmentAppCategoryName == null ? "" : item2.OAppAssignmentAppCategoryName,
                                                                                    Fld17 = item2.OAppAssignmentAppSubCategoryName == null ? "" : item2.OAppAssignmentAppSubCategoryName,
                                                                                };
                                                                                if (comp)
                                                                                {
                                                                                    OGeneticApprStatement.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                                                }
                                                                                if (div)
                                                                                {
                                                                                    OGeneticApprStatement.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                                                }
                                                                                if (loca)
                                                                                {
                                                                                    OGeneticApprStatement.Fld97 = GeoDataInd.GeoStruct_Location_Code;
                                                                                }
                                                                                if (dept)
                                                                                {
                                                                                    OGeneticApprStatement.Fld96 = GeoDataInd.GeoStruct_Department_Code;
                                                                                }
                                                                                if (grp)
                                                                                {
                                                                                    OGeneticApprStatement.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                                                }
                                                                                if (unit)
                                                                                {
                                                                                    OGeneticApprStatement.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                                                }
                                                                                if (hrvar)
                                                                                {
                                                                                    OGeneticApprStatement.Fld87 = item3;
                                                                                }

                                                                                OGenericEEISSNWtatement.Add(OGeneticApprStatement);
                                                                            }

                                                                            //if (item.OIsRecommendDiscussion == true || item.OIsRecommendTraining == true || item.OIsRecommnedPromotion == true || item.OHrRecommendIncrement == true)
                                                                            //{

                                                                            //    GenericField100 OGeneticApprStatement = new GenericField100()
                                                                            //    {
                                                                            //        Fld5 = item.OAppraisalPeriodCalendarFullDetails == null ? "" : item.OAppraisalPeriodCalendarFullDetails,
                                                                            //        // Fld1 = item.AppraisalSchedule == null ? "" : item.AppraisalSchedule.BatchCode.ToString(),
                                                                            //        Fld2 = item.OAppraisalScheduleBatchName == null ? "" : item.OAppraisalScheduleBatchName,
                                                                            //        Fld3 = item.OMaxPoints == null ? "" : item.OMaxPoints.ToString(),
                                                                            //        Fld4 = item.OSecurePoints == null ? "" : item.OSecurePoints.ToString(),
                                                                            //        Fld6 = item.OIncPercent == null ? "" : item.OIncPercent.ToString(),
                                                                            //        // Fld7 = item1.IsTrClose == null ? "" : item1.IsTrClose.ToString(),
                                                                            //        Fld8 = ca.OEmpCode == null ? "" : ca.OEmpCode,
                                                                            //        Fld9 = ca.OEmpName == null ? "" : ca.OEmpName,

                                                                            //        Fld7 = item3 == "Further Discussion" && item.OIsRecommendDiscussion == true ? "Further Discussion Date" : "",
                                                                            //        //Fld7 = item.OIsRecommendDiscussion == true ? "" : "value",

                                                                            //        Fld11 = item.ODiscussionSchedule == null ? "" : item.ODiscussionSchedule.Value.ToShortDateString(),
                                                                            //        Fld12 = item.OScorePercentage == null ? "" : item.OScorePercentage.ToString(),
                                                                            //        Fld13 = item.OHrRecommendIncrement == null ? "" : item.OHrRecommendIncrement.ToString(),
                                                                            //        Fld14 = item.OIsRecommnedPromotion == null ? "" : item.OIsRecommnedPromotion.ToString(),
                                                                            //        Fld15 = item.OIsRecommendTraining == null ? "" : item.OIsRecommendTraining.ToString(),
                                                                            //        Fld16 = item.OIsTrClose == null ? "" : item.OIsTrClose.ToString(),
                                                                            //        Fld18 = item2.OAppAssignmentAppCategoryName == null ? "" : item2.OAppAssignmentAppCategoryName,
                                                                            //        Fld17 = item2.OAppAssignmentAppSubCategoryName == null ? "" : item2.OAppAssignmentAppSubCategoryName,
                                                                            //    };
                                                                            //    if (comp)
                                                                            //    {
                                                                            //        OGeneticApprStatement.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                                            //    }
                                                                            //    if (div)
                                                                            //    {
                                                                            //        OGeneticApprStatement.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                                            //    }
                                                                            //    if (loca)
                                                                            //    {
                                                                            //        OGeneticApprStatement.Fld97 = GeoDataInd.GeoStruct_Location_Code;
                                                                            //    }
                                                                            //    if (dept)
                                                                            //    {
                                                                            //        OGeneticApprStatement.Fld96 = GeoDataInd.GeoStruct_Department_Code;
                                                                            //    }
                                                                            //    if (grp)
                                                                            //    {
                                                                            //        OGeneticApprStatement.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                                            //    }
                                                                            //    if (unit)
                                                                            //    {
                                                                            //        OGeneticApprStatement.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                                            //    }
                                                                            //    if (hrvar)
                                                                            //    {
                                                                            //        OGeneticApprStatement.Fld87 = item3;
                                                                            //    }

                                                                            //    OGenericEEISSNWtatement.Add(OGeneticApprStatement);
                                                                            //}
                                                                        }
                                                                    }

                                                                    else
                                                                    {
                                                                        List<string> recm = new List<string>() { "Increment", "Promotion", "Training", "Further Discussion" };

                                                                        foreach (var recom in recm)
                                                                        {
                                                                            if (recom == "Increment" && item.OHrRecommendIncrement == true)
                                                                            {
                                                                                hrvar = true;

                                                                                GenericField100 OGeneticApprStatement = new GenericField100()
                                                                                {
                                                                                    Fld5 = item.OAppraisalPeriodCalendarFullDetails == null ? "" : item.OAppraisalPeriodCalendarFullDetails,
                                                                                    // Fld1 = item.AppraisalSchedule == null ? "" : item.AppraisalSchedule.BatchCode.ToString(),
                                                                                    Fld2 = item.OAppraisalScheduleBatchName == null ? "" : item.OAppraisalScheduleBatchName,
                                                                                    Fld3 = item.OMaxPoints == null ? "" : item.OMaxPoints.ToString(),
                                                                                    Fld4 = item.OSecurePoints == null ? "" : item.OSecurePoints.ToString(),
                                                                                    Fld6 = item.OIncPercent == null ? "" : item.OIncPercent.ToString(),
                                                                                    // Fld7 = item1.IsTrClose == null ? "" : item1.IsTrClose.ToString(),
                                                                                    Fld8 = ca.OEmpCode == null ? "" : ca.OEmpCode,
                                                                                    Fld9 = ca.OEmpName == null ? "" : ca.OEmpName,
                                                                                    Fld7 = recom == "Further Discussion" && item.OIsRecommendDiscussion == true ? "Further Discussion Date" : "",
                                                                                    // Fld7 = item.OIsRecommendDiscussion == true ? "" : "value",
                                                                                    Fld11 = item.ODiscussionSchedule == null ? "" : item.ODiscussionSchedule.Value.ToShortDateString(),
                                                                                    Fld12 = item.OScorePercentage == null ? "" : item.OScorePercentage.ToString(),
                                                                                    Fld13 = item.OHrRecommendIncrement == null ? "" : item.OHrRecommendIncrement.ToString(),
                                                                                    Fld14 = item.OIsRecommnedPromotion == null ? "" : item.OIsRecommnedPromotion.ToString(),
                                                                                    Fld15 = item.OIsRecommendTraining == null ? "" : item.OIsRecommendTraining.ToString(),
                                                                                    Fld16 = item.OIsTrClose == null ? "" : item.OIsTrClose.ToString(),
                                                                                    Fld18 = item2.OAppAssignmentAppCategoryName == null ? "" : item2.OAppAssignmentAppCategoryName,
                                                                                    Fld17 = item2.OAppAssignmentAppSubCategoryName == null ? "" : item2.OAppAssignmentAppSubCategoryName,
                                                                                };
                                                                                if (comp)
                                                                                {
                                                                                    OGeneticApprStatement.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                                                }
                                                                                if (div)
                                                                                {
                                                                                    OGeneticApprStatement.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                                                }
                                                                                if (loca)
                                                                                {
                                                                                    OGeneticApprStatement.Fld97 = GeoDataInd.GeoStruct_Location_Code;
                                                                                }
                                                                                if (dept)
                                                                                {
                                                                                    OGeneticApprStatement.Fld96 = GeoDataInd.GeoStruct_Department_Code;
                                                                                }
                                                                                if (grp)
                                                                                {
                                                                                    OGeneticApprStatement.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                                                }
                                                                                if (unit)
                                                                                {
                                                                                    OGeneticApprStatement.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                                                }
                                                                                if (hrvar)
                                                                                {
                                                                                    OGeneticApprStatement.Fld87 = recom;
                                                                                }


                                                                                OGenericEEISSNWtatement.Add(OGeneticApprStatement);

                                                                            }
                                                                            else if (recom == "Promotion" && item.OIsRecommnedPromotion == true)
                                                                            {
                                                                                hrvar = true;

                                                                                GenericField100 OGeneticApprStatement = new GenericField100()
                                                                                {
                                                                                    Fld5 = item.OAppraisalPeriodCalendarFullDetails == null ? "" : item.OAppraisalPeriodCalendarFullDetails,
                                                                                    // Fld1 = item.AppraisalSchedule == null ? "" : item.AppraisalSchedule.BatchCode.ToString(),
                                                                                    Fld2 = item.OAppraisalScheduleBatchName == null ? "" : item.OAppraisalScheduleBatchName,
                                                                                    Fld3 = item.OMaxPoints == null ? "" : item.OMaxPoints.ToString(),
                                                                                    Fld4 = item.OSecurePoints == null ? "" : item.OSecurePoints.ToString(),
                                                                                    Fld6 = item.OIncPercent == null ? "" : item.OIncPercent.ToString(),
                                                                                    // Fld7 = item1.IsTrClose == null ? "" : item1.IsTrClose.ToString(),
                                                                                    Fld8 = ca.OEmpCode == null ? "" : ca.OEmpCode,
                                                                                    Fld9 = ca.OEmpName == null ? "" : ca.OEmpName,
                                                                                    Fld7 = recom == "Further Discussion" && item.OIsRecommendDiscussion == true ? "Further Discussion Date" : "",
                                                                                    // Fld7 = item.OIsRecommendDiscussion == true ? "" : "value",
                                                                                    Fld11 = item.ODiscussionSchedule == null ? "" : item.ODiscussionSchedule.Value.ToShortDateString(),
                                                                                    Fld12 = item.OScorePercentage == null ? "" : item.OScorePercentage.ToString(),
                                                                                    Fld13 = item.OHrRecommendIncrement == null ? "" : item.OHrRecommendIncrement.ToString(),
                                                                                    Fld14 = item.OIsRecommnedPromotion == null ? "" : item.OIsRecommnedPromotion.ToString(),
                                                                                    Fld15 = item.OIsRecommendTraining == null ? "" : item.OIsRecommendTraining.ToString(),
                                                                                    Fld16 = item.OIsTrClose == null ? "" : item.OIsTrClose.ToString(),
                                                                                    Fld18 = item2.OAppAssignmentAppCategoryName == null ? "" : item2.OAppAssignmentAppCategoryName,
                                                                                    Fld17 = item2.OAppAssignmentAppSubCategoryName == null ? "" : item2.OAppAssignmentAppSubCategoryName,
                                                                                };
                                                                                if (comp)
                                                                                {
                                                                                    OGeneticApprStatement.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                                                }
                                                                                if (div)
                                                                                {
                                                                                    OGeneticApprStatement.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                                                }
                                                                                if (loca)
                                                                                {
                                                                                    OGeneticApprStatement.Fld97 = GeoDataInd.GeoStruct_Location_Code;
                                                                                }
                                                                                if (dept)
                                                                                {
                                                                                    OGeneticApprStatement.Fld96 = GeoDataInd.GeoStruct_Department_Code;
                                                                                }
                                                                                if (grp)
                                                                                {
                                                                                    OGeneticApprStatement.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                                                }
                                                                                if (unit)
                                                                                {
                                                                                    OGeneticApprStatement.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                                                }
                                                                                if (hrvar)
                                                                                {
                                                                                    OGeneticApprStatement.Fld87 = recom;
                                                                                }


                                                                                OGenericEEISSNWtatement.Add(OGeneticApprStatement);

                                                                            }
                                                                            else if (recom == "Training" && item.OIsRecommendTraining == true)
                                                                            {
                                                                                hrvar = true;

                                                                                GenericField100 OGeneticApprStatement = new GenericField100()
                                                                                {
                                                                                    Fld5 = item.OAppraisalPeriodCalendarFullDetails == null ? "" : item.OAppraisalPeriodCalendarFullDetails,
                                                                                    // Fld1 = item.AppraisalSchedule == null ? "" : item.AppraisalSchedule.BatchCode.ToString(),
                                                                                    Fld2 = item.OAppraisalScheduleBatchName == null ? "" : item.OAppraisalScheduleBatchName,
                                                                                    Fld3 = item.OMaxPoints == null ? "" : item.OMaxPoints.ToString(),
                                                                                    Fld4 = item.OSecurePoints == null ? "" : item.OSecurePoints.ToString(),
                                                                                    Fld6 = item.OIncPercent == null ? "" : item.OIncPercent.ToString(),
                                                                                    // Fld7 = item1.IsTrClose == null ? "" : item1.IsTrClose.ToString(),
                                                                                    Fld8 = ca.OEmpCode == null ? "" : ca.OEmpCode,
                                                                                    Fld9 = ca.OEmpName == null ? "" : ca.OEmpName,
                                                                                    Fld7 = recom == "Further Discussion" && item.OIsRecommendDiscussion == true ? "Further Discussion Date" : "",
                                                                                    // Fld7 = item.OIsRecommendDiscussion == true ? "" : "value",
                                                                                    Fld11 = item.ODiscussionSchedule == null ? "" : item.ODiscussionSchedule.Value.ToShortDateString(),
                                                                                    Fld12 = item.OScorePercentage == null ? "" : item.OScorePercentage.ToString(),
                                                                                    Fld13 = item.OHrRecommendIncrement == null ? "" : item.OHrRecommendIncrement.ToString(),
                                                                                    Fld14 = item.OIsRecommnedPromotion == null ? "" : item.OIsRecommnedPromotion.ToString(),
                                                                                    Fld15 = item.OIsRecommendTraining == null ? "" : item.OIsRecommendTraining.ToString(),
                                                                                    Fld16 = item.OIsTrClose == null ? "" : item.OIsTrClose.ToString(),
                                                                                    Fld18 = item2.OAppAssignmentAppCategoryName == null ? "" : item2.OAppAssignmentAppCategoryName,
                                                                                    Fld17 = item2.OAppAssignmentAppSubCategoryName == null ? "" : item2.OAppAssignmentAppSubCategoryName,
                                                                                };
                                                                                if (comp)
                                                                                {
                                                                                    OGeneticApprStatement.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                                                }
                                                                                if (div)
                                                                                {
                                                                                    OGeneticApprStatement.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                                                }
                                                                                if (loca)
                                                                                {
                                                                                    OGeneticApprStatement.Fld97 = GeoDataInd.GeoStruct_Location_Code;
                                                                                }
                                                                                if (dept)
                                                                                {
                                                                                    OGeneticApprStatement.Fld96 = GeoDataInd.GeoStruct_Department_Code;
                                                                                }
                                                                                if (grp)
                                                                                {
                                                                                    OGeneticApprStatement.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                                                }
                                                                                if (unit)
                                                                                {
                                                                                    OGeneticApprStatement.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                                                }
                                                                                if (hrvar)
                                                                                {
                                                                                    OGeneticApprStatement.Fld87 = recom;
                                                                                }


                                                                                OGenericEEISSNWtatement.Add(OGeneticApprStatement);

                                                                            }
                                                                            else if (recom == "Further Discussion" && item.OIsRecommendDiscussion == true)
                                                                            {
                                                                                hrvar = true;

                                                                                GenericField100 OGeneticApprStatement = new GenericField100()
                                                                                {
                                                                                    Fld5 = item.OAppraisalPeriodCalendarFullDetails == null ? "" : item.OAppraisalPeriodCalendarFullDetails,
                                                                                    // Fld1 = item.AppraisalSchedule == null ? "" : item.AppraisalSchedule.BatchCode.ToString(),
                                                                                    Fld2 = item.OAppraisalScheduleBatchName == null ? "" : item.OAppraisalScheduleBatchName,
                                                                                    Fld3 = item.OMaxPoints == null ? "" : item.OMaxPoints.ToString(),
                                                                                    Fld4 = item.OSecurePoints == null ? "" : item.OSecurePoints.ToString(),
                                                                                    Fld6 = item.OIncPercent == null ? "" : item.OIncPercent.ToString(),
                                                                                    // Fld7 = item1.IsTrClose == null ? "" : item1.IsTrClose.ToString(),
                                                                                    Fld8 = ca.OEmpCode == null ? "" : ca.OEmpCode,
                                                                                    Fld9 = ca.OEmpName == null ? "" : ca.OEmpName,
                                                                                    Fld7 = recom == "Further Discussion" && item.OIsRecommendDiscussion == true ? "Further Discussion Date" : "",
                                                                                    // Fld7 = item.OIsRecommendDiscussion == true ? "" : "value",
                                                                                    Fld11 = item.ODiscussionSchedule == null ? "" : item.ODiscussionSchedule.Value.ToShortDateString(),
                                                                                    Fld12 = item.OScorePercentage == null ? "" : item.OScorePercentage.ToString(),
                                                                                    Fld13 = item.OHrRecommendIncrement == null ? "" : item.OHrRecommendIncrement.ToString(),
                                                                                    Fld14 = item.OIsRecommnedPromotion == null ? "" : item.OIsRecommnedPromotion.ToString(),
                                                                                    Fld15 = item.OIsRecommendTraining == null ? "" : item.OIsRecommendTraining.ToString(),
                                                                                    Fld16 = item.OIsTrClose == null ? "" : item.OIsTrClose.ToString(),
                                                                                    Fld18 = item2.OAppAssignmentAppCategoryName == null ? "" : item2.OAppAssignmentAppCategoryName,
                                                                                    Fld17 = item2.OAppAssignmentAppSubCategoryName == null ? "" : item2.OAppAssignmentAppSubCategoryName,
                                                                                };
                                                                                if (comp)
                                                                                {
                                                                                    OGeneticApprStatement.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                                                }
                                                                                if (div)
                                                                                {
                                                                                    OGeneticApprStatement.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                                                }
                                                                                if (loca)
                                                                                {
                                                                                    OGeneticApprStatement.Fld97 = GeoDataInd.GeoStruct_Location_Code;
                                                                                }
                                                                                if (dept)
                                                                                {
                                                                                    OGeneticApprStatement.Fld96 = GeoDataInd.GeoStruct_Department_Code;
                                                                                }
                                                                                if (grp)
                                                                                {
                                                                                    OGeneticApprStatement.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                                                }
                                                                                if (unit)
                                                                                {
                                                                                    OGeneticApprStatement.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                                                }
                                                                                if (hrvar)
                                                                                {
                                                                                    OGeneticApprStatement.Fld87 = recom;
                                                                                }


                                                                                OGenericEEISSNWtatement.Add(OGeneticApprStatement);

                                                                            }





                                                                        }
                                                                    }


                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                        else
                                        {
                                            if (GeoDataInd != null)
                                            {
                                                foreach (var item1 in item.OEmpAppRatingConclusion)
                                                {
                                                    foreach (var item2 in item1.OEmpAppRating)
                                                    {
                                                        if (item2.OAppAssignment != null)
                                                        {
                                                            if (SpecialGroupslist.Count() != 0)
                                                            {

                                                                foreach (var item3 in SpecialGroupslist)
                                                                {
                                                                    if (item3 == "Increment" && item.OHrRecommendIncrement == true)
                                                                    {

                                                                        GenericField100 OGeneticApprStatement = new GenericField100()
                                                                        {
                                                                            Fld5 = item.OAppraisalPeriodCalendarFullDetails == null ? "" : item.OAppraisalPeriodCalendarFullDetails,
                                                                            // Fld1 = item.AppraisalSchedule == null ? "" : item.AppraisalSchedule.BatchCode.ToString(),
                                                                            Fld2 = item.OAppraisalScheduleBatchName == null ? "" : item.OAppraisalScheduleBatchName,
                                                                            Fld3 = item.OMaxPoints == null ? "" : item.OMaxPoints.ToString(),
                                                                            Fld4 = item.OSecurePoints == null ? "" : item.OSecurePoints.ToString(),
                                                                            Fld6 = item.OIncPercent == null ? "" : item.OIncPercent.ToString(),
                                                                            // Fld7 = item1.IsTrClose == null ? "" : item1.IsTrClose.ToString(),
                                                                            Fld8 = ca.OEmpCode == null ? "" : ca.OEmpCode,
                                                                            Fld9 = ca.OEmpName == null ? "" : ca.OEmpName,
                                                                            Fld7 = item3 == "Further Discussion" && item.OIsRecommendDiscussion == true ? "Further Discussion Date" : "",
                                                                            // Fld7 = item.OIsRecommendDiscussion == true ? "" : "value",
                                                                            Fld11 = item.ODiscussionSchedule == null ? "" : item.ODiscussionSchedule.Value.ToShortDateString(),
                                                                            Fld12 = item.OScorePercentage == null ? "" : item.OScorePercentage.ToString(),
                                                                            Fld13 = item.OHrRecommendIncrement == null ? "" : item.OHrRecommendIncrement.ToString(),
                                                                            Fld14 = item.OIsRecommnedPromotion == null ? "" : item.OIsRecommnedPromotion.ToString(),
                                                                            Fld15 = item.OIsRecommendTraining == null ? "" : item.OIsRecommendTraining.ToString(),
                                                                            Fld16 = item.OIsTrClose == null ? "" : item.OIsTrClose.ToString(),
                                                                            Fld18 = item2.OAppAssignmentAppCategoryName == null ? "" : item2.OAppAssignmentAppCategoryName,
                                                                            Fld17 = item2.OAppAssignmentAppSubCategoryName == null ? "" : item2.OAppAssignmentAppSubCategoryName,
                                                                        };
                                                                        if (comp)
                                                                        {
                                                                            OGeneticApprStatement.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                                        }
                                                                        if (div)
                                                                        {
                                                                            OGeneticApprStatement.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                                        }
                                                                        if (loca)
                                                                        {
                                                                            OGeneticApprStatement.Fld97 = GeoDataInd.GeoStruct_Location_Code;
                                                                        }
                                                                        if (dept)
                                                                        {
                                                                            OGeneticApprStatement.Fld96 = GeoDataInd.GeoStruct_Department_Code;
                                                                        }
                                                                        if (grp)
                                                                        {
                                                                            OGeneticApprStatement.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                                        }
                                                                        if (unit)
                                                                        {
                                                                            OGeneticApprStatement.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                                        }
                                                                        if (hrvar)
                                                                        {
                                                                            OGeneticApprStatement.Fld87 = item3;
                                                                        }


                                                                        OGenericEEISSNWtatement.Add(OGeneticApprStatement);
                                                                    }
                                                                    else if (item3 == "Promotion" && item.OIsRecommnedPromotion == true)
                                                                    {

                                                                        GenericField100 OGeneticApprStatement = new GenericField100()
                                                                        {
                                                                            Fld5 = item.OAppraisalPeriodCalendarFullDetails == null ? "" : item.OAppraisalPeriodCalendarFullDetails,
                                                                            // Fld1 = item.AppraisalSchedule == null ? "" : item.AppraisalSchedule.BatchCode.ToString(),
                                                                            Fld2 = item.OAppraisalScheduleBatchName == null ? "" : item.OAppraisalScheduleBatchName,
                                                                            Fld3 = item.OMaxPoints == null ? "" : item.OMaxPoints.ToString(),
                                                                            Fld4 = item.OSecurePoints == null ? "" : item.OSecurePoints.ToString(),
                                                                            Fld6 = item.OIncPercent == null ? "" : item.OIncPercent.ToString(),
                                                                            // Fld7 = item1.IsTrClose == null ? "" : item1.IsTrClose.ToString(),
                                                                            Fld8 = ca.OEmpCode == null ? "" : ca.OEmpCode,
                                                                            Fld9 = ca.OEmpName == null ? "" : ca.OEmpName,
                                                                            Fld7 = item3 == "Further Discussion" && item.OIsRecommendDiscussion == true ? "Further Discussion Date" : "",
                                                                            // Fld7 = item.OIsRecommendDiscussion == true ? "" : "value",
                                                                            Fld11 = item.ODiscussionSchedule == null ? "" : item.ODiscussionSchedule.Value.ToShortDateString(),
                                                                            Fld12 = item.OScorePercentage == null ? "" : item.OScorePercentage.ToString(),
                                                                            Fld13 = item.OHrRecommendIncrement == null ? "" : item.OHrRecommendIncrement.ToString(),
                                                                            Fld14 = item.OIsRecommnedPromotion == null ? "" : item.OIsRecommnedPromotion.ToString(),
                                                                            Fld15 = item.OIsRecommendTraining == null ? "" : item.OIsRecommendTraining.ToString(),
                                                                            Fld16 = item.OIsTrClose == null ? "" : item.OIsTrClose.ToString(),
                                                                            Fld18 = item2.OAppAssignmentAppCategoryName == null ? "" : item2.OAppAssignmentAppCategoryName,
                                                                            Fld17 = item2.OAppAssignmentAppSubCategoryName == null ? "" : item2.OAppAssignmentAppSubCategoryName,
                                                                        };
                                                                        if (comp)
                                                                        {
                                                                            OGeneticApprStatement.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                                        }
                                                                        if (div)
                                                                        {
                                                                            OGeneticApprStatement.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                                        }
                                                                        if (loca)
                                                                        {
                                                                            OGeneticApprStatement.Fld97 = GeoDataInd.GeoStruct_Location_Code;
                                                                        }
                                                                        if (dept)
                                                                        {
                                                                            OGeneticApprStatement.Fld96 = GeoDataInd.GeoStruct_Department_Code;
                                                                        }
                                                                        if (grp)
                                                                        {
                                                                            OGeneticApprStatement.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                                        }
                                                                        if (unit)
                                                                        {
                                                                            OGeneticApprStatement.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                                        }
                                                                        if (hrvar)
                                                                        {
                                                                            OGeneticApprStatement.Fld87 = item3;
                                                                        }


                                                                        OGenericEEISSNWtatement.Add(OGeneticApprStatement);
                                                                    }
                                                                    else if (item3 == "Training" && item.OIsRecommendTraining == true)
                                                                    {

                                                                        GenericField100 OGeneticApprStatement = new GenericField100()
                                                                        {
                                                                            Fld5 = item.OAppraisalPeriodCalendarFullDetails == null ? "" : item.OAppraisalPeriodCalendarFullDetails,
                                                                            // Fld1 = item.AppraisalSchedule == null ? "" : item.AppraisalSchedule.BatchCode.ToString(),
                                                                            Fld2 = item.OAppraisalScheduleBatchName == null ? "" : item.OAppraisalScheduleBatchName,
                                                                            Fld3 = item.OMaxPoints == null ? "" : item.OMaxPoints.ToString(),
                                                                            Fld4 = item.OSecurePoints == null ? "" : item.OSecurePoints.ToString(),
                                                                            Fld6 = item.OIncPercent == null ? "" : item.OIncPercent.ToString(),
                                                                            // Fld7 = item1.IsTrClose == null ? "" : item1.IsTrClose.ToString(),
                                                                            Fld8 = ca.OEmpCode == null ? "" : ca.OEmpCode,
                                                                            Fld9 = ca.OEmpName == null ? "" : ca.OEmpName,
                                                                            Fld7 = item3 == "Further Discussion" && item.OIsRecommendDiscussion == true ? "Further Discussion Date" : "",
                                                                            // Fld7 = item.OIsRecommendDiscussion == true ? "" : "value",
                                                                            Fld11 = item.ODiscussionSchedule == null ? "" : item.ODiscussionSchedule.Value.ToShortDateString(),
                                                                            Fld12 = item.OScorePercentage == null ? "" : item.OScorePercentage.ToString(),
                                                                            Fld13 = item.OHrRecommendIncrement == null ? "" : item.OHrRecommendIncrement.ToString(),
                                                                            Fld14 = item.OIsRecommnedPromotion == null ? "" : item.OIsRecommnedPromotion.ToString(),
                                                                            Fld15 = item.OIsRecommendTraining == null ? "" : item.OIsRecommendTraining.ToString(),
                                                                            Fld16 = item.OIsTrClose == null ? "" : item.OIsTrClose.ToString(),
                                                                            Fld18 = item2.OAppAssignmentAppCategoryName == null ? "" : item2.OAppAssignmentAppCategoryName,
                                                                            Fld17 = item2.OAppAssignmentAppSubCategoryName == null ? "" : item2.OAppAssignmentAppSubCategoryName,
                                                                        };
                                                                        if (comp)
                                                                        {
                                                                            OGeneticApprStatement.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                                        }
                                                                        if (div)
                                                                        {
                                                                            OGeneticApprStatement.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                                        }
                                                                        if (loca)
                                                                        {
                                                                            OGeneticApprStatement.Fld97 = GeoDataInd.GeoStruct_Location_Code;
                                                                        }
                                                                        if (dept)
                                                                        {
                                                                            OGeneticApprStatement.Fld96 = GeoDataInd.GeoStruct_Department_Code;
                                                                        }
                                                                        if (grp)
                                                                        {
                                                                            OGeneticApprStatement.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                                        }
                                                                        if (unit)
                                                                        {
                                                                            OGeneticApprStatement.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                                        }
                                                                        if (hrvar)
                                                                        {
                                                                            OGeneticApprStatement.Fld87 = item3;
                                                                        }


                                                                        OGenericEEISSNWtatement.Add(OGeneticApprStatement);
                                                                    }
                                                                    else if (item3 == "Further Discussion" && item.OIsRecommendDiscussion == true)
                                                                    {

                                                                        GenericField100 OGeneticApprStatement = new GenericField100()
                                                                        {
                                                                            Fld5 = item.OAppraisalPeriodCalendarFullDetails == null ? "" : item.OAppraisalPeriodCalendarFullDetails,
                                                                            // Fld1 = item.AppraisalSchedule == null ? "" : item.AppraisalSchedule.BatchCode.ToString(),
                                                                            Fld2 = item.OAppraisalScheduleBatchName == null ? "" : item.OAppraisalScheduleBatchName,
                                                                            Fld3 = item.OMaxPoints == null ? "" : item.OMaxPoints.ToString(),
                                                                            Fld4 = item.OSecurePoints == null ? "" : item.OSecurePoints.ToString(),
                                                                            Fld6 = item.OIncPercent == null ? "" : item.OIncPercent.ToString(),
                                                                            // Fld7 = item1.IsTrClose == null ? "" : item1.IsTrClose.ToString(),
                                                                            Fld8 = ca.OEmpCode == null ? "" : ca.OEmpCode,
                                                                            Fld9 = ca.OEmpName == null ? "" : ca.OEmpName,
                                                                            Fld7 = item3 == "Further Discussion" && item.OIsRecommendDiscussion == true ? "Further Discussion Date" : "",
                                                                            // Fld7 = item.OIsRecommendDiscussion == true ? "" : "value",
                                                                            Fld11 = item.ODiscussionSchedule == null ? "" : item.ODiscussionSchedule.Value.ToShortDateString(),
                                                                            Fld12 = item.OScorePercentage == null ? "" : item.OScorePercentage.ToString(),
                                                                            Fld13 = item.OHrRecommendIncrement == null ? "" : item.OHrRecommendIncrement.ToString(),
                                                                            Fld14 = item.OIsRecommnedPromotion == null ? "" : item.OIsRecommnedPromotion.ToString(),
                                                                            Fld15 = item.OIsRecommendTraining == null ? "" : item.OIsRecommendTraining.ToString(),
                                                                            Fld16 = item.OIsTrClose == null ? "" : item.OIsTrClose.ToString(),
                                                                            Fld18 = item2.OAppAssignmentAppCategoryName == null ? "" : item2.OAppAssignmentAppCategoryName,
                                                                            Fld17 = item2.OAppAssignmentAppSubCategoryName == null ? "" : item2.OAppAssignmentAppSubCategoryName,
                                                                        };
                                                                        if (comp)
                                                                        {
                                                                            OGeneticApprStatement.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                                        }
                                                                        if (div)
                                                                        {
                                                                            OGeneticApprStatement.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                                        }
                                                                        if (loca)
                                                                        {
                                                                            OGeneticApprStatement.Fld97 = GeoDataInd.GeoStruct_Location_Code;
                                                                        }
                                                                        if (dept)
                                                                        {
                                                                            OGeneticApprStatement.Fld96 = GeoDataInd.GeoStruct_Department_Code;
                                                                        }
                                                                        if (grp)
                                                                        {
                                                                            OGeneticApprStatement.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                                        }
                                                                        if (unit)
                                                                        {
                                                                            OGeneticApprStatement.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                                        }
                                                                        if (hrvar)
                                                                        {
                                                                            OGeneticApprStatement.Fld87 = item3;
                                                                        }


                                                                        OGenericEEISSNWtatement.Add(OGeneticApprStatement);
                                                                    }


                                                                    //if (item.OIsRecommendDiscussion == true || item.OIsRecommendTraining == true || item.OIsRecommnedPromotion == true || item.OHrRecommendIncrement == true)
                                                                    //{

                                                                    //    GenericField100 OGeneticApprStatement = new GenericField100()
                                                                    //    {
                                                                    //        Fld5 = item.OAppraisalPeriodCalendarFullDetails == null ? "" : item.OAppraisalPeriodCalendarFullDetails,
                                                                    //        // Fld1 = item.AppraisalSchedule == null ? "" : item.AppraisalSchedule.BatchCode.ToString(),
                                                                    //        Fld2 = item.OAppraisalScheduleBatchName == null ? "" : item.OAppraisalScheduleBatchName,
                                                                    //        Fld3 = item.OMaxPoints == null ? "" : item.OMaxPoints.ToString(),
                                                                    //        Fld4 = item.OSecurePoints == null ? "" : item.OSecurePoints.ToString(),
                                                                    //        Fld6 = item.OIncPercent == null ? "" : item.OIncPercent.ToString(),
                                                                    //        // Fld7 = item1.IsTrClose == null ? "" : item1.IsTrClose.ToString(),
                                                                    //        Fld8 = ca.OEmpCode == null ? "" : ca.OEmpCode,
                                                                    //        Fld9 = ca.OEmpName == null ? "" : ca.OEmpName,
                                                                    //        Fld7 = item3 == "Further Discussion" && item.OIsRecommendDiscussion == true ? "Further Discussion Date" : "",
                                                                    //        // Fld7 = item.OIsRecommendDiscussion == true ? "" : "value",
                                                                    //        Fld11 = item.ODiscussionSchedule == null ? "" : item.ODiscussionSchedule.Value.ToShortDateString(),
                                                                    //        Fld12 = item.OScorePercentage == null ? "" : item.OScorePercentage.ToString(),
                                                                    //        Fld13 = item.OHrRecommendIncrement == null ? "" : item.OHrRecommendIncrement.ToString(),
                                                                    //        Fld14 = item.OIsRecommnedPromotion == null ? "" : item.OIsRecommnedPromotion.ToString(),
                                                                    //        Fld15 = item.OIsRecommendTraining == null ? "" : item.OIsRecommendTraining.ToString(),
                                                                    //        Fld16 = item.OIsTrClose == null ? "" : item.OIsTrClose.ToString(),
                                                                    //        Fld18 = item2.OAppAssignmentAppCategoryName == null ? "" : item2.OAppAssignmentAppCategoryName,
                                                                    //        Fld17 = item2.OAppAssignmentAppSubCategoryName == null ? "" : item2.OAppAssignmentAppSubCategoryName,
                                                                    //    };
                                                                    //    if (comp)
                                                                    //    {
                                                                    //        OGeneticApprStatement.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                                    //    }
                                                                    //    if (div)
                                                                    //    {
                                                                    //        OGeneticApprStatement.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                                    //    }
                                                                    //    if (loca)
                                                                    //    {
                                                                    //        OGeneticApprStatement.Fld97 = GeoDataInd.GeoStruct_Location_Code;
                                                                    //    }
                                                                    //    if (dept)
                                                                    //    {
                                                                    //        OGeneticApprStatement.Fld96 = GeoDataInd.GeoStruct_Department_Code;
                                                                    //    }
                                                                    //    if (grp)
                                                                    //    {
                                                                    //        OGeneticApprStatement.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                                    //    }
                                                                    //    if (unit)
                                                                    //    {
                                                                    //        OGeneticApprStatement.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                                    //    }
                                                                    //    if (hrvar)
                                                                    //    {
                                                                    //        OGeneticApprStatement.Fld87 = item3;
                                                                    //    }


                                                                    //    OGenericEEISSNWtatement.Add(OGeneticApprStatement);
                                                                    //}
                                                                }
                                                            }
                                                            else
                                                            {


                                                                List<string> recm = new List<string>() { "Increment", "Promotion", "Training", "Further Discussion" };

                                                                foreach (var recom in recm)
                                                                {
                                                                    if (recom == "Increment" && item.OHrRecommendIncrement == true)
                                                                    {
                                                                        hrvar = true;

                                                                        GenericField100 OGeneticApprStatement = new GenericField100()
                                                                        {
                                                                            Fld5 = item.OAppraisalPeriodCalendarFullDetails == null ? "" : item.OAppraisalPeriodCalendarFullDetails,
                                                                            // Fld1 = item.AppraisalSchedule == null ? "" : item.AppraisalSchedule.BatchCode.ToString(),
                                                                            Fld2 = item.OAppraisalScheduleBatchName == null ? "" : item.OAppraisalScheduleBatchName,
                                                                            Fld3 = item.OMaxPoints == null ? "" : item.OMaxPoints.ToString(),
                                                                            Fld4 = item.OSecurePoints == null ? "" : item.OSecurePoints.ToString(),
                                                                            Fld6 = item.OIncPercent == null ? "" : item.OIncPercent.ToString(),
                                                                            // Fld7 = item1.IsTrClose == null ? "" : item1.IsTrClose.ToString(),
                                                                            Fld8 = ca.OEmpCode == null ? "" : ca.OEmpCode,
                                                                            Fld9 = ca.OEmpName == null ? "" : ca.OEmpName,
                                                                            Fld7 = recom == "Further Discussion" && item.OIsRecommendDiscussion == true ? "Further Discussion Date" : "",
                                                                            // Fld7 = item.OIsRecommendDiscussion == true ? "" : "value",
                                                                            Fld11 = item.ODiscussionSchedule == null ? "" : item.ODiscussionSchedule.Value.ToShortDateString(),
                                                                            Fld12 = item.OScorePercentage == null ? "" : item.OScorePercentage.ToString(),
                                                                            Fld13 = item.OHrRecommendIncrement == null ? "" : item.OHrRecommendIncrement.ToString(),
                                                                            Fld14 = item.OIsRecommnedPromotion == null ? "" : item.OIsRecommnedPromotion.ToString(),
                                                                            Fld15 = item.OIsRecommendTraining == null ? "" : item.OIsRecommendTraining.ToString(),
                                                                            Fld16 = item.OIsTrClose == null ? "" : item.OIsTrClose.ToString(),
                                                                            Fld18 = item2.OAppAssignmentAppCategoryName == null ? "" : item2.OAppAssignmentAppCategoryName,
                                                                            Fld17 = item2.OAppAssignmentAppSubCategoryName == null ? "" : item2.OAppAssignmentAppSubCategoryName,
                                                                        };
                                                                        if (comp)
                                                                        {
                                                                            OGeneticApprStatement.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                                        }
                                                                        if (div)
                                                                        {
                                                                            OGeneticApprStatement.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                                        }
                                                                        if (loca)
                                                                        {
                                                                            OGeneticApprStatement.Fld97 = GeoDataInd.GeoStruct_Location_Code;
                                                                        }
                                                                        if (dept)
                                                                        {
                                                                            OGeneticApprStatement.Fld96 = GeoDataInd.GeoStruct_Department_Code;
                                                                        }
                                                                        if (grp)
                                                                        {
                                                                            OGeneticApprStatement.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                                        }
                                                                        if (unit)
                                                                        {
                                                                            OGeneticApprStatement.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                                        }
                                                                        if (hrvar)
                                                                        {
                                                                            OGeneticApprStatement.Fld87 = recom;
                                                                        }


                                                                        OGenericEEISSNWtatement.Add(OGeneticApprStatement);

                                                                    }
                                                                    else if (recom == "Promotion" && item.OIsRecommnedPromotion == true)
                                                                    {
                                                                        hrvar = true;

                                                                        GenericField100 OGeneticApprStatement = new GenericField100()
                                                                        {
                                                                            Fld5 = item.OAppraisalPeriodCalendarFullDetails == null ? "" : item.OAppraisalPeriodCalendarFullDetails,
                                                                            // Fld1 = item.AppraisalSchedule == null ? "" : item.AppraisalSchedule.BatchCode.ToString(),
                                                                            Fld2 = item.OAppraisalScheduleBatchName == null ? "" : item.OAppraisalScheduleBatchName,
                                                                            Fld3 = item.OMaxPoints == null ? "" : item.OMaxPoints.ToString(),
                                                                            Fld4 = item.OSecurePoints == null ? "" : item.OSecurePoints.ToString(),
                                                                            Fld6 = item.OIncPercent == null ? "" : item.OIncPercent.ToString(),
                                                                            // Fld7 = item1.IsTrClose == null ? "" : item1.IsTrClose.ToString(),
                                                                            Fld8 = ca.OEmpCode == null ? "" : ca.OEmpCode,
                                                                            Fld9 = ca.OEmpName == null ? "" : ca.OEmpName,
                                                                            Fld7 = recom == "Further Discussion" && item.OIsRecommendDiscussion == true ? "Further Discussion Date" : "",
                                                                            // Fld7 = item.OIsRecommendDiscussion == true ? "" : "value",
                                                                            Fld11 = item.ODiscussionSchedule == null ? "" : item.ODiscussionSchedule.Value.ToShortDateString(),
                                                                            Fld12 = item.OScorePercentage == null ? "" : item.OScorePercentage.ToString(),
                                                                            Fld13 = item.OHrRecommendIncrement == null ? "" : item.OHrRecommendIncrement.ToString(),
                                                                            Fld14 = item.OIsRecommnedPromotion == null ? "" : item.OIsRecommnedPromotion.ToString(),
                                                                            Fld15 = item.OIsRecommendTraining == null ? "" : item.OIsRecommendTraining.ToString(),
                                                                            Fld16 = item.OIsTrClose == null ? "" : item.OIsTrClose.ToString(),
                                                                            Fld18 = item2.OAppAssignmentAppCategoryName == null ? "" : item2.OAppAssignmentAppCategoryName,
                                                                            Fld17 = item2.OAppAssignmentAppSubCategoryName == null ? "" : item2.OAppAssignmentAppSubCategoryName,
                                                                        };
                                                                        if (comp)
                                                                        {
                                                                            OGeneticApprStatement.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                                        }
                                                                        if (div)
                                                                        {
                                                                            OGeneticApprStatement.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                                        }
                                                                        if (loca)
                                                                        {
                                                                            OGeneticApprStatement.Fld97 = GeoDataInd.GeoStruct_Location_Code;
                                                                        }
                                                                        if (dept)
                                                                        {
                                                                            OGeneticApprStatement.Fld96 = GeoDataInd.GeoStruct_Department_Code;
                                                                        }
                                                                        if (grp)
                                                                        {
                                                                            OGeneticApprStatement.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                                        }
                                                                        if (unit)
                                                                        {
                                                                            OGeneticApprStatement.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                                        }
                                                                        if (hrvar)
                                                                        {
                                                                            OGeneticApprStatement.Fld87 = recom;
                                                                        }


                                                                        OGenericEEISSNWtatement.Add(OGeneticApprStatement);

                                                                    }
                                                                    else if (recom == "Training" && item.OIsRecommendTraining == true)
                                                                    {
                                                                        hrvar = true;

                                                                        GenericField100 OGeneticApprStatement = new GenericField100()
                                                                        {
                                                                            Fld5 = item.OAppraisalPeriodCalendarFullDetails == null ? "" : item.OAppraisalPeriodCalendarFullDetails,
                                                                            // Fld1 = item.AppraisalSchedule == null ? "" : item.AppraisalSchedule.BatchCode.ToString(),
                                                                            Fld2 = item.OAppraisalScheduleBatchName == null ? "" : item.OAppraisalScheduleBatchName,
                                                                            Fld3 = item.OMaxPoints == null ? "" : item.OMaxPoints.ToString(),
                                                                            Fld4 = item.OSecurePoints == null ? "" : item.OSecurePoints.ToString(),
                                                                            Fld6 = item.OIncPercent == null ? "" : item.OIncPercent.ToString(),
                                                                            // Fld7 = item1.IsTrClose == null ? "" : item1.IsTrClose.ToString(),
                                                                            Fld8 = ca.OEmpCode == null ? "" : ca.OEmpCode,
                                                                            Fld9 = ca.OEmpName == null ? "" : ca.OEmpName,
                                                                            Fld7 = recom == "Further Discussion" && item.OIsRecommendDiscussion == true ? "Further Discussion Date" : "",
                                                                            // Fld7 = item.OIsRecommendDiscussion == true ? "" : "value",
                                                                            Fld11 = item.ODiscussionSchedule == null ? "" : item.ODiscussionSchedule.Value.ToShortDateString(),
                                                                            Fld12 = item.OScorePercentage == null ? "" : item.OScorePercentage.ToString(),
                                                                            Fld13 = item.OHrRecommendIncrement == null ? "" : item.OHrRecommendIncrement.ToString(),
                                                                            Fld14 = item.OIsRecommnedPromotion == null ? "" : item.OIsRecommnedPromotion.ToString(),
                                                                            Fld15 = item.OIsRecommendTraining == null ? "" : item.OIsRecommendTraining.ToString(),
                                                                            Fld16 = item.OIsTrClose == null ? "" : item.OIsTrClose.ToString(),
                                                                            Fld18 = item2.OAppAssignmentAppCategoryName == null ? "" : item2.OAppAssignmentAppCategoryName,
                                                                            Fld17 = item2.OAppAssignmentAppSubCategoryName == null ? "" : item2.OAppAssignmentAppSubCategoryName,
                                                                        };
                                                                        if (comp)
                                                                        {
                                                                            OGeneticApprStatement.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                                        }
                                                                        if (div)
                                                                        {
                                                                            OGeneticApprStatement.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                                        }
                                                                        if (loca)
                                                                        {
                                                                            OGeneticApprStatement.Fld97 = GeoDataInd.GeoStruct_Location_Code;
                                                                        }
                                                                        if (dept)
                                                                        {
                                                                            OGeneticApprStatement.Fld96 = GeoDataInd.GeoStruct_Department_Code;
                                                                        }
                                                                        if (grp)
                                                                        {
                                                                            OGeneticApprStatement.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                                        }
                                                                        if (unit)
                                                                        {
                                                                            OGeneticApprStatement.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                                        }
                                                                        if (hrvar)
                                                                        {
                                                                            OGeneticApprStatement.Fld87 = recom;
                                                                        }


                                                                        OGenericEEISSNWtatement.Add(OGeneticApprStatement);

                                                                    }
                                                                    else if (recom == "Further Discussion" && item.OIsRecommendDiscussion == true)
                                                                    {
                                                                        hrvar = true;

                                                                        GenericField100 OGeneticApprStatement = new GenericField100()
                                                                        {
                                                                            Fld5 = item.OAppraisalPeriodCalendarFullDetails == null ? "" : item.OAppraisalPeriodCalendarFullDetails,
                                                                            // Fld1 = item.AppraisalSchedule == null ? "" : item.AppraisalSchedule.BatchCode.ToString(),
                                                                            Fld2 = item.OAppraisalScheduleBatchName == null ? "" : item.OAppraisalScheduleBatchName,
                                                                            Fld3 = item.OMaxPoints == null ? "" : item.OMaxPoints.ToString(),
                                                                            Fld4 = item.OSecurePoints == null ? "" : item.OSecurePoints.ToString(),
                                                                            Fld6 = item.OIncPercent == null ? "" : item.OIncPercent.ToString(),
                                                                            // Fld7 = item1.IsTrClose == null ? "" : item1.IsTrClose.ToString(),
                                                                            Fld8 = ca.OEmpCode == null ? "" : ca.OEmpCode,
                                                                            Fld9 = ca.OEmpName == null ? "" : ca.OEmpName,
                                                                            Fld7 = recom == "Further Discussion" && item.OIsRecommendDiscussion == true ? "Further Discussion Date" : "",
                                                                            // Fld7 = item.OIsRecommendDiscussion == true ? "" : "value",
                                                                            Fld11 = item.ODiscussionSchedule == null ? "" : item.ODiscussionSchedule.Value.ToShortDateString(),
                                                                            Fld12 = item.OScorePercentage == null ? "" : item.OScorePercentage.ToString(),
                                                                            Fld13 = item.OHrRecommendIncrement == null ? "" : item.OHrRecommendIncrement.ToString(),
                                                                            Fld14 = item.OIsRecommnedPromotion == null ? "" : item.OIsRecommnedPromotion.ToString(),
                                                                            Fld15 = item.OIsRecommendTraining == null ? "" : item.OIsRecommendTraining.ToString(),
                                                                            Fld16 = item.OIsTrClose == null ? "" : item.OIsTrClose.ToString(),
                                                                            Fld18 = item2.OAppAssignmentAppCategoryName == null ? "" : item2.OAppAssignmentAppCategoryName,
                                                                            Fld17 = item2.OAppAssignmentAppSubCategoryName == null ? "" : item2.OAppAssignmentAppSubCategoryName,
                                                                        };
                                                                        if (comp)
                                                                        {
                                                                            OGeneticApprStatement.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                                        }
                                                                        if (div)
                                                                        {
                                                                            OGeneticApprStatement.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                                        }
                                                                        if (loca)
                                                                        {
                                                                            OGeneticApprStatement.Fld97 = GeoDataInd.GeoStruct_Location_Code;
                                                                        }
                                                                        if (dept)
                                                                        {
                                                                            OGeneticApprStatement.Fld96 = GeoDataInd.GeoStruct_Department_Code;
                                                                        }
                                                                        if (grp)
                                                                        {
                                                                            OGeneticApprStatement.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                                        }
                                                                        if (unit)
                                                                        {
                                                                            OGeneticApprStatement.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                                        }
                                                                        if (hrvar)
                                                                        {
                                                                            OGeneticApprStatement.Fld87 = recom;
                                                                        }


                                                                        OGenericEEISSNWtatement.Add(OGeneticApprStatement);

                                                                    }





                                                                }
                                                            }


                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }

                            }
                        }
                        return OGenericEEISSNWtatement;
                        break;


                    case "EMPLOYEENOTFILLAPPRAISAL":
                        //var OEmpApprnotfill = db.EmployeeAppraisal
                        //.Include(e => e.EmpAppEvaluation)
                        //.Include(x => x.EmpAppEvaluation.Select(e => e.AppraisalPeriodCalendar))
                        //.Include(x => x.EmpAppEvaluation.Select(e => e.AppraisalSchedule))
                        //.Include(x => x.EmpAppEvaluation.Select(e => e.AppraisalSchedule.AppraisalPublish))
                        //.Include(e => e.EmpAppEvaluation.Select(r => r.EmpAppRatingConclusion))
                        //.Include(e => e.EmpAppEvaluation.Select(r => r.EmpAppRatingConclusion.Select(t => t.AppraisalAssistance)))
                        //.Include(e => e.EmpAppEvaluation.Select(r => r.EmpAppRatingConclusion.Select(t => t.EmpAppRating)))
                        // .Include(e => e.EmpAppEvaluation.Select(r => r.EmpAppRatingConclusion.Select(t => t.EmpAppRating.Select(y => y.AppAssignment))))
                        // .Include(e => e.EmpAppEvaluation.Select(r => r.EmpAppRatingConclusion.Select(t => t.EmpAppRating.Select(y => y.AppAssignment.AppCategory))))
                        // .Include(e => e.EmpAppEvaluation.Select(r => r.EmpAppRatingConclusion.Select(t => t.EmpAppRating.Select(y => y.AppAssignment.AppSubCategory))))
                        // .Include(x => x.Employee)
                        //     .Include(x => x.Employee.EmpName)
                        //     .Include(x => x.Employee.FuncStruct)
                        //      .Include(x => x.Employee.PayStruct)
                        //       .Include(x => x.Employee.GeoStruct)
                        //     .Where(e => EmpPayrollIdList.Contains(e.Employee.Id)).ToList();
                        var OEmpApprnotfill = db.EmployeeAppraisal.Select(d => new
                        {
                            OEmployeeId = d.Employee.Id,
                            OEmpCode = d.Employee.EmpCode,
                            OEmpName = d.Employee.EmpName.FullNameFML,
                            OGeoStructId = d.Employee.GeoStruct.Id,
                            OPayStructId = d.Employee.PayStruct.Id,
                            OFuncStructId = d.Employee.FuncStruct.Id,

                            OEmpAppEvaluation = d.EmpAppEvaluation.Select(p => new
                            {
                                OAppraisalPeriodCalendarFromDate = p.AppraisalPeriodCalendar.FromDate,
                                OAppraisalPeriodCalendarToDate = p.AppraisalPeriodCalendar.ToDate,
                                OAppraisalScheduleBatchCode = p.AppraisalSchedule.BatchCode,
                                OAppraisalScheduleBatchName = p.AppraisalSchedule.BatchName,
                                OMaxPoints = p.MaxPoints,
                                OEmpAppRatingConclusion = p.EmpAppRatingConclusion.Select(z => new
                                {
                                    OAppraisalAssistanceLookupVal = z.AppraisalAssistance.LookupVal,
                                    OEmpAppRating = z.EmpAppRating.Select(w => new
                                    {
                                        ORatingPoints = w.RatingPoints,
                                        OAppAssignmentAppCategoryName = w.AppAssignment.AppCategory.Name,
                                        OAppAssignmentAppSubCategoryName = w.AppAssignment.AppSubCategory.Name,
                                    }).ToList(),
                                }).ToList(),
                            }).Where(e => salheadlist.Any() ? salheadlist.Contains(e.OAppraisalScheduleBatchCode) : true).ToList(),
                        }).Where(e => EmpPayrollIdList.Contains(e.OEmployeeId)).ToList();

                        if (OEmpApprnotfill == null || OEmpApprnotfill.Count() == 0)
                        {
                            return null;
                        }
                        else
                        {
                            var emp = false;
                            var month = false;
                            var dept = false;
                            var loca = false;
                            var comp = false;
                            var grp = false;
                            var unit = false;
                            var div = false;
                            var regn = false;
                            var grade = false;
                            var lvl = false;
                            var jobstat = false;
                            var job = false;
                            var jobpos = false;

                            var vc = db.LookupValue.Where(a => forithead.Contains(a.Id.ToString())).ToList();

                            foreach (var item in vc)
                            {
                                if (item.LookupVal.ToUpper() == "MONTH")
                                {
                                    month = true;
                                }
                                if (item.LookupVal.ToUpper() == "LOCATION")
                                {

                                    loca = true;
                                }
                                if (item.LookupVal.ToUpper() == "EMPLOYEE")
                                {
                                    emp = true;
                                }
                                if (item.LookupVal.ToUpper() == "DEPARTMENT")
                                {
                                    dept = true;
                                }
                                if (item.LookupVal.ToUpper() == "COMPANY")
                                {
                                    comp = true;
                                }
                                if (item.LookupVal.ToUpper() == "GROUP")
                                {
                                    grp = true;
                                }
                                if (item.LookupVal.ToUpper() == "UNIT")
                                {
                                    unit = true;
                                }
                                if (item.LookupVal.ToUpper() == "DIVISION")
                                {
                                    div = true;
                                }
                                if (item.LookupVal.ToUpper() == "REGION")
                                {
                                    regn = true;
                                }
                                if (item.LookupVal.ToUpper() == "GRADE")
                                {
                                    grade = true;
                                }
                                if (item.LookupVal.ToUpper() == "LEVEL")
                                {
                                    lvl = true;
                                }
                                if (item.LookupVal.ToUpper() == "JOBSTATUS")
                                {
                                    jobstat = true;
                                }

                                if (item.LookupVal.ToUpper() == "JOB")
                                {
                                    job = true;
                                }
                                if (item.LookupVal.ToUpper() == "JOBPOSITION")
                                {
                                    jobpos = true;
                                }
                            }

                            Utility.GetOrganizationDataClass GeoDataInd = new Utility.GetOrganizationDataClass();

                            foreach (var ca in OEmpApprnotfill)
                            {
                                int? geoid = ca.OGeoStructId;

                                int? payid = ca.OPayStructId;

                                int? funid = ca.OFuncStructId;

                                GeoStruct geostruct = db.GeoStruct.Find(geoid);

                                PayStruct paystruct = db.PayStruct.Find(payid);

                                FuncStruct funstruct = db.FuncStruct.Find(funid);

                                GeoDataInd = ReportRDLCObjectClass.GetOrganizationDataInd(geostruct, paystruct, funstruct, 0);
                                var qurey = db.Lookup.Where(e => e.Code == "1068").Select(e => e.LookupValues.Where(r => r.IsActive == true)).SingleOrDefault();
                                var AppAssignment = db.AppAssignment.Include(e => e.AppCategory).Select(r => r.AppCategory.Code).Distinct().ToList();
                                foreach (var item5 in qurey)
                                {
                                    foreach (var item4 in AppAssignment)
                                    {
                                        foreach (var item in ca.OEmpAppEvaluation.Where(e => e.OAppraisalPeriodCalendarFromDate >= pFromDate && e.OAppraisalPeriodCalendarToDate <= pToDate))
                                        {
                                            var ziEmpAppRatingConclusion = item.OEmpAppRatingConclusion.Where(e => e.OAppraisalAssistanceLookupVal == item5.LookupVal).ToList();

                                            if (ziEmpAppRatingConclusion.Count() != 0)
                                            {
                                                foreach (var item1 in ziEmpAppRatingConclusion)
                                                {
                                                    if (ziEmpAppRatingConclusion.Count() > 1)
                                                    {
                                                        var izEmpAppRating = item1.OEmpAppRating.Where(e => e.OAppAssignmentAppCategoryName == item4).ToList();

                                                        if (izEmpAppRating.Count() != 0)
                                                        {
                                                            foreach (var item2 in izEmpAppRating)
                                                            {
                                                                GenericField100 OGeneticApprStatement = new GenericField100()
                                                                {
                                                                    Fld1 = "FromDate:" + item.OAppraisalPeriodCalendarFromDate.Value.ToShortDateString() + "," + "ToDate:" + item.OAppraisalPeriodCalendarToDate.Value.ToShortDateString(),
                                                                    Fld2 = item.OAppraisalScheduleBatchCode == null ? "" : item.OAppraisalScheduleBatchCode,
                                                                    Fld3 = ca.OEmpCode == null ? "" : ca.OEmpCode,
                                                                    Fld4 = ca.OEmpName == null ? "" : ca.OEmpName,
                                                                    Fld5 = item1.OAppraisalAssistanceLookupVal == null ? "" : item1.OAppraisalAssistanceLookupVal,
                                                                    Fld6 = item2.OAppAssignmentAppCategoryName == null ? "" : item2.OAppAssignmentAppCategoryName,
                                                                    Fld7 = item2.OAppAssignmentAppSubCategoryName == null ? "" : item2.OAppAssignmentAppSubCategoryName,
                                                                    Fld8 = "Yes",
                                                                    Fld9 = item.OMaxPoints == null ? "" : item.OMaxPoints.ToString(),
                                                                    Fld10 = item2.ORatingPoints == null ? "" : item2.ORatingPoints.ToString()
                                                                };
                                                                if (comp)
                                                                {
                                                                    OGeneticApprStatement.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                                }
                                                                if (div)
                                                                {
                                                                    OGeneticApprStatement.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                                }
                                                                if (loca)
                                                                {
                                                                    OGeneticApprStatement.Fld97 = GeoDataInd.GeoStruct_Location_Code;
                                                                }
                                                                if (dept)
                                                                {
                                                                    OGeneticApprStatement.Fld96 = GeoDataInd.GeoStruct_Department_Code;
                                                                }
                                                                if (grp)
                                                                {
                                                                    OGeneticApprStatement.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                                }
                                                                if (unit)
                                                                {
                                                                    OGeneticApprStatement.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                                }

                                                                OGenericEEISSNWtatement.Add(OGeneticApprStatement);
                                                            }
                                                        }
                                                    }

                                                    else
                                                    {
                                                        var izEmpAppRating = item1.OEmpAppRating.Where(e => e.OAppAssignmentAppCategoryName == item4).ToList();

                                                        if (izEmpAppRating.Count() != 0)
                                                        {
                                                            foreach (var item2 in izEmpAppRating)
                                                            {
                                                                GenericField100 OGeneticApprStatement = new GenericField100()
                                                                {
                                                                    Fld1 = "FromDate:" + item.OAppraisalPeriodCalendarFromDate.Value.ToShortDateString() + "," + "ToDate:" + item.OAppraisalPeriodCalendarToDate.Value.ToShortDateString(),
                                                                    Fld2 = item.OAppraisalScheduleBatchCode == null ? "" : item.OAppraisalScheduleBatchCode,
                                                                    Fld3 = ca.OEmpCode == null ? "" : ca.OEmpCode,
                                                                    Fld4 = ca.OEmpName == null ? "" : ca.OEmpName,
                                                                    Fld5 = item1.OAppraisalAssistanceLookupVal == null ? "" : item1.OAppraisalAssistanceLookupVal,
                                                                    Fld6 = item2.OAppAssignmentAppCategoryName == null ? "" : item2.OAppAssignmentAppCategoryName,
                                                                    Fld7 = item2.OAppAssignmentAppSubCategoryName == null ? "" : item2.OAppAssignmentAppSubCategoryName,
                                                                    Fld8 = "Yes",
                                                                    Fld9 = item.OMaxPoints == null ? "" : item.OMaxPoints.ToString(),
                                                                    Fld10 = item2.ORatingPoints == null ? "" : item2.ORatingPoints.ToString()
                                                                };
                                                                if (comp)
                                                                {
                                                                    OGeneticApprStatement.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                                }
                                                                if (div)
                                                                {
                                                                    OGeneticApprStatement.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                                }
                                                                if (loca)
                                                                {
                                                                    OGeneticApprStatement.Fld97 = GeoDataInd.GeoStruct_Location_Code;
                                                                }
                                                                if (dept)
                                                                {
                                                                    OGeneticApprStatement.Fld96 = GeoDataInd.GeoStruct_Department_Code;
                                                                }
                                                                if (grp)
                                                                {
                                                                    OGeneticApprStatement.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                                }
                                                                if (unit)
                                                                {
                                                                    OGeneticApprStatement.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                                }

                                                                OGenericEEISSNWtatement.Add(OGeneticApprStatement);
                                                            }
                                                        }

                                                        else
                                                        {
                                                            GenericField100 OGeneticApprStatement = new GenericField100()
                                                            {
                                                                Fld1 = "FromDate:" + item.OAppraisalPeriodCalendarFromDate.Value.ToShortDateString() + "," + "ToDate:" + item.OAppraisalPeriodCalendarToDate.Value.ToShortDateString(),
                                                                Fld2 = item.OAppraisalScheduleBatchCode == null ? "" : item.OAppraisalScheduleBatchCode,
                                                                Fld3 = ca.OEmpCode == null ? "" : ca.OEmpCode,
                                                                Fld4 = ca.OEmpName == null ? "" : ca.OEmpName,
                                                                Fld5 = item1.OAppraisalAssistanceLookupVal == null ? "" : item1.OAppraisalAssistanceLookupVal,
                                                                Fld6 = item4 == null ? "" : item4,
                                                                Fld7 = item4 == null ? "" : item4,
                                                                Fld8 = "No",
                                                                Fld9 = "0",
                                                                Fld10 = "0"
                                                            };
                                                            if (comp)
                                                            {
                                                                OGeneticApprStatement.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                            }
                                                            if (div)
                                                            {
                                                                OGeneticApprStatement.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                            }
                                                            if (loca)
                                                            {
                                                                OGeneticApprStatement.Fld97 = GeoDataInd.GeoStruct_Location_Code;
                                                            }
                                                            if (dept)
                                                            {
                                                                OGeneticApprStatement.Fld96 = GeoDataInd.GeoStruct_Department_Code;
                                                            }
                                                            if (grp)
                                                            {
                                                                OGeneticApprStatement.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                            }
                                                            if (unit)
                                                            {
                                                                OGeneticApprStatement.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                            }

                                                            OGenericEEISSNWtatement.Add(OGeneticApprStatement);
                                                        }
                                                    }


                                                }
                                            }

                                            else
                                            {
                                                GenericField100 OGeneticApprStatement = new GenericField100()
                                                {
                                                    Fld1 = "FromDate:" + item.OAppraisalPeriodCalendarFromDate.Value.ToShortDateString() + "," + "ToDate:" + item.OAppraisalPeriodCalendarToDate.Value.ToShortDateString(),
                                                    Fld2 = item.OAppraisalScheduleBatchCode == null ? "" : item.OAppraisalScheduleBatchCode,
                                                    Fld3 = ca.OEmpCode == null ? "" : ca.OEmpCode,
                                                    Fld4 = ca.OEmpName == null ? "" : ca.OEmpName,
                                                    Fld5 = item5.LookupVal == null ? "" : item5.LookupVal,
                                                    Fld6 = item4 == null ? "" : item4,
                                                    Fld7 = item4 == null ? "" : item4,
                                                    Fld8 = "No",
                                                    Fld9 = "0",
                                                    Fld10 = "0"
                                                };
                                                if (comp)
                                                {
                                                    OGeneticApprStatement.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                }
                                                if (div)
                                                {
                                                    OGeneticApprStatement.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                }
                                                if (loca)
                                                {
                                                    OGeneticApprStatement.Fld97 = GeoDataInd.GeoStruct_Location_Code;
                                                }
                                                if (dept)
                                                {
                                                    OGeneticApprStatement.Fld96 = GeoDataInd.GeoStruct_Department_Code;
                                                }
                                                if (grp)
                                                {
                                                    OGeneticApprStatement.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                }
                                                if (unit)
                                                {
                                                    OGeneticApprStatement.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                }

                                                OGenericEEISSNWtatement.Add(OGeneticApprStatement);
                                            }


                                        }
                                    }
                                }
                            }
                        }

                        return OGenericEEISSNWtatement;
                        break;

                }
                return null;
            }

        }
        public static List<GenericField100> GenerateEEISlReport(int CompanyPayrollId, List<int> EmpPayrollIdList, List<string> mPayMonth, string mObjectName, int CompanyId, List<string> oth_idlist, List<string> salheadlist, List<string> loanadvidlist, List<string> SpecialGroupslist, List<int> EmpLeaveIdList, List<string> forithead, DateTime mFromDate, DateTime mToDate, DateTime pFromDate, DateTime pToDate, List<string> salheadlistLevel1, List<string> salheadlistLevel2, string ReportType)
        {
            List<GenericField100> OGenericPayrollStatement = new List<GenericField100>();

            using (DataBaseContext db = new DataBaseContext())
            {
                db.Configuration.AutoDetectChangesEnabled = false;
                List<int> WFStatuslist = new List<int> { 2, 4, 6, 8 };
                switch (mObjectName)
                {

                    case "EXPENSEBUDGET":

                        var ExpenseTReqDetailslist = db.ExpenseT
                                .Include(e => e.EmployeeExpense)
                                .Include(e => e.EmployeeExpense.Employee)
                                .Include(e => e.EmployeeExpense.Employee.EmpName)
                                .Include(e => e.ExpenseBudget)
                                .Include(e => e.ExpenseBudget.GeoStruct)
                                .Include(e => e.ExpenseBudget.GeoStruct.Location)
                                .Include(e => e.ExpenseBudget.GeoStruct.Location.LocationObj)
                                .Include(e => e.ExpenseBudget.ExpenseCalendar)
                                .Include(e => e.ExpenseBudget.ExpenseCalendar.Calendar)
                                .Include(e => e.ExpenseBudget.ExpenseType)
                                .Include(e => e.ExMSWFDetails)
                                .Where(e => EmpPayrollIdList.Contains(e.EmployeeExpense.Employee.Id)).ToList();

                        if (ExpenseTReqDetailslist == null || ExpenseTReqDetailslist.Count == 0)
                        {
                            return null;
                        }

                        else
                        {
                            Double UtilizeDAmt = 0;
                            foreach (var Expenseitems in ExpenseTReqDetailslist)
                            {
                                var tempUtilizedAmt = ExpenseTReqDetailslist.Where(e => e.Id == Expenseitems.Id && e.TrReject == false).GroupBy(e => e.ExpenseBudget.ExpenseType.Id).FirstOrDefault();
                                Double getUtilizeAMT = 0;
                                if (tempUtilizedAmt != null)
                                {
                                    getUtilizeAMT = tempUtilizedAmt.Select(u => u.ExpenseAmount).SingleOrDefault();
                                    UtilizeDAmt = (UtilizeDAmt + getUtilizeAMT);
                                }
                                else
                                {
                                    getUtilizeAMT = 0;
                                }


                                int WfStatusNew = Expenseitems.ExMSWFDetails.Select(w => w.WFStatus).LastOrDefault();
                                string Comments = Expenseitems.ExMSWFDetails.Select(c => c.Comments).LastOrDefault();

                                string StatusNarration = "";
                                if (WfStatusNew == 0)
                                    StatusNarration = "Applied";
                                else if (WfStatusNew == 1)
                                    StatusNarration = "Sanctioned";
                                else if (WfStatusNew == 2)
                                    StatusNarration = "Rejected by Sanction";
                                else if (WfStatusNew == 3)
                                    StatusNarration = "Approved";
                                else if (WfStatusNew == 4)
                                    StatusNarration = "Rejected by Approval";
                                else if (WfStatusNew == 5)
                                    StatusNarration = "Approved By HRM (M)";
                                else if (WfStatusNew == 6)
                                    StatusNarration = "Cancelled";

                                if (salheadlist.Count() != 0)
                                {
                                    foreach (var item in salheadlist)
                                    {
                                        if (item.ToUpper() == StatusNarration.ToUpper())
                                        {
                                            GenericField100 OGenericEEISStatement = new GenericField100()
                                            {
                                                Fld1 = Expenseitems.EmployeeExpense.Employee.EmpCode,
                                                Fld2 = Expenseitems.EmployeeExpense.Employee.EmpName.FullNameFML,
                                                Fld3 = Expenseitems.EntryDate == null ? "" : Expenseitems.EntryDate.ToShortDateString(),
                                                Fld4 = Expenseitems.ExpenseBudget == null ? "" : Expenseitems.ExpenseBudget.SanctionAmount == 0 ? "0" : Expenseitems.ExpenseBudget.SanctionAmount.ToString(),
                                                Fld5 = UtilizeDAmt.ToString(),
                                                Fld6 = Expenseitems.ExpenseAmount == 0 ? "0" : Expenseitems.ExpenseAmount.ToString(),
                                                Fld9 = Expenseitems.ExpenseBudget.ExpenseCalendar == null ? "" : Expenseitems.ExpenseBudget.ExpenseCalendar.FullDetails,
                                                Fld10 = Expenseitems.ExpenseBudget.GeoStruct == null ? "" : Expenseitems.ExpenseBudget.GeoStruct.Location == null ? "" : Expenseitems.ExpenseBudget.GeoStruct.Location.LocationObj == null ? "" : Expenseitems.ExpenseBudget.GeoStruct.Location.LocationObj.LocCode,
                                                Fld11 = Expenseitems.ExpenseBudget.ExpenseType == null ? "" : Expenseitems.ExpenseBudget.ExpenseType.LookupVal,
                                                Fld12 = StatusNarration,
                                                Fld13 = Expenseitems.ExpenseBudget.GeoStruct == null ? "" : Expenseitems.ExpenseBudget.GeoStruct.Location == null ? "" : Expenseitems.ExpenseBudget.GeoStruct.Location.FullDetails
                                            };
                                            OGenericPayrollStatement.Add(OGenericEEISStatement);
                                        }
                                    }
                                }
                                else
                                {
                                    GenericField100 OGenericEEISStatement = new GenericField100()
                                    {
                                        Fld1 = Expenseitems.EmployeeExpense.Employee.EmpCode,
                                        Fld2 = Expenseitems.EmployeeExpense.Employee.EmpName.FullNameFML,
                                        Fld3 = Expenseitems.EntryDate == null ? "" : Expenseitems.EntryDate.ToShortDateString(),
                                        Fld4 = Expenseitems.ExpenseBudget == null ? "" : Expenseitems.ExpenseBudget.SanctionAmount == 0 ? "0" : Expenseitems.ExpenseBudget.SanctionAmount.ToString(),
                                        Fld5 = UtilizeDAmt.ToString(),
                                        Fld6 = Expenseitems.ExpenseAmount == 0 ? "0" : Expenseitems.ExpenseAmount.ToString(),
                                        Fld9 = Expenseitems.ExpenseBudget.ExpenseCalendar == null ? "" : Expenseitems.ExpenseBudget.ExpenseCalendar.FullDetails,
                                        Fld10 = Expenseitems.ExpenseBudget.GeoStruct == null ? "" : Expenseitems.ExpenseBudget.GeoStruct.Location == null ? "" : Expenseitems.ExpenseBudget.GeoStruct.Location.LocationObj == null ? "" : Expenseitems.ExpenseBudget.GeoStruct.Location.LocationObj.LocCode,
                                        Fld11 = Expenseitems.ExpenseBudget.ExpenseType == null ? "" : Expenseitems.ExpenseBudget.ExpenseType.LookupVal,
                                        Fld12 = StatusNarration,
                                        Fld13 = Expenseitems.ExpenseBudget.GeoStruct == null ? "" : Expenseitems.ExpenseBudget.GeoStruct.Location == null ? "" : Expenseitems.ExpenseBudget.GeoStruct.Location.FullDetails
                                    };
                                    OGenericPayrollStatement.Add(OGenericEEISStatement);
                                }

                            }
                        }
                        return OGenericPayrollStatement;
                        break;

                    case "TARGETENTRYFORM":
                        var Otype = ReportType;
                        if (Otype.ToUpper() == "DETAILS")
                        {
                            var OBusinessAppraisalDetails = db.EmployeeAppraisal
                            .Include(e => e.BA_TargetT)
                            .Include(e => e.BA_EmpTarget)
                            .Include(e => e.BA_EmpTarget.Select(r => r.BA_Category))
                            .Include(e => e.BA_EmpTarget.Select(r => r.BA_SubCategory))
                            .Include(e => e.Employee)
                            .Include(e => e.Employee.EmpName)
                            .Include(e => e.Employee.PayStruct)
                            .Include(e => e.Employee.GeoStruct)
                            .Include(e => e.Employee.FuncStruct)
                            .Where(e => EmpPayrollIdList.Contains(e.Employee.Id)).ToList();

                            if (OBusinessAppraisalDetails == null || OBusinessAppraisalDetails.Count == 0)
                            {
                                return null;
                            }
                            else
                            {

                                var month = false;
                                var emp = false;
                                var dept = false;
                                var loca = false;
                                var comp = false;
                                var grp = false;
                                var unit = false;
                                var div = false;
                                var regn = false;
                                var grade = false;
                                var lvl = false;
                                var jobstat = false;
                                var job = false;
                                var jobpos = false;

                                var vc = db.LookupValue.Where(a => forithead.Contains(a.Id.ToString())).ToList();

                                foreach (var item in vc)
                                {
                                    if (item.LookupVal.ToUpper() == "MONTH")
                                    {
                                        month = true;
                                    }
                                    if (item.LookupVal.ToUpper() == "LOCATION")
                                    {

                                        loca = true;
                                    }
                                    if (item.LookupVal.ToUpper() == "EMPLOYEE")
                                    {
                                        emp = true;
                                    }
                                    if (item.LookupVal.ToUpper() == "DEPARTMENT")
                                    {
                                        dept = true;
                                    }
                                    if (item.LookupVal.ToUpper() == "COMPANY")
                                    {
                                        comp = true;
                                    }
                                    if (item.LookupVal.ToUpper() == "GROUP")
                                    {
                                        grp = true;
                                    }
                                    if (item.LookupVal.ToUpper() == "UNIT")
                                    {
                                        unit = true;
                                    }
                                    if (item.LookupVal.ToUpper() == "DIVISION")
                                    {
                                        div = true;
                                    }
                                    if (item.LookupVal.ToUpper() == "REGION")
                                    {
                                        regn = true;
                                    }
                                    if (item.LookupVal.ToUpper() == "GRADE")
                                    {
                                        grade = true;
                                    }
                                    if (item.LookupVal.ToUpper() == "LEVEL")
                                    {
                                        lvl = true;
                                    }
                                    if (item.LookupVal.ToUpper() == "JOBSTATUS")
                                    {
                                        jobstat = true;
                                    }

                                    if (item.LookupVal.ToUpper() == "JOB")
                                    {
                                        job = true;
                                    }
                                    if (item.LookupVal.ToUpper() == "JOBPOSITION")
                                    {
                                        jobpos = true;
                                    }
                                }

                                List<Utility.ReportClass> GeoData = new List<Utility.ReportClass>();
                                List<Utility.ReportClass> Paydata = new List<Utility.ReportClass>();
                                List<Utility.ReportClass> Funcdata = new List<Utility.ReportClass>();

                                Utility.ReportClass GeoDataInd = new Utility.ReportClass();
                                Utility.ReportClass PaydataInd = new Utility.ReportClass();
                                Utility.ReportClass FuncdataInd = new Utility.ReportClass();

                                GeoData = GetViewData(0);
                                Paydata = GetViewData(1);
                                Funcdata = GetViewData(2);
                                foreach (var ca in OBusinessAppraisalDetails)
                                {

                                    int geoid = ca.Employee.GeoStruct.Id;

                                    int payid = ca.Employee.PayStruct.Id;

                                    int funid = ca.Employee.FuncStruct.Id;

                                    GeoDataInd = GetViewDataIndiv(geoid, payid, funid, GeoData, 0);
                                    PaydataInd = GetViewDataIndiv(geoid, payid, funid, Paydata, 1);
                                    FuncdataInd = GetViewDataIndiv(geoid, payid, funid, Funcdata, 2);

                                    foreach (var item in (ca.BA_EmpTarget.Where(e => e.StartDate == mFromDate && e.EndDate == mToDate)))
                                    {
                                        var item1 = db.BA_TargetT.Where(e => e.BA_EmpTarget_Id == item.Id && !WFStatuslist.Contains(e.BA_WorkFlow.ToList().OrderByDescending(t => t.Id).FirstOrDefault().WFStatus)).FirstOrDefault();
                                        if (item1 != null)
                                        {
                                            double achiveaccount = db.BA_TargetT.Where(e => e.BA_EmpTarget_Id == item.Id).Select(e => e.TargetAccountsCredit).ToList().Sum();
                                            double achiveamount = db.BA_TargetT.Where(e => e.BA_EmpTarget_Id == item.Id).Select(e => e.TargetAmountCredit).ToList().Sum();
                                            double achivecompliance = db.BA_TargetT.Where(e => e.BA_EmpTarget_Id == item.Id).Select(e => e.TargetComplCredit).ToList().Sum();

                                            if (salheadlist.Count() > 0)
                                            {
                                                foreach (var item4 in salheadlist)
                                                {
                                                    var BA_SubCategoryCode = item.BA_SubCategory.Code;
                                                    if (BA_SubCategoryCode.ToUpper() == item4.ToUpper())
                                                    {
                                                        GenericField100 OGenericObjStatement = new GenericField100
                                                        {
                                                            Fld1 = ca.Employee.EmpCode,
                                                            Fld2 = ca.Employee.EmpName.FullNameFML,
                                                            Fld3 = FuncdataInd.Job_Name,
                                                            Fld14 = item.BA_Category != null ? item.BA_Category.Name.ToString() : "",
                                                            Fld15 = item.BA_SubCategory != null ? item.BA_SubCategory.Name.ToString() : "",
                                                            Fld12 = item.StartDate == null ? "" : item.StartDate.Value.ToShortDateString(),
                                                            Fld13 = item.EndDate == null ? "" : item.EndDate.Value.ToShortDateString(),
                                                            // target
                                                            Fld8 = item.TargetAmount.ToString() == null ? "0" : item.TargetAmount.ToString(),
                                                            Fld9 = item.TargetAccounts.ToString() == null ? "0" : item.TargetAccounts.ToString(),
                                                            Fld10 = item.TargetCompliance.ToString() == null ? "0" : item.TargetCompliance.ToString(),
                                                            //employee
                                                            Fld5 = achiveamount.ToString(),
                                                            Fld6 = achiveaccount.ToString(),
                                                            Fld7 = achivecompliance.ToString(),
                                                            //short fall
                                                            Fld31 = (item.TargetAmount - achiveamount).ToString() == null ? "0" : (item.TargetAmount - achiveamount).ToString(),
                                                            Fld32 = (item.TargetAccounts - achiveaccount).ToString() == null ? "0" : (item.TargetAccounts - achiveaccount).ToString(),
                                                            Fld33 = (item.TargetCompliance - achivecompliance).ToString() == null ? "0" : (item.TargetCompliance - achivecompliance).ToString(),
                                                            Fld11 = item1.EntryDate.ToShortDateString() == null ? "" : item1.EntryDate.ToShortDateString(),

                                                            Fld16 = "EntryDate",
                                                            Fld25 = "Target Achieve Amount",
                                                            Fld26 = "Target Achieve Accounts ",
                                                            Fld27 = "Target Achieve Compliance ",
                                                            Fld28 = "Target Short Fall Amount",
                                                            Fld29 = "Target Short Fall Accounts ",
                                                            Fld30 = "Target Short Fall Compliance ",


                                                        };

                                                        //if (month)
                                                        //{
                                                        //    OGenericObjStatement.Fld100 = ca.PayMonth.ToString();
                                                        //}
                                                        if (comp)
                                                        {
                                                            OGenericObjStatement.Fld99 = GeoDataInd.Company_Name;
                                                        }
                                                        if (div)
                                                        {
                                                            OGenericObjStatement.Fld98 = GeoDataInd.Division_Name;
                                                        }
                                                        if (loca)
                                                        {
                                                            OGenericObjStatement.Fld97 = GeoDataInd.LocDesc;
                                                        }
                                                        if (dept)
                                                        {
                                                            OGenericObjStatement.Fld96 = GeoDataInd.DeptDesc;
                                                        }
                                                        if (grp)
                                                        {
                                                            OGenericObjStatement.Fld95 = GeoDataInd.Group_Name;
                                                        }
                                                        if (unit)
                                                        {
                                                            OGenericObjStatement.Fld94 = GeoDataInd.Unit_Name;
                                                        }
                                                        if (grade)
                                                        {
                                                            OGenericObjStatement.Fld93 = PaydataInd.Grade_Name;
                                                        }
                                                        if (lvl)
                                                        {
                                                            OGenericObjStatement.Fld92 = PaydataInd.Level_Name;
                                                        }
                                                        if (jobstat)
                                                        {
                                                            OGenericObjStatement.Fld91 = GeoDataInd.JobStatus_Id.ToString();
                                                        }
                                                        if (job)
                                                        {
                                                            OGenericObjStatement.Fld90 = FuncdataInd.Job_Name;
                                                        }
                                                        if (jobpos)
                                                        {
                                                            OGenericObjStatement.Fld89 = FuncdataInd.JobPositionDesc;
                                                        }
                                                        if (emp)
                                                        {
                                                            OGenericObjStatement.Fld88 = ca.Employee.EmpName.FullNameFML;
                                                        }
                                                        OGenericPayrollStatement.Add(OGenericObjStatement);
                                                    }
                                                }
                                            }

                                            else
                                            {
                                                GenericField100 OGenericObjStatement = new GenericField100
                                                {
                                                    Fld1 = ca.Employee.EmpCode,
                                                    Fld2 = ca.Employee.EmpName.FullNameFML,
                                                    Fld3 = FuncdataInd.Job_Name,
                                                    Fld14 = item.BA_Category != null ? item.BA_Category.Name.ToString() : "",
                                                    Fld15 = item.BA_SubCategory != null ? item.BA_SubCategory.Name.ToString() : "",
                                                    Fld12 = item.StartDate == null ? "" : item.StartDate.Value.ToShortDateString(),
                                                    Fld13 = item.EndDate == null ? "" : item.EndDate.Value.ToShortDateString(),
                                                    // target
                                                    Fld8 = item.TargetAmount.ToString() == null ? "0" : item.TargetAmount.ToString(),
                                                    Fld9 = item.TargetAccounts.ToString() == null ? "0" : item.TargetAccounts.ToString(),
                                                    Fld10 = item.TargetCompliance.ToString() == null ? "0" : item.TargetCompliance.ToString(),
                                                    //employee
                                                    Fld5 = achiveamount.ToString(),
                                                    Fld6 = achiveaccount.ToString(),
                                                    Fld7 = achivecompliance.ToString(),
                                                    //short fall
                                                    Fld31 = (item.TargetAmount - achiveamount).ToString() == null ? "0" : (item.TargetAmount - achiveamount).ToString(),
                                                    Fld32 = (item.TargetAccounts - achiveaccount).ToString() == null ? "0" : (item.TargetAccounts - achiveaccount).ToString(),
                                                    Fld33 = (item.TargetCompliance - achivecompliance).ToString() == null ? "0" : (item.TargetCompliance - achivecompliance).ToString(),
                                                    Fld11 = item1.EntryDate.ToShortDateString() == null ? "" : item1.EntryDate.ToShortDateString(),

                                                    Fld16 = "EntryDate",
                                                    Fld25 = "Target Achieve Amount",
                                                    Fld26 = "Target Achieve Accounts ",
                                                    Fld27 = "Target Achieve Compliance ",
                                                    Fld28 = "Target Short Fall Amount",
                                                    Fld29 = "Target Short Fall Accounts ",
                                                    Fld30 = "Target Short Fall Compliance ",


                                                };

                                                //if (month)
                                                //{
                                                //    OGenericObjStatement.Fld100 = ca.PayMonth.ToString();
                                                //}
                                                if (comp)
                                                {
                                                    OGenericObjStatement.Fld99 = GeoDataInd.Company_Name;
                                                }
                                                if (div)
                                                {
                                                    OGenericObjStatement.Fld98 = GeoDataInd.Division_Name;
                                                }
                                                if (loca)
                                                {
                                                    OGenericObjStatement.Fld97 = GeoDataInd.LocDesc;
                                                }
                                                if (dept)
                                                {
                                                    OGenericObjStatement.Fld96 = GeoDataInd.DeptDesc;
                                                }
                                                if (grp)
                                                {
                                                    OGenericObjStatement.Fld95 = GeoDataInd.Group_Name;
                                                }
                                                if (unit)
                                                {
                                                    OGenericObjStatement.Fld94 = GeoDataInd.Unit_Name;
                                                }
                                                if (grade)
                                                {
                                                    OGenericObjStatement.Fld93 = PaydataInd.Grade_Name;
                                                }
                                                if (lvl)
                                                {
                                                    OGenericObjStatement.Fld92 = PaydataInd.Level_Name;
                                                }
                                                if (jobstat)
                                                {
                                                    OGenericObjStatement.Fld91 = GeoDataInd.JobStatus_Id.ToString();
                                                }
                                                if (job)
                                                {
                                                    OGenericObjStatement.Fld90 = FuncdataInd.Job_Name;
                                                }
                                                if (jobpos)
                                                {
                                                    OGenericObjStatement.Fld89 = FuncdataInd.JobPositionDesc;
                                                }
                                                if (emp)
                                                {
                                                    OGenericObjStatement.Fld88 = ca.Employee.EmpName.FullNameFML;
                                                }
                                                OGenericPayrollStatement.Add(OGenericObjStatement);
                                            }
                                        }

                                    }
                                }
                                return OGenericPayrollStatement;
                            }
                        }
                        ////////////////////Summary
                        else
                        {

                            var OBusinessApprailSummary = db.EmployeeAppraisal
                                              .Include(e => e.BA_EmpTarget)
                                              .Include(e => e.BA_EmpTarget.Select(r => r.BA_Category))
                                              .Include(e => e.BA_EmpTarget.Select(r => r.BA_SubCategory))
                                              .Include(e => e.Employee)
                                              .Include(e => e.Employee.EmpName)
                                              .Include(e => e.Employee.PayStruct)
                                              .Include(e => e.Employee.GeoStruct)
                                              .Include(e => e.Employee.FuncStruct)
                                              .Where(e => EmpPayrollIdList.Contains(e.Employee.Id)).ToList();

                            if (OBusinessApprailSummary == null || OBusinessApprailSummary.Count == 0)
                            {
                                return null;
                            }
                            else
                            {

                                //var month = false;
                                var emp = false;
                                var dept = false;
                                var loca = false;
                                var comp = false;
                                var grp = false;
                                var unit = false;
                                var div = false;
                                var regn = false;
                                var grade = false;
                                var lvl = false;
                                var jobstat = false;
                                var job = false;
                                var jobpos = false;

                                var vc = db.LookupValue.Where(a => forithead.Contains(a.Id.ToString())).ToList();

                                foreach (var item in vc)
                                {
                                    //if (item.LookupVal.ToUpper() == "MONTH")
                                    //{
                                    //    month = true;
                                    //}
                                    if (item.LookupVal.ToUpper() == "LOCATION")
                                    {

                                        loca = true;
                                    }
                                    if (item.LookupVal.ToUpper() == "EMPLOYEE")
                                    {
                                        emp = true;
                                    }
                                    if (item.LookupVal.ToUpper() == "DEPARTMENT")
                                    {
                                        dept = true;
                                    }
                                    if (item.LookupVal.ToUpper() == "COMPANY")
                                    {
                                        comp = true;
                                    }
                                    if (item.LookupVal.ToUpper() == "GROUP")
                                    {
                                        grp = true;
                                    }
                                    if (item.LookupVal.ToUpper() == "UNIT")
                                    {
                                        unit = true;
                                    }
                                    if (item.LookupVal.ToUpper() == "DIVISION")
                                    {
                                        div = true;
                                    }
                                    if (item.LookupVal.ToUpper() == "REGION")
                                    {
                                        regn = true;
                                    }
                                    if (item.LookupVal.ToUpper() == "GRADE")
                                    {
                                        grade = true;
                                    }
                                    if (item.LookupVal.ToUpper() == "LEVEL")
                                    {
                                        lvl = true;
                                    }
                                    if (item.LookupVal.ToUpper() == "JOBSTATUS")
                                    {
                                        jobstat = true;
                                    }

                                    if (item.LookupVal.ToUpper() == "JOB")
                                    {
                                        job = true;
                                    }
                                    if (item.LookupVal.ToUpper() == "JOBPOSITION")
                                    {
                                        jobpos = true;
                                    }
                                }

                                List<Utility.ReportClass> GeoData = new List<Utility.ReportClass>();
                                List<Utility.ReportClass> Paydata = new List<Utility.ReportClass>();
                                List<Utility.ReportClass> Funcdata = new List<Utility.ReportClass>();

                                Utility.ReportClass GeoDataInd = new Utility.ReportClass();
                                Utility.ReportClass PaydataInd = new Utility.ReportClass();
                                Utility.ReportClass FuncdataInd = new Utility.ReportClass();

                                GeoData = GetViewData(0);
                                Paydata = GetViewData(1);
                                Funcdata = GetViewData(2);
                                foreach (var ca in OBusinessApprailSummary)
                                {

                                    int geoid = ca.Employee.GeoStruct.Id;

                                    int payid = ca.Employee.PayStruct.Id;

                                    int funid = ca.Employee.FuncStruct.Id;

                                    GeoDataInd = GetViewDataIndiv(geoid, payid, funid, GeoData, 0);
                                    PaydataInd = GetViewDataIndiv(geoid, payid, funid, Paydata, 1);
                                    FuncdataInd = GetViewDataIndiv(geoid, payid, funid, Funcdata, 2);

                                    foreach (var item in (ca.BA_EmpTarget.Where(e => e.StartDate == mFromDate && e.EndDate == mToDate)))
                                    {
                                        var item1 = db.BA_TargetT.Where(e => e.BA_EmpTarget_Id == item.Id && !WFStatuslist.Contains(e.BA_WorkFlow.ToList().OrderByDescending(t => t.Id).FirstOrDefault().WFStatus)).FirstOrDefault();

                                        if (item1 != null)
                                        {
                                            if (salheadlist.Count() > 0)
                                            {
                                                foreach (var item4 in salheadlist)
                                                {
                                                    var BA_SubCategoryCode = item.BA_SubCategory.Code;
                                                    if (BA_SubCategoryCode.ToUpper() == item4.ToUpper())
                                                    {

                                                        GenericField100 OGenericObjStatement = new GenericField100
                                                        {
                                                            Fld1 = ca.Employee.EmpCode,
                                                            Fld2 = ca.Employee.EmpName.FullNameFML,
                                                            Fld3 = FuncdataInd.Job_Name,
                                                            Fld14 = item.BA_Category != null ? item.BA_Category.Name : "",
                                                            Fld15 = item.BA_SubCategory != null ? item.BA_SubCategory.Name : "",
                                                            Fld8 = item.TargetAmount.ToString() == null ? "0" : item.TargetAmount.ToString(),
                                                            Fld9 = item.TargetAccounts.ToString() == null ? "0" : item.TargetAccounts.ToString(),
                                                            Fld10 = item.TargetCompliance.ToString() == null ? "0" : item.TargetCompliance.ToString(),
                                                            Fld12 = item.StartDate == null ? "" : item.StartDate.Value.ToShortDateString(),
                                                            Fld13 = item.EndDate == null ? "" : item.EndDate.Value.ToShortDateString(),

                                                        };
                                                        //if (month)
                                                        //{
                                                        //    OGenericObjStatement.Fld100 = ca.PayMonth.ToString();
                                                        //}
                                                        if (comp)
                                                        {
                                                            OGenericObjStatement.Fld99 = GeoDataInd.Company_Name;
                                                        }
                                                        if (div)
                                                        {
                                                            OGenericObjStatement.Fld98 = GeoDataInd.Division_Name;
                                                        }
                                                        if (loca)
                                                        {
                                                            OGenericObjStatement.Fld97 = GeoDataInd.LocDesc;
                                                        }
                                                        if (dept)
                                                        {
                                                            OGenericObjStatement.Fld96 = GeoDataInd.DeptDesc;
                                                        }
                                                        if (grp)
                                                        {
                                                            OGenericObjStatement.Fld95 = GeoDataInd.Group_Name;
                                                        }
                                                        if (unit)
                                                        {
                                                            OGenericObjStatement.Fld94 = GeoDataInd.Unit_Name;
                                                        }
                                                        if (grade)
                                                        {
                                                            OGenericObjStatement.Fld93 = PaydataInd.Grade_Name;
                                                        }
                                                        if (lvl)
                                                        {
                                                            OGenericObjStatement.Fld92 = PaydataInd.Level_Name;
                                                        }
                                                        if (jobstat)
                                                        {
                                                            OGenericObjStatement.Fld91 = GeoDataInd.JobStatus_Id.ToString();
                                                        }
                                                        if (job)
                                                        {
                                                            OGenericObjStatement.Fld90 = FuncdataInd.Job_Name;
                                                        }
                                                        if (jobpos)
                                                        {
                                                            OGenericObjStatement.Fld89 = FuncdataInd.JobPositionDesc;
                                                        }
                                                        if (emp)
                                                        {
                                                            OGenericObjStatement.Fld88 = ca.Employee.EmpName.FullNameFML;
                                                        }
                                                        OGenericPayrollStatement.Add(OGenericObjStatement);
                                                    }

                                                }
                                            }

                                            else
                                            {

                                                GenericField100 OGenericObjStatement = new GenericField100
                                                {
                                                    Fld1 = ca.Employee.EmpCode,
                                                    Fld2 = ca.Employee.EmpName.FullNameFML,
                                                    Fld3 = FuncdataInd.Job_Name,
                                                    Fld14 = item.BA_Category != null ? item.BA_Category.Name : "",
                                                    Fld15 = item.BA_SubCategory != null ? item.BA_SubCategory.Name : "",
                                                    Fld8 = item.TargetAmount.ToString() == null ? "0" : item.TargetAmount.ToString(),
                                                    Fld9 = item.TargetAccounts.ToString() == null ? "0" : item.TargetAccounts.ToString(),
                                                    Fld10 = item.TargetCompliance.ToString() == null ? "0" : item.TargetCompliance.ToString(),
                                                    Fld12 = item.StartDate == null ? "" : item.StartDate.Value.ToShortDateString(),
                                                    Fld13 = item.EndDate == null ? "" : item.EndDate.Value.ToShortDateString(),

                                                };

                                                //if (month)
                                                //{
                                                //    OGenericObjStatement.Fld100 = ca.PayMonth.ToString();
                                                //}
                                                if (comp)
                                                {
                                                    OGenericObjStatement.Fld99 = GeoDataInd.Company_Name;
                                                }
                                                if (div)
                                                {
                                                    OGenericObjStatement.Fld98 = GeoDataInd.Division_Name;
                                                }
                                                if (loca)
                                                {
                                                    OGenericObjStatement.Fld97 = GeoDataInd.LocDesc;
                                                }
                                                if (dept)
                                                {
                                                    OGenericObjStatement.Fld96 = GeoDataInd.DeptDesc;
                                                }
                                                if (grp)
                                                {
                                                    OGenericObjStatement.Fld95 = GeoDataInd.Group_Name;
                                                }
                                                if (unit)
                                                {
                                                    OGenericObjStatement.Fld94 = GeoDataInd.Unit_Name;
                                                }
                                                if (grade)
                                                {
                                                    OGenericObjStatement.Fld93 = PaydataInd.Grade_Name;
                                                }
                                                if (lvl)
                                                {
                                                    OGenericObjStatement.Fld92 = PaydataInd.Level_Name;
                                                }
                                                if (jobstat)
                                                {
                                                    OGenericObjStatement.Fld91 = GeoDataInd.JobStatus_Id.ToString();
                                                }
                                                if (job)
                                                {
                                                    OGenericObjStatement.Fld90 = FuncdataInd.Job_Name;
                                                }
                                                if (jobpos)
                                                {
                                                    OGenericObjStatement.Fld89 = FuncdataInd.JobPositionDesc;
                                                }
                                                if (emp)
                                                {
                                                    OGenericObjStatement.Fld88 = ca.Employee.EmpName.FullNameFML;
                                                }
                                                OGenericPayrollStatement.Add(OGenericObjStatement);
                                            }
                                        }
                                    }
                                }

                                return OGenericPayrollStatement;

                            }
                        }
                        break;

                    //************** TargetEntry Details report ***************//
                    case "TARGETENTRYDETAILSFORM":

                        var OtyYpe = ReportType;
                        if (OtyYpe.ToUpper() == "DETAILS")
                        {
                            var OBusinessAppraisalDetails = db.EmployeeAppraisal
                            .Include(e => e.BA_TargetT)
                            .Include(e => e.BA_TargetT.Select(r => r.BA_WorkFlow))
                            .Include(e => e.BA_EmpTarget)
                            .Include(e => e.BA_EmpTarget.Select(r => r.BA_Category))
                            .Include(e => e.BA_EmpTarget.Select(r => r.BA_SubCategory))
                            .Include(e => e.Employee)
                            .Include(e => e.Employee.EmpName)
                            .Include(e => e.Employee.PayStruct)
                            .Include(e => e.Employee.GeoStruct)
                            .Include(e => e.Employee.FuncStruct)
                            .Where(e => EmpPayrollIdList.Contains(e.Employee.Id)).ToList();

                            if (OBusinessAppraisalDetails == null || OBusinessAppraisalDetails.Count == 0)
                            {
                                return null;
                            }
                            else
                            {

                                var month = false;
                                var emp = false;
                                var dept = false;
                                var loca = false;
                                var comp = false;
                                var grp = false;
                                var unit = false;
                                var div = false;
                                var regn = false;
                                var grade = false;
                                var lvl = false;
                                var jobstat = false;
                                var job = false;
                                var jobpos = false;

                                var vc = db.LookupValue.Where(a => forithead.Contains(a.Id.ToString())).ToList();

                                foreach (var item in vc)
                                {
                                    if (item.LookupVal.ToUpper() == "MONTH")
                                    {
                                        month = true;
                                    }
                                    if (item.LookupVal.ToUpper() == "LOCATION")
                                    {

                                        loca = true;
                                    }
                                    if (item.LookupVal.ToUpper() == "EMPLOYEE")
                                    {
                                        emp = true;
                                    }
                                    if (item.LookupVal.ToUpper() == "DEPARTMENT")
                                    {
                                        dept = true;
                                    }
                                    if (item.LookupVal.ToUpper() == "COMPANY")
                                    {
                                        comp = true;
                                    }
                                    if (item.LookupVal.ToUpper() == "GROUP")
                                    {
                                        grp = true;
                                    }
                                    if (item.LookupVal.ToUpper() == "UNIT")
                                    {
                                        unit = true;
                                    }
                                    if (item.LookupVal.ToUpper() == "DIVISION")
                                    {
                                        div = true;
                                    }
                                    if (item.LookupVal.ToUpper() == "REGION")
                                    {
                                        regn = true;
                                    }
                                    if (item.LookupVal.ToUpper() == "GRADE")
                                    {
                                        grade = true;
                                    }
                                    if (item.LookupVal.ToUpper() == "LEVEL")
                                    {
                                        lvl = true;
                                    }
                                    if (item.LookupVal.ToUpper() == "JOBSTATUS")
                                    {
                                        jobstat = true;
                                    }

                                    if (item.LookupVal.ToUpper() == "JOB")
                                    {
                                        job = true;
                                    }
                                    if (item.LookupVal.ToUpper() == "JOBPOSITION")
                                    {
                                        jobpos = true;
                                    }
                                }

                                List<Utility.ReportClass> GeoData = new List<Utility.ReportClass>();
                                List<Utility.ReportClass> Paydata = new List<Utility.ReportClass>();
                                List<Utility.ReportClass> Funcdata = new List<Utility.ReportClass>();

                                Utility.ReportClass GeoDataInd = new Utility.ReportClass();
                                Utility.ReportClass PaydataInd = new Utility.ReportClass();
                                Utility.ReportClass FuncdataInd = new Utility.ReportClass();

                                GeoData = GetViewData(0);
                                Paydata = GetViewData(1);
                                Funcdata = GetViewData(2);
                                foreach (var ca in OBusinessAppraisalDetails)
                                {

                                    int geoid = ca.Employee.GeoStruct.Id;

                                    int payid = ca.Employee.PayStruct.Id;

                                    int funid = ca.Employee.FuncStruct.Id;

                                    GeoDataInd = GetViewDataIndiv(geoid, payid, funid, GeoData, 0);
                                    PaydataInd = GetViewDataIndiv(geoid, payid, funid, Paydata, 1);
                                    FuncdataInd = GetViewDataIndiv(geoid, payid, funid, Funcdata, 2);

                                    foreach (var item in (ca.BA_EmpTarget.Where(e => e.StartDate == mFromDate && e.EndDate == mToDate)))
                                    {
                                        var item1 = db.BA_TargetT.Where(e => e.BA_EmpTarget_Id == item.Id && !WFStatuslist.Contains(e.BA_WorkFlow.ToList().OrderByDescending(t => t.Id).FirstOrDefault().WFStatus)).ToList();

                                        if (item1 != null && item1.Count() > 0)
                                        {
                                            foreach (var itemdetails in item1)
                                            {
                                                double achiveaccount = db.BA_TargetT.Where(e => e.BA_EmpTarget_Id == item.Id).Select(e => e.TargetAccountsCredit).ToList().Sum();
                                                double achiveamount = db.BA_TargetT.Where(e => e.BA_EmpTarget_Id == item.Id).Select(e => e.TargetAmountCredit).ToList().Sum();
                                                double achivecompliance = db.BA_TargetT.Where(e => e.BA_EmpTarget_Id == item.Id).Select(e => e.TargetComplCredit).ToList().Sum();
                                                int WfStatusNew = itemdetails.BA_WorkFlow.ToList().OrderByDescending(e => e.Id).FirstOrDefault().WFStatus;

                                                string StatusNarration = "";
                                                if (WfStatusNew == 0)
                                                    StatusNarration = "Applied";
                                                else if (WfStatusNew == 1)
                                                    StatusNarration = "Sanctioned";
                                                else if (WfStatusNew == 2)
                                                    StatusNarration = "Rejected by Sanction";
                                                else if (WfStatusNew == 3)
                                                    StatusNarration = "Approved";
                                                else if (WfStatusNew == 4)
                                                    StatusNarration = "Rejected by Approval";
                                                else if (WfStatusNew == 5)
                                                    StatusNarration = "Approved By HRM (M)";
                                                else if (WfStatusNew == 6)
                                                    StatusNarration = "Cancel";

                                                if (salheadlist.Count() > 0)
                                                {
                                                    foreach (var item4 in salheadlist)
                                                    {
                                                        var BA_SubCategoryCode = item.BA_SubCategory.Code;
                                                        if (BA_SubCategoryCode.ToUpper() == item4.ToUpper())
                                                        {
                                                            GenericField100 OGenericObjStatement = new GenericField100
                                                            {
                                                                Fld1 = ca.Employee.EmpCode,
                                                                Fld2 = ca.Employee.EmpName.FullNameFML,
                                                                Fld3 = FuncdataInd.Job_Name,
                                                                Fld14 = item.BA_Category != null ? item.BA_Category.Name.ToString() : "",
                                                                Fld15 = item.BA_SubCategory != null ? item.BA_SubCategory.Name.ToString() : "",
                                                                Fld16 = item.StartDate != null && item.EndDate != null ? item.StartDate.Value.ToShortDateString() + " - " + item.EndDate.Value.ToShortDateString() : "",

                                                                // target
                                                                Fld8 = item.TargetAmount.ToString() == null ? "0" : item.TargetAmount.ToString(),
                                                                Fld9 = item.TargetAccounts.ToString() == null ? "0" : item.TargetAccounts.ToString(),
                                                                Fld10 = item.TargetCompliance.ToString() == null ? "0" : item.TargetCompliance.ToString(),

                                                                Fld11 = itemdetails.EntryDate.ToShortDateString() == null ? "" : itemdetails.EntryDate.ToShortDateString(),
                                                                Fld6 = itemdetails.CustomerId != null ? itemdetails.CustomerId : "",

                                                                Fld17 = itemdetails.Narration != null ? itemdetails.Narration : "",
                                                                Fld41 = StatusNarration.ToString() == null ? "" : StatusNarration.ToString(),
                                                                Fld19 = itemdetails.AccountNo != null ? itemdetails.AccountNo.ToString() : "0",
                                                                Fld20 = itemdetails.TargetAccountsCredit.ToString() == null ? "0" : itemdetails.TargetAccountsCredit.ToString(),
                                                                Fld21 = itemdetails.TargetAmountCredit.ToString() == null ? "0" : itemdetails.TargetAmountCredit.ToString(),
                                                                Fld22 = itemdetails.TargetComplCredit.ToString() == null ? "0" : itemdetails.TargetComplCredit.ToString(),



                                                            };

                                                            //if (month)
                                                            //{
                                                            //    OGenericObjStatement.Fld100 = ca.PayMonth.ToString();
                                                            //}
                                                            if (comp)
                                                            {
                                                                OGenericObjStatement.Fld99 = GeoDataInd.Company_Name;
                                                            }
                                                            if (div)
                                                            {
                                                                OGenericObjStatement.Fld98 = GeoDataInd.Division_Name;
                                                            }
                                                            if (loca)
                                                            {
                                                                OGenericObjStatement.Fld97 = GeoDataInd.LocDesc;
                                                            }
                                                            if (dept)
                                                            {
                                                                OGenericObjStatement.Fld96 = GeoDataInd.DeptDesc;
                                                            }
                                                            if (grp)
                                                            {
                                                                OGenericObjStatement.Fld95 = GeoDataInd.Group_Name;
                                                            }
                                                            if (unit)
                                                            {
                                                                OGenericObjStatement.Fld94 = GeoDataInd.Unit_Name;
                                                            }
                                                            if (grade)
                                                            {
                                                                OGenericObjStatement.Fld93 = PaydataInd.Grade_Name;
                                                            }
                                                            if (lvl)
                                                            {
                                                                OGenericObjStatement.Fld92 = PaydataInd.Level_Name;
                                                            }
                                                            if (jobstat)
                                                            {
                                                                OGenericObjStatement.Fld91 = GeoDataInd.JobStatus_Id.ToString();
                                                            }
                                                            if (job)
                                                            {
                                                                OGenericObjStatement.Fld90 = FuncdataInd.Job_Name;
                                                            }
                                                            if (jobpos)
                                                            {
                                                                OGenericObjStatement.Fld89 = FuncdataInd.JobPositionDesc;
                                                            }
                                                            if (emp)
                                                            {
                                                                OGenericObjStatement.Fld88 = ca.Employee.EmpName.FullNameFML;
                                                            }
                                                            OGenericPayrollStatement.Add(OGenericObjStatement);
                                                        }
                                                    }
                                                }

                                                else
                                                {
                                                    GenericField100 OGenericObjStatement = new GenericField100
                                                    {
                                                        Fld1 = ca.Employee.EmpCode,
                                                        Fld2 = ca.Employee.EmpName.FullNameFML,
                                                        Fld3 = FuncdataInd.Job_Name,
                                                        Fld14 = item.BA_Category != null ? item.BA_Category.Name.ToString() : "",
                                                        Fld15 = item.BA_SubCategory != null ? item.BA_SubCategory.Name.ToString() : "",
                                                        Fld16 = item.StartDate != null && item.EndDate != null ? item.StartDate.Value.ToShortDateString() + " - " + item.EndDate.Value.ToShortDateString() : "",

                                                        // target
                                                        Fld8 = item.TargetAmount.ToString() == null ? "0" : item.TargetAmount.ToString(),
                                                        Fld9 = item.TargetAccounts.ToString() == null ? "0" : item.TargetAccounts.ToString(),
                                                        Fld10 = item.TargetCompliance.ToString() == null ? "0" : item.TargetCompliance.ToString(),

                                                        Fld11 = itemdetails.EntryDate.ToShortDateString() == null ? "" : itemdetails.EntryDate.ToShortDateString(),
                                                        Fld6 = itemdetails.CustomerId != null ? itemdetails.CustomerId : "",

                                                        Fld17 = itemdetails.Narration != null ? itemdetails.Narration : "",
                                                        Fld41 = StatusNarration.ToString() == null ? "" : StatusNarration.ToString(),
                                                        Fld19 = itemdetails.AccountNo != null ? itemdetails.AccountNo.ToString() : "0",
                                                        Fld20 = itemdetails.TargetAccountsCredit.ToString() == null ? "0" : itemdetails.TargetAccountsCredit.ToString(),
                                                        Fld21 = itemdetails.TargetAmountCredit.ToString() == null ? "0" : itemdetails.TargetAmountCredit.ToString(),
                                                        Fld22 = itemdetails.TargetComplCredit.ToString() == null ? "0" : itemdetails.TargetComplCredit.ToString(),



                                                    };

                                                    //if (month)
                                                    //{
                                                    //    OGenericObjStatement.Fld100 = ca.PayMonth.ToString();
                                                    //}
                                                    if (comp)
                                                    {
                                                        OGenericObjStatement.Fld99 = GeoDataInd.Company_Name;
                                                    }
                                                    if (div)
                                                    {
                                                        OGenericObjStatement.Fld98 = GeoDataInd.Division_Name;
                                                    }
                                                    if (loca)
                                                    {
                                                        OGenericObjStatement.Fld97 = GeoDataInd.LocDesc;
                                                    }
                                                    if (dept)
                                                    {
                                                        OGenericObjStatement.Fld96 = GeoDataInd.DeptDesc;
                                                    }
                                                    if (grp)
                                                    {
                                                        OGenericObjStatement.Fld95 = GeoDataInd.Group_Name;
                                                    }
                                                    if (unit)
                                                    {
                                                        OGenericObjStatement.Fld94 = GeoDataInd.Unit_Name;
                                                    }
                                                    if (grade)
                                                    {
                                                        OGenericObjStatement.Fld93 = PaydataInd.Grade_Name;
                                                    }
                                                    if (lvl)
                                                    {
                                                        OGenericObjStatement.Fld92 = PaydataInd.Level_Name;
                                                    }
                                                    if (jobstat)
                                                    {
                                                        OGenericObjStatement.Fld91 = GeoDataInd.JobStatus_Id.ToString();
                                                    }
                                                    if (job)
                                                    {
                                                        OGenericObjStatement.Fld90 = FuncdataInd.Job_Name;
                                                    }
                                                    if (jobpos)
                                                    {
                                                        OGenericObjStatement.Fld89 = FuncdataInd.JobPositionDesc;
                                                    }
                                                    if (emp)
                                                    {
                                                        OGenericObjStatement.Fld88 = ca.Employee.EmpName.FullNameFML;
                                                    }
                                                    OGenericPayrollStatement.Add(OGenericObjStatement);

                                                }
                                            }

                                        }
                                    }
                                }
                                return OGenericPayrollStatement;
                            }
                        }
                        ////////////////////Summary
                        else
                        {
                            var OBusinessAppraisalDetails = db.EmployeeAppraisal
                            .Include(e => e.BA_TargetT)
                            .Include(e => e.BA_TargetT.Select(r => r.BA_WorkFlow))
                            .Include(e => e.BA_EmpTarget)
                            .Include(e => e.BA_EmpTarget.Select(r => r.BA_Category))
                            .Include(e => e.BA_EmpTarget.Select(r => r.BA_SubCategory))
                            .Include(e => e.Employee)
                            .Include(e => e.Employee.EmpName)
                            .Include(e => e.Employee.PayStruct)
                            .Include(e => e.Employee.GeoStruct)
                            .Include(e => e.Employee.FuncStruct)
                            .Where(e => EmpPayrollIdList.Contains(e.Employee.Id)).ToList();

                            if (OBusinessAppraisalDetails == null || OBusinessAppraisalDetails.Count == 0)
                            {
                                return null;
                            }
                            else
                            {

                                var month = false;
                                var emp = false;
                                var dept = false;
                                var loca = false;
                                var comp = false;
                                var grp = false;
                                var unit = false;
                                var div = false;
                                var regn = false;
                                var grade = false;
                                var lvl = false;
                                var jobstat = false;
                                var job = false;
                                var jobpos = false;

                                var vc = db.LookupValue.Where(a => forithead.Contains(a.Id.ToString())).ToList();

                                foreach (var item in vc)
                                {
                                    if (item.LookupVal.ToUpper() == "MONTH")
                                    {
                                        month = true;
                                    }
                                    if (item.LookupVal.ToUpper() == "LOCATION")
                                    {

                                        loca = true;
                                    }
                                    if (item.LookupVal.ToUpper() == "EMPLOYEE")
                                    {
                                        emp = true;
                                    }
                                    if (item.LookupVal.ToUpper() == "DEPARTMENT")
                                    {
                                        dept = true;
                                    }
                                    if (item.LookupVal.ToUpper() == "COMPANY")
                                    {
                                        comp = true;
                                    }
                                    if (item.LookupVal.ToUpper() == "GROUP")
                                    {
                                        grp = true;
                                    }
                                    if (item.LookupVal.ToUpper() == "UNIT")
                                    {
                                        unit = true;
                                    }
                                    if (item.LookupVal.ToUpper() == "DIVISION")
                                    {
                                        div = true;
                                    }
                                    if (item.LookupVal.ToUpper() == "REGION")
                                    {
                                        regn = true;
                                    }
                                    if (item.LookupVal.ToUpper() == "GRADE")
                                    {
                                        grade = true;
                                    }
                                    if (item.LookupVal.ToUpper() == "LEVEL")
                                    {
                                        lvl = true;
                                    }
                                    if (item.LookupVal.ToUpper() == "JOBSTATUS")
                                    {
                                        jobstat = true;
                                    }

                                    if (item.LookupVal.ToUpper() == "JOB")
                                    {
                                        job = true;
                                    }
                                    if (item.LookupVal.ToUpper() == "JOBPOSITION")
                                    {
                                        jobpos = true;
                                    }
                                }

                                List<Utility.ReportClass> GeoData = new List<Utility.ReportClass>();
                                List<Utility.ReportClass> Paydata = new List<Utility.ReportClass>();
                                List<Utility.ReportClass> Funcdata = new List<Utility.ReportClass>();

                                Utility.ReportClass GeoDataInd = new Utility.ReportClass();
                                Utility.ReportClass PaydataInd = new Utility.ReportClass();
                                Utility.ReportClass FuncdataInd = new Utility.ReportClass();

                                GeoData = GetViewData(0);
                                Paydata = GetViewData(1);
                                Funcdata = GetViewData(2);
                                foreach (var ca in OBusinessAppraisalDetails)
                                {

                                    int geoid = ca.Employee.GeoStruct.Id;

                                    int payid = ca.Employee.PayStruct.Id;

                                    int funid = ca.Employee.FuncStruct.Id;

                                    GeoDataInd = GetViewDataIndiv(geoid, payid, funid, GeoData, 0);
                                    PaydataInd = GetViewDataIndiv(geoid, payid, funid, Paydata, 1);
                                    FuncdataInd = GetViewDataIndiv(geoid, payid, funid, Funcdata, 2);

                                    foreach (var item in ca.BA_EmpTarget)
                                    {
                                        var item1 = db.BA_TargetT.Where(e => e.BA_EmpTarget_Id == item.Id && !WFStatuslist.Contains(e.BA_WorkFlow.ToList().OrderByDescending(t => t.Id).FirstOrDefault().WFStatus)).ToList();

                                        if (item1 != null && item1.Count() > 0)
                                        {
                                            foreach (var itemdetails in item1)
                                            {
                                                double achiveaccount = db.BA_TargetT.Where(e => e.BA_EmpTarget_Id == item.Id).Select(e => e.TargetAccountsCredit).ToList().Sum();
                                                double achiveamount = db.BA_TargetT.Where(e => e.BA_EmpTarget_Id == item.Id).Select(e => e.TargetAmountCredit).ToList().Sum();
                                                double achivecompliance = db.BA_TargetT.Where(e => e.BA_EmpTarget_Id == item.Id).Select(e => e.TargetComplCredit).ToList().Sum();
                                                int WfStatusNew = itemdetails.BA_WorkFlow.ToList().OrderByDescending(e => e.Id).FirstOrDefault().WFStatus;

                                                string StatusNarration = "";
                                                if (WfStatusNew == 0)
                                                    StatusNarration = "Applied";
                                                else if (WfStatusNew == 1)
                                                    StatusNarration = "Sanctioned";
                                                else if (WfStatusNew == 2)
                                                    StatusNarration = "Rejected by Sanction";
                                                else if (WfStatusNew == 3)
                                                    StatusNarration = "Approved";
                                                else if (WfStatusNew == 4)
                                                    StatusNarration = "Rejected by Approval";
                                                else if (WfStatusNew == 5)
                                                    StatusNarration = "Approved By HRM (M)";
                                                else if (WfStatusNew == 6)
                                                    StatusNarration = "Cancel";

                                                if (salheadlist.Count() > 0)
                                                {
                                                    foreach (var item4 in salheadlist)
                                                    {
                                                        var BA_SubCategoryCode = item.BA_SubCategory.Code;
                                                        if (BA_SubCategoryCode.ToUpper() == item4.ToUpper())
                                                        {
                                                            GenericField100 OGenericObjStatement = new GenericField100
                                                            {
                                                                Fld1 = ca.Employee.EmpCode,
                                                                Fld2 = ca.Employee.EmpName.FullNameFML,
                                                                Fld3 = FuncdataInd.Job_Name,
                                                                Fld14 = item.BA_Category != null ? item.BA_Category.Name.ToString() : "",
                                                                Fld15 = item.BA_SubCategory != null ? item.BA_SubCategory.Name.ToString() : "",
                                                                Fld16 = item.StartDate != null && item.EndDate != null ? item.StartDate.Value.ToShortDateString() + " - " + item.EndDate.Value.ToShortDateString() : "",

                                                                // target
                                                                Fld8 = item.TargetAmount.ToString() == null ? "0" : item.TargetAmount.ToString(),
                                                                Fld9 = item.TargetAccounts.ToString() == null ? "0" : item.TargetAccounts.ToString(),
                                                                Fld10 = item.TargetCompliance.ToString() == null ? "0" : item.TargetCompliance.ToString(),

                                                                Fld11 = itemdetails.EntryDate.ToShortDateString() == null ? "" : itemdetails.EntryDate.ToShortDateString(),
                                                                Fld6 = itemdetails.CustomerId != null ? itemdetails.CustomerId : "",

                                                                Fld17 = itemdetails.Narration != null ? itemdetails.Narration : "",
                                                                Fld41 = StatusNarration.ToString() == null ? "" : StatusNarration.ToString(),
                                                                Fld19 = itemdetails.AccountNo != null ? itemdetails.AccountNo.ToString() : "0",
                                                                Fld20 = itemdetails.TargetAccountsCredit.ToString() == null ? "0" : itemdetails.TargetAccountsCredit.ToString(),
                                                                Fld21 = itemdetails.TargetAmountCredit.ToString() == null ? "0" : itemdetails.TargetAmountCredit.ToString(),
                                                                Fld22 = itemdetails.TargetComplCredit.ToString() == null ? "0" : itemdetails.TargetComplCredit.ToString(),



                                                            };

                                                            //if (month)
                                                            //{
                                                            //    OGenericObjStatement.Fld100 = ca.PayMonth.ToString();
                                                            //}
                                                            if (comp)
                                                            {
                                                                OGenericObjStatement.Fld99 = GeoDataInd.Company_Name;
                                                            }
                                                            if (div)
                                                            {
                                                                OGenericObjStatement.Fld98 = GeoDataInd.Division_Name;
                                                            }
                                                            if (loca)
                                                            {
                                                                OGenericObjStatement.Fld97 = GeoDataInd.LocDesc;
                                                            }
                                                            if (dept)
                                                            {
                                                                OGenericObjStatement.Fld96 = GeoDataInd.DeptDesc;
                                                            }
                                                            if (grp)
                                                            {
                                                                OGenericObjStatement.Fld95 = GeoDataInd.Group_Name;
                                                            }
                                                            if (unit)
                                                            {
                                                                OGenericObjStatement.Fld94 = GeoDataInd.Unit_Name;
                                                            }
                                                            if (grade)
                                                            {
                                                                OGenericObjStatement.Fld93 = PaydataInd.Grade_Name;
                                                            }
                                                            if (lvl)
                                                            {
                                                                OGenericObjStatement.Fld92 = PaydataInd.Level_Name;
                                                            }
                                                            if (jobstat)
                                                            {
                                                                OGenericObjStatement.Fld91 = GeoDataInd.JobStatus_Id.ToString();
                                                            }
                                                            if (job)
                                                            {
                                                                OGenericObjStatement.Fld90 = FuncdataInd.Job_Name;
                                                            }
                                                            if (jobpos)
                                                            {
                                                                OGenericObjStatement.Fld89 = FuncdataInd.JobPositionDesc;
                                                            }
                                                            if (emp)
                                                            {
                                                                OGenericObjStatement.Fld88 = ca.Employee.EmpName.FullNameFML;
                                                            }
                                                            OGenericPayrollStatement.Add(OGenericObjStatement);
                                                        }
                                                    }
                                                }


                                                else
                                                {

                                                    GenericField100 OGenericObjStatement = new GenericField100
                                                    {
                                                        Fld1 = ca.Employee.EmpCode,
                                                        Fld2 = ca.Employee.EmpName.FullNameFML,
                                                        Fld3 = FuncdataInd.Job_Name,
                                                        Fld14 = item.BA_Category != null ? item.BA_Category.Name.ToString() : "",
                                                        Fld15 = item.BA_SubCategory != null ? item.BA_SubCategory.Name.ToString() : "",
                                                        Fld16 = item.StartDate != null && item.EndDate != null ? item.StartDate.Value.ToShortDateString() + " - " + item.EndDate.Value.ToShortDateString() : "",

                                                        // target
                                                        Fld8 = item.TargetAmount.ToString() == null ? "0" : item.TargetAmount.ToString(),
                                                        Fld9 = item.TargetAccounts.ToString() == null ? "0" : item.TargetAccounts.ToString(),
                                                        Fld10 = item.TargetCompliance.ToString() == null ? "0" : item.TargetCompliance.ToString(),

                                                        Fld11 = itemdetails.EntryDate.ToShortDateString() == null ? "" : itemdetails.EntryDate.ToShortDateString(),
                                                        Fld6 = itemdetails.CustomerId != null ? itemdetails.CustomerId : "",

                                                        Fld17 = itemdetails.Narration != null ? itemdetails.Narration : "",
                                                        Fld41 = StatusNarration.ToString() == null ? "" : StatusNarration.ToString(),
                                                        Fld19 = itemdetails.AccountNo != null ? itemdetails.AccountNo.ToString() : "0",
                                                        Fld20 = itemdetails.TargetAccountsCredit.ToString() == null ? "0" : itemdetails.TargetAccountsCredit.ToString(),
                                                        Fld21 = itemdetails.TargetAmountCredit.ToString() == null ? "0" : itemdetails.TargetAmountCredit.ToString(),
                                                        Fld22 = itemdetails.TargetComplCredit.ToString() == null ? "0" : itemdetails.TargetComplCredit.ToString(),



                                                    };

                                                    //if (month)
                                                    //{
                                                    //    OGenericObjStatement.Fld100 = ca.PayMonth.ToString();
                                                    //}
                                                    if (comp)
                                                    {
                                                        OGenericObjStatement.Fld99 = GeoDataInd.Company_Name;
                                                    }
                                                    if (div)
                                                    {
                                                        OGenericObjStatement.Fld98 = GeoDataInd.Division_Name;
                                                    }
                                                    if (loca)
                                                    {
                                                        OGenericObjStatement.Fld97 = GeoDataInd.LocDesc;
                                                    }
                                                    if (dept)
                                                    {
                                                        OGenericObjStatement.Fld96 = GeoDataInd.DeptDesc;
                                                    }
                                                    if (grp)
                                                    {
                                                        OGenericObjStatement.Fld95 = GeoDataInd.Group_Name;
                                                    }
                                                    if (unit)
                                                    {
                                                        OGenericObjStatement.Fld94 = GeoDataInd.Unit_Name;
                                                    }
                                                    if (grade)
                                                    {
                                                        OGenericObjStatement.Fld93 = PaydataInd.Grade_Name;
                                                    }
                                                    if (lvl)
                                                    {
                                                        OGenericObjStatement.Fld92 = PaydataInd.Level_Name;
                                                    }
                                                    if (jobstat)
                                                    {
                                                        OGenericObjStatement.Fld91 = GeoDataInd.JobStatus_Id.ToString();
                                                    }
                                                    if (job)
                                                    {
                                                        OGenericObjStatement.Fld90 = FuncdataInd.Job_Name;
                                                    }
                                                    if (jobpos)
                                                    {
                                                        OGenericObjStatement.Fld89 = FuncdataInd.JobPositionDesc;
                                                    }
                                                    if (emp)
                                                    {
                                                        OGenericObjStatement.Fld88 = ca.Employee.EmpName.FullNameFML;
                                                    }
                                                    OGenericPayrollStatement.Add(OGenericObjStatement);
                                                }
                                            }

                                        }
                                    }
                                }
                                return OGenericPayrollStatement;
                            }

                        }
                        break;

                    #region Target/Acheived EmpWise

                    case "TARGETACHEIVEDEMPWISE":

                        var OBusinessAppraisalDETAILS = db.EmployeeAppraisal
                            .Include(e => e.BA_TargetT)
                            .Include(e => e.BA_TargetT.Select(r => r.BA_WorkFlow))
                            .Include(e => e.BA_EmpTarget)
                            .Include(e => e.BA_EmpTarget.Select(r => r.BA_Category))
                            .Include(e => e.BA_EmpTarget.Select(r => r.BA_SubCategory))
                            .Include(e => e.Employee)
                            .Include(e => e.Employee.EmpName)
                            .Include(e => e.Employee.PayStruct)
                            .Include(e => e.Employee.GeoStruct)
                            .Include(e => e.Employee.FuncStruct)
                            .Where(e => EmpPayrollIdList.Contains(e.Employee.Id)).ToList();

                        if (OBusinessAppraisalDETAILS == null || OBusinessAppraisalDETAILS.Count == 0)
                        {
                            return null;
                        }
                        else
                        {

                            var month = false;
                            var emp = false;
                            var dept = false;
                            var loca = false;
                            var comp = false;
                            var grp = false;
                            var unit = false;
                            var div = false;
                            var regn = false;
                            var grade = false;
                            var lvl = false;
                            var jobstat = false;
                            var job = false;
                            var jobpos = false;

                            var vc = db.LookupValue.Where(a => forithead.Contains(a.Id.ToString())).ToList();

                            foreach (var item in vc)
                            {
                                if (item.LookupVal.ToUpper() == "MONTH")
                                {
                                    month = true;
                                }
                                if (item.LookupVal.ToUpper() == "LOCATION")
                                {

                                    loca = true;
                                }
                                if (item.LookupVal.ToUpper() == "EMPLOYEE")
                                {
                                    emp = true;
                                }
                                if (item.LookupVal.ToUpper() == "DEPARTMENT")
                                {
                                    dept = true;
                                }
                                if (item.LookupVal.ToUpper() == "COMPANY")
                                {
                                    comp = true;
                                }
                                if (item.LookupVal.ToUpper() == "GROUP")
                                {
                                    grp = true;
                                }
                                if (item.LookupVal.ToUpper() == "UNIT")
                                {
                                    unit = true;
                                }
                                if (item.LookupVal.ToUpper() == "DIVISION")
                                {
                                    div = true;
                                }
                                if (item.LookupVal.ToUpper() == "REGION")
                                {
                                    regn = true;
                                }
                                if (item.LookupVal.ToUpper() == "GRADE")
                                {
                                    grade = true;
                                }
                                if (item.LookupVal.ToUpper() == "LEVEL")
                                {
                                    lvl = true;
                                }
                                if (item.LookupVal.ToUpper() == "JOBSTATUS")
                                {
                                    jobstat = true;
                                }

                                if (item.LookupVal.ToUpper() == "JOB")
                                {
                                    job = true;
                                }
                                if (item.LookupVal.ToUpper() == "JOBPOSITION")
                                {
                                    jobpos = true;
                                }
                            }

                            List<Utility.ReportClass> GeoData = new List<Utility.ReportClass>();
                            List<Utility.ReportClass> Paydata = new List<Utility.ReportClass>();
                            List<Utility.ReportClass> Funcdata = new List<Utility.ReportClass>();

                            Utility.ReportClass GeoDataInd = new Utility.ReportClass();
                            Utility.ReportClass PaydataInd = new Utility.ReportClass();
                            Utility.ReportClass FuncdataInd = new Utility.ReportClass();

                            GeoData = GetViewData(0);
                            Paydata = GetViewData(1);
                            Funcdata = GetViewData(2);
                            foreach (var ca in OBusinessAppraisalDETAILS)
                            {

                                int geoid = ca.Employee.GeoStruct.Id;

                                int payid = ca.Employee.PayStruct.Id;

                                int funid = ca.Employee.FuncStruct.Id;

                                GeoDataInd = GetViewDataIndiv(geoid, payid, funid, GeoData, 0);
                                PaydataInd = GetViewDataIndiv(geoid, payid, funid, Paydata, 1);
                                FuncdataInd = GetViewDataIndiv(geoid, payid, funid, Funcdata, 2);


                                foreach (var item in ca.BA_EmpTarget.Where(e => e.StartDate >= pFromDate && e.EndDate <= pToDate))
                                {
                                    double targetAmounts = item.TargetAmount != null ? item.TargetAmount : 0;
                                    double targetAccounts = item.TargetAccounts != null ? item.TargetAccounts : 0;
                                    double targetCompliance = item.TargetCompliance != null ? item.TargetCompliance : 0;



                                    var item1 = db.BA_TargetT.Where(e => e.BA_EmpTarget_Id == item.Id && !WFStatuslist.Contains(e.BA_WorkFlow.ToList().OrderByDescending(t => t.Id).FirstOrDefault().WFStatus)).ToList();
                                    double EmpAcheived_targetAmounts = 0;
                                    double EmpAcheived_targetAccounts = 0;
                                    double EmpAcheived_targetCompliance = 0;
                                    if (item1 != null || item1 == null)
                                    {
                                        EmpAcheived_targetAmounts = item1.Where(e => e.BA_EmpTarget_Id == item.Id).Select(a => a.TargetAmountCredit).ToList().Sum();
                                        EmpAcheived_targetAccounts = item1.Where(e => e.BA_EmpTarget_Id == item.Id).Select(a => a.TargetAccountsCredit).ToList().Sum();
                                        EmpAcheived_targetCompliance = item1.Where(e => e.BA_EmpTarget_Id == item.Id).Select(a => a.TargetComplCredit).ToList().Sum();
                                        if (salheadlist.Count() > 0)
                                        {
                                            foreach (var item4 in salheadlist)
                                            {
                                                var BA_SubCategoryCode = item.BA_SubCategory.Code;

                                                if (BA_SubCategoryCode.ToUpper() == item4.ToUpper())
                                                {
                                                    GenericField100 OGenericObjStatement = new GenericField100
                                                    {
                                                        Fld1 = ca.Employee.EmpCode,
                                                        Fld2 = ca.Employee.EmpName.FullNameFML,
                                                        Fld3 = FuncdataInd.Job_Name,

                                                        Fld15 = item.BA_SubCategory != null ? item.BA_SubCategory.Code.ToString() : "",
                                                        Fld8 = targetAmounts != 0 ? targetAmounts.ToString() : "0",
                                                        Fld9 = targetAccounts != 0 ? targetAccounts.ToString() : "0",
                                                        Fld10 = targetCompliance != 0 ? targetCompliance.ToString() : "0",

                                                        Fld21 = EmpAcheived_targetAmounts != 0 ? EmpAcheived_targetAmounts.ToString() : "0",
                                                        Fld20 = EmpAcheived_targetAccounts != 0 ? EmpAcheived_targetAccounts.ToString() : "0",
                                                        Fld22 = EmpAcheived_targetCompliance != 0 ? EmpAcheived_targetCompliance.ToString() : "0",

                                                    };

                                                    //if (month)
                                                    //{
                                                    //    OGenericObjStatement.Fld100 = ca.PayMonth.ToString();
                                                    //}
                                                    if (comp)
                                                    {
                                                        OGenericObjStatement.Fld99 = GeoDataInd.Company_Name;
                                                    }
                                                    if (div)
                                                    {
                                                        OGenericObjStatement.Fld98 = GeoDataInd.Division_Name;
                                                    }
                                                    if (loca)
                                                    {
                                                        OGenericObjStatement.Fld97 = GeoDataInd.LocDesc;
                                                    }
                                                    if (dept)
                                                    {
                                                        OGenericObjStatement.Fld96 = GeoDataInd.DeptDesc;
                                                    }
                                                    if (grp)
                                                    {
                                                        OGenericObjStatement.Fld95 = GeoDataInd.Group_Name;
                                                    }
                                                    if (unit)
                                                    {
                                                        OGenericObjStatement.Fld94 = GeoDataInd.Unit_Name;
                                                    }
                                                    if (grade)
                                                    {
                                                        OGenericObjStatement.Fld93 = PaydataInd.Grade_Name;
                                                    }
                                                    if (lvl)
                                                    {
                                                        OGenericObjStatement.Fld92 = PaydataInd.Level_Name;
                                                    }
                                                    if (jobstat)
                                                    {
                                                        OGenericObjStatement.Fld91 = GeoDataInd.JobStatus_Id.ToString();
                                                    }
                                                    if (job)
                                                    {
                                                        OGenericObjStatement.Fld90 = FuncdataInd.Job_Name;
                                                    }
                                                    if (jobpos)
                                                    {
                                                        OGenericObjStatement.Fld89 = FuncdataInd.JobPositionDesc;
                                                    }
                                                    if (emp)
                                                    {
                                                        OGenericObjStatement.Fld88 = ca.Employee.EmpName.FullNameFML;
                                                    }
                                                    OGenericPayrollStatement.Add(OGenericObjStatement);
                                                }
                                            }
                                        }

                                        else
                                        {

                                            GenericField100 OGenericObjStatement = new GenericField100
                                            {
                                                Fld1 = ca.Employee.EmpCode,
                                                Fld2 = ca.Employee.EmpName.FullNameFML,
                                                Fld3 = FuncdataInd.Job_Name,

                                                Fld15 = item.BA_SubCategory != null ? item.BA_SubCategory.Code.ToString() : "",
                                                Fld8 = targetAmounts != 0 ? targetAmounts.ToString() : "0",
                                                Fld9 = targetAccounts != 0 ? targetAccounts.ToString() : "0",
                                                Fld10 = targetCompliance != 0 ? targetCompliance.ToString() : "0",

                                                Fld21 = EmpAcheived_targetAmounts != 0 ? EmpAcheived_targetAmounts.ToString() : "0",
                                                Fld20 = EmpAcheived_targetAccounts != 0 ? EmpAcheived_targetAccounts.ToString() : "0",
                                                Fld22 = EmpAcheived_targetCompliance != 0 ? EmpAcheived_targetCompliance.ToString() : "0",

                                            };

                                            //if (month)
                                            //{
                                            //    OGenericObjStatement.Fld100 = ca.PayMonth.ToString();
                                            //}
                                            if (comp)
                                            {
                                                OGenericObjStatement.Fld99 = GeoDataInd.Company_Name;
                                            }
                                            if (div)
                                            {
                                                OGenericObjStatement.Fld98 = GeoDataInd.Division_Name;
                                            }
                                            if (loca)
                                            {
                                                OGenericObjStatement.Fld97 = GeoDataInd.LocDesc;
                                            }
                                            if (dept)
                                            {
                                                OGenericObjStatement.Fld96 = GeoDataInd.DeptDesc;
                                            }
                                            if (grp)
                                            {
                                                OGenericObjStatement.Fld95 = GeoDataInd.Group_Name;
                                            }
                                            if (unit)
                                            {
                                                OGenericObjStatement.Fld94 = GeoDataInd.Unit_Name;
                                            }
                                            if (grade)
                                            {
                                                OGenericObjStatement.Fld93 = PaydataInd.Grade_Name;
                                            }
                                            if (lvl)
                                            {
                                                OGenericObjStatement.Fld92 = PaydataInd.Level_Name;
                                            }
                                            if (jobstat)
                                            {
                                                OGenericObjStatement.Fld91 = GeoDataInd.JobStatus_Id.ToString();
                                            }
                                            if (job)
                                            {
                                                OGenericObjStatement.Fld90 = FuncdataInd.Job_Name;
                                            }
                                            if (jobpos)
                                            {
                                                OGenericObjStatement.Fld89 = FuncdataInd.JobPositionDesc;
                                            }
                                            if (emp)
                                            {
                                                OGenericObjStatement.Fld88 = ca.Employee.EmpName.FullNameFML;
                                            }
                                            OGenericPayrollStatement.Add(OGenericObjStatement);
                                        }
                                    }

                                }
                            }
                            return OGenericPayrollStatement;
                        }


                        break;

                    #endregion Target/Acheived EmpWise


                    #region Target/Acheived Grand Summary

                    case "TARGETACHEIVEDEMPGRANDSUMMARY":

                        var OBusinessAppraisalDETAILSsum = db.EmployeeAppraisal
                          .Include(e => e.BA_TargetT)
                          .Include(e => e.BA_TargetT.Select(r => r.BA_WorkFlow))
                          .Include(e => e.BA_EmpTarget)
                          .Include(e => e.BA_EmpTarget.Select(r => r.BA_Category))
                          .Include(e => e.BA_EmpTarget.Select(r => r.BA_SubCategory))
                          .Include(e => e.Employee)
                          .Include(e => e.Employee.EmpName)
                          .Include(e => e.Employee.PayStruct)
                          .Include(e => e.Employee.GeoStruct)
                          .Include(e => e.Employee.FuncStruct)
                          .Where(e => EmpPayrollIdList.Contains(e.Employee.Id)).ToList();

                        if (OBusinessAppraisalDETAILSsum == null || OBusinessAppraisalDETAILSsum.Count == 0)
                        {
                            return null;
                        }
                        else
                        {

                            var month = false;
                            var emp = false;
                            var dept = false;
                            var loca = false;
                            var comp = false;
                            var grp = false;
                            var unit = false;
                            var div = false;
                            var regn = false;
                            var grade = false;
                            var lvl = false;
                            var jobstat = false;
                            var job = false;
                            var jobpos = false;

                            var vc = db.LookupValue.Where(a => forithead.Contains(a.Id.ToString())).ToList();

                            foreach (var item in vc)
                            {
                                if (item.LookupVal.ToUpper() == "MONTH")
                                {
                                    month = true;
                                }
                                if (item.LookupVal.ToUpper() == "LOCATION")
                                {

                                    loca = true;
                                }
                                if (item.LookupVal.ToUpper() == "EMPLOYEE")
                                {
                                    emp = true;
                                }
                                if (item.LookupVal.ToUpper() == "DEPARTMENT")
                                {
                                    dept = true;
                                }
                                if (item.LookupVal.ToUpper() == "COMPANY")
                                {
                                    comp = true;
                                }
                                if (item.LookupVal.ToUpper() == "GROUP")
                                {
                                    grp = true;
                                }
                                if (item.LookupVal.ToUpper() == "UNIT")
                                {
                                    unit = true;
                                }
                                if (item.LookupVal.ToUpper() == "DIVISION")
                                {
                                    div = true;
                                }
                                if (item.LookupVal.ToUpper() == "REGION")
                                {
                                    regn = true;
                                }
                                if (item.LookupVal.ToUpper() == "GRADE")
                                {
                                    grade = true;
                                }
                                if (item.LookupVal.ToUpper() == "LEVEL")
                                {
                                    lvl = true;
                                }
                                if (item.LookupVal.ToUpper() == "JOBSTATUS")
                                {
                                    jobstat = true;
                                }

                                if (item.LookupVal.ToUpper() == "JOB")
                                {
                                    job = true;
                                }
                                if (item.LookupVal.ToUpper() == "JOBPOSITION")
                                {
                                    jobpos = true;
                                }
                            }

                            List<Utility.ReportClass> GeoData = new List<Utility.ReportClass>();
                            List<Utility.ReportClass> Paydata = new List<Utility.ReportClass>();
                            List<Utility.ReportClass> Funcdata = new List<Utility.ReportClass>();

                            Utility.ReportClass GeoDataInd = new Utility.ReportClass();
                            Utility.ReportClass PaydataInd = new Utility.ReportClass();
                            Utility.ReportClass FuncdataInd = new Utility.ReportClass();

                            GeoData = GetViewData(0);
                            Paydata = GetViewData(1);
                            Funcdata = GetViewData(2);
                            foreach (var ca in OBusinessAppraisalDETAILSsum)
                            {

                                int geoid = ca.Employee.GeoStruct.Id;

                                int payid = ca.Employee.PayStruct.Id;

                                int funid = ca.Employee.FuncStruct.Id;

                                GeoDataInd = GetViewDataIndiv(geoid, payid, funid, GeoData, 0);
                                PaydataInd = GetViewDataIndiv(geoid, payid, funid, Paydata, 1);
                                FuncdataInd = GetViewDataIndiv(geoid, payid, funid, Funcdata, 2);

                                //var GetFrom_Date = ca.BA_EmpTarget.Select(s => s.StartDate).Distinct();
                                //TempData["GetFrom_Date"] = GetFrom_Date;
                                //var GetTo_Date = ca.BA_EmpTarget.Select(s => s.EndDate).Distinct();

                                foreach (var item in ca.BA_EmpTarget.Where(e => e.StartDate >= pFromDate && e.EndDate <= pToDate))
                                {
                                    double targetAmounts = item.TargetAmount != null ? item.TargetAmount : 0;
                                    double targetAccounts = item.TargetAccounts != null ? item.TargetAccounts : 0;
                                    double targetCompliance = item.TargetCompliance != null ? item.TargetCompliance : 0;

                                    var item1 = db.BA_TargetT.Where(e => e.BA_EmpTarget_Id == item.Id && !WFStatuslist.Contains(e.BA_WorkFlow.ToList().OrderByDescending(t => t.Id).FirstOrDefault().WFStatus)).ToList();
                                    double EmpAcheived_targetAmounts = 0;
                                    double EmpAcheived_targetAccounts = 0;
                                    double EmpAcheived_targetCompliance = 0;
                                    if (item1 != null || item1 == null)
                                    {
                                        EmpAcheived_targetAmounts = item1.Where(e => e.BA_EmpTarget_Id == item.Id).Select(a => a.TargetAmountCredit).ToList().Sum();
                                        EmpAcheived_targetAccounts = item1.Where(e => e.BA_EmpTarget_Id == item.Id).Select(a => a.TargetAccountsCredit).ToList().Sum();
                                        EmpAcheived_targetCompliance = item1.Where(e => e.BA_EmpTarget_Id == item.Id).Select(a => a.TargetComplCredit).ToList().Sum();

                                        if (salheadlist.Count() > 0)
                                        {
                                            foreach (var item4 in salheadlist)
                                            {
                                                var BA_SubCategoryCode = item.BA_SubCategory.Code;

                                                if (BA_SubCategoryCode.ToUpper() == item4.ToUpper())
                                                {

                                                    GenericField100 OGenericObjStatement = new GenericField100
                                                    {
                                                        Fld1 = ca.Employee.EmpCode,
                                                        Fld2 = ca.Employee.EmpName.FullNameFML,
                                                        Fld3 = FuncdataInd.Job_Name,

                                                        Fld15 = item.BA_SubCategory != null ? item.BA_SubCategory.Code.ToString() : "",
                                                        Fld8 = targetAmounts != 0 ? targetAmounts.ToString() : "0",
                                                        Fld9 = targetAccounts != 0 ? targetAccounts.ToString() : "0",
                                                        Fld10 = targetCompliance != 0 ? targetCompliance.ToString() : "0",

                                                        Fld21 = EmpAcheived_targetAmounts != 0 ? EmpAcheived_targetAmounts.ToString() : "0",
                                                        Fld20 = EmpAcheived_targetAccounts != 0 ? EmpAcheived_targetAccounts.ToString() : "0",
                                                        Fld22 = EmpAcheived_targetCompliance != 0 ? EmpAcheived_targetCompliance.ToString() : "0",

                                                    };

                                                    //if (month)
                                                    //{
                                                    //    OGenericObjStatement.Fld100 = ca.PayMonth.ToString();
                                                    //}
                                                    if (comp)
                                                    {
                                                        OGenericObjStatement.Fld99 = GeoDataInd.Company_Name;
                                                    }
                                                    if (div)
                                                    {
                                                        OGenericObjStatement.Fld98 = GeoDataInd.Division_Name;
                                                    }
                                                    if (loca)
                                                    {
                                                        OGenericObjStatement.Fld97 = GeoDataInd.LocDesc;
                                                    }
                                                    if (dept)
                                                    {
                                                        OGenericObjStatement.Fld96 = GeoDataInd.DeptDesc;
                                                    }
                                                    if (grp)
                                                    {
                                                        OGenericObjStatement.Fld95 = GeoDataInd.Group_Name;
                                                    }
                                                    if (unit)
                                                    {
                                                        OGenericObjStatement.Fld94 = GeoDataInd.Unit_Name;
                                                    }
                                                    if (grade)
                                                    {
                                                        OGenericObjStatement.Fld93 = PaydataInd.Grade_Name;
                                                    }
                                                    if (lvl)
                                                    {
                                                        OGenericObjStatement.Fld92 = PaydataInd.Level_Name;
                                                    }
                                                    if (jobstat)
                                                    {
                                                        OGenericObjStatement.Fld91 = GeoDataInd.JobStatus_Id.ToString();
                                                    }
                                                    if (job)
                                                    {
                                                        OGenericObjStatement.Fld90 = FuncdataInd.Job_Name;
                                                    }
                                                    if (jobpos)
                                                    {
                                                        OGenericObjStatement.Fld89 = FuncdataInd.JobPositionDesc;
                                                    }
                                                    if (emp)
                                                    {
                                                        OGenericObjStatement.Fld88 = ca.Employee.EmpName.FullNameFML;
                                                    }
                                                    OGenericPayrollStatement.Add(OGenericObjStatement);
                                                }
                                            }
                                        }

                                        else
                                        {

                                            GenericField100 OGenericObjStatement = new GenericField100
                                            {
                                                Fld1 = ca.Employee.EmpCode,
                                                Fld2 = ca.Employee.EmpName.FullNameFML,
                                                Fld3 = FuncdataInd.Job_Name,

                                                Fld15 = item.BA_SubCategory != null ? item.BA_SubCategory.Code.ToString() : "",
                                                Fld8 = targetAmounts != 0 ? targetAmounts.ToString() : "0",
                                                Fld9 = targetAccounts != 0 ? targetAccounts.ToString() : "0",
                                                Fld10 = targetCompliance != 0 ? targetCompliance.ToString() : "0",

                                                Fld21 = EmpAcheived_targetAmounts != 0 ? EmpAcheived_targetAmounts.ToString() : "0",
                                                Fld20 = EmpAcheived_targetAccounts != 0 ? EmpAcheived_targetAccounts.ToString() : "0",
                                                Fld22 = EmpAcheived_targetCompliance != 0 ? EmpAcheived_targetCompliance.ToString() : "0",

                                            };

                                            //if (month)
                                            //{
                                            //    OGenericObjStatement.Fld100 = ca.PayMonth.ToString();
                                            //}
                                            if (comp)
                                            {
                                                OGenericObjStatement.Fld99 = GeoDataInd.Company_Name;
                                            }
                                            if (div)
                                            {
                                                OGenericObjStatement.Fld98 = GeoDataInd.Division_Name;
                                            }
                                            if (loca)
                                            {
                                                OGenericObjStatement.Fld97 = GeoDataInd.LocDesc;
                                            }
                                            if (dept)
                                            {
                                                OGenericObjStatement.Fld96 = GeoDataInd.DeptDesc;
                                            }
                                            if (grp)
                                            {
                                                OGenericObjStatement.Fld95 = GeoDataInd.Group_Name;
                                            }
                                            if (unit)
                                            {
                                                OGenericObjStatement.Fld94 = GeoDataInd.Unit_Name;
                                            }
                                            if (grade)
                                            {
                                                OGenericObjStatement.Fld93 = PaydataInd.Grade_Name;
                                            }
                                            if (lvl)
                                            {
                                                OGenericObjStatement.Fld92 = PaydataInd.Level_Name;
                                            }
                                            if (jobstat)
                                            {
                                                OGenericObjStatement.Fld91 = GeoDataInd.JobStatus_Id.ToString();
                                            }
                                            if (job)
                                            {
                                                OGenericObjStatement.Fld90 = FuncdataInd.Job_Name;
                                            }
                                            if (jobpos)
                                            {
                                                OGenericObjStatement.Fld89 = FuncdataInd.JobPositionDesc;
                                            }
                                            if (emp)
                                            {
                                                OGenericObjStatement.Fld88 = ca.Employee.EmpName.FullNameFML;
                                            }
                                            OGenericPayrollStatement.Add(OGenericObjStatement);

                                        }
                                    }

                                }
                            }
                            return OGenericPayrollStatement;
                        }


                        break;

                    #endregion Target/Acheived Grand Summary


                    //************** Victims report StageWISE ***************//
                    case "IRVICTIM":
                        var victimlist = EmpPayrollIdList.ToList();

                        //var OEmpdisDetails = db.EmployeeIR.Include(e => e.EmpDisciplineProcedings)
                        //    .Include(e => e.Employee)
                        //    .Include(e => e.Employee.EmpName)
                        //    .Include(e => e.Employee.PayStruct)
                        //    .Include(e => e.Employee.GeoStruct)
                        //    .Include(e => e.Employee.FuncStruct)
                        //    .Include(e => e.EmpDisciplineProcedings.Select(m => m.MisconductComplaint))
                        //    .Include(e => e.EmpDisciplineProcedings.Select(m => m.PreminaryEnquiry))
                        //    .Include(e => e.EmpDisciplineProcedings.Select(m => m.PreminaryEnquiryAction))
                        //    .Include(e => e.EmpDisciplineProcedings.Select(m => m.ChargeSheet))
                        //    .Include(e => e.EmpDisciplineProcedings.Select(m => m.ChargeSheetServing))
                        //    .Include(e => e.EmpDisciplineProcedings.Select(m => m.ChargeSheetReply))
                        //    .Include(e => e.EmpDisciplineProcedings.Select(m => m.ChargeSheetEnquiryNotice))
                        //    .Include(e => e.EmpDisciplineProcedings.Select(m => m.ChargeSheetEnquiryNoticeServing))
                        //    .Include(e => e.EmpDisciplineProcedings.Select(m => m.ChargeSheetEnquiryProceedings))
                        //    .Include(e => e.EmpDisciplineProcedings.Select(m => m.ChargeSheetEnquiryReport))
                        //    .Include(e => e.EmpDisciplineProcedings.Select(m => m.PostEnquiryPrerquisite))
                        //    .Include(e => e.EmpDisciplineProcedings.Select(m => m.FinalShowCauseNotice))
                        //    .Include(e => e.EmpDisciplineProcedings.Select(m => m.FinalShowCauseNoticeServing))
                        //    .Include(e => e.EmpDisciplineProcedings.Select(m => m.FinalShowCauseNoticeClarification))
                        //    .Include(e => e.EmpDisciplineProcedings.Select(m => m.FinalShowCauseNoticeClarificarionServing))
                        //    .Include(e => e.EmpDisciplineProcedings.Select(m => m.PunishmentOrder))
                        //    .Include(e => e.EmpDisciplineProcedings.Select(m => m.PunishmentOrderDelivery))
                        //    .Include(e => e.EmpDisciplineProcedings.Select(m => m.PunishmentOrderApeal))
                        //    .Include(e => e.EmpDisciplineProcedings.Select(m => m.PunishmentOrderApealReply))
                        //    .Include(e => e.EmpDisciplineProcedings.Select(m => m.PunishmentOrderImplementation))
                        //    .Where(e => EmpPayrollIdList.Contains(e.Employee.Id)).ToList();

                        var OEmpdisDetails = db.EmployeeIR.Select(s => new
                        {
                            EmpId = s.Employee.Id,
                            Emptable = s.Employee,
                            EmpName = s.Employee.EmpName,
                            PayStru = s.Employee.PayStruct,
                            GeoStru = s.Employee.GeoStruct,
                            FuncStru = s.Employee.FuncStruct,
                            EmpDisPro = s.EmpDisciplineProcedings.Select(r => new
                            {
                                ProceedStage = r.ProceedingStage,
                                CaseNumber = r.CaseNo,

                                #region MisconductComplaint Records__1
                                OComplaintNo = r.MisconductComplaint.ComplaintNo,
                                OComplaintDate = r.MisconductComplaint.ComplaintDate,
                                OoffenceName = r.MisconductComplaint.OffenseObject.OffenceName.LookupVal,
                                OComplaintApplicantName = r.MisconductComplaint.ComplaintApplicant.Employee.EmpName.FullNameFML,
                                MisccNarration = r.MisconductComplaint.Narration,
                                #endregion

                                #region PreminaryEnquiry Records__2
                                OEnquiryPanelRecommendation = r.PreminaryEnquiry.EnquiryPanelRecommendation,
                                OCaseEnquiryDate = r.PreminaryEnquiry.CaseEnquiryDate,
                                OPanelName = r.PreminaryEnquiry.EnquiryPanel.PanelName,
                                PreliminaryNarr = r.PreminaryEnquiry.Narration,
                                #endregion

                                #region PreminaryEnquiryAction Records__3
                                OIsSuspendEmp = r.PreminaryEnquiryAction.IsSuspendEmp.ToString(),
                                OSuspensionDate = r.PreminaryEnquiryAction.SuspensionDate,
                                OIsNotifyHRDept = r.PreminaryEnquiryAction.IsNotifyHRDept.ToString(),
                                OPreminaryEnquiryActionDate = r.PreminaryEnquiryAction.PreminaryEnquiryActionDate,
                                PreliminaryEnqActNarr = r.PreminaryEnquiryAction.Narration,
                                #endregion

                                #region ChargeSheet Records__4
                                OCSFullDetails = r.ChargeSheet.FullDetails,
                                OChargeSheetDetails = r.ChargeSheet.ChargeSheetDetails,
                                OChargeSheetNo = r.ChargeSheet.ChargeSheetNo,
                                OChargeSheetDate = r.ChargeSheet.ChargeSheetDate,
                                ChargeSheetNarr = r.ChargeSheet.Narration,
                                #endregion

                                #region ChargeSheetServing Records__5
                                OChargeSheetServing = r.ChargeSheetServing.Select(a => new
                                {
                                    OChargeSheetServingDate = a.ChargeSheetServingDate,
                                    OChargeSheetServingModeName = a.ChargeSheetServingMode.ChargeSheetServingModeName.LookupVal,
                                    OIsWitnessReqd = a.IsWitnessReqd.ToString(),
                                    OIsClosedServing = a.IsClosedServing.ToString(),
                                    ChargeSheetServingNarr = a.Narration,
                                }).ToList(),
                                #endregion

                                #region ChargeSheetReply Records__6
                                OPunishmentDetails = r.ChargeSheetReply.PunishmentDetails,
                                OCSReplyDate = r.ChargeSheetReply.ReplyDate,
                                OIsPleadGuilty = r.ChargeSheetReply.IsPleadGuilty.ToString(),
                                OIsDropChargeSheet = r.ChargeSheetReply.IsDropChargeSheet.ToString(),
                                OIsReplySatisfactory = r.ChargeSheetReply.IsReplySatisfactory.ToString(),
                                ChargeSheetReplyNarr = r.ChargeSheetReply.Narration,
                                #endregion

                                #region ChargeSheetEnquiryNotice Records__7
                                OEnquiryPlace = r.ChargeSheetEnquiryNotice.EnquiryPlace,
                                OEnquiryScheduleDate = r.ChargeSheetEnquiryNotice.EnquiryScheduleDate,
                                OEnquiryNoticeNo = r.ChargeSheetEnquiryNotice.EnquiryNoticeNo,
                                OEnquiryAddressFullAddress = r.ChargeSheetEnquiryNotice.EnquiryAddress.FullAddress,
                                #endregion

                                #region ChargeSheetEnquiryNoticeServing Records__8
                                OCSENSIsWitnessReqd = r.ChargeSheetEnquiryNoticeServing.IsWitnessReqd.ToString(),
                                OCSENSIsClosedServing = r.ChargeSheetEnquiryNoticeServing.IsClosedServing.ToString(),
                                ChargeSheetEnquiryNoticeServingNarr = r.ChargeSheetEnquiryNoticeServing.Narration,
                                OCSENSIsChargeSheetRecd = r.ChargeSheetEnquiryNoticeServing.IsChargeSheetRecd.ToString(),
                                OCSENSEnquiryNoticeServingDate = r.ChargeSheetEnquiryNoticeServing.EnquiryNoticeServingDate,
                                #endregion

                                #region ChargeSheetEnquiryProceedings Records__9
                                ChargeSheetEnquiryProceedingsNarr = r.ChargeSheetEnquiryProceedings.Narration,
                                OCSEPIsEnquiryOver = r.ChargeSheetEnquiryProceedings.IsEnquiryOver.ToString(),
                                OCSEPEnquiryProceedingDate = r.ChargeSheetEnquiryProceedings.EnquiryProceedingDate,
                                OCSEPEnquiryProceedingTime = r.ChargeSheetEnquiryProceedings.EnquiryProceedingTime,
                                OCSEPIsEmpReport = r.ChargeSheetEnquiryProceedings.IsEmpReport.ToString(),
                                #endregion

                                #region ChargeSheetEnquiryReport Records__10
                                OCSEREnquiryReportDetails = r.ChargeSheetEnquiryReport.EnquiryReportDetails,
                                OCSERIsCloseCase = r.ChargeSheetEnquiryReport.IsCloseCase.ToString(),
                                OCSERSuspensionRevokeDate = r.ChargeSheetEnquiryReport.SuspensionRevokeDate,
                                OCSERIsEmpGuilty = r.ChargeSheetEnquiryReport.IsEmpGuilty.ToString(),
                                OCSERReportSubmissionDate = r.ChargeSheetEnquiryReport.ReportSubmissionDate,
                                OCSERIsNotifyHRDept = r.ChargeSheetEnquiryReport.IsNotifyHRDept.ToString(),
                                ChargeSheetEnquiryReportNarr = r.ChargeSheetEnquiryReport.Narration,
                                #endregion

                                #region PostEnquiryPrerquisite Records__11
                                OIsChkeckedEmpAdjusdication = r.PostEnquiryPrerquisite.IsChkeckedEmpAdjusdication.ToString(),
                                OEmpAdjudicationDetails = r.PostEnquiryPrerquisite.EmpAdjudicationDetails,
                                OIndustrailDisputesActDetails = r.PostEnquiryPrerquisite.IndustrailDisputesActDetails,
                                PostEnquiryPrerquisiteNarr = r.PostEnquiryPrerquisite.Narration,
                                OIsChkeckedEmpPastRecord = r.PostEnquiryPrerquisite.IsChkeckedEmpPastRecord.ToString(),
                                OEmpPastRecordDetails = r.PostEnquiryPrerquisite.EmpPastRecordDetails,
                                OPastOffenseCount = r.PostEnquiryPrerquisite.PastOffenseCount.ToString(),
                                #endregion

                                #region FinalShowCauseNotice Records__12
                                OFSCNReplyTime = r.FinalShowCauseNotice.ReplyTime.ToString(),
                                FinalShowCauseNoticeNarr = r.FinalShowCauseNotice.Narration,
                                OFSCNNoticeNo = r.FinalShowCauseNotice.NoticeNo,
                                OFSCNNoticeDate = r.FinalShowCauseNotice.NoticeDate,
                                OFSCNNoticeDetails = r.FinalShowCauseNotice.NoticeDetails,
                                #endregion

                                #region FinalShowCauseNoticeServing Records__13
                                OFSCNSIsClosedServing = r.FinalShowCauseNoticeServing.IsClosedServing.ToString(),
                                FinalShowCauseNoticeServingNarr = r.FinalShowCauseNoticeServing.Narration,
                                OFSCNSIsNoticeRecd = r.FinalShowCauseNoticeServing.IsNoticeRecd.ToString(),
                                OFSCNSNoticeServingDate = r.FinalShowCauseNoticeServing.NoticeServingDate,
                                OFSCNSIsWitnessReqd = r.FinalShowCauseNoticeServing.IsWitnessReqd.ToString(),
                                #endregion

                                #region FinalShowCauseNoticeReply Records__14
                                OFSCNRReplyDetails = r.FinalShowCauseNoticeReply.ReplyDetails,
                                OFSCNRIsReplyStudied = r.FinalShowCauseNoticeReply.IsReplyStudied.ToString(),
                                OFSCNRFullDetails = r.FinalShowCauseNoticeReply.FullDetails,
                                OFSCNRNoticeReplyRecdDate = r.FinalShowCauseNoticeReply.NoticeReplyRecdDate,
                                #endregion

                                #region FinalShowCauseNoticeClarification Records__15
                                FinalShowCauseNoticeClarificationNarr = r.FinalShowCauseNoticeClarification.Narration,
                                OFSCNCReplyClarificationDetails = r.FinalShowCauseNoticeClarification.ReplyClarificationDetails,
                                OFSCNCNoticeReplyClarificationDate = r.FinalShowCauseNoticeClarification.NoticeReplyClarificationDate,
                                #endregion

                                #region FinalShowCauseNoticeClarificarionServing Records__16
                                OFSCNCSIsWitnessReqd = r.FinalShowCauseNoticeClarificarionServing.IsWitnessReqd.ToString(),
                                OFSCNCSIsClosedServing = r.FinalShowCauseNoticeClarificarionServing.IsClosedServing.ToString(),
                                FinalShowCauseNoticeClarificarionServingNarr = r.FinalShowCauseNoticeClarificarionServing.Narration,
                                OFSCNCSIsNoticeRecd = r.FinalShowCauseNoticeClarificarionServing.IsNoticeRecd.ToString(),
                                OFSCNCSNoticeClarificationServingDate = r.FinalShowCauseNoticeClarificarionServing.NoticeClarificationServingDate,
                                #endregion

                                #region PunishmentOrder Records__17
                                OPOReplyTime = r.PunishmentOrder.ReplyTime.ToString(),
                                PunishmentOrderNarr = r.PunishmentOrder.Narration,
                                OPOPunishmentOrderNo = r.PunishmentOrder.PunishmentOrderNo,
                                OPOPunishmentOrderDate = r.PunishmentOrder.PunishmentOrderDate,
                                OPOPunishmentOrderDetails = r.PunishmentOrder.PunishmentOrderDetails,
                                #endregion

                                //#region PunishmentOrderDelivery Records__18
                                //    OPODIsWitnessReqd = r.PunishmentOrderDelivery.IsWitnessReqd.ToString(),
                                //    OPODIsClosedServing = r.PunishmentOrderDelivery.IsClosedServing.ToString(),
                                //    PunishmentOrderDeliveryNarr = r.PunishmentOrderDelivery.Narration,
                                //    OPODIsNoticeRecd = r.PunishmentOrderDelivery.IsNoticeRecd.ToString(),
                                //    OPODPunishmentOrderServingDate = r.PunishmentOrderDelivery.PunishmentOrderServingDate,
                                //    OPODChargeSheetServingModeName = r.PunishmentOrderDelivery.PunishmentOrderServingMode.ChargeSheetServingModeName.LookupVal,
                                //#endregion

                                //#region PunishmentOrderApeal Records__19
                                //    OPOAIsPunishmentOrderApealStudied = r.PunishmentOrderApeal.IsPunishmentOrderApealStudied.ToString(),
                                //    OPOAPunishmentOrderApealRecdDate = r.PunishmentOrderApeal.PunishmentOrderApealRecdDate,
                                //    OPOAPunishmentOrderApealDetails = r.PunishmentOrderApeal.PunishmentOrderApealDetails,
                                //    PunishmentOrderApealNarr = r.PunishmentOrderApeal.Narration,
                                //#endregion

                                //#region PunishmentOrderApealReply Records__20
                                //    PunishmentOrderApealReplyNarr = r.PunishmentOrderApealReply.Narration,
                                //    OPOARPunishmentOrderApealReplyDetails = r.PunishmentOrderApealReply.PunishmentOrderApealReplyDetails,
                                //    OPOARPunishmentOrderApealReplyDate = r.PunishmentOrderApealReply.PunishmentOrderApealReplyDate,
                                //#endregion

                                //#region PunishmentOrderImplementation Records_21
                                //    OPOIIsInformedHR = r.PunishmentOrderImplementation.IsInformedHR.ToString(),
                                //    OPOIPunishmentOrderImplementationDate = r.PunishmentOrderImplementation.PunishmentOrderImplementationDate,
                                //    OPOIPunishmentOrderImplementationDetails = r.PunishmentOrderImplementation.PunishmentOrderImplementationDetails,
                                //#endregion

                            }).ToList(),

                        }).Where(e => EmpPayrollIdList.Contains(e.EmpId)).ToList();


                        if (OEmpdisDetails == null || OEmpdisDetails.Count == 0)
                        {
                            return null;
                        }
                        else
                        {
                            var month = false;
                            var emp = false;
                            var dept = false;
                            var loca = false;
                            var comp = false;
                            var grp = false;
                            var unit = false;
                            var div = false;
                            var regn = false;
                            var grade = false;
                            var lvl = false;
                            var jobstat = false;
                            var job = false;
                            var jobpos = false;
                            var vc = db.LookupValue.Where(a => forithead.Contains(a.Id.ToString())).ToList();
                            foreach (var item in vc)
                            {
                                if (item.LookupVal.ToUpper() == "MONTH")
                                {
                                    month = true;
                                }
                                if (item.LookupVal.ToUpper() == "LOCATION")
                                {

                                    loca = true;
                                }
                                if (item.LookupVal.ToUpper() == "EMPLOYEE")
                                {
                                    emp = true;
                                }
                                if (item.LookupVal.ToUpper() == "DEPARTMENT")
                                {
                                    dept = true;
                                }
                                if (item.LookupVal.ToUpper() == "COMPANY")
                                {
                                    comp = true;
                                }
                                if (item.LookupVal.ToUpper() == "GROUP")
                                {
                                    grp = true;
                                }
                                if (item.LookupVal.ToUpper() == "UNIT")
                                {
                                    unit = true;
                                }
                                if (item.LookupVal.ToUpper() == "DIVISION")
                                {
                                    div = true;
                                }
                                if (item.LookupVal.ToUpper() == "REGION")
                                {
                                    regn = true;
                                }
                                if (item.LookupVal.ToUpper() == "GRADE")
                                {
                                    grade = true;
                                }
                                if (item.LookupVal.ToUpper() == "LEVEL")
                                {
                                    lvl = true;
                                }
                                if (item.LookupVal.ToUpper() == "JOBSTATUS")
                                {
                                    jobstat = true;
                                }

                                if (item.LookupVal.ToUpper() == "JOB")
                                {
                                    job = true;
                                }
                                if (item.LookupVal.ToUpper() == "JOBPOSITION")
                                {
                                    jobpos = true;
                                }
                            }

                            List<string> SubRePortName = new List<string>();
                            Utility.GetOrganizationDataClass GeoDataInd = new Utility.GetOrganizationDataClass();

                            List<string> SelectedProceedingStageList = new List<string>();
                            if (salheadlist.Count() > 0)
                            {
                                foreach (var singleitemPS in salheadlist)
                                {
                                    string[] psItem = singleitemPS.Split('_');
                                    SelectedProceedingStageList.Add(psItem[1]);
                                }

                            }

                            foreach (var ca in OEmpdisDetails)
                            {
                                var TEMPO = ca.EmpDisPro.ToList();
                                if (SelectedProceedingStageList.Count() > 0)
                                {
                                    TEMPO = TEMPO.Where(e => SelectedProceedingStageList.Contains(e.ProceedStage.ToString())).ToList();
                                }
                                else
                                {
                                    TEMPO = ca.EmpDisPro.ToList();
                                }


                                int? geoid = ca.Emptable.GeoStruct_Id;
                                int? payid = ca.Emptable.PayStruct_Id;
                                int? funid = ca.Emptable.FuncStruct_Id;

                                GeoStruct geostruct = db.GeoStruct.Find(geoid);

                                PayStruct paystruct = db.PayStruct.Find(payid);

                                FuncStruct funstruct = db.FuncStruct.Find(funid);

                                GeoDataInd = ReportRDLCObjectClass.GetOrganizationDataInd(geostruct, paystruct, funstruct, 0);

                                string GetCaseNUM = string.Empty;
                                //if (salheadlist.Count() > 0)
                                //{
                                #region StageLIst
                                //foreach (var STAGEitem in salheadlist)
                                //{
                                //int ST = Convert.ToInt32(STAGEitem);
                                int ST = 0;
                                foreach (var item in TEMPO)
                                {
                                    string PSD = item.ProceedStage.ToString();

                                    GetCaseNUM = item.CaseNumber;

                                    string STAGEitem = item.ProceedStage.ToString();
                                    // GetCaseNUM = item.CaseNumber;

                                    #region switch Case Start
                                    switch (STAGEitem)
                                    {
                                        case "1":
                                            int stage = Convert.ToInt32(STAGEitem);
                                            //System.Web.HttpContext.Current.Session["dd"] = "abc";
                                            //var aaa = System.Web.HttpContext.Current.Session["dd"];
                                            var mis = "misconductSubreport";
                                            SubRePortName.Add(mis);
                                            //EmpDisciplineProcedings ST1Data = db.EmpDisciplineProcedings
                                            //        .Include(e => e.MisconductComplaint).Include(e => e.MisconductComplaint.OffenseObject)
                                            //        .Include(e => e.MisconductComplaint).Include(e => e.MisconductComplaint.ComplaintApplicant)
                                            //        .Include(e => e.MisconductComplaint).Include(e => e.MisconductComplaint.ComplaintApplicant.Employee)
                                            //        .Include(e => e.MisconductComplaint).Include(e => e.MisconductComplaint.ComplaintApplicant.Employee.EmpName)
                                            //        .Include(e => e.MisconductComplaint.OffenseObject.OffenceName).Where(e => e.CaseNo == item.CaseNo && e.ProceedingStage == stage).FirstOrDefault();
                                            //var ST1Data = ca.EmpDisPro.Select(m => new
                                            //{
                                            //    casenum = m.CaseNumber,
                                            //    stagenum = m.ProceedStage,
                                            //   OComplaintNo = m.MisCC.ComplaintNo,
                                            //   OComplaintDate = m.MisCC.ComplaintDate,
                                            //   OoffenceName = m.MisCC.OffenseObject.OffenceName.LookupVal,
                                            //   OComplaintApplicantName = m.MisCC.ComplaintApplicant.Employee.EmpName.FullNameFML,
                                            //   MisccNarration = m.MisCC.Narration,
                                            //}).Where(e => e.casenum == item.CaseNumber && e.stagenum == stage).ToList();

                                            var TEST = item.ProceedStage == ST;


                                            if (item != null)
                                            {
                                                GenericField100 OGenericObjStatement1 = new GenericField100
                                                {
                                                    Fld100 = STAGEitem,
                                                    Fld1 = ca.Emptable.EmpCode,
                                                    Fld2 = ca.EmpName.FullNameFML,
                                                    Fld3 = GeoDataInd.FuncStruct_Job_Name,
                                                    Fld4 = item.CaseNumber != "" ? item.CaseNumber.ToString() : "",
                                                    Fld5 = item.OComplaintNo != "" ? item.OComplaintNo.ToString() : "",
                                                    Fld6 = item.OComplaintDate != null ? item.OComplaintDate.Value.ToShortDateString() : "",
                                                    Fld7 = item.OoffenceName != "" ? item.OoffenceName.ToString() : "",
                                                    Fld9 = item.OComplaintApplicantName != "" ? item.OComplaintApplicantName.ToString() : "",
                                                    Fld10 = item.MisccNarration != "" ? item.MisccNarration.ToString() : "",

                                                    Fld11 = TEST != null ? TEST.ToString() : "False",

                                                };

                                                if (comp)
                                                {
                                                    OGenericObjStatement1.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                }
                                                if (div)
                                                {
                                                    OGenericObjStatement1.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                }
                                                if (loca)
                                                {
                                                    OGenericObjStatement1.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                }
                                                if (dept)
                                                {
                                                    OGenericObjStatement1.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                }
                                                if (grp)
                                                {
                                                    OGenericObjStatement1.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                }
                                                if (unit)
                                                {
                                                    OGenericObjStatement1.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                }
                                                if (grade)
                                                {
                                                    OGenericObjStatement1.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                }
                                                if (lvl)
                                                {
                                                    OGenericObjStatement1.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                }
                                                if (jobstat)
                                                {
                                                    OGenericObjStatement1.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                }
                                                if (job)
                                                {
                                                    OGenericObjStatement1.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                }
                                                if (jobpos)
                                                {
                                                    OGenericObjStatement1.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                }
                                                if (emp)
                                                {
                                                    OGenericObjStatement1.Fld88 = ca.Emptable.EmpName.FullNameFML;
                                                }
                                                OGenericPayrollStatement.Add(OGenericObjStatement1);
                                            }



                                            break;

                                        case "2":
                                            int stage2 = Convert.ToInt32(STAGEitem);
                                            //EmpDisciplineProcedings ST2Data = db.EmpDisciplineProcedings
                                            //        .Include(e => e.PreminaryEnquiry).Include(e => e.PreminaryEnquiry.EnquiryPanel)
                                            //        .Where(e => e.CaseNo == item.CaseNo && e.ProceedingStage == stage2).FirstOrDefault();
                                            var TEST1 = item.ProceedStage == ST;
                                            if (item != null)
                                            {
                                                GenericField100 OGenericObjStatement2 = new GenericField100
                                                {
                                                    Fld100 = STAGEitem,
                                                    Fld1 = ca.Emptable.EmpCode,
                                                    Fld2 = ca.EmpName.FullNameFML,
                                                    Fld3 = GeoDataInd.FuncStruct_Job_Name,
                                                    Fld4 = item.CaseNumber != "" ? item.CaseNumber.ToString() : "",
                                                    Fld8 = item.OEnquiryPanelRecommendation != "" ? item.OEnquiryPanelRecommendation.ToString() : "",
                                                    Fld9 = item.OCaseEnquiryDate != null ? item.OCaseEnquiryDate.Value.ToShortDateString() : "",
                                                    Fld10 = item.OPanelName != "" ? item.OPanelName.ToString() : "",
                                                    Fld11 = item.PreliminaryNarr != "" ? item.PreliminaryNarr.ToString() : "",
                                                    Fld12 = TEST1 != null ? TEST1.ToString() : "False",

                                                };

                                                if (comp)
                                                {
                                                    OGenericObjStatement2.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                }
                                                if (div)
                                                {
                                                    OGenericObjStatement2.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                }
                                                if (loca)
                                                {
                                                    OGenericObjStatement2.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                }
                                                if (dept)
                                                {
                                                    OGenericObjStatement2.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                }
                                                if (grp)
                                                {
                                                    OGenericObjStatement2.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                }
                                                if (unit)
                                                {
                                                    OGenericObjStatement2.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                }
                                                if (grade)
                                                {
                                                    OGenericObjStatement2.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                }
                                                if (lvl)
                                                {
                                                    OGenericObjStatement2.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                }
                                                if (jobstat)
                                                {
                                                    OGenericObjStatement2.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                }
                                                if (job)
                                                {
                                                    OGenericObjStatement2.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                }
                                                if (jobpos)
                                                {
                                                    OGenericObjStatement2.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                }
                                                if (emp)
                                                {
                                                    OGenericObjStatement2.Fld88 = ca.Emptable.EmpName.FullNameFML;
                                                }
                                                OGenericPayrollStatement.Add(OGenericObjStatement2);

                                            }

                                            break;

                                        case "3":
                                            int stage3 = Convert.ToInt32(STAGEitem);
                                            //EmpDisciplineProcedings ST3Data = db.EmpDisciplineProcedings
                                            //        .Include(e => e.PreminaryEnquiryAction).Include(e => e.PreminaryEnquiryAction.EnquiryPanel)
                                            //        .Where(e => e.CaseNo == item.CaseNo && e.ProceedingStage == stage3).FirstOrDefault();
                                            var TEST3 = item.ProceedStage == ST;
                                            if (item != null)
                                            {
                                                GenericField100 OGenericObjStatement3 = new GenericField100
                                                {
                                                    Fld100 = STAGEitem,
                                                    Fld1 = ca.Emptable.EmpCode,
                                                    Fld2 = ca.EmpName.FullNameFML,
                                                    Fld3 = GeoDataInd.FuncStruct_Job_Name,
                                                    Fld4 = item.CaseNumber != "" ? item.CaseNumber.ToString() : "",
                                                    Fld10 = item.OIsSuspendEmp != null ? item.OIsSuspendEmp.ToString() : "",
                                                    Fld11 = item.OSuspensionDate != null ? item.OSuspensionDate.Value.ToShortDateString() : "",
                                                    Fld12 = item.OIsNotifyHRDept != null ? item.OIsNotifyHRDept.ToString() : "",
                                                    Fld13 = item.OPreminaryEnquiryActionDate != null ? item.OPreminaryEnquiryActionDate.Value.ToShortDateString() : "",
                                                    Fld14 = item.PreliminaryEnqActNarr != "" ? item.PreliminaryEnqActNarr.ToString() : "",
                                                    Fld15 = TEST3 != null ? TEST3.ToString() : "False",

                                                };

                                                if (comp)
                                                {
                                                    OGenericObjStatement3.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                }
                                                if (div)
                                                {
                                                    OGenericObjStatement3.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                }
                                                if (loca)
                                                {
                                                    OGenericObjStatement3.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                }
                                                if (dept)
                                                {
                                                    OGenericObjStatement3.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                }
                                                if (grp)
                                                {
                                                    OGenericObjStatement3.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                }
                                                if (unit)
                                                {
                                                    OGenericObjStatement3.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                }
                                                if (grade)
                                                {
                                                    OGenericObjStatement3.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                }
                                                if (lvl)
                                                {
                                                    OGenericObjStatement3.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                }
                                                if (jobstat)
                                                {
                                                    OGenericObjStatement3.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                }
                                                if (job)
                                                {
                                                    OGenericObjStatement3.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                }
                                                if (jobpos)
                                                {
                                                    OGenericObjStatement3.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                }
                                                if (emp)
                                                {
                                                    OGenericObjStatement3.Fld88 = ca.Emptable.EmpName.FullNameFML;
                                                }

                                                OGenericPayrollStatement.Add(OGenericObjStatement3);
                                            }

                                            break;


                                        case "4":
                                            int stage4 = Convert.ToInt32(STAGEitem);
                                            //EmpDisciplineProcedings ST4Data = db.EmpDisciplineProcedings
                                            //        .Include(e => e.ChargeSheet)
                                            //        .Where(e => e.CaseNo == item.CaseNo && e.ProceedingStage == stage4).FirstOrDefault();
                                            var TEST4 = item.ProceedStage == ST;
                                            if (item != null)
                                            {
                                                GenericField100 OGenericObjStatement4 = new GenericField100
                                                {
                                                    Fld100 = STAGEitem,
                                                    Fld1 = ca.Emptable.EmpCode,
                                                    Fld2 = ca.EmpName.FullNameFML,
                                                    Fld3 = GeoDataInd.FuncStruct_Job_Name,
                                                    Fld4 = item.CaseNumber != "" ? item.CaseNumber.ToString() : "",
                                                    Fld12 = item.OCSFullDetails != "" ? item.OCSFullDetails.ToString() : "",
                                                    Fld13 = item.OChargeSheetDetails != null ? item.OChargeSheetDetails.ToString() : "",
                                                    Fld14 = item.OChargeSheetNo != null ? item.OChargeSheetNo.ToString() : "",
                                                    Fld15 = item.OChargeSheetDate != null ? item.OChargeSheetDate.Value.ToShortDateString() : "",
                                                    Fld16 = item.ChargeSheetNarr != "" ? item.ChargeSheetNarr.ToString() : "",

                                                    Fld17 = TEST4 != null ? TEST4.ToString() : "False",

                                                };

                                                if (comp)
                                                {
                                                    OGenericObjStatement4.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                }
                                                if (div)
                                                {
                                                    OGenericObjStatement4.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                }
                                                if (loca)
                                                {
                                                    OGenericObjStatement4.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                }
                                                if (dept)
                                                {
                                                    OGenericObjStatement4.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                }
                                                if (grp)
                                                {
                                                    OGenericObjStatement4.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                }
                                                if (unit)
                                                {
                                                    OGenericObjStatement4.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                }
                                                if (grade)
                                                {
                                                    OGenericObjStatement4.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                }
                                                if (lvl)
                                                {
                                                    OGenericObjStatement4.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                }
                                                if (jobstat)
                                                {
                                                    OGenericObjStatement4.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                }
                                                if (job)
                                                {
                                                    OGenericObjStatement4.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                }
                                                if (jobpos)
                                                {
                                                    OGenericObjStatement4.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                }
                                                if (emp)
                                                {
                                                    OGenericObjStatement4.Fld88 = ca.Emptable.EmpName.FullNameFML;
                                                }
                                                OGenericPayrollStatement.Add(OGenericObjStatement4);

                                            }

                                            break;


                                        case "5":

                                            int stage5 = Convert.ToInt32(STAGEitem);
                                            //EmpDisciplineProcedings ST5Data = db.EmpDisciplineProcedings
                                            //        .Include(e => e.ChargeSheetServing).Include(e => e.ChargeSheetServing.Select(m => m.ChargeSheetServingMode))
                                            //        .Include(e => e.ChargeSheetServing.Select(m => m.ChargeSheetServingMode.ChargeSheetServingModeName))
                                            //        .Where(e => e.CaseNo == item.CaseNo && e.ProceedingStage == stage5).FirstOrDefault();
                                            var temp = ca.EmpDisPro.Where(e => e.OChargeSheetServing.Count() > 0).Select(z => new
                                            {
                                                OCSR = z.OChargeSheetServing.Select(w => new
                                                {
                                                    w.ChargeSheetServingNarr,
                                                    w.OChargeSheetServingDate,
                                                    w.OChargeSheetServingModeName,
                                                    w.OIsClosedServing,
                                                    w.OIsWitnessReqd,

                                                }).ToList()

                                            }).FirstOrDefault();
                                            if (temp != null)
                                            {

                                                foreach (var cservingitem in temp.OCSR)
                                                {
                                                    GenericField100 OGenericObjStatement5 = new GenericField100
                                                    {
                                                        Fld100 = STAGEitem,
                                                        Fld1 = ca.Emptable.EmpCode,
                                                        Fld2 = ca.EmpName.FullNameFML,
                                                        Fld3 = GeoDataInd.FuncStruct_Job_Name,
                                                        Fld4 = item.CaseNumber != "" ? item.CaseNumber.ToString() : "",
                                                        Fld14 = cservingitem.OChargeSheetServingDate != null ? cservingitem.OChargeSheetServingDate.Value.ToShortDateString() : null,
                                                        Fld15 = cservingitem.OChargeSheetServingModeName != "" ? cservingitem.OChargeSheetServingModeName.ToString() : "",
                                                        Fld16 = cservingitem.OIsWitnessReqd != null ? cservingitem.OIsWitnessReqd.ToString() : "",
                                                        Fld17 = cservingitem.OIsClosedServing != null ? cservingitem.OIsClosedServing.ToString() : "",
                                                        Fld18 = cservingitem.ChargeSheetServingNarr != null ? cservingitem.ChargeSheetServingNarr.ToString() : "",

                                                    };

                                                    if (comp)
                                                    {
                                                        OGenericObjStatement5.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                    }
                                                    if (div)
                                                    {
                                                        OGenericObjStatement5.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                    }
                                                    if (loca)
                                                    {
                                                        OGenericObjStatement5.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                    }
                                                    if (dept)
                                                    {
                                                        OGenericObjStatement5.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                    }
                                                    if (grp)
                                                    {
                                                        OGenericObjStatement5.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                    }
                                                    if (unit)
                                                    {
                                                        OGenericObjStatement5.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                    }
                                                    if (grade)
                                                    {
                                                        OGenericObjStatement5.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                    }
                                                    if (lvl)
                                                    {
                                                        OGenericObjStatement5.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                    }
                                                    if (jobstat)
                                                    {
                                                        OGenericObjStatement5.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                    }
                                                    if (job)
                                                    {
                                                        OGenericObjStatement5.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                    }
                                                    if (jobpos)
                                                    {
                                                        OGenericObjStatement5.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                    }
                                                    if (emp)
                                                    {
                                                        OGenericObjStatement5.Fld88 = ca.Emptable.EmpName.FullNameFML;
                                                    }
                                                    OGenericPayrollStatement.Add(OGenericObjStatement5);

                                                }
                                            }

                                            break;


                                        case "6":

                                            int stage6 = Convert.ToInt32(STAGEitem);
                                            //EmpDisciplineProcedings ST6Data = db.EmpDisciplineProcedings
                                            //        .Include(e => e.ChargeSheetReply)
                                            //        .Where(e => e.CaseNo == item.CaseNo && e.ProceedingStage == stage6).FirstOrDefault();

                                            if (item != null)
                                            {
                                                GenericField100 OGenericObjStatement6 = new GenericField100
                                                {
                                                    Fld100 = STAGEitem,
                                                    Fld1 = ca.Emptable.EmpCode,
                                                    Fld2 = ca.EmpName.FullNameFML,
                                                    Fld3 = GeoDataInd.FuncStruct_Job_Name,
                                                    Fld4 = item.CaseNumber != "" ? item.CaseNumber.ToString() : "",
                                                    Fld16 = item.OPunishmentDetails != "" ? item.OPunishmentDetails.ToString() : "",
                                                    Fld17 = item.OCSReplyDate != null ? item.OCSReplyDate.Value.ToShortDateString() : "",
                                                    Fld18 = item.OIsPleadGuilty != null ? item.OIsPleadGuilty.ToString() : "",
                                                    Fld19 = item.OIsDropChargeSheet != null ? item.OIsDropChargeSheet.ToString() : "",
                                                    Fld20 = item.OIsReplySatisfactory != null ? item.OIsReplySatisfactory.ToString() : "",
                                                    Fld21 = item.ChargeSheetReplyNarr != null ? item.ChargeSheetReplyNarr.ToString() : "",

                                                };

                                                if (comp)
                                                {
                                                    OGenericObjStatement6.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                }
                                                if (div)
                                                {
                                                    OGenericObjStatement6.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                }
                                                if (loca)
                                                {
                                                    OGenericObjStatement6.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                }
                                                if (dept)
                                                {
                                                    OGenericObjStatement6.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                }
                                                if (grp)
                                                {
                                                    OGenericObjStatement6.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                }
                                                if (unit)
                                                {
                                                    OGenericObjStatement6.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                }
                                                if (grade)
                                                {
                                                    OGenericObjStatement6.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                }
                                                if (lvl)
                                                {
                                                    OGenericObjStatement6.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                }
                                                if (jobstat)
                                                {
                                                    OGenericObjStatement6.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                }
                                                if (job)
                                                {
                                                    OGenericObjStatement6.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                }
                                                if (jobpos)
                                                {
                                                    OGenericObjStatement6.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                }
                                                if (emp)
                                                {
                                                    OGenericObjStatement6.Fld88 = ca.Emptable.EmpName.FullNameFML;
                                                }
                                                OGenericPayrollStatement.Add(OGenericObjStatement6);

                                            }

                                            break;


                                        case "7":

                                            int stage7 = Convert.ToInt32(STAGEitem);
                                            //EmpDisciplineProcedings ST7Data = db.EmpDisciplineProcedings
                                            //        .Include(e => e.ChargeSheetEnquiryNotice).Include(e => e.ChargeSheetEnquiryNotice.EnquiryPanel)
                                            //        .Include(e => e.ChargeSheetEnquiryNotice.Witness)
                                            //        .Include(e => e.ChargeSheetEnquiryNotice.EnquiryAddress)
                                            //        .Where(e => e.CaseNo == item.CaseNo && e.ProceedingStage == stage7).FirstOrDefault();

                                            if (item != null)
                                            {
                                                GenericField100 OGenericObjStatement7 = new GenericField100
                                                {
                                                    Fld100 = STAGEitem,
                                                    Fld1 = ca.Emptable.EmpCode,
                                                    Fld2 = ca.EmpName.FullNameFML,
                                                    Fld3 = GeoDataInd.FuncStruct_Job_Name,
                                                    Fld4 = item.CaseNumber != "" ? item.CaseNumber.ToString() : "",
                                                    Fld19 = item.OEnquiryPlace != null ? item.OEnquiryPlace.ToString() : "",
                                                    Fld20 = item.OEnquiryScheduleDate != null ? item.OEnquiryScheduleDate.Value.ToShortDateString() : "",
                                                    Fld21 = item.OEnquiryNoticeNo != null ? item.OEnquiryNoticeNo.ToString() : "",
                                                    Fld22 = item.OEnquiryAddressFullAddress != null ? item.OEnquiryAddressFullAddress.ToString() : "",

                                                };

                                                if (comp)
                                                {
                                                    OGenericObjStatement7.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                }
                                                if (div)
                                                {
                                                    OGenericObjStatement7.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                }
                                                if (loca)
                                                {
                                                    OGenericObjStatement7.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                }
                                                if (dept)
                                                {
                                                    OGenericObjStatement7.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                }
                                                if (grp)
                                                {
                                                    OGenericObjStatement7.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                }
                                                if (unit)
                                                {
                                                    OGenericObjStatement7.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                }
                                                if (grade)
                                                {
                                                    OGenericObjStatement7.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                }
                                                if (lvl)
                                                {
                                                    OGenericObjStatement7.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                }
                                                if (jobstat)
                                                {
                                                    OGenericObjStatement7.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                }
                                                if (job)
                                                {
                                                    OGenericObjStatement7.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                }
                                                if (jobpos)
                                                {
                                                    OGenericObjStatement7.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                }
                                                if (emp)
                                                {
                                                    OGenericObjStatement7.Fld88 = ca.Emptable.EmpName.FullNameFML;
                                                }
                                                OGenericPayrollStatement.Add(OGenericObjStatement7);

                                            }

                                            break;


                                        case "8":
                                            int stage8 = Convert.ToInt32(STAGEitem);
                                            //EmpDisciplineProcedings ST8Data = db.EmpDisciplineProcedings
                                            //        .Include(e => e.ChargeSheetEnquiryNoticeServing).Include(e => e.ChargeSheetEnquiryNoticeServing.Witness)
                                            //        .Include(e => e.ChargeSheetEnquiryNoticeServing.ChargeSheetServingMode)
                                            //        .Where(e => e.CaseNo == item.CaseNo && e.ProceedingStage == stage8).FirstOrDefault();

                                            if (item != null)
                                            {
                                                GenericField100 OGenericObjStatement8 = new GenericField100
                                                {
                                                    Fld100 = STAGEitem,
                                                    Fld1 = ca.Emptable.EmpCode,
                                                    Fld2 = ca.EmpName.FullNameFML,
                                                    Fld3 = GeoDataInd.FuncStruct_Job_Name,
                                                    Fld4 = item.CaseNumber != "" ? item.CaseNumber.ToString() : "",
                                                    Fld19 = item.OCSENSIsWitnessReqd != null ? item.OCSENSIsWitnessReqd.ToString() : "",
                                                    Fld20 = item.OCSENSIsClosedServing != null ? item.OCSENSIsClosedServing.ToString() : "",
                                                    Fld21 = item.ChargeSheetEnquiryNoticeServingNarr != "" ? item.ChargeSheetEnquiryNoticeServingNarr.ToString() : "",
                                                    Fld23 = item.OCSENSIsChargeSheetRecd != null ? item.OCSENSIsChargeSheetRecd.ToString() : "",
                                                    Fld24 = item.OCSENSEnquiryNoticeServingDate != null ? item.OCSENSEnquiryNoticeServingDate.Value.ToShortDateString() : "",

                                                };

                                                if (comp)
                                                {
                                                    OGenericObjStatement8.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                }
                                                if (div)
                                                {
                                                    OGenericObjStatement8.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                }
                                                if (loca)
                                                {
                                                    OGenericObjStatement8.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                }
                                                if (dept)
                                                {
                                                    OGenericObjStatement8.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                }
                                                if (grp)
                                                {
                                                    OGenericObjStatement8.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                }
                                                if (unit)
                                                {
                                                    OGenericObjStatement8.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                }
                                                if (grade)
                                                {
                                                    OGenericObjStatement8.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                }
                                                if (lvl)
                                                {
                                                    OGenericObjStatement8.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                }
                                                if (jobstat)
                                                {
                                                    OGenericObjStatement8.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                }
                                                if (job)
                                                {
                                                    OGenericObjStatement8.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                }
                                                if (jobpos)
                                                {
                                                    OGenericObjStatement8.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                }
                                                if (emp)
                                                {
                                                    OGenericObjStatement8.Fld88 = ca.Emptable.EmpName.FullNameFML;
                                                }
                                                OGenericPayrollStatement.Add(OGenericObjStatement8);

                                                // // return OGenericPayrollStatement;
                                            }

                                            break;


                                        case "9":
                                            int stage9 = Convert.ToInt32(STAGEitem);
                                            //EmpDisciplineProcedings ST9Data = db.EmpDisciplineProcedings
                                            //        .Include(e => e.ChargeSheetEnquiryProceedings).Include(e => e.ChargeSheetEnquiryProceedings.WitnessPresent)
                                            //        .Include(e => e.ChargeSheetEnquiryProceedings.EnquiryPanelPresent)
                                            //        .Where(e => e.CaseNo == item.CaseNo && e.ProceedingStage == stage9).FirstOrDefault();

                                            if (item != null)
                                            {
                                                GenericField100 OGenericObjStatement9 = new GenericField100
                                                {
                                                    Fld100 = STAGEitem,
                                                    Fld1 = ca.Emptable.EmpCode,
                                                    Fld2 = ca.EmpName.FullNameFML,
                                                    Fld3 = GeoDataInd.FuncStruct_Job_Name,
                                                    Fld4 = item.CaseNumber != "" ? item.CaseNumber.ToString() : "",
                                                    Fld19 = item.ChargeSheetEnquiryProceedingsNarr != "" ? item.ChargeSheetEnquiryProceedingsNarr.ToString() : "",
                                                    Fld25 = item.OCSEPIsEnquiryOver != null ? item.OCSEPIsEnquiryOver.ToString() : "",
                                                    Fld26 = item.OCSEPEnquiryProceedingDate != null ? item.OCSEPEnquiryProceedingDate.Value.ToShortDateString() : "",
                                                    Fld20 = item.OCSEPEnquiryProceedingTime != null ? item.OCSEPEnquiryProceedingTime.Value.ToShortTimeString() : "",
                                                    Fld27 = item.OCSEPIsEmpReport != null ? item.OCSEPIsEmpReport.ToString() : "",

                                                };

                                                if (comp)
                                                {
                                                    OGenericObjStatement9.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                }
                                                if (div)
                                                {
                                                    OGenericObjStatement9.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                }
                                                if (loca)
                                                {
                                                    OGenericObjStatement9.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                }
                                                if (dept)
                                                {
                                                    OGenericObjStatement9.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                }
                                                if (grp)
                                                {
                                                    OGenericObjStatement9.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                }
                                                if (unit)
                                                {
                                                    OGenericObjStatement9.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                }
                                                if (grade)
                                                {
                                                    OGenericObjStatement9.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                }
                                                if (lvl)
                                                {
                                                    OGenericObjStatement9.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                }
                                                if (jobstat)
                                                {
                                                    OGenericObjStatement9.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                }
                                                if (job)
                                                {
                                                    OGenericObjStatement9.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                }
                                                if (jobpos)
                                                {
                                                    OGenericObjStatement9.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                }
                                                if (emp)
                                                {
                                                    OGenericObjStatement9.Fld88 = ca.Emptable.EmpName.FullNameFML;
                                                }
                                                OGenericPayrollStatement.Add(OGenericObjStatement9);

                                            }

                                            break;


                                        case "10":
                                            int stage10 = Convert.ToInt32(STAGEitem);
                                            //EmpDisciplineProcedings ST10Data = db.EmpDisciplineProcedings
                                            //        .Include(e => e.ChargeSheetEnquiryReport)
                                            //        .Where(e => e.CaseNo == item.CaseNo && e.ProceedingStage == stage10).FirstOrDefault();

                                            if (item != null)
                                            {
                                                GenericField100 OGenericObjStatement10 = new GenericField100
                                                {
                                                    Fld100 = STAGEitem,
                                                    Fld1 = ca.Emptable.EmpCode,
                                                    Fld2 = ca.EmpName.FullNameFML,
                                                    Fld3 = GeoDataInd.FuncStruct_Job_Name,
                                                    Fld4 = item.CaseNumber != "" ? item.CaseNumber.ToString() : "",
                                                    Fld22 = item.OCSEREnquiryReportDetails != null ? item.OCSEREnquiryReportDetails.ToString() : "",
                                                    Fld23 = item.OCSERIsCloseCase != null ? item.OCSERIsCloseCase.ToString() : "",
                                                    Fld24 = item.OCSERSuspensionRevokeDate != null ? item.OCSERSuspensionRevokeDate.Value.ToShortDateString() : "",
                                                    Fld28 = item.OCSERIsEmpGuilty != null ? item.OCSERIsEmpGuilty.ToString() : "",
                                                    Fld29 = item.OCSERReportSubmissionDate != null ? item.OCSERReportSubmissionDate.Value.ToShortDateString() : "",
                                                    Fld30 = item.OCSERIsNotifyHRDept != null ? item.OCSERIsNotifyHRDept.ToString() : "",
                                                    Fld31 = item.ChargeSheetEnquiryReportNarr != null ? item.ChargeSheetEnquiryReportNarr.ToString() : ""

                                                };

                                                if (comp)
                                                {
                                                    OGenericObjStatement10.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                }
                                                if (div)
                                                {
                                                    OGenericObjStatement10.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                }
                                                if (loca)
                                                {
                                                    OGenericObjStatement10.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                }
                                                if (dept)
                                                {
                                                    OGenericObjStatement10.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                }
                                                if (grp)
                                                {
                                                    OGenericObjStatement10.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                }
                                                if (unit)
                                                {
                                                    OGenericObjStatement10.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                }
                                                if (grade)
                                                {
                                                    OGenericObjStatement10.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                }
                                                if (lvl)
                                                {
                                                    OGenericObjStatement10.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                }
                                                if (jobstat)
                                                {
                                                    OGenericObjStatement10.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                }
                                                if (job)
                                                {
                                                    OGenericObjStatement10.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                }
                                                if (jobpos)
                                                {
                                                    OGenericObjStatement10.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                }
                                                if (emp)
                                                {
                                                    OGenericObjStatement10.Fld88 = ca.Emptable.EmpName.FullNameFML;
                                                }
                                                OGenericPayrollStatement.Add(OGenericObjStatement10);

                                            }

                                            break;

                                        case "11":
                                            int stage11 = Convert.ToInt32(STAGEitem);
                                            //EmpDisciplineProcedings ST11Data = db.EmpDisciplineProcedings
                                            //        .Include(e => e.PostEnquiryPrerquisite)
                                            //        .Where(e => e.CaseNo == item.CaseNo && e.ProceedingStage == stage11).FirstOrDefault();

                                            if (item != null)
                                            {
                                                GenericField100 OGenericObjStatement11 = new GenericField100
                                                {
                                                    Fld100 = STAGEitem,
                                                    Fld1 = ca.Emptable.EmpCode,
                                                    Fld2 = ca.EmpName.FullNameFML,
                                                    Fld3 = GeoDataInd.FuncStruct_Job_Name,
                                                    Fld4 = item.CaseNumber != "" ? item.CaseNumber.ToString() : "",
                                                    Fld25 = item.OIsChkeckedEmpAdjusdication != null ? item.OIsChkeckedEmpAdjusdication.ToString() : "",
                                                    Fld26 = item.OEmpAdjudicationDetails != null ? item.OEmpAdjudicationDetails.ToString() : "",
                                                    Fld27 = item.OIndustrailDisputesActDetails != null ? item.OIndustrailDisputesActDetails.ToString() : "",
                                                    Fld28 = item.PostEnquiryPrerquisiteNarr != null ? item.PostEnquiryPrerquisiteNarr.ToString() : "",
                                                    Fld31 = item.OIsChkeckedEmpPastRecord != null ? item.OIsChkeckedEmpPastRecord.ToString() : "",
                                                    Fld32 = item.OEmpPastRecordDetails != null ? item.OEmpPastRecordDetails.ToString() : "",
                                                    Fld33 = item.OPastOffenseCount != null ? item.OPastOffenseCount.ToString() : "0",

                                                };

                                                if (comp)
                                                {
                                                    OGenericObjStatement11.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                }
                                                if (div)
                                                {
                                                    OGenericObjStatement11.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                }
                                                if (loca)
                                                {
                                                    OGenericObjStatement11.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                }
                                                if (dept)
                                                {
                                                    OGenericObjStatement11.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                }
                                                if (grp)
                                                {
                                                    OGenericObjStatement11.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                }
                                                if (unit)
                                                {
                                                    OGenericObjStatement11.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                }
                                                if (grade)
                                                {
                                                    OGenericObjStatement11.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                }
                                                if (lvl)
                                                {
                                                    OGenericObjStatement11.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                }
                                                if (jobstat)
                                                {
                                                    OGenericObjStatement11.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                }
                                                if (job)
                                                {
                                                    OGenericObjStatement11.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                }
                                                if (jobpos)
                                                {
                                                    OGenericObjStatement11.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                }
                                                if (emp)
                                                {
                                                    OGenericObjStatement11.Fld88 = ca.Emptable.EmpName.FullNameFML;
                                                }
                                                OGenericPayrollStatement.Add(OGenericObjStatement11);
                                            }

                                            break;

                                        case "12":
                                            int stage12 = Convert.ToInt32(STAGEitem);

                                            if (item != null)
                                            {
                                                GenericField100 OGenericObjStatement12 = new GenericField100
                                                {
                                                    Fld100 = STAGEitem,
                                                    Fld1 = ca.Emptable.EmpCode,
                                                    Fld2 = ca.EmpName.FullNameFML,
                                                    Fld3 = GeoDataInd.FuncStruct_Job_Name,
                                                    Fld4 = item.CaseNumber != "" ? item.CaseNumber.ToString() : "",
                                                    Fld20 = item.OFSCNReplyTime != null ? item.OFSCNReplyTime.ToString() : "",
                                                    Fld21 = item.FinalShowCauseNoticeNarr != null ? item.FinalShowCauseNoticeNarr.ToString() : "",
                                                    Fld34 = item.OFSCNNoticeNo != null ? item.OFSCNNoticeNo.ToString() : "",
                                                    Fld35 = item.OFSCNNoticeDate != null ? item.OFSCNNoticeDate.Value.ToShortDateString() : "",
                                                    Fld36 = item.OFSCNNoticeDetails != null ? item.OFSCNNoticeDetails.ToString() : "",

                                                };

                                                if (comp)
                                                {
                                                    OGenericObjStatement12.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                }
                                                if (div)
                                                {
                                                    OGenericObjStatement12.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                }
                                                if (loca)
                                                {
                                                    OGenericObjStatement12.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                }
                                                if (dept)
                                                {
                                                    OGenericObjStatement12.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                }
                                                if (grp)
                                                {
                                                    OGenericObjStatement12.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                }
                                                if (unit)
                                                {
                                                    OGenericObjStatement12.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                }
                                                if (grade)
                                                {
                                                    OGenericObjStatement12.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                }
                                                if (lvl)
                                                {
                                                    OGenericObjStatement12.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                }
                                                if (jobstat)
                                                {
                                                    OGenericObjStatement12.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                }
                                                if (job)
                                                {
                                                    OGenericObjStatement12.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                }
                                                if (jobpos)
                                                {
                                                    OGenericObjStatement12.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                }
                                                if (emp)
                                                {
                                                    OGenericObjStatement12.Fld88 = ca.Emptable.EmpName.FullNameFML;
                                                }
                                                OGenericPayrollStatement.Add(OGenericObjStatement12);

                                            }

                                            break;


                                        case "13":
                                            int stage13 = Convert.ToInt32(STAGEitem);
                                            //EmpDisciplineProcedings ST13Data = db.EmpDisciplineProcedings
                                            //        .Include(e => e.FinalShowCauseNoticeServing)
                                            //        .Where(e => e.CaseNo == item.CaseNo && e.ProceedingStage == stage13).FirstOrDefault();

                                            if (item != null)
                                            {
                                                GenericField100 OGenericObjStatement13 = new GenericField100
                                                {
                                                    Fld100 = STAGEitem,
                                                    Fld1 = ca.Emptable.EmpCode,
                                                    Fld2 = ca.EmpName.FullNameFML,
                                                    Fld3 = GeoDataInd.FuncStruct_Job_Name,
                                                    Fld4 = item.CaseNumber != "" ? item.CaseNumber.ToString() : "",
                                                    Fld16 = item.OFSCNSIsClosedServing != null ? item.OFSCNSIsClosedServing.ToString() : "",
                                                    Fld17 = item.FinalShowCauseNoticeServingNarr != null ? item.FinalShowCauseNoticeServingNarr.ToString() : "",
                                                    Fld37 = item.OFSCNSIsNoticeRecd != null ? item.OFSCNSIsNoticeRecd.ToString() : "",
                                                    Fld38 = item.OFSCNSNoticeServingDate != null ? item.OFSCNSNoticeServingDate.Value.ToShortDateString() : "",
                                                    Fld39 = item.OFSCNSIsWitnessReqd != null ? item.OFSCNSIsWitnessReqd.ToString() : "",

                                                };

                                                if (comp)
                                                {
                                                    OGenericObjStatement13.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                }
                                                if (div)
                                                {
                                                    OGenericObjStatement13.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                }
                                                if (loca)
                                                {
                                                    OGenericObjStatement13.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                }
                                                if (dept)
                                                {
                                                    OGenericObjStatement13.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                }
                                                if (grp)
                                                {
                                                    OGenericObjStatement13.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                }
                                                if (unit)
                                                {
                                                    OGenericObjStatement13.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                }
                                                if (grade)
                                                {
                                                    OGenericObjStatement13.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                }
                                                if (lvl)
                                                {
                                                    OGenericObjStatement13.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                }
                                                if (jobstat)
                                                {
                                                    OGenericObjStatement13.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                }
                                                if (job)
                                                {
                                                    OGenericObjStatement13.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                }
                                                if (jobpos)
                                                {
                                                    OGenericObjStatement13.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                }
                                                if (emp)
                                                {
                                                    OGenericObjStatement13.Fld88 = ca.Emptable.EmpName.FullNameFML;
                                                }
                                                OGenericPayrollStatement.Add(OGenericObjStatement13);

                                            }

                                            break;


                                        case "14":
                                            int stage14 = Convert.ToInt32(STAGEitem);
                                            //EmpDisciplineProcedings ST14Data = db.EmpDisciplineProcedings
                                            //        .Include(e => e.FinalShowCauseNoticeReply)
                                            //        .Where(e => e.CaseNo == item.CaseNo && e.ProceedingStage == stage14).FirstOrDefault();

                                            if (item != null)
                                            {
                                                GenericField100 OGenericObjStatement14 = new GenericField100
                                                {
                                                    Fld100 = STAGEitem,
                                                    Fld1 = ca.Emptable.EmpCode,
                                                    Fld2 = ca.EmpName.FullNameFML,
                                                    Fld3 = GeoDataInd.FuncStruct_Job_Name,
                                                    Fld4 = item.CaseNumber != "" ? item.CaseNumber.ToString() : "",
                                                    Fld28 = item.OFSCNRReplyDetails != null ? item.OFSCNRReplyDetails.ToString() : "",
                                                    Fld29 = item.OFSCNRIsReplyStudied != null ? item.OFSCNRIsReplyStudied.ToString() : "",
                                                    Fld40 = item.OFSCNRFullDetails != null ? item.OFSCNRFullDetails.ToString() : "",
                                                    Fld41 = item.OFSCNRNoticeReplyRecdDate != null ? item.OFSCNRNoticeReplyRecdDate.Value.ToShortDateString() : "",

                                                };

                                                if (comp)
                                                {
                                                    OGenericObjStatement14.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                }
                                                if (div)
                                                {
                                                    OGenericObjStatement14.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                }
                                                if (loca)
                                                {
                                                    OGenericObjStatement14.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                }
                                                if (dept)
                                                {
                                                    OGenericObjStatement14.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                }
                                                if (grp)
                                                {
                                                    OGenericObjStatement14.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                }
                                                if (unit)
                                                {
                                                    OGenericObjStatement14.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                }
                                                if (grade)
                                                {
                                                    OGenericObjStatement14.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                }
                                                if (lvl)
                                                {
                                                    OGenericObjStatement14.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                }
                                                if (jobstat)
                                                {
                                                    OGenericObjStatement14.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                }
                                                if (job)
                                                {
                                                    OGenericObjStatement14.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                }
                                                if (jobpos)
                                                {
                                                    OGenericObjStatement14.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                }
                                                if (emp)
                                                {
                                                    OGenericObjStatement14.Fld88 = ca.Emptable.EmpName.FullNameFML;
                                                }
                                                OGenericPayrollStatement.Add(OGenericObjStatement14);

                                            }

                                            break;


                                        case "15":
                                            int stage15 = Convert.ToInt32(STAGEitem);
                                            //EmpDisciplineProcedings ST15Data = db.EmpDisciplineProcedings
                                            //        .Include(e => e.FinalShowCauseNoticeClarification)
                                            //        .Where(e => e.CaseNo == item.CaseNo && e.ProceedingStage == stage15).FirstOrDefault();

                                            if (item != null)
                                            {
                                                GenericField100 OGenericObjStatement15 = new GenericField100
                                                {
                                                    Fld100 = STAGEitem,
                                                    Fld1 = ca.Emptable.EmpCode,
                                                    Fld2 = ca.EmpName.FullNameFML,
                                                    Fld3 = GeoDataInd.FuncStruct_Job_Name,
                                                    Fld4 = item.CaseNumber != "" ? item.CaseNumber.ToString() : "",
                                                    Fld10 = item.FinalShowCauseNoticeClarificationNarr != null ? item.FinalShowCauseNoticeClarificationNarr.ToString() : "",
                                                    Fld42 = item.OFSCNCReplyClarificationDetails != null ? item.OFSCNCReplyClarificationDetails.ToString() : "",
                                                    Fld43 = item.OFSCNCNoticeReplyClarificationDate != null ? item.OFSCNCNoticeReplyClarificationDate.Value.ToShortDateString() : "",

                                                };

                                                if (comp)
                                                {
                                                    OGenericObjStatement15.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                }
                                                if (div)
                                                {
                                                    OGenericObjStatement15.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                }
                                                if (loca)
                                                {
                                                    OGenericObjStatement15.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                }
                                                if (dept)
                                                {
                                                    OGenericObjStatement15.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                }
                                                if (grp)
                                                {
                                                    OGenericObjStatement15.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                }
                                                if (unit)
                                                {
                                                    OGenericObjStatement15.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                }
                                                if (grade)
                                                {
                                                    OGenericObjStatement15.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                }
                                                if (lvl)
                                                {
                                                    OGenericObjStatement15.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                }
                                                if (jobstat)
                                                {
                                                    OGenericObjStatement15.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                }
                                                if (job)
                                                {
                                                    OGenericObjStatement15.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                }
                                                if (jobpos)
                                                {
                                                    OGenericObjStatement15.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                }
                                                if (emp)
                                                {
                                                    OGenericObjStatement15.Fld88 = ca.Emptable.EmpName.FullNameFML;
                                                }
                                                OGenericPayrollStatement.Add(OGenericObjStatement15);

                                            }

                                            break;


                                        case "16":
                                            int stage16 = Convert.ToInt32(STAGEitem);
                                            //EmpDisciplineProcedings ST16Data = db.EmpDisciplineProcedings
                                            //        .Include(e => e.FinalShowCauseNoticeClarificarionServing)
                                            //        .Where(e => e.CaseNo == item.CaseNo && e.ProceedingStage == stage16).FirstOrDefault();

                                            if (item != null)
                                            {
                                                GenericField100 OGenericObjStatement16 = new GenericField100
                                                {
                                                    Fld100 = STAGEitem,
                                                    Fld1 = ca.Emptable.EmpCode,
                                                    Fld2 = ca.EmpName.FullNameFML,
                                                    Fld3 = GeoDataInd.FuncStruct_Job_Name,
                                                    Fld4 = item.CaseNumber != "" ? item.CaseNumber.ToString() : "",
                                                    Fld15 = item.OFSCNCSIsWitnessReqd != null ? item.OFSCNCSIsWitnessReqd.ToString() : "",
                                                    Fld16 = item.OFSCNCSIsClosedServing != null ? item.OFSCNCSIsClosedServing.ToString() : "",
                                                    Fld17 = item.FinalShowCauseNoticeClarificarionServingNarr != null ? item.FinalShowCauseNoticeClarificarionServingNarr.ToString() : "",
                                                    Fld44 = item.OFSCNCSIsNoticeRecd != null ? item.OFSCNCSIsNoticeRecd.ToString() : "",
                                                    Fld45 = item.OFSCNCSNoticeClarificationServingDate != null ? item.OFSCNCSNoticeClarificationServingDate.Value.ToShortDateString() : "",

                                                };

                                                if (comp)
                                                {
                                                    OGenericObjStatement16.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                }
                                                if (div)
                                                {
                                                    OGenericObjStatement16.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                }
                                                if (loca)
                                                {
                                                    OGenericObjStatement16.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                }
                                                if (dept)
                                                {
                                                    OGenericObjStatement16.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                }
                                                if (grp)
                                                {
                                                    OGenericObjStatement16.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                }
                                                if (unit)
                                                {
                                                    OGenericObjStatement16.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                }
                                                if (grade)
                                                {
                                                    OGenericObjStatement16.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                }
                                                if (lvl)
                                                {
                                                    OGenericObjStatement16.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                }
                                                if (jobstat)
                                                {
                                                    OGenericObjStatement16.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                }
                                                if (job)
                                                {
                                                    OGenericObjStatement16.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                }
                                                if (jobpos)
                                                {
                                                    OGenericObjStatement16.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                }
                                                if (emp)
                                                {
                                                    OGenericObjStatement16.Fld88 = ca.Emptable.EmpName.FullNameFML;
                                                }
                                                OGenericPayrollStatement.Add(OGenericObjStatement16);

                                            }

                                            break;


                                        case "17":
                                            int stage17 = Convert.ToInt32(STAGEitem);
                                            //EmpDisciplineProcedings ST17Data = db.EmpDisciplineProcedings
                                            //        .Include(e => e.PunishmentOrder)
                                            //        .Where(e => e.CaseNo == item.CaseNo && e.ProceedingStage == stage17).FirstOrDefault();

                                            if (item != null)
                                            {
                                                GenericField100 OGenericObjStatement17 = new GenericField100
                                                {
                                                    Fld100 = STAGEitem,
                                                    Fld1 = ca.Emptable.EmpCode,
                                                    Fld2 = ca.EmpName.FullNameFML,
                                                    Fld3 = GeoDataInd.FuncStruct_Job_Name,
                                                    Fld4 = item.CaseNumber != "" ? item.CaseNumber.ToString() : "",
                                                    Fld14 = item.OPOReplyTime != null ? item.OPOReplyTime.ToString() : "",
                                                    Fld15 = item.PunishmentOrderNarr != null ? item.PunishmentOrderNarr.ToString() : "",
                                                    Fld46 = item.OPOPunishmentOrderNo != null ? item.OPOPunishmentOrderNo.ToString() : "",
                                                    Fld47 = item.OPOPunishmentOrderDate != null ? item.OPOPunishmentOrderDate.Value.ToShortDateString() : "",
                                                    Fld48 = item.OPOPunishmentOrderDetails != null ? item.OPOPunishmentOrderDetails.ToString() : "",

                                                };

                                                if (comp)
                                                {
                                                    OGenericObjStatement17.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                }
                                                if (div)
                                                {
                                                    OGenericObjStatement17.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                }
                                                if (loca)
                                                {
                                                    OGenericObjStatement17.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                }
                                                if (dept)
                                                {
                                                    OGenericObjStatement17.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                }
                                                if (grp)
                                                {
                                                    OGenericObjStatement17.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                }
                                                if (unit)
                                                {
                                                    OGenericObjStatement17.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                }
                                                if (grade)
                                                {
                                                    OGenericObjStatement17.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                }
                                                if (lvl)
                                                {
                                                    OGenericObjStatement17.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                }
                                                if (jobstat)
                                                {
                                                    OGenericObjStatement17.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                }
                                                if (job)
                                                {
                                                    OGenericObjStatement17.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                }
                                                if (jobpos)
                                                {
                                                    OGenericObjStatement17.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                }
                                                if (emp)
                                                {
                                                    OGenericObjStatement17.Fld88 = ca.Emptable.EmpName.FullNameFML;
                                                }
                                                OGenericPayrollStatement.Add(OGenericObjStatement17);

                                            }

                                            break;


                                        case "18":
                                            int stage18 = Convert.ToInt32(STAGEitem);
                                            //EmpDisciplineProcedings ST18Data = db.EmpDisciplineProcedings
                                            //        .Include(e => e.PunishmentOrderDelivery).Include(e => e.PunishmentOrderDelivery.PunishmentOrderServingMode)
                                            //        .Where(e => e.CaseNo == item.CaseNo && e.ProceedingStage == stage18).FirstOrDefault();


                                            var GetEmployeeIR = db.EmployeeIR.Select(z => new
                                            {
                                                OEmployee_ID = z.Employee.Id,
                                                OOEmpDisciplineProcedings = z.EmpDisciplineProcedings.Select(p => new
                                                {
                                                    OProceedingStage = p.ProceedingStage,
                                                    OPCaseNo = p.CaseNo,

                                                    #region PunishmentOrderDelivery
                                                    OPODIsWitnessReqd = p.PunishmentOrderDelivery.IsWitnessReqd.ToString(),
                                                    OPODIsClosedServing = p.PunishmentOrderDelivery.IsClosedServing.ToString(),
                                                    PunishmentOrderDeliveryNarr = p.PunishmentOrderDelivery.Narration,
                                                    OPODIsNoticeRecd = p.PunishmentOrderDelivery.IsNoticeRecd.ToString(),
                                                    OPODPunishmentOrderServingDate = p.PunishmentOrderDelivery.PunishmentOrderServingDate,
                                                    OPODChargeSheetServingModeName = p.PunishmentOrderDelivery.PunishmentOrderServingMode.ChargeSheetServingModeName.LookupVal,
                                                    #endregion


                                                }).Where(e => e.OProceedingStage == stage18 && e.OPCaseNo == GetCaseNUM).ToList(),

                                            }).Where(e => EmpPayrollIdList.Contains(e.OEmployee_ID)).ToList();

                                            foreach (var itemempIr in GetEmployeeIR.Where(e => e.OOEmpDisciplineProcedings.Count() > 0))
                                            {
                                                foreach (var itemempProcee in itemempIr.OOEmpDisciplineProcedings)
                                                {
                                                    if (item != null)
                                                    {

                                                        GenericField100 OGenericObjStatement18 = new GenericField100
                                                        {
                                                            Fld100 = STAGEitem,
                                                            Fld1 = ca.Emptable.EmpCode,
                                                            Fld2 = ca.EmpName.FullNameFML,
                                                            Fld3 = GeoDataInd.FuncStruct_Job_Name,
                                                            Fld4 = item.CaseNumber != "" ? item.CaseNumber.ToString() : "",
                                                            Fld23 = itemempProcee.OPODIsWitnessReqd != null ? itemempProcee.OPODIsWitnessReqd.ToString() : "",
                                                            Fld24 = itemempProcee.OPODIsClosedServing != null ? itemempProcee.OPODIsClosedServing.ToString() : "",
                                                            Fld25 = itemempProcee.PunishmentOrderDeliveryNarr != null ? itemempProcee.PunishmentOrderDeliveryNarr.ToString() : "",
                                                            Fld49 = itemempProcee.OPODIsNoticeRecd != null ? itemempProcee.OPODIsNoticeRecd.ToString() : "",
                                                            Fld50 = itemempProcee.OPODPunishmentOrderServingDate != null ? itemempProcee.OPODPunishmentOrderServingDate.Value.ToShortDateString() : "",
                                                            Fld51 = itemempProcee.OPODChargeSheetServingModeName != null ? itemempProcee.OPODChargeSheetServingModeName.ToString() : "",

                                                        };

                                                        if (comp)
                                                        {
                                                            OGenericObjStatement18.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                        }
                                                        if (div)
                                                        {
                                                            OGenericObjStatement18.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                        }
                                                        if (loca)
                                                        {
                                                            OGenericObjStatement18.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                        }
                                                        if (dept)
                                                        {
                                                            OGenericObjStatement18.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                        }
                                                        if (grp)
                                                        {
                                                            OGenericObjStatement18.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                        }
                                                        if (unit)
                                                        {
                                                            OGenericObjStatement18.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                        }
                                                        if (grade)
                                                        {
                                                            OGenericObjStatement18.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                        }
                                                        if (lvl)
                                                        {
                                                            OGenericObjStatement18.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                        }
                                                        if (jobstat)
                                                        {
                                                            OGenericObjStatement18.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                        }
                                                        if (job)
                                                        {
                                                            OGenericObjStatement18.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                        }
                                                        if (jobpos)
                                                        {
                                                            OGenericObjStatement18.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                        }
                                                        if (emp)
                                                        {
                                                            OGenericObjStatement18.Fld88 = ca.Emptable.EmpName.FullNameFML;
                                                        }
                                                        OGenericPayrollStatement.Add(OGenericObjStatement18);

                                                    }
                                                }
                                            }

                                            break;


                                        case "19":
                                            int stage19 = Convert.ToInt32(STAGEitem);
                                            //EmpDisciplineProcedings ST19Data = db.EmpDisciplineProcedings
                                            //        .Include(e => e.PunishmentOrderApeal)
                                            //        .Where(e => e.CaseNo == item.CaseNo && e.ProceedingStage == stage19).FirstOrDefault();

                                            var GetEmployeeIRPOA = db.EmployeeIR.Select(z => new
                                            {
                                                OEmployee_ID = z.Employee.Id,
                                                OOEmpDisciplineProcedings = z.EmpDisciplineProcedings.Select(p => new
                                                {
                                                    OProceedingStage = p.ProceedingStage,
                                                    OPCaseNo = p.CaseNo,

                                                    #region PunishmentOrderApeal Records__19
                                                    OPOAIsPunishmentOrderApealStudied = p.PunishmentOrderApeal.IsPunishmentOrderApealStudied.ToString(),
                                                    OPOAPunishmentOrderApealRecdDate = p.PunishmentOrderApeal.PunishmentOrderApealRecdDate,
                                                    OPOAPunishmentOrderApealDetails = p.PunishmentOrderApeal.PunishmentOrderApealDetails,
                                                    PunishmentOrderApealNarr = p.PunishmentOrderApeal.Narration,
                                                    #endregion

                                                }).Where(e => e.OProceedingStage == stage19 && e.OPCaseNo == GetCaseNUM).ToList(),

                                            }).Where(e => EmpPayrollIdList.Contains(e.OEmployee_ID)).ToList();

                                            foreach (var itemempIr in GetEmployeeIRPOA.Where(e => e.OOEmpDisciplineProcedings.Count() > 0))
                                            {
                                                foreach (var itemempProcee in itemempIr.OOEmpDisciplineProcedings)
                                                {
                                                    if (item != null)
                                                    {
                                                        GenericField100 OGenericObjStatement19 = new GenericField100
                                                        {
                                                            Fld100 = STAGEitem,
                                                            Fld1 = ca.Emptable.EmpCode,
                                                            Fld2 = ca.EmpName.FullNameFML,
                                                            Fld3 = GeoDataInd.FuncStruct_Job_Name,
                                                            Fld4 = item.CaseNumber != "" ? item.CaseNumber.ToString() : "",
                                                            Fld52 = itemempProcee.OPOAIsPunishmentOrderApealStudied != null ? itemempProcee.OPOAIsPunishmentOrderApealStudied.ToString() : "",
                                                            Fld53 = itemempProcee.OPOAPunishmentOrderApealRecdDate != null ? itemempProcee.OPOAPunishmentOrderApealRecdDate.Value.ToShortDateString() : "",
                                                            Fld54 = itemempProcee.OPOAPunishmentOrderApealDetails != null ? itemempProcee.OPOAPunishmentOrderApealDetails.ToString() : "",
                                                            Fld16 = itemempProcee.PunishmentOrderApealNarr != null ? itemempProcee.PunishmentOrderApealNarr.ToString() : "",

                                                        };

                                                        if (comp)
                                                        {
                                                            OGenericObjStatement19.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                        }
                                                        if (div)
                                                        {
                                                            OGenericObjStatement19.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                        }
                                                        if (loca)
                                                        {
                                                            OGenericObjStatement19.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                        }
                                                        if (dept)
                                                        {
                                                            OGenericObjStatement19.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                        }
                                                        if (grp)
                                                        {
                                                            OGenericObjStatement19.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                        }
                                                        if (unit)
                                                        {
                                                            OGenericObjStatement19.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                        }
                                                        if (grade)
                                                        {
                                                            OGenericObjStatement19.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                        }
                                                        if (lvl)
                                                        {
                                                            OGenericObjStatement19.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                        }
                                                        if (jobstat)
                                                        {
                                                            OGenericObjStatement19.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                        }
                                                        if (job)
                                                        {
                                                            OGenericObjStatement19.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                        }
                                                        if (jobpos)
                                                        {
                                                            OGenericObjStatement19.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                        }
                                                        if (emp)
                                                        {
                                                            OGenericObjStatement19.Fld88 = ca.Emptable.EmpName.FullNameFML;
                                                        }
                                                        OGenericPayrollStatement.Add(OGenericObjStatement19);

                                                    }
                                                }
                                            }

                                            break;


                                        case "20":
                                            int stage20 = Convert.ToInt32(STAGEitem);
                                            //EmpDisciplineProcedings ST20Data = db.EmpDisciplineProcedings
                                            //        .Include(e => e.PunishmentOrderApealReply)
                                            //        .Where(e => e.CaseNo == item.CaseNo && e.ProceedingStage == stage20).FirstOrDefault();

                                            var GetEmployeeIRPOAR = db.EmployeeIR.Select(z => new
                                            {
                                                OEmployee_ID = z.Employee.Id,
                                                OOEmpDisciplineProcedings = z.EmpDisciplineProcedings.Select(p => new
                                                {
                                                    OProceedingStage = p.ProceedingStage,
                                                    OPCaseNo = p.CaseNo,

                                                    #region PunishmentOrderApealReply Records__20
                                                    PunishmentOrderApealReplyNarr = p.PunishmentOrderApealReply.Narration,
                                                    OPOARPunishmentOrderApealReplyDetails = p.PunishmentOrderApealReply.PunishmentOrderApealReplyDetails,
                                                    OPOARPunishmentOrderApealReplyDate = p.PunishmentOrderApealReply.PunishmentOrderApealReplyDate,
                                                    #endregion


                                                }).Where(e => e.OProceedingStage == stage20 && e.OPCaseNo == GetCaseNUM).ToList(),

                                            }).Where(e => EmpPayrollIdList.Contains(e.OEmployee_ID)).ToList();

                                            foreach (var itemempIr in GetEmployeeIRPOAR.Where(e => e.OOEmpDisciplineProcedings.Count() > 0))
                                            {
                                                foreach (var itemempProcee in itemempIr.OOEmpDisciplineProcedings)
                                                {
                                                    if (item != null)
                                                    {
                                                        GenericField100 OGenericObjStatement20 = new GenericField100
                                                        {
                                                            Fld100 = STAGEitem,
                                                            Fld1 = ca.Emptable.EmpCode,
                                                            Fld2 = ca.EmpName.FullNameFML,
                                                            Fld3 = GeoDataInd.FuncStruct_Job_Name,
                                                            Fld4 = item.CaseNumber != "" ? item.CaseNumber.ToString() : "",
                                                            Fld15 = itemempProcee.PunishmentOrderApealReplyNarr != null ? itemempProcee.PunishmentOrderApealReplyNarr.ToString() : "",
                                                            Fld55 = itemempProcee.OPOARPunishmentOrderApealReplyDetails != null ? itemempProcee.OPOARPunishmentOrderApealReplyDetails.ToString() : "",
                                                            Fld56 = itemempProcee.OPOARPunishmentOrderApealReplyDate != null ? itemempProcee.OPOARPunishmentOrderApealReplyDate.Value.ToShortDateString() : "",
                                                        };

                                                        if (comp)
                                                        {
                                                            OGenericObjStatement20.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                        }
                                                        if (div)
                                                        {
                                                            OGenericObjStatement20.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                        }
                                                        if (loca)
                                                        {
                                                            OGenericObjStatement20.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                        }
                                                        if (dept)
                                                        {
                                                            OGenericObjStatement20.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                        }
                                                        if (grp)
                                                        {
                                                            OGenericObjStatement20.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                        }
                                                        if (unit)
                                                        {
                                                            OGenericObjStatement20.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                        }
                                                        if (grade)
                                                        {
                                                            OGenericObjStatement20.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                        }
                                                        if (lvl)
                                                        {
                                                            OGenericObjStatement20.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                        }
                                                        if (jobstat)
                                                        {
                                                            OGenericObjStatement20.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                        }
                                                        if (job)
                                                        {
                                                            OGenericObjStatement20.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                        }
                                                        if (jobpos)
                                                        {
                                                            OGenericObjStatement20.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                        }
                                                        if (emp)
                                                        {
                                                            OGenericObjStatement20.Fld88 = ca.Emptable.EmpName.FullNameFML;
                                                        }
                                                        OGenericPayrollStatement.Add(OGenericObjStatement20);

                                                    }
                                                }
                                            }

                                            break;


                                        case "21":
                                            int stage21 = Convert.ToInt32(STAGEitem);
                                            //EmpDisciplineProcedings ST21Data = db.EmpDisciplineProcedings
                                            //        .Include(e => e.PunishmentOrderImplementation)
                                            //        .Where(e => e.CaseNo == item.CaseNo && e.ProceedingStage == stage21).FirstOrDefault();
                                            var GetEmployeeIRPOI = db.EmployeeIR.Select(z => new
                                            {
                                                OEmployee_ID = z.Employee.Id,
                                                OOEmpDisciplineProcedings = z.EmpDisciplineProcedings.Select(p => new
                                                {
                                                    OProceedingStage = p.ProceedingStage,
                                                    OPCaseNo = p.CaseNo,

                                                    #region PunishmentOrderImplementation Records_21
                                                    OPOIIsInformedHR = p.PunishmentOrderImplementation.IsInformedHR.ToString(),
                                                    OPOIPunishmentOrderImplementationDate = p.PunishmentOrderImplementation.PunishmentOrderImplementationDate,
                                                    OPOIPunishmentOrderImplementationDetails = p.PunishmentOrderImplementation.PunishmentOrderImplementationDetails,
                                                    #endregion


                                                }).Where(e => e.OProceedingStage == stage21 && e.OPCaseNo == GetCaseNUM).ToList(),

                                            }).Where(e => EmpPayrollIdList.Contains(e.OEmployee_ID)).ToList();

                                            foreach (var itemempIr in GetEmployeeIRPOI.Where(e => e.OOEmpDisciplineProcedings.Count() > 0))
                                            {
                                                foreach (var itemempProcee in itemempIr.OOEmpDisciplineProcedings)
                                                {
                                                    if (item != null)
                                                    {
                                                        GenericField100 OGenericObjStatement21 = new GenericField100
                                                        {
                                                            Fld100 = STAGEitem,
                                                            Fld1 = ca.Emptable.EmpCode,
                                                            Fld2 = ca.EmpName.FullNameFML,
                                                            Fld3 = GeoDataInd.FuncStruct_Job_Name,
                                                            Fld4 = item.CaseNumber != "" ? item.CaseNumber.ToString() : "",
                                                            Fld57 = itemempProcee.OPOIIsInformedHR != null ? itemempProcee.OPOIIsInformedHR.ToString() : "",
                                                            Fld58 = itemempProcee.OPOIPunishmentOrderImplementationDate != null ? itemempProcee.OPOIPunishmentOrderImplementationDate.Value.ToShortDateString() : "",
                                                            Fld59 = itemempProcee.OPOIPunishmentOrderImplementationDetails != null ? itemempProcee.OPOIPunishmentOrderImplementationDetails.ToString() : "",

                                                        };

                                                        if (comp)
                                                        {
                                                            OGenericObjStatement21.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                        }
                                                        if (div)
                                                        {
                                                            OGenericObjStatement21.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                        }
                                                        if (loca)
                                                        {
                                                            OGenericObjStatement21.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                        }
                                                        if (dept)
                                                        {
                                                            OGenericObjStatement21.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                        }
                                                        if (grp)
                                                        {
                                                            OGenericObjStatement21.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                        }
                                                        if (unit)
                                                        {
                                                            OGenericObjStatement21.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                        }
                                                        if (grade)
                                                        {
                                                            OGenericObjStatement21.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                        }
                                                        if (lvl)
                                                        {
                                                            OGenericObjStatement21.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                        }
                                                        if (jobstat)
                                                        {
                                                            OGenericObjStatement21.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                        }
                                                        if (job)
                                                        {
                                                            OGenericObjStatement21.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                        }
                                                        if (jobpos)
                                                        {
                                                            OGenericObjStatement21.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                        }
                                                        if (emp)
                                                        {
                                                            OGenericObjStatement21.Fld88 = ca.Emptable.EmpName.FullNameFML;
                                                        }
                                                        OGenericPayrollStatement.Add(OGenericObjStatement21);

                                                    }
                                                }
                                            }

                                            break;



                                    #endregion


                                        // System.Web.HttpContext.Current.Session["SUB"] = SubRePortName;
                                        //var aaa = System.Web.HttpContext.Current.Session["dd"];
                                    }
                                #endregion

                                }

                                //return OGenericPayrollStatement;


                            }
                            return OGenericPayrollStatement;
                        }

                        break;


                    //************** Victims report StageWISE ***************//
                    case "IRVICTIMCASE":
                        var victimlists = EmpPayrollIdList.ToList();
                        //foreach (var vicitem in victimlist)
                        //{

                        //}
                        //var OEmpdisDetailss = db.EmployeeIR.Include(e => e.EmpDisciplineProcedings)
                        //    .Include(e => e.Employee)
                        //    .Include(e => e.Employee.EmpName)
                        //    .Include(e => e.Employee.PayStruct)
                        //    .Include(e => e.Employee.GeoStruct)
                        //    .Include(e => e.Employee.FuncStruct)
                        //    .Include(e => e.EmpDisciplineProcedings.Select(m => m.MisconductComplaint))
                        //    .Include(e => e.EmpDisciplineProcedings.Select(m => m.PreminaryEnquiry))
                        //    .Include(e => e.EmpDisciplineProcedings.Select(m => m.PreminaryEnquiryAction))
                        //    .Include(e => e.EmpDisciplineProcedings.Select(m => m.ChargeSheet))
                        //    .Include(e => e.EmpDisciplineProcedings.Select(m => m.ChargeSheetServing))
                        //    .Include(e => e.EmpDisciplineProcedings.Select(m => m.ChargeSheetReply))
                        //    .Include(e => e.EmpDisciplineProcedings.Select(m => m.ChargeSheetEnquiryNotice))
                        //    .Include(e => e.EmpDisciplineProcedings.Select(m => m.ChargeSheetEnquiryNoticeServing))
                        //    .Include(e => e.EmpDisciplineProcedings.Select(m => m.ChargeSheetEnquiryProceedings))
                        //    .Include(e => e.EmpDisciplineProcedings.Select(m => m.ChargeSheetEnquiryReport))
                        //    .Include(e => e.EmpDisciplineProcedings.Select(m => m.PostEnquiryPrerquisite))
                        //    .Include(e => e.EmpDisciplineProcedings.Select(m => m.FinalShowCauseNotice))
                        //    .Include(e => e.EmpDisciplineProcedings.Select(m => m.FinalShowCauseNoticeServing))
                        //    .Include(e => e.EmpDisciplineProcedings.Select(m => m.FinalShowCauseNoticeClarification))
                        //    .Include(e => e.EmpDisciplineProcedings.Select(m => m.FinalShowCauseNoticeClarificarionServing))
                        //    .Include(e => e.EmpDisciplineProcedings.Select(m => m.PunishmentOrder))
                        //    .Include(e => e.EmpDisciplineProcedings.Select(m => m.PunishmentOrderDelivery))
                        //    .Include(e => e.EmpDisciplineProcedings.Select(m => m.PunishmentOrderApeal))
                        //    .Include(e => e.EmpDisciplineProcedings.Select(m => m.PunishmentOrderApealReply))
                        //    .Include(e => e.EmpDisciplineProcedings.Select(m => m.PunishmentOrderImplementation))
                        //    .Where(e => EmpPayrollIdList.Contains(e.Employee.Id)).ToList();

                        var OEmpdisDetailss = db.EmployeeIR.Include(e => e.Employee).Where(e => EmpPayrollIdList.Contains(e.Employee.Id)).Select(d => new
                        {
                            OEmployee = d.Employee,
                            OEmpCode = d.Employee.EmpCode,
                            OEmpName = d.Employee.EmpName.FullNameFML,
                            GeoStructId = d.Employee.GeoStruct_Id,
                            PayStructId = d.Employee.PayStruct_Id,
                            FuncStructId = d.Employee.FuncStruct_Id,
                            OEmpDisciplineProcedings = d.EmpDisciplineProcedings.Select(r => new
                            {
                                OCaseNo = r.CaseNo,
                                OProceedingStage = r.ProceedingStage,
                                OMisconductComplaint = r.MisconductComplaint,
                                OPreminaryEnquiry = r.PreminaryEnquiry,
                                OPreminaryEnquiryAction = r.PreminaryEnquiryAction,
                                OChargeSheet = r.ChargeSheet,
                                OChargeSheetServing = r.ChargeSheetServing.ToList(),
                                OChargeSheetReply = r.ChargeSheetReply,
                                OChargeSheetEnquiryNotice = r.ChargeSheetEnquiryNotice,
                                OChargeSheetEnquiryNoticeServing = r.ChargeSheetEnquiryNoticeServing,
                                OChargeSheetEnquiryProceedings = r.ChargeSheetEnquiryProceedings,
                                OChargeSheetEnquiryReport = r.ChargeSheetEnquiryReport,
                                OPostEnquiryPrerquisite = r.PostEnquiryPrerquisite,
                                OFinalShowCauseNotice = r.FinalShowCauseNotice,
                                OFinalShowCauseNoticeServing = r.FinalShowCauseNoticeServing,
                                OFinalShowCauseNoticeClarification = r.FinalShowCauseNoticeClarification,
                                OFinalShowCauseNoticeClarificarionServing = r.FinalShowCauseNoticeClarificarionServing,
                                OPunishmentOrder = r.PunishmentOrder,
                                OPunishmentOrderDelivery = r.PunishmentOrderDelivery,
                                OPunishmentOrderApeal = r.PunishmentOrderApeal,
                                OPunishmentOrderApealReply = r.PunishmentOrderApealReply,
                                OPunishmentOrderImplementation = r.PunishmentOrderImplementation
                            }).ToList()

                        }).ToList();

                        if (OEmpdisDetailss == null || OEmpdisDetailss.Count == 0)
                        {
                            return null;
                        }
                        else
                        {

                            var month = false;
                            var emp = false;
                            var dept = false;
                            var loca = false;
                            var comp = false;
                            var grp = false;
                            var unit = false;
                            var div = false;
                            var regn = false;
                            var grade = false;
                            var lvl = false;
                            var jobstat = false;
                            var job = false;
                            var jobpos = false;

                            var vc = db.LookupValue.Where(a => forithead.Contains(a.Id.ToString())).ToList();

                            foreach (var item in vc)
                            {
                                if (item.LookupVal.ToUpper() == "MONTH")
                                {
                                    month = true;
                                }
                                if (item.LookupVal.ToUpper() == "LOCATION")
                                {

                                    loca = true;
                                }
                                if (item.LookupVal.ToUpper() == "EMPLOYEE")
                                {
                                    emp = true;
                                }
                                if (item.LookupVal.ToUpper() == "DEPARTMENT")
                                {
                                    dept = true;
                                }
                                if (item.LookupVal.ToUpper() == "COMPANY")
                                {
                                    comp = true;
                                }
                                if (item.LookupVal.ToUpper() == "GROUP")
                                {
                                    grp = true;
                                }
                                if (item.LookupVal.ToUpper() == "UNIT")
                                {
                                    unit = true;
                                }
                                if (item.LookupVal.ToUpper() == "DIVISION")
                                {
                                    div = true;
                                }
                                if (item.LookupVal.ToUpper() == "REGION")
                                {
                                    regn = true;
                                }
                                if (item.LookupVal.ToUpper() == "GRADE")
                                {
                                    grade = true;
                                }
                                if (item.LookupVal.ToUpper() == "LEVEL")
                                {
                                    lvl = true;
                                }
                                if (item.LookupVal.ToUpper() == "JOBSTATUS")
                                {
                                    jobstat = true;
                                }

                                if (item.LookupVal.ToUpper() == "JOB")
                                {
                                    job = true;
                                }
                                if (item.LookupVal.ToUpper() == "JOBPOSITION")
                                {
                                    jobpos = true;
                                }
                            }
                            //List<Utility.ReportClass> GeoData = new List<Utility.ReportClass>();
                            //List<Utility.ReportClass> Paydata = new List<Utility.ReportClass>();
                            //List<Utility.ReportClass> Funcdata = new List<Utility.ReportClass>();

                            //Utility.ReportClass GeoDataInd = new Utility.ReportClass();
                            //Utility.ReportClass PaydataInd = new Utility.ReportClass();
                            //Utility.ReportClass FuncdataInd = new Utility.ReportClass();

                            //GeoData = GetViewData(0);
                            //Paydata = GetViewData(1);
                            //Funcdata = GetViewData(2);

                            Utility.GetOrganizationDataClass GeoDataInd = new Utility.GetOrganizationDataClass();

                            foreach (var ca in OEmpdisDetailss)
                            {

                                int? geoid = ca.GeoStructId;

                                int? payid = ca.PayStructId;

                                int? funid = ca.FuncStructId;

                                GeoStruct geostruct = db.GeoStruct.Find(geoid);

                                PayStruct paystruct = db.PayStruct.Find(payid);

                                FuncStruct funstruct = db.FuncStruct.Find(funid);

                                GeoDataInd = ReportRDLCObjectClass.GetOrganizationDataInd(geostruct, paystruct, funstruct, 0);

                                if (salheadlist.Count() > 0)
                                {
                                    #region StageLIst
                                    foreach (var CASEitem in salheadlist)
                                    {
                                        string ST = Convert.ToString(CASEitem);
                                        foreach (var item in ca.OEmpDisciplineProcedings.Where(e => e.OCaseNo == ST))
                                        {
                                            var STAGEitem = item.OProceedingStage.ToString();
                                            //if (item.ProceedingStage == ST)
                                            //{

                                            #region switch Case Start
                                            switch (STAGEitem)
                                            {
                                                case "1":
                                                    int stage = Convert.ToInt32(STAGEitem);
                                                    EmpDisciplineProcedings ST1Data = db.EmpDisciplineProcedings
                                                            .Include(e => e.MisconductComplaint).Include(e => e.MisconductComplaint.OffenseObject)
                                                            .Include(e => e.MisconductComplaint).Include(e => e.MisconductComplaint.ComplaintApplicant)
                                                            .Include(e => e.MisconductComplaint).Include(e => e.MisconductComplaint.ComplaintApplicant.Employee)
                                                            .Include(e => e.MisconductComplaint).Include(e => e.MisconductComplaint.ComplaintApplicant.Employee.EmpName)
                                                            .Include(e => e.MisconductComplaint.OffenseObject.OffenceName).Where(e => e.CaseNo == item.OCaseNo && e.ProceedingStage == stage).FirstOrDefault();

                                                    if (ST1Data != null)
                                                    {
                                                        GenericField100 OGenericObjStatement1 = new GenericField100
                                                        {
                                                            Fld100 = STAGEitem,
                                                            Fld1 = ca.OEmpCode == null ? "" : ca.OEmpCode,
                                                            Fld2 = ca.OEmpName == null ? "" : ca.OEmpName,
                                                            Fld3 = GeoDataInd == null ? "" : GeoDataInd.FuncStruct_Job_Name,
                                                            Fld4 = item.OCaseNo != "" ? item.OCaseNo.ToString() : "",
                                                            Fld5 = ST1Data.MisconductComplaint != null && ST1Data.MisconductComplaint.ComplaintNo != "" ? ST1Data.MisconductComplaint.ComplaintNo.ToString() : "",
                                                            Fld6 = ST1Data.MisconductComplaint != null && ST1Data.MisconductComplaint.ComplaintDate != null ? ST1Data.MisconductComplaint.ComplaintDate.Value.ToShortDateString() : "",
                                                            Fld7 = ST1Data.MisconductComplaint != null && ST1Data.MisconductComplaint.OffenseObject != null ? ST1Data.MisconductComplaint.OffenseObject.OffenceName.LookupVal.ToString() : "",
                                                            Fld9 = ST1Data.MisconductComplaint != null && ST1Data.MisconductComplaint.ComplaintApplicant != null && ST1Data.MisconductComplaint.ComplaintApplicant.Employee != null ? ST1Data.MisconductComplaint.ComplaintApplicant.Employee.EmpName.FullNameFML.ToString() : "",
                                                            Fld10 = ST1Data.MisconductComplaint != null ? ST1Data.MisconductComplaint.Narration.ToString() : "",

                                                            //Fld61 = "Complaint No: ",
                                                            //Fld62 = "Offense Name: ",


                                                        };

                                                        //GenericField100 OGenericmisconduct = new GenericField100
                                                        //{
                                                        //    Fld100 = STAGEitem,

                                                        //    Fld5 = ST1Data.MisconductComplaint != null && ST1Data.MisconductComplaint.ComplaintNo != "" ? ST1Data.MisconductComplaint.ComplaintNo.ToString() : "",
                                                        //    Fld6 = ST1Data.MisconductComplaint != null && ST1Data.MisconductComplaint.ComplaintDate != null ? ST1Data.MisconductComplaint.ComplaintDate.Value.ToShortDateString() : "",
                                                        //    Fld7 = ST1Data.MisconductComplaint != null && ST1Data.MisconductComplaint.OffenseObject != null ? ST1Data.MisconductComplaint.OffenseObject.OffenceName.ToString() : "",

                                                        //};

                                                        if (comp)
                                                        {
                                                            OGenericObjStatement1.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                        }
                                                        if (div)
                                                        {
                                                            OGenericObjStatement1.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                        }
                                                        if (loca)
                                                        {
                                                            OGenericObjStatement1.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                        }
                                                        if (dept)
                                                        {
                                                            OGenericObjStatement1.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                        }
                                                        if (grp)
                                                        {
                                                            OGenericObjStatement1.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                        }
                                                        if (unit)
                                                        {
                                                            OGenericObjStatement1.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                        }
                                                        if (grade)
                                                        {
                                                            OGenericObjStatement1.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                        }
                                                        if (lvl)
                                                        {
                                                            OGenericObjStatement1.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                        }
                                                        if (jobstat)
                                                        {
                                                            OGenericObjStatement1.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                        }
                                                        if (job)
                                                        {
                                                            OGenericObjStatement1.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                        }
                                                        if (jobpos)
                                                        {
                                                            OGenericObjStatement1.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                        }
                                                        if (emp)
                                                        {
                                                            OGenericObjStatement1.Fld88 = ca.OEmpName;
                                                        }
                                                        OGenericPayrollStatement.Add(OGenericObjStatement1);

                                                        //OGenericPayrollStatement.Add(OGenericmisconduct);


                                                    }

                                                    break;

                                                case "2":
                                                    int stage2 = Convert.ToInt32(STAGEitem);
                                                    EmpDisciplineProcedings ST2Data = db.EmpDisciplineProcedings
                                                            .Include(e => e.PreminaryEnquiry).Include(e => e.PreminaryEnquiry.EnquiryPanel)
                                                            .Where(e => e.CaseNo == item.OCaseNo && e.ProceedingStage == stage2).FirstOrDefault();

                                                    if (ST2Data != null)
                                                    {
                                                        GenericField100 OGenericObjStatement2 = new GenericField100
                                                        {
                                                            Fld100 = STAGEitem,
                                                            Fld1 = ca.OEmpCode == null ? "" : ca.OEmpCode,
                                                            Fld2 = ca.OEmpName == null ? "" : ca.OEmpName,
                                                            Fld3 = GeoDataInd == null ? "" : GeoDataInd.FuncStruct_Job_Name,
                                                            Fld4 = item.OCaseNo != "" ? item.OCaseNo.ToString() : "",
                                                            Fld8 = ST2Data.PreminaryEnquiry != null && ST2Data.PreminaryEnquiry.EnquiryPanelRecommendation != "" ? ST2Data.PreminaryEnquiry.EnquiryPanelRecommendation.ToString() : "",
                                                            Fld9 = ST2Data.PreminaryEnquiry != null && ST2Data.PreminaryEnquiry.CaseEnquiryDate != null ? ST2Data.PreminaryEnquiry.CaseEnquiryDate.Value.ToShortDateString() : "",
                                                            Fld10 = ST2Data.PreminaryEnquiry != null && ST2Data.PreminaryEnquiry.EnquiryPanel != null ? ST2Data.PreminaryEnquiry.EnquiryPanel.PanelName.ToString() : "",
                                                            Fld11 = ST2Data.PreminaryEnquiry != null ? ST2Data.PreminaryEnquiry.Narration.ToString() : "",

                                                            //Fld64 = "CaseEnquiry Date: ",

                                                        };

                                                        //GenericField100 OGenericpreliminaryEnquiry = new GenericField100
                                                        //{
                                                        //    Fld100 = STAGEitem,

                                                        //    Fld1 = ST2Data.PreminaryEnquiry != null && ST2Data.PreminaryEnquiry.EnquiryPanelRecommendation != "" ? ST2Data.PreminaryEnquiry.EnquiryPanelRecommendation.ToString() : "",
                                                        //    Fld2 = ST2Data.PreminaryEnquiry != null && ST2Data.PreminaryEnquiry.CaseEnquiryDate != null ? ST2Data.PreminaryEnquiry.CaseEnquiryDate.Value.ToShortDateString() : "",


                                                        //};

                                                        if (comp)
                                                        {
                                                            OGenericObjStatement2.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                        }
                                                        if (div)
                                                        {
                                                            OGenericObjStatement2.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                        }
                                                        if (loca)
                                                        {
                                                            OGenericObjStatement2.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                        }
                                                        if (dept)
                                                        {
                                                            OGenericObjStatement2.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                        }
                                                        if (grp)
                                                        {
                                                            OGenericObjStatement2.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                        }
                                                        if (unit)
                                                        {
                                                            OGenericObjStatement2.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                        }
                                                        if (grade)
                                                        {
                                                            OGenericObjStatement2.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                        }
                                                        if (lvl)
                                                        {
                                                            OGenericObjStatement2.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                        }
                                                        if (jobstat)
                                                        {
                                                            OGenericObjStatement2.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                        }
                                                        if (job)
                                                        {
                                                            OGenericObjStatement2.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                        }
                                                        if (jobpos)
                                                        {
                                                            OGenericObjStatement2.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                        }
                                                        if (emp)
                                                        {
                                                            OGenericObjStatement2.Fld88 = ca.OEmpName;
                                                        }

                                                        OGenericPayrollStatement.Add(OGenericObjStatement2);

                                                        // OGenericPayrollStatement.Add(OGenericpreliminaryEnquiry);

                                                        //return OGenericPayrollStatement;
                                                    }

                                                    break;

                                                case "3":
                                                    int stage3 = Convert.ToInt32(STAGEitem);
                                                    EmpDisciplineProcedings ST3Data = db.EmpDisciplineProcedings
                                                            .Include(e => e.PreminaryEnquiryAction).Include(e => e.PreminaryEnquiryAction.EnquiryPanel)
                                                            .Where(e => e.CaseNo == item.OCaseNo && e.ProceedingStage == stage3).FirstOrDefault();

                                                    if (ST3Data != null)
                                                    {
                                                        GenericField100 OGenericObjStatement3 = new GenericField100
                                                        {
                                                            Fld100 = STAGEitem,
                                                            Fld1 = ca.OEmpCode == null ? "" : ca.OEmpCode,
                                                            Fld2 = ca.OEmpName == null ? "" : ca.OEmpName,
                                                            Fld3 = GeoDataInd == null ? "" : GeoDataInd.FuncStruct_Job_Name,
                                                            Fld4 = item.OCaseNo != "" ? item.OCaseNo.ToString() : "",
                                                            Fld10 = ST3Data.PreminaryEnquiryAction != null ? ST3Data.PreminaryEnquiryAction.IsSuspendEmp.ToString() : "",
                                                            Fld11 = ST3Data.PreminaryEnquiryAction != null && ST3Data.PreminaryEnquiryAction.SuspensionDate != null ? ST3Data.PreminaryEnquiryAction.SuspensionDate.Value.ToShortDateString() : "",
                                                            Fld12 = ST3Data.PreminaryEnquiryAction != null ? ST3Data.PreminaryEnquiryAction.IsNotifyHRDept.ToString() : "",
                                                            Fld13 = ST3Data.PreminaryEnquiryAction != null && ST3Data.PreminaryEnquiryAction.PreminaryEnquiryActionDate != null ? ST3Data.PreminaryEnquiryAction.PreminaryEnquiryActionDate.Value.ToShortDateString() : "",
                                                            Fld14 = ST3Data.PreminaryEnquiryAction != null ? ST3Data.PreminaryEnquiryAction.Narration.ToString() : "",

                                                            //Fld66 = "Employee SuspensionDate: ",

                                                        };

                                                        if (comp)
                                                        {
                                                            OGenericObjStatement3.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                        }
                                                        if (div)
                                                        {
                                                            OGenericObjStatement3.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                        }
                                                        if (loca)
                                                        {
                                                            OGenericObjStatement3.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                        }
                                                        if (dept)
                                                        {
                                                            OGenericObjStatement3.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                        }
                                                        if (grp)
                                                        {
                                                            OGenericObjStatement3.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                        }
                                                        if (unit)
                                                        {
                                                            OGenericObjStatement3.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                        }
                                                        if (grade)
                                                        {
                                                            OGenericObjStatement3.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                        }
                                                        if (lvl)
                                                        {
                                                            OGenericObjStatement3.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                        }
                                                        if (jobstat)
                                                        {
                                                            OGenericObjStatement3.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                        }
                                                        if (job)
                                                        {
                                                            OGenericObjStatement3.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                        }
                                                        if (jobpos)
                                                        {
                                                            OGenericObjStatement3.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                        }
                                                        if (emp)
                                                        {
                                                            OGenericObjStatement3.Fld88 = ca.OEmpName;
                                                        }

                                                        OGenericPayrollStatement.Add(OGenericObjStatement3);

                                                        // return OGenericPayrollStatement;
                                                    }

                                                    break;


                                                case "4":
                                                    int stage4 = Convert.ToInt32(STAGEitem);
                                                    EmpDisciplineProcedings ST4Data = db.EmpDisciplineProcedings
                                                            .Include(e => e.ChargeSheet)
                                                            .Where(e => e.CaseNo == item.OCaseNo && e.ProceedingStage == stage4).FirstOrDefault();

                                                    if (ST4Data != null)
                                                    {
                                                        GenericField100 OGenericObjStatement4 = new GenericField100
                                                        {
                                                            Fld100 = STAGEitem,
                                                            Fld1 = ca.OEmpCode == null ? "" : ca.OEmpCode,
                                                            Fld2 = ca.OEmpName == null ? "" : ca.OEmpName,
                                                            Fld3 = GeoDataInd == null ? "" : GeoDataInd.FuncStruct_Job_Name,
                                                            Fld4 = item.OCaseNo != "" ? item.OCaseNo.ToString() : "",
                                                            Fld12 = ST4Data.ChargeSheet != null && ST4Data.ChargeSheet.FullDetails != "" ? ST4Data.ChargeSheet.FullDetails.ToString() : "",
                                                            Fld13 = ST4Data.ChargeSheet != null && ST4Data.ChargeSheet.ChargeSheetDetails != null ? ST4Data.ChargeSheet.ChargeSheetDetails.ToString() : "",
                                                            Fld14 = ST4Data.ChargeSheet != null ? ST4Data.ChargeSheet.ChargeSheetNo.ToString() : "",
                                                            Fld15 = ST4Data.ChargeSheet != null ? ST4Data.ChargeSheet.ChargeSheetDate.Value.ToShortDateString() : "",
                                                            Fld16 = ST4Data.ChargeSheet != null ? ST4Data.ChargeSheet.Narration.ToString() : "",

                                                            //Fld68 = "Chargesheet: ",
                                                        };

                                                        if (comp)
                                                        {
                                                            OGenericObjStatement4.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                        }
                                                        if (div)
                                                        {
                                                            OGenericObjStatement4.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                        }
                                                        if (loca)
                                                        {
                                                            OGenericObjStatement4.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                        }
                                                        if (dept)
                                                        {
                                                            OGenericObjStatement4.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                        }
                                                        if (grp)
                                                        {
                                                            OGenericObjStatement4.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                        }
                                                        if (unit)
                                                        {
                                                            OGenericObjStatement4.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                        }
                                                        if (grade)
                                                        {
                                                            OGenericObjStatement4.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                        }
                                                        if (lvl)
                                                        {
                                                            OGenericObjStatement4.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                        }
                                                        if (jobstat)
                                                        {
                                                            OGenericObjStatement4.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                        }
                                                        if (job)
                                                        {
                                                            OGenericObjStatement4.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                        }
                                                        if (jobpos)
                                                        {
                                                            OGenericObjStatement4.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                        }
                                                        if (emp)
                                                        {
                                                            OGenericObjStatement4.Fld88 = ca.OEmpName;
                                                        }


                                                        OGenericPayrollStatement.Add(OGenericObjStatement4);

                                                        // return OGenericPayrollStatement;
                                                    }

                                                    break;


                                                case "5":

                                                    int stage5 = Convert.ToInt32(STAGEitem);
                                                    EmpDisciplineProcedings ST5Data = db.EmpDisciplineProcedings
                                                            .Include(e => e.ChargeSheetServing).Include(e => e.ChargeSheetServing.Select(m => m.ChargeSheetServingMode))
                                                            .Include(e => e.ChargeSheetServing.Select(m => m.ChargeSheetServingMode.ChargeSheetServingModeName))
                                                            .Where(e => e.CaseNo == item.OCaseNo && e.ProceedingStage == stage5).FirstOrDefault();

                                                    if (ST5Data != null)
                                                    {
                                                        foreach (var cservingitem in ST5Data.ChargeSheetServing)
                                                        {
                                                            var cservingDate = cservingitem.ChargeSheetServingDate.Value.ToShortDateString();
                                                            var cservingModename = cservingitem.ChargeSheetServingMode.ChargeSheetServingModeName.LookupVal.ToString();

                                                            GenericField100 OGenericObjStatement5 = new GenericField100
                                                            {
                                                                Fld100 = STAGEitem,
                                                                Fld1 = ca.OEmpCode == null ? "" : ca.OEmpCode,
                                                                Fld2 = ca.OEmpName == null ? "" : ca.OEmpName,
                                                                Fld3 = GeoDataInd == null ? "" : GeoDataInd.FuncStruct_Job_Name,
                                                                Fld4 = item.OCaseNo != "" ? item.OCaseNo.ToString() : "",
                                                                Fld14 = cservingDate != null ? cservingDate : null,
                                                                Fld15 = cservingModename != null ? cservingModename : "",
                                                                Fld16 = cservingitem != null ? cservingitem.IsWitnessReqd.ToString() : "",
                                                                Fld17 = cservingitem != null ? cservingitem.IsClosedServing.ToString() : "",
                                                                Fld18 = cservingitem != null ? cservingitem.Narration.ToString() : "",

                                                                //Fld69 = "ChargesheetServing Date: ",
                                                                //Fld70 = "ChargesheetServingmode name: ",
                                                            };

                                                            if (comp)
                                                            {
                                                                OGenericObjStatement5.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                            }
                                                            if (div)
                                                            {
                                                                OGenericObjStatement5.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                            }
                                                            if (loca)
                                                            {
                                                                OGenericObjStatement5.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                            }
                                                            if (dept)
                                                            {
                                                                OGenericObjStatement5.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                            }
                                                            if (grp)
                                                            {
                                                                OGenericObjStatement5.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                            }
                                                            if (unit)
                                                            {
                                                                OGenericObjStatement5.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                            }
                                                            if (grade)
                                                            {
                                                                OGenericObjStatement5.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                            }
                                                            if (lvl)
                                                            {
                                                                OGenericObjStatement5.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                            }
                                                            if (jobstat)
                                                            {
                                                                OGenericObjStatement5.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                            }
                                                            if (job)
                                                            {
                                                                OGenericObjStatement5.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                            }
                                                            if (jobpos)
                                                            {
                                                                OGenericObjStatement5.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                            }
                                                            if (emp)
                                                            {
                                                                OGenericObjStatement5.Fld88 = ca.OEmpName;
                                                            }


                                                            OGenericPayrollStatement.Add(OGenericObjStatement5);

                                                            //return OGenericPayrollStatement;
                                                        }
                                                    }

                                                    break;


                                                case "6":

                                                    int stage6 = Convert.ToInt32(STAGEitem);
                                                    EmpDisciplineProcedings ST6Data = db.EmpDisciplineProcedings
                                                            .Include(e => e.ChargeSheetReply)
                                                            .Where(e => e.CaseNo == item.OCaseNo && e.ProceedingStage == stage6).FirstOrDefault();

                                                    if (ST6Data != null)
                                                    {
                                                        GenericField100 OGenericObjStatement6 = new GenericField100
                                                        {
                                                            Fld100 = STAGEitem,
                                                            Fld1 = ca.OEmpCode == null ? "" : ca.OEmpCode,
                                                            Fld2 = ca.OEmpName == null ? "" : ca.OEmpName,
                                                            Fld3 = GeoDataInd == null ? "" : GeoDataInd.FuncStruct_Job_Name,
                                                            Fld4 = item.OCaseNo != "" ? item.OCaseNo.ToString() : "",
                                                            Fld16 = ST6Data.ChargeSheetReply != null && ST6Data.ChargeSheetReply.PunishmentDetails != "" ? ST6Data.ChargeSheetReply.PunishmentDetails.ToString() : "",
                                                            Fld17 = ST6Data.ChargeSheetReply != null && ST6Data.ChargeSheetReply.ReplyDate != null ? ST6Data.ChargeSheetReply.ReplyDate.Value.ToShortDateString() : "",
                                                            Fld18 = ST6Data.ChargeSheetReply != null ? ST6Data.ChargeSheetReply.IsPleadGuilty.ToString() : "",
                                                            Fld19 = ST6Data.ChargeSheetReply != null ? ST6Data.ChargeSheetReply.IsDropChargeSheet.ToString() : "",
                                                            Fld20 = ST6Data.ChargeSheetReply != null ? ST6Data.ChargeSheetReply.IsReplySatisfactory.ToString() : "",
                                                            Fld21 = ST6Data.ChargeSheetReply != null ? ST6Data.ChargeSheetReply.Narration.ToString() : "",

                                                            //Fld71 = "ChargesheetReply Date: ",
                                                            //Fld72 = "ChargesheetReply Date: ",
                                                            //Fld73 = "IsPleadGuilty: ",
                                                        };

                                                        if (comp)
                                                        {
                                                            OGenericObjStatement6.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                        }
                                                        if (div)
                                                        {
                                                            OGenericObjStatement6.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                        }
                                                        if (loca)
                                                        {
                                                            OGenericObjStatement6.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                        }
                                                        if (dept)
                                                        {
                                                            OGenericObjStatement6.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                        }
                                                        if (grp)
                                                        {
                                                            OGenericObjStatement6.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                        }
                                                        if (unit)
                                                        {
                                                            OGenericObjStatement6.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                        }
                                                        if (grade)
                                                        {
                                                            OGenericObjStatement6.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                        }
                                                        if (lvl)
                                                        {
                                                            OGenericObjStatement6.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                        }
                                                        if (jobstat)
                                                        {
                                                            OGenericObjStatement6.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                        }
                                                        if (job)
                                                        {
                                                            OGenericObjStatement6.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                        }
                                                        if (jobpos)
                                                        {
                                                            OGenericObjStatement6.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                        }
                                                        if (emp)
                                                        {
                                                            OGenericObjStatement6.Fld88 = ca.OEmpName;
                                                        }

                                                        OGenericPayrollStatement.Add(OGenericObjStatement6);

                                                        // return OGenericPayrollStatement;
                                                    }

                                                    break;


                                                case "7":

                                                    int stage7 = Convert.ToInt32(STAGEitem);
                                                    EmpDisciplineProcedings ST7Data = db.EmpDisciplineProcedings
                                                            .Include(e => e.ChargeSheetEnquiryNotice).Include(e => e.ChargeSheetEnquiryNotice.EnquiryPanel)
                                                            .Include(e => e.ChargeSheetEnquiryNotice.Witness)
                                                            .Include(e => e.ChargeSheetEnquiryNotice.EnquiryAddress)
                                                            .Where(e => e.CaseNo == item.OCaseNo && e.ProceedingStage == stage7).FirstOrDefault();

                                                    if (ST7Data != null)
                                                    {
                                                        GenericField100 OGenericObjStatement7 = new GenericField100
                                                        {
                                                            Fld100 = STAGEitem,
                                                            Fld1 = ca.OEmpCode == null ? "" : ca.OEmpCode,
                                                            Fld2 = ca.OEmpName == null ? "" : ca.OEmpName,
                                                            Fld3 = GeoDataInd == null ? "" : GeoDataInd.FuncStruct_Job_Name,
                                                            Fld4 = item.OCaseNo != "" ? item.OCaseNo.ToString() : "",
                                                            Fld19 = ST7Data.ChargeSheetEnquiryNotice != null ? ST7Data.ChargeSheetEnquiryNotice.EnquiryPlace.ToString() : "",
                                                            Fld20 = ST7Data.ChargeSheetEnquiryNotice != null && ST7Data.ChargeSheetEnquiryNotice.EnquiryScheduleDate != null ? ST7Data.ChargeSheetEnquiryNotice.EnquiryScheduleDate.Value.ToShortDateString() : "",
                                                            Fld21 = ST7Data.ChargeSheetEnquiryNotice != null ? ST7Data.ChargeSheetEnquiryNotice.EnquiryNoticeNo.ToString() : "",
                                                            Fld22 = ST7Data.ChargeSheetEnquiryNotice != null && ST7Data.ChargeSheetEnquiryNotice.EnquiryAddress != null ? ST7Data.ChargeSheetEnquiryNotice.EnquiryAddress.FullAddress.ToString() : "",

                                                            //Fld74 = "EnquirySchedule Date: ",
                                                            //Fld75 = "EnquiryPlace: ",
                                                            //Fld76 = "EnquiryNotice No: ",
                                                            //Fld77 = "EnquiryAddress: ",
                                                        };

                                                        if (comp)
                                                        {
                                                            OGenericObjStatement7.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                        }
                                                        if (div)
                                                        {
                                                            OGenericObjStatement7.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                        }
                                                        if (loca)
                                                        {
                                                            OGenericObjStatement7.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                        }
                                                        if (dept)
                                                        {
                                                            OGenericObjStatement7.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                        }
                                                        if (grp)
                                                        {
                                                            OGenericObjStatement7.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                        }
                                                        if (unit)
                                                        {
                                                            OGenericObjStatement7.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                        }
                                                        if (grade)
                                                        {
                                                            OGenericObjStatement7.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                        }
                                                        if (lvl)
                                                        {
                                                            OGenericObjStatement7.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                        }
                                                        if (jobstat)
                                                        {
                                                            OGenericObjStatement7.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                        }
                                                        if (job)
                                                        {
                                                            OGenericObjStatement7.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                        }
                                                        if (jobpos)
                                                        {
                                                            OGenericObjStatement7.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                        }
                                                        if (emp)
                                                        {
                                                            OGenericObjStatement7.Fld88 = ca.OEmpName;
                                                        }

                                                        OGenericPayrollStatement.Add(OGenericObjStatement7);

                                                        //return OGenericPayrollStatement;
                                                    }

                                                    break;


                                                case "8":
                                                    int stage8 = Convert.ToInt32(STAGEitem);
                                                    EmpDisciplineProcedings ST8Data = db.EmpDisciplineProcedings
                                                            .Include(e => e.ChargeSheetEnquiryNoticeServing).Include(e => e.ChargeSheetEnquiryNoticeServing.Witness)
                                                            .Include(e => e.ChargeSheetEnquiryNoticeServing.ChargeSheetServingMode)
                                                            .Where(e => e.CaseNo == item.OCaseNo && e.ProceedingStage == stage8).FirstOrDefault();

                                                    if (ST8Data != null)
                                                    {
                                                        GenericField100 OGenericObjStatement8 = new GenericField100
                                                        {
                                                            Fld100 = STAGEitem,
                                                            Fld1 = ca.OEmpCode == null ? "" : ca.OEmpCode,
                                                            Fld2 = ca.OEmpName == null ? "" : ca.OEmpName,
                                                            Fld3 = GeoDataInd == null ? "" : GeoDataInd.FuncStruct_Job_Name,
                                                            Fld4 = item.OCaseNo != "" ? item.OCaseNo.ToString() : "",
                                                            Fld19 = ST8Data.ChargeSheetEnquiryNoticeServing != null ? ST8Data.ChargeSheetEnquiryNoticeServing.IsWitnessReqd.ToString() : "",
                                                            Fld20 = ST8Data.ChargeSheetEnquiryNoticeServing != null ? ST8Data.ChargeSheetEnquiryNoticeServing.IsClosedServing.ToString() : "",
                                                            Fld21 = ST8Data.ChargeSheetEnquiryNoticeServing != null ? ST8Data.ChargeSheetEnquiryNoticeServing.Narration.ToString() : "",
                                                            Fld23 = ST8Data.ChargeSheetEnquiryNoticeServing != null ? ST8Data.ChargeSheetEnquiryNoticeServing.IsChargeSheetRecd.ToString() : "",
                                                            Fld24 = ST8Data.ChargeSheetEnquiryNoticeServing != null && ST8Data.ChargeSheetEnquiryNoticeServing.EnquiryNoticeServingDate != null ? ST8Data.ChargeSheetEnquiryNoticeServing.EnquiryNoticeServingDate.Value.ToShortDateString() : "",

                                                            //Fld78 = "IsChargeSheetRecd: ",
                                                            //Fld79 = "EnquiryNoticeServing Date: ",
                                                        };

                                                        if (comp)
                                                        {
                                                            OGenericObjStatement8.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                        }
                                                        if (div)
                                                        {
                                                            OGenericObjStatement8.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                        }
                                                        if (loca)
                                                        {
                                                            OGenericObjStatement8.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                        }
                                                        if (dept)
                                                        {
                                                            OGenericObjStatement8.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                        }
                                                        if (grp)
                                                        {
                                                            OGenericObjStatement8.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                        }
                                                        if (unit)
                                                        {
                                                            OGenericObjStatement8.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                        }
                                                        if (grade)
                                                        {
                                                            OGenericObjStatement8.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                        }
                                                        if (lvl)
                                                        {
                                                            OGenericObjStatement8.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                        }
                                                        if (jobstat)
                                                        {
                                                            OGenericObjStatement8.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                        }
                                                        if (job)
                                                        {
                                                            OGenericObjStatement8.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                        }
                                                        if (jobpos)
                                                        {
                                                            OGenericObjStatement8.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                        }
                                                        if (emp)
                                                        {
                                                            OGenericObjStatement8.Fld88 = ca.OEmpName;
                                                        }

                                                        OGenericPayrollStatement.Add(OGenericObjStatement8);

                                                        // // return OGenericPayrollStatement;
                                                    }

                                                    break;


                                                case "9":
                                                    int stage9 = Convert.ToInt32(STAGEitem);
                                                    EmpDisciplineProcedings ST9Data = db.EmpDisciplineProcedings
                                                            .Include(e => e.ChargeSheetEnquiryProceedings).Include(e => e.ChargeSheetEnquiryProceedings.WitnessPresent)
                                                            .Include(e => e.ChargeSheetEnquiryProceedings.EnquiryPanelPresent)
                                                            .Where(e => e.CaseNo == item.OCaseNo && e.ProceedingStage == stage9).FirstOrDefault();

                                                    if (ST9Data != null)
                                                    {
                                                        GenericField100 OGenericObjStatement9 = new GenericField100
                                                        {
                                                            Fld100 = STAGEitem,
                                                            Fld1 = ca.OEmpCode == null ? "" : ca.OEmpCode,
                                                            Fld2 = ca.OEmpName == null ? "" : ca.OEmpName,
                                                            Fld3 = GeoDataInd == null ? "" : GeoDataInd.FuncStruct_Job_Name,
                                                            Fld4 = item.OCaseNo != "" ? item.OCaseNo.ToString() : "",
                                                            Fld19 = ST9Data.ChargeSheetEnquiryProceedings != null ? ST9Data.ChargeSheetEnquiryProceedings.Narration.ToString() : "",
                                                            Fld25 = ST9Data.ChargeSheetEnquiryProceedings != null ? ST9Data.ChargeSheetEnquiryProceedings.IsEnquiryOver.ToString() : "",
                                                            Fld26 = ST9Data.ChargeSheetEnquiryProceedings != null && ST9Data.ChargeSheetEnquiryProceedings.EnquiryProceedingDate != null ? ST9Data.ChargeSheetEnquiryProceedings.EnquiryProceedingDate.Value.ToShortDateString() : "",
                                                            Fld20 = ST9Data.ChargeSheetEnquiryProceedings != null && ST9Data.ChargeSheetEnquiryProceedings.EnquiryProceedingDate != null ? ST9Data.ChargeSheetEnquiryProceedings.EnquiryProceedingTime.Value.ToShortTimeString() : "",
                                                            Fld27 = ST9Data.ChargeSheetEnquiryProceedings != null ? ST9Data.ChargeSheetEnquiryProceedings.IsEmpReport.ToString() : "",

                                                            //Fld80 = "IsEnquiryOver: ",
                                                            //Fld81 = "EnquiryProceeding Date: ",
                                                            //Fld82 = "IsEmployee Report: ",

                                                        };

                                                        if (comp)
                                                        {
                                                            OGenericObjStatement9.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                        }
                                                        if (div)
                                                        {
                                                            OGenericObjStatement9.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                        }
                                                        if (loca)
                                                        {
                                                            OGenericObjStatement9.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                        }
                                                        if (dept)
                                                        {
                                                            OGenericObjStatement9.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                        }
                                                        if (grp)
                                                        {
                                                            OGenericObjStatement9.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                        }
                                                        if (unit)
                                                        {
                                                            OGenericObjStatement9.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                        }
                                                        if (grade)
                                                        {
                                                            OGenericObjStatement9.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                        }
                                                        if (lvl)
                                                        {
                                                            OGenericObjStatement9.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                        }
                                                        if (jobstat)
                                                        {
                                                            OGenericObjStatement9.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                        }
                                                        if (job)
                                                        {
                                                            OGenericObjStatement9.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                        }
                                                        if (jobpos)
                                                        {
                                                            OGenericObjStatement9.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                        }
                                                        if (emp)
                                                        {
                                                            OGenericObjStatement9.Fld88 = ca.OEmpName;
                                                        }

                                                        OGenericPayrollStatement.Add(OGenericObjStatement9);

                                                        // return OGenericPayrollStatement;
                                                    }

                                                    break;


                                                case "10":
                                                    int stage10 = Convert.ToInt32(STAGEitem);
                                                    EmpDisciplineProcedings ST10Data = db.EmpDisciplineProcedings
                                                            .Include(e => e.ChargeSheetEnquiryReport)
                                                            .Where(e => e.CaseNo == item.OCaseNo && e.ProceedingStage == stage10).FirstOrDefault();

                                                    if (ST10Data != null)
                                                    {
                                                        GenericField100 OGenericObjStatement10 = new GenericField100
                                                        {
                                                            Fld100 = STAGEitem,
                                                            Fld1 = ca.OEmpCode == null ? "" : ca.OEmpCode,
                                                            Fld2 = ca.OEmpName == null ? "" : ca.OEmpName,
                                                            Fld3 = GeoDataInd == null ? "" : GeoDataInd.FuncStruct_Job_Name,
                                                            Fld4 = item.OCaseNo != "" ? item.OCaseNo.ToString() : "",
                                                            Fld22 = ST10Data.ChargeSheetEnquiryReport != null ? ST10Data.ChargeSheetEnquiryReport.EnquiryReportDetails.ToString() : "",
                                                            Fld23 = ST10Data.ChargeSheetEnquiryReport != null ? ST10Data.ChargeSheetEnquiryReport.IsCloseCase.ToString() : "",
                                                            Fld24 = ST10Data.ChargeSheetEnquiryReport != null && ST10Data.ChargeSheetEnquiryReport.SuspensionRevokeDate != null ? ST10Data.ChargeSheetEnquiryReport.SuspensionRevokeDate.Value.ToShortDateString() : "",
                                                            Fld28 = ST10Data.ChargeSheetEnquiryReport != null ? ST10Data.ChargeSheetEnquiryReport.IsEmpGuilty.ToString() : "",
                                                            Fld29 = ST10Data.ChargeSheetEnquiryReport != null && ST10Data.ChargeSheetEnquiryReport.ReportSubmissionDate != null ? ST10Data.ChargeSheetEnquiryReport.ReportSubmissionDate.Value.ToShortDateString() : "",
                                                            Fld30 = ST10Data.ChargeSheetEnquiryReport != null ? ST10Data.ChargeSheetEnquiryReport.IsNotifyHRDept.ToString() : "",
                                                            Fld31 = ST10Data.ChargeSheetEnquiryReport != null ? ST10Data.ChargeSheetEnquiryReport.Narration.ToString() : ""
                                                            //Fld83 = "IsEmployee Guilty: ",
                                                            //Fld84 = "ReportSubmission Date: ",
                                                            //Fld85 = "IsNotify HRDept: ",
                                                        };


                                                        if (comp)
                                                        {
                                                            OGenericObjStatement10.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                        }
                                                        if (div)
                                                        {
                                                            OGenericObjStatement10.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                        }
                                                        if (loca)
                                                        {
                                                            OGenericObjStatement10.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                        }
                                                        if (dept)
                                                        {
                                                            OGenericObjStatement10.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                        }
                                                        if (grp)
                                                        {
                                                            OGenericObjStatement10.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                        }
                                                        if (unit)
                                                        {
                                                            OGenericObjStatement10.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                        }
                                                        if (grade)
                                                        {
                                                            OGenericObjStatement10.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                        }
                                                        if (lvl)
                                                        {
                                                            OGenericObjStatement10.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                        }
                                                        if (jobstat)
                                                        {
                                                            OGenericObjStatement10.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                        }
                                                        if (job)
                                                        {
                                                            OGenericObjStatement10.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                        }
                                                        if (jobpos)
                                                        {
                                                            OGenericObjStatement10.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                        }
                                                        if (emp)
                                                        {
                                                            OGenericObjStatement10.Fld88 = ca.OEmpName;
                                                        }
                                                        OGenericPayrollStatement.Add(OGenericObjStatement10);

                                                        // return OGenericPayrollStatement;
                                                    }

                                                    break;

                                                case "11":
                                                    int stage11 = Convert.ToInt32(STAGEitem);
                                                    EmpDisciplineProcedings ST11Data = db.EmpDisciplineProcedings
                                                            .Include(e => e.PostEnquiryPrerquisite)
                                                            .Where(e => e.CaseNo == item.OCaseNo && e.ProceedingStage == stage11).FirstOrDefault();

                                                    if (ST11Data != null)
                                                    {
                                                        GenericField100 OGenericObjStatement11 = new GenericField100
                                                        {
                                                            Fld100 = STAGEitem,
                                                            Fld1 = ca.OEmpCode == null ? "" : ca.OEmpCode,
                                                            Fld2 = ca.OEmpName == null ? "" : ca.OEmpName,
                                                            Fld3 = GeoDataInd == null ? "" : GeoDataInd.FuncStruct_Job_Name,
                                                            Fld4 = item.OCaseNo != "" ? item.OCaseNo.ToString() : "",
                                                            Fld25 = ST11Data.PostEnquiryPrerquisite != null ? ST11Data.PostEnquiryPrerquisite.IsChkeckedEmpAdjusdication.ToString() : "",
                                                            Fld26 = ST11Data.PostEnquiryPrerquisite != null ? ST11Data.PostEnquiryPrerquisite.EmpAdjudicationDetails.ToString() : "",
                                                            Fld27 = ST11Data.PostEnquiryPrerquisite != null ? ST11Data.PostEnquiryPrerquisite.IndustrailDisputesActDetails.ToString() : "",
                                                            Fld28 = ST11Data.PostEnquiryPrerquisite != null ? ST11Data.PostEnquiryPrerquisite.Narration.ToString() : "",
                                                            Fld31 = ST11Data.PostEnquiryPrerquisite != null ? ST11Data.PostEnquiryPrerquisite.IsChkeckedEmpPastRecord.ToString() : "",
                                                            Fld32 = ST11Data.PostEnquiryPrerquisite != null ? ST11Data.PostEnquiryPrerquisite.EmpPastRecordDetails.ToString() : "",
                                                            Fld33 = ST11Data.PostEnquiryPrerquisite != null ? ST11Data.PostEnquiryPrerquisite.PastOffenseCount.ToString() : "0",

                                                            //Fld86 = "IsChkeckedEmpPast Record: ",
                                                            //Fld87 = "EmpPastRecord Details: ",
                                                            //Fld88 = "PastOffense Count: ",

                                                        };

                                                        if (comp)
                                                        {
                                                            OGenericObjStatement11.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                        }
                                                        if (div)
                                                        {
                                                            OGenericObjStatement11.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                        }
                                                        if (loca)
                                                        {
                                                            OGenericObjStatement11.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                        }
                                                        if (dept)
                                                        {
                                                            OGenericObjStatement11.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                        }
                                                        if (grp)
                                                        {
                                                            OGenericObjStatement11.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                        }
                                                        if (unit)
                                                        {
                                                            OGenericObjStatement11.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                        }
                                                        if (grade)
                                                        {
                                                            OGenericObjStatement11.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                        }
                                                        if (lvl)
                                                        {
                                                            OGenericObjStatement11.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                        }
                                                        if (jobstat)
                                                        {
                                                            OGenericObjStatement11.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                        }
                                                        if (job)
                                                        {
                                                            OGenericObjStatement11.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                        }
                                                        if (jobpos)
                                                        {
                                                            OGenericObjStatement11.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                        }
                                                        if (emp)
                                                        {
                                                            OGenericObjStatement11.Fld88 = ca.OEmpName;
                                                        }

                                                        OGenericPayrollStatement.Add(OGenericObjStatement11);

                                                        // return OGenericPayrollStatement;
                                                    }

                                                    break;


                                                case "12":
                                                    int stage12 = Convert.ToInt32(STAGEitem);
                                                    EmpDisciplineProcedings ST12Data = db.EmpDisciplineProcedings
                                                            .Include(e => e.FinalShowCauseNotice)
                                                            .Where(e => e.CaseNo == item.OCaseNo && e.ProceedingStage == stage12).FirstOrDefault();

                                                    if (ST12Data != null)
                                                    {
                                                        GenericField100 OGenericObjStatement12 = new GenericField100
                                                        {
                                                            Fld100 = STAGEitem,
                                                            Fld1 = ca.OEmpCode == null ? "" : ca.OEmpCode,
                                                            Fld2 = ca.OEmpName == null ? "" : ca.OEmpName,
                                                            Fld3 = GeoDataInd == null ? "" : GeoDataInd.FuncStruct_Job_Name,
                                                            Fld4 = item.OCaseNo != "" ? item.OCaseNo.ToString() : "",
                                                            Fld20 = ST12Data.FinalShowCauseNotice != null ? ST12Data.FinalShowCauseNotice.ReplyTime.ToString() : "",
                                                            Fld21 = ST12Data.FinalShowCauseNotice != null ? ST12Data.FinalShowCauseNotice.Narration.ToString() : "",
                                                            Fld34 = ST12Data.FinalShowCauseNotice != null ? ST12Data.FinalShowCauseNotice.NoticeNo.ToString() : "",
                                                            Fld35 = ST12Data.FinalShowCauseNotice != null && ST12Data.FinalShowCauseNotice.NoticeDate != null ? ST12Data.FinalShowCauseNotice.NoticeDate.Value.ToShortDateString() : "",
                                                            Fld36 = ST12Data.FinalShowCauseNotice != null ? ST12Data.FinalShowCauseNotice.NoticeDetails.ToString() : "",

                                                            //Fld89 = "FinalShowCauseNotice No: ",
                                                            //Fld90 = "FinalShowCauseNotice Date: ",
                                                            //Fld91 = "FinalShowCauseNotice Details: ",

                                                        };

                                                        if (comp)
                                                        {
                                                            OGenericObjStatement12.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                        }
                                                        if (div)
                                                        {
                                                            OGenericObjStatement12.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                        }
                                                        if (loca)
                                                        {
                                                            OGenericObjStatement12.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                        }
                                                        if (dept)
                                                        {
                                                            OGenericObjStatement12.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                        }
                                                        if (grp)
                                                        {
                                                            OGenericObjStatement12.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                        }
                                                        if (unit)
                                                        {
                                                            OGenericObjStatement12.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                        }
                                                        if (grade)
                                                        {
                                                            OGenericObjStatement12.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                        }
                                                        if (lvl)
                                                        {
                                                            OGenericObjStatement12.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                        }
                                                        if (jobstat)
                                                        {
                                                            OGenericObjStatement12.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                        }
                                                        if (job)
                                                        {
                                                            OGenericObjStatement12.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                        }
                                                        if (jobpos)
                                                        {
                                                            OGenericObjStatement12.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                        }
                                                        if (emp)
                                                        {
                                                            OGenericObjStatement12.Fld88 = ca.OEmpName;
                                                        }

                                                        OGenericPayrollStatement.Add(OGenericObjStatement12);

                                                        // return OGenericPayrollStatement;
                                                    }

                                                    break;


                                                case "13":
                                                    int stage13 = Convert.ToInt32(STAGEitem);
                                                    EmpDisciplineProcedings ST13Data = db.EmpDisciplineProcedings
                                                            .Include(e => e.FinalShowCauseNoticeServing)
                                                            .Where(e => e.CaseNo == item.OCaseNo && e.ProceedingStage == stage13).FirstOrDefault();

                                                    if (ST13Data != null)
                                                    {
                                                        GenericField100 OGenericObjStatement13 = new GenericField100
                                                        {
                                                            Fld100 = STAGEitem,
                                                            Fld1 = ca.OEmpCode == null ? "" : ca.OEmpCode,
                                                            Fld2 = ca.OEmpName == null ? "" : ca.OEmpName,
                                                            Fld3 = GeoDataInd == null ? "" : GeoDataInd.FuncStruct_Job_Name,
                                                            Fld4 = item.OCaseNo != "" ? item.OCaseNo.ToString() : "",
                                                            Fld16 = ST13Data.FinalShowCauseNoticeServing != null ? ST13Data.FinalShowCauseNoticeServing.IsClosedServing.ToString() : "",
                                                            Fld17 = ST13Data.FinalShowCauseNoticeServing != null ? ST13Data.FinalShowCauseNoticeServing.Narration.ToString() : "",
                                                            Fld37 = ST13Data.FinalShowCauseNoticeServing != null ? ST13Data.FinalShowCauseNoticeServing.IsNoticeRecd.ToString() : "",
                                                            Fld38 = ST13Data.FinalShowCauseNoticeServing != null && ST13Data.FinalShowCauseNoticeServing.NoticeServingDate != null ? ST13Data.FinalShowCauseNoticeServing.NoticeServingDate.Value.ToShortDateString() : "",
                                                            Fld39 = ST13Data.FinalShowCauseNoticeServing != null ? ST13Data.FinalShowCauseNoticeServing.IsWitnessReqd.ToString() : "",

                                                            //Fld92 = "IsNoticeRecd: ",
                                                            //Fld93 = "FinalShowCauseNoticeServing Date: ",
                                                            //Fld94 = "IsWitnessReqd: ",

                                                        };

                                                        if (comp)
                                                        {
                                                            OGenericObjStatement13.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                        }
                                                        if (div)
                                                        {
                                                            OGenericObjStatement13.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                        }
                                                        if (loca)
                                                        {
                                                            OGenericObjStatement13.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                        }
                                                        if (dept)
                                                        {
                                                            OGenericObjStatement13.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                        }
                                                        if (grp)
                                                        {
                                                            OGenericObjStatement13.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                        }
                                                        if (unit)
                                                        {
                                                            OGenericObjStatement13.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                        }
                                                        if (grade)
                                                        {
                                                            OGenericObjStatement13.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                        }
                                                        if (lvl)
                                                        {
                                                            OGenericObjStatement13.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                        }
                                                        if (jobstat)
                                                        {
                                                            OGenericObjStatement13.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                        }
                                                        if (job)
                                                        {
                                                            OGenericObjStatement13.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                        }
                                                        if (jobpos)
                                                        {
                                                            OGenericObjStatement13.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                        }
                                                        if (emp)
                                                        {
                                                            OGenericObjStatement13.Fld88 = ca.OEmpName;
                                                        }

                                                        OGenericPayrollStatement.Add(OGenericObjStatement13);

                                                        // return OGenericPayrollStatement;
                                                    }

                                                    break;


                                                case "14":
                                                    int stage14 = Convert.ToInt32(STAGEitem);
                                                    EmpDisciplineProcedings ST14Data = db.EmpDisciplineProcedings
                                                            .Include(e => e.FinalShowCauseNoticeReply)
                                                            .Where(e => e.CaseNo == item.OCaseNo && e.ProceedingStage == stage14).FirstOrDefault();

                                                    if (ST14Data != null)
                                                    {
                                                        GenericField100 OGenericObjStatement14 = new GenericField100
                                                        {
                                                            Fld100 = STAGEitem,
                                                            Fld1 = ca.OEmpCode == null ? "" : ca.OEmpCode,
                                                            Fld2 = ca.OEmpName == null ? "" : ca.OEmpName,
                                                            Fld3 = GeoDataInd == null ? "" : GeoDataInd.FuncStruct_Job_Name,
                                                            Fld4 = item.OCaseNo != "" ? item.OCaseNo.ToString() : "",
                                                            Fld28 = ST14Data.FinalShowCauseNoticeReply != null ? ST14Data.FinalShowCauseNoticeReply.ReplyDetails.ToString() : "",
                                                            Fld29 = ST14Data.FinalShowCauseNoticeReply != null ? ST14Data.FinalShowCauseNoticeReply.IsReplyStudied.ToString() : "",
                                                            Fld40 = ST14Data.FinalShowCauseNoticeReply != null ? ST14Data.FinalShowCauseNoticeReply.FullDetails.ToString() : "",
                                                            Fld41 = ST14Data.FinalShowCauseNoticeReply != null ? ST14Data.FinalShowCauseNoticeReply.NoticeReplyRecdDate.Value.ToShortDateString() : "",

                                                            //Fld95 = "FinalShowCauseNoticeReply Date: ",
                                                            //Fld96 = "FinalShowCauseNoticeReply Details: ",


                                                        };

                                                        if (comp)
                                                        {
                                                            OGenericObjStatement14.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                        }
                                                        if (div)
                                                        {
                                                            OGenericObjStatement14.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                        }
                                                        if (loca)
                                                        {
                                                            OGenericObjStatement14.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                        }
                                                        if (dept)
                                                        {
                                                            OGenericObjStatement14.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                        }
                                                        if (grp)
                                                        {
                                                            OGenericObjStatement14.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                        }
                                                        if (unit)
                                                        {
                                                            OGenericObjStatement14.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                        }
                                                        if (grade)
                                                        {
                                                            OGenericObjStatement14.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                        }
                                                        if (lvl)
                                                        {
                                                            OGenericObjStatement14.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                        }
                                                        if (jobstat)
                                                        {
                                                            OGenericObjStatement14.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                        }
                                                        if (job)
                                                        {
                                                            OGenericObjStatement14.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                        }
                                                        if (jobpos)
                                                        {
                                                            OGenericObjStatement14.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                        }
                                                        if (emp)
                                                        {
                                                            OGenericObjStatement14.Fld88 = ca.OEmpName;
                                                        }

                                                        OGenericPayrollStatement.Add(OGenericObjStatement14);

                                                        // return OGenericPayrollStatement;
                                                    }

                                                    break;


                                                case "15":
                                                    int stage15 = Convert.ToInt32(STAGEitem);
                                                    EmpDisciplineProcedings ST15Data = db.EmpDisciplineProcedings
                                                            .Include(e => e.FinalShowCauseNoticeClarification)
                                                            .Where(e => e.CaseNo == item.OCaseNo && e.ProceedingStage == stage15).FirstOrDefault();

                                                    if (ST15Data != null)
                                                    {
                                                        GenericField100 OGenericObjStatement15 = new GenericField100
                                                        {
                                                            Fld100 = STAGEitem,
                                                            Fld1 = ca.OEmpCode == null ? "" : ca.OEmpCode,
                                                            Fld2 = ca.OEmpName == null ? "" : ca.OEmpName,
                                                            Fld3 = GeoDataInd == null ? "" : GeoDataInd.FuncStruct_Job_Name,
                                                            Fld4 = item.OCaseNo != "" ? item.OCaseNo.ToString() : "",
                                                            Fld10 = ST15Data.FinalShowCauseNoticeClarification != null ? ST15Data.FinalShowCauseNoticeClarification.Narration.ToString() : "",
                                                            Fld42 = ST15Data.FinalShowCauseNoticeClarification != null ? ST15Data.FinalShowCauseNoticeClarification.ReplyClarificationDetails.ToString() : "",
                                                            Fld43 = ST15Data.FinalShowCauseNoticeClarification != null && ST15Data.FinalShowCauseNoticeClarification.NoticeReplyClarificationDate != null ? ST15Data.FinalShowCauseNoticeClarification.NoticeReplyClarificationDate.Value.ToShortDateString() : "",

                                                            //Fld97 = "ReplyClarificationDetails: ",
                                                            //Fld98 = "NoticeReplyClarification Date: ",

                                                        };

                                                        if (comp)
                                                        {
                                                            OGenericObjStatement15.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                        }
                                                        if (div)
                                                        {
                                                            OGenericObjStatement15.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                        }
                                                        if (loca)
                                                        {
                                                            OGenericObjStatement15.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                        }
                                                        if (dept)
                                                        {
                                                            OGenericObjStatement15.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                        }
                                                        if (grp)
                                                        {
                                                            OGenericObjStatement15.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                        }
                                                        if (unit)
                                                        {
                                                            OGenericObjStatement15.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                        }
                                                        if (grade)
                                                        {
                                                            OGenericObjStatement15.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                        }
                                                        if (lvl)
                                                        {
                                                            OGenericObjStatement15.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                        }
                                                        if (jobstat)
                                                        {
                                                            OGenericObjStatement15.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                        }
                                                        if (job)
                                                        {
                                                            OGenericObjStatement15.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                        }
                                                        if (jobpos)
                                                        {
                                                            OGenericObjStatement15.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                        }
                                                        if (emp)
                                                        {
                                                            OGenericObjStatement15.Fld88 = ca.OEmpName;
                                                        }

                                                        OGenericPayrollStatement.Add(OGenericObjStatement15);

                                                        // return OGenericPayrollStatement;
                                                    }

                                                    break;


                                                case "16":
                                                    int stage16 = Convert.ToInt32(STAGEitem);
                                                    EmpDisciplineProcedings ST16Data = db.EmpDisciplineProcedings
                                                            .Include(e => e.FinalShowCauseNoticeClarificarionServing)
                                                            .Where(e => e.CaseNo == item.OCaseNo && e.ProceedingStage == stage16).FirstOrDefault();

                                                    if (ST16Data != null)
                                                    {
                                                        GenericField100 OGenericObjStatement16 = new GenericField100
                                                        {
                                                            Fld100 = STAGEitem,
                                                            Fld1 = ca.OEmpCode == null ? "" : ca.OEmpCode,
                                                            Fld2 = ca.OEmpName == null ? "" : ca.OEmpName,
                                                            Fld3 = GeoDataInd == null ? "" : GeoDataInd.FuncStruct_Job_Name,
                                                            Fld4 = item.OCaseNo != "" ? item.OCaseNo.ToString() : "",
                                                            Fld15 = ST16Data.FinalShowCauseNoticeClarificarionServing != null ? ST16Data.FinalShowCauseNoticeClarificarionServing.IsWitnessReqd.ToString() : "",
                                                            Fld16 = ST16Data.FinalShowCauseNoticeClarificarionServing != null ? ST16Data.FinalShowCauseNoticeClarificarionServing.IsClosedServing.ToString() : "",
                                                            Fld17 = ST16Data.FinalShowCauseNoticeClarificarionServing != null ? ST16Data.FinalShowCauseNoticeClarificarionServing.Narration.ToString() : "",
                                                            Fld44 = ST16Data.FinalShowCauseNoticeClarificarionServing != null ? ST16Data.FinalShowCauseNoticeClarificarionServing.IsNoticeRecd.ToString() : "",
                                                            Fld45 = ST16Data.FinalShowCauseNoticeClarificarionServing != null && ST16Data.FinalShowCauseNoticeClarificarionServing.NoticeClarificationServingDate != null ? ST16Data.FinalShowCauseNoticeClarificarionServing.NoticeClarificationServingDate.Value.ToShortDateString() : "",

                                                        };

                                                        if (comp)
                                                        {
                                                            OGenericObjStatement16.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                        }
                                                        if (div)
                                                        {
                                                            OGenericObjStatement16.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                        }
                                                        if (loca)
                                                        {
                                                            OGenericObjStatement16.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                        }
                                                        if (dept)
                                                        {
                                                            OGenericObjStatement16.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                        }
                                                        if (grp)
                                                        {
                                                            OGenericObjStatement16.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                        }
                                                        if (unit)
                                                        {
                                                            OGenericObjStatement16.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                        }
                                                        if (grade)
                                                        {
                                                            OGenericObjStatement16.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                        }
                                                        if (lvl)
                                                        {
                                                            OGenericObjStatement16.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                        }
                                                        if (jobstat)
                                                        {
                                                            OGenericObjStatement16.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                        }
                                                        if (job)
                                                        {
                                                            OGenericObjStatement16.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                        }
                                                        if (jobpos)
                                                        {
                                                            OGenericObjStatement16.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                        }
                                                        if (emp)
                                                        {
                                                            OGenericObjStatement16.Fld88 = ca.OEmpName;
                                                        }

                                                        OGenericPayrollStatement.Add(OGenericObjStatement16);

                                                        // return OGenericPayrollStatement;
                                                    }

                                                    break;


                                                case "17":
                                                    int stage17 = Convert.ToInt32(STAGEitem);
                                                    EmpDisciplineProcedings ST17Data = db.EmpDisciplineProcedings
                                                            .Include(e => e.PunishmentOrder)
                                                            .Where(e => e.CaseNo == item.OCaseNo && e.ProceedingStage == stage17).FirstOrDefault();

                                                    if (ST17Data != null)
                                                    {
                                                        GenericField100 OGenericObjStatement17 = new GenericField100
                                                        {
                                                            Fld100 = STAGEitem,
                                                            Fld1 = ca.OEmpCode == null ? "" : ca.OEmpCode,
                                                            Fld2 = ca.OEmpName == null ? "" : ca.OEmpName,
                                                            Fld3 = GeoDataInd == null ? "" : GeoDataInd.FuncStruct_Job_Name,
                                                            Fld4 = item.OCaseNo != "" ? item.OCaseNo.ToString() : "",
                                                            Fld14 = ST17Data.PunishmentOrder != null ? ST17Data.PunishmentOrder.ReplyTime.ToString() : "",
                                                            Fld15 = ST17Data.PunishmentOrder != null ? ST17Data.PunishmentOrder.Narration.ToString() : "",
                                                            Fld46 = ST17Data.PunishmentOrder != null ? ST17Data.PunishmentOrder.PunishmentOrderNo.ToString() : "",
                                                            Fld47 = ST17Data.PunishmentOrder != null && ST17Data.PunishmentOrder.PunishmentOrderDate != null ? ST17Data.PunishmentOrder.PunishmentOrderDate.Value.ToShortDateString() : "",
                                                            Fld48 = ST17Data.PunishmentOrder != null ? ST17Data.PunishmentOrder.PunishmentOrderDetails.ToString() : "",

                                                        };

                                                        if (comp)
                                                        {
                                                            OGenericObjStatement17.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                        }
                                                        if (div)
                                                        {
                                                            OGenericObjStatement17.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                        }
                                                        if (loca)
                                                        {
                                                            OGenericObjStatement17.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                        }
                                                        if (dept)
                                                        {
                                                            OGenericObjStatement17.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                        }
                                                        if (grp)
                                                        {
                                                            OGenericObjStatement17.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                        }
                                                        if (unit)
                                                        {
                                                            OGenericObjStatement17.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                        }
                                                        if (grade)
                                                        {
                                                            OGenericObjStatement17.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                        }
                                                        if (lvl)
                                                        {
                                                            OGenericObjStatement17.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                        }
                                                        if (jobstat)
                                                        {
                                                            OGenericObjStatement17.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                        }
                                                        if (job)
                                                        {
                                                            OGenericObjStatement17.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                        }
                                                        if (jobpos)
                                                        {
                                                            OGenericObjStatement17.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                        }
                                                        if (emp)
                                                        {
                                                            OGenericObjStatement17.Fld88 = ca.OEmpName;
                                                        }

                                                        OGenericPayrollStatement.Add(OGenericObjStatement17);

                                                        // return OGenericPayrollStatement;
                                                    }

                                                    break;


                                                case "18":
                                                    int stage18 = Convert.ToInt32(STAGEitem);
                                                    EmpDisciplineProcedings ST18Data = db.EmpDisciplineProcedings
                                                            .Include(e => e.PunishmentOrderDelivery).Include(e => e.PunishmentOrderDelivery.PunishmentOrderServingMode)
                                                            .Where(e => e.CaseNo == item.OCaseNo && e.ProceedingStage == stage18).FirstOrDefault();

                                                    if (ST18Data != null)
                                                    {

                                                        GenericField100 OGenericObjStatement18 = new GenericField100
                                                        {
                                                            Fld100 = STAGEitem,
                                                            Fld1 = ca.OEmpCode == null ? "" : ca.OEmpCode,
                                                            Fld2 = ca.OEmpName == null ? "" : ca.OEmpName,
                                                            Fld3 = GeoDataInd == null ? "" : GeoDataInd.FuncStruct_Job_Name,
                                                            Fld4 = item.OCaseNo != "" ? item.OCaseNo.ToString() : "",
                                                            Fld23 = ST18Data.PunishmentOrderDelivery != null ? ST18Data.PunishmentOrderDelivery.IsWitnessReqd.ToString() : "",
                                                            Fld24 = ST18Data.PunishmentOrderDelivery != null ? ST18Data.PunishmentOrderDelivery.IsClosedServing.ToString() : "",
                                                            Fld25 = ST18Data.PunishmentOrderDelivery != null ? ST18Data.PunishmentOrderDelivery.Narration.ToString() : "",
                                                            Fld49 = ST18Data.PunishmentOrderDelivery != null ? ST18Data.PunishmentOrderDelivery.IsNoticeRecd.ToString() : "",
                                                            Fld50 = ST18Data.PunishmentOrderDelivery != null && ST18Data.PunishmentOrderDelivery.PunishmentOrderServingDate != null ? ST18Data.PunishmentOrderDelivery.PunishmentOrderServingDate.Value.ToShortDateString() : "",
                                                            Fld51 = ST18Data.PunishmentOrderDelivery != null && ST18Data.PunishmentOrderDelivery.PunishmentOrderServingMode.ChargeSheetServingModeName != null ? ST18Data.PunishmentOrderDelivery.PunishmentOrderServingMode.ChargeSheetServingModeName.LookupVal.ToString() : "",

                                                        };

                                                        if (comp)
                                                        {
                                                            OGenericObjStatement18.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                        }
                                                        if (div)
                                                        {
                                                            OGenericObjStatement18.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                        }
                                                        if (loca)
                                                        {
                                                            OGenericObjStatement18.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                        }
                                                        if (dept)
                                                        {
                                                            OGenericObjStatement18.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                        }
                                                        if (grp)
                                                        {
                                                            OGenericObjStatement18.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                        }
                                                        if (unit)
                                                        {
                                                            OGenericObjStatement18.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                        }
                                                        if (grade)
                                                        {
                                                            OGenericObjStatement18.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                        }
                                                        if (lvl)
                                                        {
                                                            OGenericObjStatement18.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                        }
                                                        if (jobstat)
                                                        {
                                                            OGenericObjStatement18.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                        }
                                                        if (job)
                                                        {
                                                            OGenericObjStatement18.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                        }
                                                        if (jobpos)
                                                        {
                                                            OGenericObjStatement18.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                        }
                                                        if (emp)
                                                        {
                                                            OGenericObjStatement18.Fld88 = ca.OEmpName;
                                                        }

                                                        OGenericPayrollStatement.Add(OGenericObjStatement18);

                                                        // return OGenericPayrollStatement;
                                                    }

                                                    break;


                                                case "19":
                                                    int stage19 = Convert.ToInt32(STAGEitem);
                                                    EmpDisciplineProcedings ST19Data = db.EmpDisciplineProcedings
                                                            .Include(e => e.PunishmentOrderApeal)
                                                            .Where(e => e.CaseNo == item.OCaseNo && e.ProceedingStage == stage19).FirstOrDefault();

                                                    if (ST19Data != null)
                                                    {
                                                        GenericField100 OGenericObjStatement19 = new GenericField100
                                                        {
                                                            Fld100 = STAGEitem,
                                                            Fld1 = ca.OEmpCode == null ? "" : ca.OEmpCode,
                                                            Fld2 = ca.OEmpName == null ? "" : ca.OEmpName,
                                                            Fld3 = GeoDataInd == null ? "" : GeoDataInd.FuncStruct_Job_Name,
                                                            Fld4 = item.OCaseNo != "" ? item.OCaseNo.ToString() : "",
                                                            Fld52 = ST19Data.PunishmentOrderApeal != null ? ST19Data.PunishmentOrderApeal.IsPunishmentOrderApealStudied.ToString() : "",
                                                            Fld53 = ST19Data.PunishmentOrderApeal != null && ST19Data.PunishmentOrderApeal.PunishmentOrderApealRecdDate != null ? ST19Data.PunishmentOrderApeal.PunishmentOrderApealRecdDate.Value.ToShortDateString() : "",
                                                            Fld54 = ST19Data.PunishmentOrderApeal != null ? ST19Data.PunishmentOrderApeal.PunishmentOrderApealDetails.ToString() : "",
                                                            Fld16 = ST19Data.PunishmentOrderApeal != null ? ST19Data.PunishmentOrderApeal.Narration.ToString() : "",

                                                        };

                                                        if (comp)
                                                        {
                                                            OGenericObjStatement19.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                        }
                                                        if (div)
                                                        {
                                                            OGenericObjStatement19.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                        }
                                                        if (loca)
                                                        {
                                                            OGenericObjStatement19.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                        }
                                                        if (dept)
                                                        {
                                                            OGenericObjStatement19.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                        }
                                                        if (grp)
                                                        {
                                                            OGenericObjStatement19.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                        }
                                                        if (unit)
                                                        {
                                                            OGenericObjStatement19.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                        }
                                                        if (grade)
                                                        {
                                                            OGenericObjStatement19.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                        }
                                                        if (lvl)
                                                        {
                                                            OGenericObjStatement19.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                        }
                                                        if (jobstat)
                                                        {
                                                            OGenericObjStatement19.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                        }
                                                        if (job)
                                                        {
                                                            OGenericObjStatement19.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                        }
                                                        if (jobpos)
                                                        {
                                                            OGenericObjStatement19.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                        }
                                                        if (emp)
                                                        {
                                                            OGenericObjStatement19.Fld88 = ca.OEmpName;
                                                        }

                                                        OGenericPayrollStatement.Add(OGenericObjStatement19);

                                                        // return OGenericPayrollStatement;
                                                    }

                                                    break;


                                                case "20":
                                                    int stage20 = Convert.ToInt32(STAGEitem);
                                                    EmpDisciplineProcedings ST20Data = db.EmpDisciplineProcedings
                                                            .Include(e => e.PunishmentOrderApealReply)
                                                            .Where(e => e.CaseNo == item.OCaseNo && e.ProceedingStage == stage20).FirstOrDefault();

                                                    if (ST20Data != null)
                                                    {
                                                        GenericField100 OGenericObjStatement20 = new GenericField100
                                                        {
                                                            Fld100 = STAGEitem,
                                                            Fld1 = ca.OEmpCode == null ? "" : ca.OEmpCode,
                                                            Fld2 = ca.OEmpName == null ? "" : ca.OEmpName,
                                                            Fld3 = GeoDataInd == null ? "" : GeoDataInd.FuncStruct_Job_Name,
                                                            Fld4 = item.OCaseNo != "" ? item.OCaseNo.ToString() : "",
                                                            Fld15 = ST20Data.PunishmentOrderApealReply != null ? ST20Data.PunishmentOrderApealReply.Narration.ToString() : "",
                                                            Fld55 = ST20Data.PunishmentOrderApealReply != null ? ST20Data.PunishmentOrderApealReply.PunishmentOrderApealReplyDetails.ToString() : "",
                                                            Fld56 = ST20Data.PunishmentOrderApealReply != null && ST20Data.PunishmentOrderApealReply.PunishmentOrderApealReplyDate != null ? ST20Data.PunishmentOrderApealReply.PunishmentOrderApealReplyDate.Value.ToShortDateString() : "",


                                                        };

                                                        if (comp)
                                                        {
                                                            OGenericObjStatement20.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                        }
                                                        if (div)
                                                        {
                                                            OGenericObjStatement20.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                        }
                                                        if (loca)
                                                        {
                                                            OGenericObjStatement20.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                        }
                                                        if (dept)
                                                        {
                                                            OGenericObjStatement20.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                        }
                                                        if (grp)
                                                        {
                                                            OGenericObjStatement20.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                        }
                                                        if (unit)
                                                        {
                                                            OGenericObjStatement20.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                        }
                                                        if (grade)
                                                        {
                                                            OGenericObjStatement20.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                        }
                                                        if (lvl)
                                                        {
                                                            OGenericObjStatement20.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                        }
                                                        if (jobstat)
                                                        {
                                                            OGenericObjStatement20.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                        }
                                                        if (job)
                                                        {
                                                            OGenericObjStatement20.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                        }
                                                        if (jobpos)
                                                        {
                                                            OGenericObjStatement20.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                        }
                                                        if (emp)
                                                        {
                                                            OGenericObjStatement20.Fld88 = ca.OEmpName;
                                                        }

                                                        OGenericPayrollStatement.Add(OGenericObjStatement20);

                                                        // return OGenericPayrollStatement;
                                                    }

                                                    break;


                                                case "21":
                                                    int stage21 = Convert.ToInt32(STAGEitem);
                                                    EmpDisciplineProcedings ST21Data = db.EmpDisciplineProcedings
                                                            .Include(e => e.PunishmentOrderImplementation)
                                                            .Where(e => e.CaseNo == item.OCaseNo && e.ProceedingStage == stage21).FirstOrDefault();

                                                    if (ST21Data != null)
                                                    {
                                                        GenericField100 OGenericObjStatement21 = new GenericField100
                                                        {
                                                            Fld100 = STAGEitem,
                                                            Fld1 = ca.OEmpCode == null ? "" : ca.OEmpCode,
                                                            Fld2 = ca.OEmpName == null ? "" : ca.OEmpName,
                                                            Fld3 = GeoDataInd == null ? "" : GeoDataInd.FuncStruct_Job_Name,
                                                            Fld4 = item.OCaseNo != "" ? item.OCaseNo.ToString() : "",
                                                            Fld57 = ST21Data.PunishmentOrderImplementation != null ? ST21Data.PunishmentOrderImplementation.IsInformedHR.ToString() : "",
                                                            Fld58 = ST21Data.PunishmentOrderImplementation != null && ST21Data.PunishmentOrderImplementation.PunishmentOrderImplementationDate != null ? ST21Data.PunishmentOrderImplementation.PunishmentOrderImplementationDate.Value.ToShortDateString() : "",
                                                            Fld59 = ST21Data.PunishmentOrderImplementation != null ? ST21Data.PunishmentOrderImplementation.PunishmentOrderImplementationDetails.ToString() : "",

                                                        };

                                                        if (comp)
                                                        {
                                                            OGenericObjStatement21.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                        }
                                                        if (div)
                                                        {
                                                            OGenericObjStatement21.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                        }
                                                        if (loca)
                                                        {
                                                            OGenericObjStatement21.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                        }
                                                        if (dept)
                                                        {
                                                            OGenericObjStatement21.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                        }
                                                        if (grp)
                                                        {
                                                            OGenericObjStatement21.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                        }
                                                        if (unit)
                                                        {
                                                            OGenericObjStatement21.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                        }
                                                        if (grade)
                                                        {
                                                            OGenericObjStatement21.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                        }
                                                        if (lvl)
                                                        {
                                                            OGenericObjStatement21.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                        }
                                                        if (jobstat)
                                                        {
                                                            OGenericObjStatement21.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                        }
                                                        if (job)
                                                        {
                                                            OGenericObjStatement21.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                        }
                                                        if (jobpos)
                                                        {
                                                            OGenericObjStatement21.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                        }
                                                        if (emp)
                                                        {
                                                            OGenericObjStatement21.Fld88 = ca.OEmpName;
                                                        }
                                                        OGenericPayrollStatement.Add(OGenericObjStatement21);

                                                        // return OGenericPayrollStatement;
                                                    }

                                                    break;





                                            }
                                            #endregion
                                            // }
                                        }
                                    #endregion





                                    }

                                    return OGenericPayrollStatement;
                                }
                                else
                                {
                                    //var empProceedingList = db.EmpDisciplineProcedings.Where(e => e.CaseNo == item.CaseNo).Select(p => p.ProceedingStage).ToList();

                                    foreach (var itemPS in ca.OEmpDisciplineProcedings)
                                    {
                                        if (itemPS != null)
                                        {

                                            string STAGEitem = itemPS.OProceedingStage.ToString();
                                            #region Proceeding Stage All Records and switchcase start
                                            switch (STAGEitem)
                                            {
                                                case "1":
                                                    int stage = Convert.ToInt32(STAGEitem);
                                                    EmpDisciplineProcedings ST1Data = db.EmpDisciplineProcedings
                                                            .Include(e => e.MisconductComplaint).Include(e => e.MisconductComplaint.OffenseObject)
                                                            .Include(e => e.MisconductComplaint).Include(e => e.MisconductComplaint.ComplaintApplicant)
                                                            .Include(e => e.MisconductComplaint).Include(e => e.MisconductComplaint.ComplaintApplicant.Employee)
                                                            .Include(e => e.MisconductComplaint).Include(e => e.MisconductComplaint.ComplaintApplicant.Employee.EmpName)
                                                            .Include(e => e.MisconductComplaint.OffenseObject.OffenceName).Where(e => e.CaseNo == itemPS.OCaseNo && e.ProceedingStage == stage).AsNoTracking().FirstOrDefault();

                                                    if (ST1Data != null)
                                                    {
                                                        GenericField100 OGenericObjStatement1 = new GenericField100
                                                        {
                                                            Fld100 = STAGEitem,
                                                            Fld1 = ca.OEmpCode == null ? "" : ca.OEmpCode,
                                                            Fld2 = ca.OEmpName == null ? "" : ca.OEmpName,
                                                            Fld3 = GeoDataInd == null ? "" : GeoDataInd.FuncStruct_Job_Name,
                                                            Fld4 = itemPS.OCaseNo != "" ? itemPS.OCaseNo.ToString() : "",
                                                            Fld5 = ST1Data.MisconductComplaint != null && ST1Data.MisconductComplaint.ComplaintNo != "" ? ST1Data.MisconductComplaint.ComplaintNo.ToString() : "",
                                                            Fld6 = ST1Data.MisconductComplaint != null && ST1Data.MisconductComplaint.ComplaintDate != null ? ST1Data.MisconductComplaint.ComplaintDate.Value.ToShortDateString() : "",
                                                            Fld7 = ST1Data.MisconductComplaint != null && ST1Data.MisconductComplaint.OffenseObject != null ? ST1Data.MisconductComplaint.OffenseObject.OffenceName.LookupVal.ToString() : "",
                                                            Fld9 = ST1Data.MisconductComplaint != null && ST1Data.MisconductComplaint.ComplaintApplicant != null && ST1Data.MisconductComplaint.ComplaintApplicant.Employee != null ? ST1Data.MisconductComplaint.ComplaintApplicant.Employee.EmpName.FullNameFML.ToString() : "",
                                                            Fld10 = ST1Data.MisconductComplaint != null ? ST1Data.MisconductComplaint.Narration.ToString() : "",
                                                            //Fld60 = "Complaint Date: ",
                                                            //Fld61 = "Complaint No: ",
                                                            //Fld62 = "Offense Name: ",


                                                        };

                                                        if (comp)
                                                        {
                                                            OGenericObjStatement1.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                        }
                                                        if (div)
                                                        {
                                                            OGenericObjStatement1.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                        }
                                                        if (loca)
                                                        {
                                                            OGenericObjStatement1.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                        }
                                                        if (dept)
                                                        {
                                                            OGenericObjStatement1.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                        }
                                                        if (grp)
                                                        {
                                                            OGenericObjStatement1.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                        }
                                                        if (unit)
                                                        {
                                                            OGenericObjStatement1.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                        }
                                                        if (grade)
                                                        {
                                                            OGenericObjStatement1.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                        }
                                                        if (lvl)
                                                        {
                                                            OGenericObjStatement1.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                        }
                                                        if (jobstat)
                                                        {
                                                            OGenericObjStatement1.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                        }
                                                        if (job)
                                                        {
                                                            OGenericObjStatement1.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                        }
                                                        if (jobpos)
                                                        {
                                                            OGenericObjStatement1.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                        }
                                                        if (emp)
                                                        {
                                                            OGenericObjStatement1.Fld88 = ca.OEmpName;
                                                        }
                                                        OGenericPayrollStatement.Add(OGenericObjStatement1);


                                                    }

                                                    break;

                                                case "2":
                                                    int stage2 = Convert.ToInt32(STAGEitem);
                                                    EmpDisciplineProcedings ST2Data = db.EmpDisciplineProcedings
                                                            .Include(e => e.PreminaryEnquiry).Include(e => e.PreminaryEnquiry.EnquiryPanel)
                                                            .Where(e => e.CaseNo == itemPS.OCaseNo && e.ProceedingStage == stage2).FirstOrDefault();

                                                    if (ST2Data != null)
                                                    {
                                                        GenericField100 OGenericObjStatement2 = new GenericField100
                                                        {
                                                            Fld100 = STAGEitem,
                                                            Fld1 = ca.OEmpCode == null ? "" : ca.OEmpCode,
                                                            Fld2 = ca.OEmpName == null ? "" : ca.OEmpName,
                                                            Fld3 = GeoDataInd == null ? "" : GeoDataInd.FuncStruct_Job_Name,
                                                            Fld4 = itemPS.OCaseNo != "" ? itemPS.OCaseNo.ToString() : "",
                                                            Fld8 = ST2Data.PreminaryEnquiry != null && ST2Data.PreminaryEnquiry.EnquiryPanelRecommendation != "" ? ST2Data.PreminaryEnquiry.EnquiryPanelRecommendation.ToString() : "",
                                                            Fld9 = ST2Data.PreminaryEnquiry != null && ST2Data.PreminaryEnquiry.CaseEnquiryDate != null ? ST2Data.PreminaryEnquiry.CaseEnquiryDate.Value.ToShortDateString() : "",
                                                            Fld10 = ST2Data.PreminaryEnquiry != null && ST2Data.PreminaryEnquiry.EnquiryPanel != null ? ST2Data.PreminaryEnquiry.EnquiryPanel.PanelName.ToString() : "",
                                                            Fld11 = ST2Data.PreminaryEnquiry != null ? ST2Data.PreminaryEnquiry.Narration.ToString() : "",
                                                            //Fld63 = "EnquiryPanel Recommendation: ",
                                                            //Fld64 = "CaseEnquiry Date: ",


                                                        };

                                                        if (comp)
                                                        {
                                                            OGenericObjStatement2.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                        }
                                                        if (div)
                                                        {
                                                            OGenericObjStatement2.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                        }
                                                        if (loca)
                                                        {
                                                            OGenericObjStatement2.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                        }
                                                        if (dept)
                                                        {
                                                            OGenericObjStatement2.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                        }
                                                        if (grp)
                                                        {
                                                            OGenericObjStatement2.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                        }
                                                        if (unit)
                                                        {
                                                            OGenericObjStatement2.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                        }
                                                        if (grade)
                                                        {
                                                            OGenericObjStatement2.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                        }
                                                        if (lvl)
                                                        {
                                                            OGenericObjStatement2.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                        }
                                                        if (jobstat)
                                                        {
                                                            OGenericObjStatement2.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                        }
                                                        if (job)
                                                        {
                                                            OGenericObjStatement2.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                        }
                                                        if (jobpos)
                                                        {
                                                            OGenericObjStatement2.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                        }
                                                        if (emp)
                                                        {
                                                            OGenericObjStatement2.Fld88 = ca.OEmpName;
                                                        }
                                                        OGenericPayrollStatement.Add(OGenericObjStatement2);

                                                        //return OGenericPayrollStatement;
                                                    }

                                                    break;

                                                case "3":
                                                    int stage3 = Convert.ToInt32(STAGEitem);
                                                    EmpDisciplineProcedings ST3Data = db.EmpDisciplineProcedings
                                                            .Include(e => e.PreminaryEnquiryAction).Include(e => e.PreminaryEnquiryAction.EnquiryPanel)
                                                            .Where(e => e.CaseNo == itemPS.OCaseNo && e.ProceedingStage == stage3).FirstOrDefault();

                                                    if (ST3Data != null)
                                                    {
                                                        GenericField100 OGenericObjStatement3 = new GenericField100
                                                        {
                                                            Fld100 = STAGEitem,
                                                            Fld1 = ca.OEmpCode == null ? "" : ca.OEmpCode,
                                                            Fld2 = ca.OEmpName == null ? "" : ca.OEmpName,
                                                            Fld3 = GeoDataInd == null ? "" : GeoDataInd.FuncStruct_Job_Name,
                                                            Fld4 = itemPS.OCaseNo != "" ? itemPS.OCaseNo.ToString() : "",
                                                            Fld10 = ST3Data.PreminaryEnquiryAction != null ? ST3Data.PreminaryEnquiryAction.IsSuspendEmp.ToString() : "",
                                                            Fld11 = ST3Data.PreminaryEnquiryAction != null && ST3Data.PreminaryEnquiryAction.SuspensionDate != null ? ST3Data.PreminaryEnquiryAction.SuspensionDate.Value.ToShortDateString() : "",
                                                            Fld12 = ST3Data.PreminaryEnquiryAction != null ? ST3Data.PreminaryEnquiryAction.IsNotifyHRDept.ToString() : "",
                                                            Fld13 = ST3Data.PreminaryEnquiryAction != null && ST3Data.PreminaryEnquiryAction.PreminaryEnquiryActionDate != null ? ST3Data.PreminaryEnquiryAction.PreminaryEnquiryActionDate.Value.ToShortDateString() : "",
                                                            Fld14 = ST3Data.PreminaryEnquiryAction != null ? ST3Data.PreminaryEnquiryAction.Narration.ToString() : "",
                                                            //Fld65 = "IsEmployee Suspend: ",
                                                            //Fld66 = "Employee SuspensionDate: ",

                                                        };

                                                        if (comp)
                                                        {
                                                            OGenericObjStatement3.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                        }
                                                        if (div)
                                                        {
                                                            OGenericObjStatement3.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                        }
                                                        if (loca)
                                                        {
                                                            OGenericObjStatement3.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                        }
                                                        if (dept)
                                                        {
                                                            OGenericObjStatement3.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                        }
                                                        if (grp)
                                                        {
                                                            OGenericObjStatement3.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                        }
                                                        if (unit)
                                                        {
                                                            OGenericObjStatement3.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                        }
                                                        if (grade)
                                                        {
                                                            OGenericObjStatement3.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                        }
                                                        if (lvl)
                                                        {
                                                            OGenericObjStatement3.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                        }
                                                        if (jobstat)
                                                        {
                                                            OGenericObjStatement3.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                        }
                                                        if (job)
                                                        {
                                                            OGenericObjStatement3.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                        }
                                                        if (jobpos)
                                                        {
                                                            OGenericObjStatement3.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                        }
                                                        if (emp)
                                                        {
                                                            OGenericObjStatement3.Fld88 = ca.OEmpName;
                                                        }
                                                        OGenericPayrollStatement.Add(OGenericObjStatement3);

                                                        // return OGenericPayrollStatement;
                                                    }

                                                    break;


                                                case "4":
                                                    int stage4 = Convert.ToInt32(STAGEitem);
                                                    EmpDisciplineProcedings ST4Data = db.EmpDisciplineProcedings
                                                            .Include(e => e.ChargeSheet)
                                                            .Where(e => e.CaseNo == itemPS.OCaseNo && e.ProceedingStage == stage4).FirstOrDefault();

                                                    if (ST4Data != null)
                                                    {
                                                        GenericField100 OGenericObjStatement4 = new GenericField100
                                                        {
                                                            Fld100 = STAGEitem,
                                                            Fld1 = ca.OEmpCode == null ? "" : ca.OEmpCode,
                                                            Fld2 = ca.OEmpName == null ? "" : ca.OEmpName,
                                                            Fld3 = GeoDataInd == null ? "" : GeoDataInd.FuncStruct_Job_Name,
                                                            Fld4 = itemPS.OCaseNo != "" ? itemPS.OCaseNo.ToString() : "",
                                                            Fld12 = ST4Data.ChargeSheet != null && ST4Data.ChargeSheet.FullDetails != "" ? ST4Data.ChargeSheet.FullDetails.ToString() : "",
                                                            Fld13 = ST4Data.ChargeSheet != null && ST4Data.ChargeSheet.ChargeSheetDetails != null ? ST4Data.ChargeSheet.ChargeSheetDetails.ToString() : "",
                                                            Fld14 = ST4Data.ChargeSheet != null ? ST4Data.ChargeSheet.ChargeSheetNo.ToString() : "",
                                                            Fld15 = ST4Data.ChargeSheet != null ? ST4Data.ChargeSheet.ChargeSheetDate.Value.ToShortDateString() : "",
                                                            Fld16 = ST4Data.ChargeSheet != null ? ST4Data.ChargeSheet.Narration.ToString() : "",
                                                            //Fld67 = "Chargesheet Fulldetails: ",
                                                            //Fld68 = "Chargesheet: ",
                                                        };

                                                        if (comp)
                                                        {
                                                            OGenericObjStatement4.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                        }
                                                        if (div)
                                                        {
                                                            OGenericObjStatement4.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                        }
                                                        if (loca)
                                                        {
                                                            OGenericObjStatement4.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                        }
                                                        if (dept)
                                                        {
                                                            OGenericObjStatement4.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                        }
                                                        if (grp)
                                                        {
                                                            OGenericObjStatement4.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                        }
                                                        if (unit)
                                                        {
                                                            OGenericObjStatement4.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                        }
                                                        if (grade)
                                                        {
                                                            OGenericObjStatement4.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                        }
                                                        if (lvl)
                                                        {
                                                            OGenericObjStatement4.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                        }
                                                        if (jobstat)
                                                        {
                                                            OGenericObjStatement4.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                        }
                                                        if (job)
                                                        {
                                                            OGenericObjStatement4.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                        }
                                                        if (jobpos)
                                                        {
                                                            OGenericObjStatement4.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                        }
                                                        if (emp)
                                                        {
                                                            OGenericObjStatement4.Fld88 = ca.OEmpName;
                                                        }
                                                        OGenericPayrollStatement.Add(OGenericObjStatement4);

                                                        // return OGenericPayrollStatement;
                                                    }

                                                    break;


                                                case "5":

                                                    int stage5 = Convert.ToInt32(STAGEitem);
                                                    EmpDisciplineProcedings ST5Data = db.EmpDisciplineProcedings
                                                            .Include(e => e.ChargeSheetServing).Include(e => e.ChargeSheetServing.Select(m => m.ChargeSheetServingMode))
                                                            .Include(e => e.ChargeSheetServing.Select(m => m.ChargeSheetServingMode.ChargeSheetServingModeName))
                                                            .Where(e => e.CaseNo == itemPS.OCaseNo && e.ProceedingStage == stage5).FirstOrDefault();

                                                    if (ST5Data != null)
                                                    {
                                                        foreach (var cservingitem in ST5Data.ChargeSheetServing)
                                                        {
                                                            var cservingDate = cservingitem.ChargeSheetServingDate.Value.ToShortDateString();
                                                            var cservingModename = cservingitem.ChargeSheetServingMode.ChargeSheetServingModeName.LookupVal.ToString();

                                                            GenericField100 OGenericObjStatement5 = new GenericField100
                                                            {
                                                                Fld100 = STAGEitem,
                                                                Fld1 = ca.OEmpCode == null ? "" : ca.OEmpCode,
                                                                Fld2 = ca.OEmpName == null ? "" : ca.OEmpName,
                                                                Fld3 = GeoDataInd == null ? "" : GeoDataInd.FuncStruct_Job_Name,
                                                                Fld4 = itemPS.OCaseNo != "" ? itemPS.OCaseNo.ToString() : "",
                                                                Fld14 = cservingDate != null ? cservingDate : null,
                                                                Fld15 = cservingModename != null ? cservingModename : "",
                                                                Fld16 = cservingitem != null ? cservingitem.IsWitnessReqd.ToString() : "",
                                                                Fld17 = cservingitem != null ? cservingitem.IsClosedServing.ToString() : "",
                                                                Fld18 = cservingitem != null ? cservingitem.Narration.ToString() : "",

                                                                //Fld69 = "ChargesheetServing Date: ",
                                                                //Fld70 = "ChargesheetServingmode name: ",
                                                            };

                                                            if (comp)
                                                            {
                                                                OGenericObjStatement5.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                            }
                                                            if (div)
                                                            {
                                                                OGenericObjStatement5.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                            }
                                                            if (loca)
                                                            {
                                                                OGenericObjStatement5.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                            }
                                                            if (dept)
                                                            {
                                                                OGenericObjStatement5.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                            }
                                                            if (grp)
                                                            {
                                                                OGenericObjStatement5.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                            }
                                                            if (unit)
                                                            {
                                                                OGenericObjStatement5.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                            }
                                                            if (grade)
                                                            {
                                                                OGenericObjStatement5.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                            }
                                                            if (lvl)
                                                            {
                                                                OGenericObjStatement5.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                            }
                                                            if (jobstat)
                                                            {
                                                                OGenericObjStatement5.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                            }
                                                            if (job)
                                                            {
                                                                OGenericObjStatement5.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                            }
                                                            if (jobpos)
                                                            {
                                                                OGenericObjStatement5.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                            }
                                                            if (emp)
                                                            {
                                                                OGenericObjStatement5.Fld88 = ca.OEmpName;
                                                            }

                                                            OGenericPayrollStatement.Add(OGenericObjStatement5);

                                                            //return OGenericPayrollStatement;
                                                        }
                                                    }

                                                    break;


                                                case "6":

                                                    int stage6 = Convert.ToInt32(STAGEitem);
                                                    EmpDisciplineProcedings ST6Data = db.EmpDisciplineProcedings
                                                            .Include(e => e.ChargeSheetReply)
                                                            .Where(e => e.CaseNo == itemPS.OCaseNo && e.ProceedingStage == stage6).FirstOrDefault();

                                                    if (ST6Data != null)
                                                    {
                                                        GenericField100 OGenericObjStatement6 = new GenericField100
                                                        {
                                                            Fld100 = STAGEitem,
                                                            Fld1 = ca.OEmpCode == null ? "" : ca.OEmpCode,
                                                            Fld2 = ca.OEmpName == null ? "" : ca.OEmpName,
                                                            Fld3 = GeoDataInd == null ? "" : GeoDataInd.FuncStruct_Job_Name,
                                                            Fld4 = itemPS.OCaseNo != "" ? itemPS.OCaseNo.ToString() : "",
                                                            Fld16 = ST6Data.ChargeSheetReply != null && ST6Data.ChargeSheetReply.PunishmentDetails != "" ? ST6Data.ChargeSheetReply.PunishmentDetails.ToString() : "",
                                                            Fld17 = ST6Data.ChargeSheetReply != null && ST6Data.ChargeSheetReply.ReplyDate != null ? ST6Data.ChargeSheetReply.ReplyDate.Value.ToShortDateString() : "",
                                                            Fld18 = ST6Data.ChargeSheetReply != null ? ST6Data.ChargeSheetReply.IsPleadGuilty.ToString() : "",
                                                            Fld19 = ST6Data.ChargeSheetReply != null ? ST6Data.ChargeSheetReply.IsDropChargeSheet.ToString() : "",
                                                            Fld20 = ST6Data.ChargeSheetReply != null ? ST6Data.ChargeSheetReply.IsReplySatisfactory.ToString() : "",
                                                            Fld21 = ST6Data.ChargeSheetReply != null ? ST6Data.ChargeSheetReply.Narration.ToString() : "",

                                                            //Fld71 = "ChargesheetReply Date: ",
                                                            //Fld72 = "ChargesheetReply Date: ",
                                                            //Fld73 = "IsPleadGuilty: ",
                                                        };

                                                        if (comp)
                                                        {
                                                            OGenericObjStatement6.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                        }
                                                        if (div)
                                                        {
                                                            OGenericObjStatement6.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                        }
                                                        if (loca)
                                                        {
                                                            OGenericObjStatement6.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                        }
                                                        if (dept)
                                                        {
                                                            OGenericObjStatement6.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                        }
                                                        if (grp)
                                                        {
                                                            OGenericObjStatement6.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                        }
                                                        if (unit)
                                                        {
                                                            OGenericObjStatement6.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                        }
                                                        if (grade)
                                                        {
                                                            OGenericObjStatement6.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                        }
                                                        if (lvl)
                                                        {
                                                            OGenericObjStatement6.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                        }
                                                        if (jobstat)
                                                        {
                                                            OGenericObjStatement6.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                        }
                                                        if (job)
                                                        {
                                                            OGenericObjStatement6.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                        }
                                                        if (jobpos)
                                                        {
                                                            OGenericObjStatement6.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                        }
                                                        if (emp)
                                                        {
                                                            OGenericObjStatement6.Fld88 = ca.OEmpName;
                                                        }

                                                        OGenericPayrollStatement.Add(OGenericObjStatement6);

                                                        // return OGenericPayrollStatement;
                                                    }

                                                    break;


                                                case "7":

                                                    int stage7 = Convert.ToInt32(STAGEitem);
                                                    EmpDisciplineProcedings ST7Data = db.EmpDisciplineProcedings
                                                            .Include(e => e.ChargeSheetEnquiryNotice).Include(e => e.ChargeSheetEnquiryNotice.EnquiryPanel)
                                                            .Include(e => e.ChargeSheetEnquiryNotice.Witness)
                                                            .Include(e => e.ChargeSheetEnquiryNotice.EnquiryAddress)
                                                            .Where(e => e.CaseNo == itemPS.OCaseNo && e.ProceedingStage == stage7).FirstOrDefault();

                                                    if (ST7Data != null)
                                                    {
                                                        GenericField100 OGenericObjStatement7 = new GenericField100
                                                        {
                                                            Fld100 = STAGEitem,
                                                            Fld1 = ca.OEmpCode == null ? "" : ca.OEmpCode,
                                                            Fld2 = ca.OEmpName == null ? "" : ca.OEmpName,
                                                            Fld3 = GeoDataInd == null ? "" : GeoDataInd.FuncStruct_Job_Name,
                                                            Fld4 = itemPS.OCaseNo != "" ? itemPS.OCaseNo.ToString() : "",
                                                            Fld19 = ST7Data.ChargeSheetEnquiryNotice != null ? ST7Data.ChargeSheetEnquiryNotice.EnquiryPlace.ToString() : "",
                                                            Fld20 = ST7Data.ChargeSheetEnquiryNotice != null && ST7Data.ChargeSheetEnquiryNotice.EnquiryScheduleDate != null ? ST7Data.ChargeSheetEnquiryNotice.EnquiryScheduleDate.Value.ToShortDateString() : "",
                                                            Fld21 = ST7Data.ChargeSheetEnquiryNotice != null ? ST7Data.ChargeSheetEnquiryNotice.EnquiryNoticeNo.ToString() : "",
                                                            Fld22 = ST7Data.ChargeSheetEnquiryNotice != null && ST7Data.ChargeSheetEnquiryNotice.EnquiryAddress != null ? ST7Data.ChargeSheetEnquiryNotice.EnquiryAddress.FullAddress.ToString() : "",

                                                            //Fld74 = "EnquirySchedule Date: ",
                                                            //Fld75 = "EnquiryPlace: ",
                                                            //Fld76 = "EnquiryNotice No: ",
                                                            //Fld77 = "EnquiryAddress: ",
                                                        };

                                                        if (comp)
                                                        {
                                                            OGenericObjStatement7.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                        }
                                                        if (div)
                                                        {
                                                            OGenericObjStatement7.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                        }
                                                        if (loca)
                                                        {
                                                            OGenericObjStatement7.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                        }
                                                        if (dept)
                                                        {
                                                            OGenericObjStatement7.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                        }
                                                        if (grp)
                                                        {
                                                            OGenericObjStatement7.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                        }
                                                        if (unit)
                                                        {
                                                            OGenericObjStatement7.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                        }
                                                        if (grade)
                                                        {
                                                            OGenericObjStatement7.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                        }
                                                        if (lvl)
                                                        {
                                                            OGenericObjStatement7.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                        }
                                                        if (jobstat)
                                                        {
                                                            OGenericObjStatement7.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                        }
                                                        if (job)
                                                        {
                                                            OGenericObjStatement7.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                        }
                                                        if (jobpos)
                                                        {
                                                            OGenericObjStatement7.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                        }
                                                        if (emp)
                                                        {
                                                            OGenericObjStatement7.Fld88 = ca.OEmpName;
                                                        }

                                                        OGenericPayrollStatement.Add(OGenericObjStatement7);

                                                        //return OGenericPayrollStatement;
                                                    }

                                                    break;


                                                case "8":
                                                    int stage8 = Convert.ToInt32(STAGEitem);
                                                    EmpDisciplineProcedings ST8Data = db.EmpDisciplineProcedings
                                                            .Include(e => e.ChargeSheetEnquiryNoticeServing).Include(e => e.ChargeSheetEnquiryNoticeServing.Witness)
                                                            .Include(e => e.ChargeSheetEnquiryNoticeServing.ChargeSheetServingMode)
                                                            .Where(e => e.CaseNo == itemPS.OCaseNo && e.ProceedingStage == stage8).FirstOrDefault();

                                                    if (ST8Data != null)
                                                    {
                                                        GenericField100 OGenericObjStatement8 = new GenericField100
                                                        {
                                                            Fld100 = STAGEitem,
                                                            Fld1 = ca.OEmpCode == null ? "" : ca.OEmpCode,
                                                            Fld2 = ca.OEmpName == null ? "" : ca.OEmpName,
                                                            Fld3 = GeoDataInd == null ? "" : GeoDataInd.FuncStruct_Job_Name,
                                                            Fld4 = itemPS.OCaseNo != "" ? itemPS.OCaseNo.ToString() : "",
                                                            Fld19 = ST8Data.ChargeSheetEnquiryNoticeServing != null ? ST8Data.ChargeSheetEnquiryNoticeServing.IsWitnessReqd.ToString() : "",
                                                            Fld20 = ST8Data.ChargeSheetEnquiryNoticeServing != null ? ST8Data.ChargeSheetEnquiryNoticeServing.IsClosedServing.ToString() : "",
                                                            Fld21 = ST8Data.ChargeSheetEnquiryNoticeServing != null ? ST8Data.ChargeSheetEnquiryNoticeServing.Narration.ToString() : "",
                                                            Fld23 = ST8Data.ChargeSheetEnquiryNoticeServing != null ? ST8Data.ChargeSheetEnquiryNoticeServing.IsChargeSheetRecd.ToString() : "",
                                                            Fld24 = ST8Data.ChargeSheetEnquiryNoticeServing != null && ST8Data.ChargeSheetEnquiryNoticeServing.EnquiryNoticeServingDate != null ? ST8Data.ChargeSheetEnquiryNoticeServing.EnquiryNoticeServingDate.Value.ToShortDateString() : "",

                                                            //Fld78 = "IsChargeSheetRecd: ",
                                                            //Fld79 = "EnquiryNoticeServing Date: ",
                                                        };

                                                        if (comp)
                                                        {
                                                            OGenericObjStatement8.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                        }
                                                        if (div)
                                                        {
                                                            OGenericObjStatement8.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                        }
                                                        if (loca)
                                                        {
                                                            OGenericObjStatement8.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                        }
                                                        if (dept)
                                                        {
                                                            OGenericObjStatement8.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                        }
                                                        if (grp)
                                                        {
                                                            OGenericObjStatement8.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                        }
                                                        if (unit)
                                                        {
                                                            OGenericObjStatement8.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                        }
                                                        if (grade)
                                                        {
                                                            OGenericObjStatement8.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                        }
                                                        if (lvl)
                                                        {
                                                            OGenericObjStatement8.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                        }
                                                        if (jobstat)
                                                        {
                                                            OGenericObjStatement8.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                        }
                                                        if (job)
                                                        {
                                                            OGenericObjStatement8.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                        }
                                                        if (jobpos)
                                                        {
                                                            OGenericObjStatement8.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                        }
                                                        if (emp)
                                                        {
                                                            OGenericObjStatement8.Fld88 = ca.OEmpName;
                                                        }

                                                        OGenericPayrollStatement.Add(OGenericObjStatement8);

                                                        // // return OGenericPayrollStatement;
                                                    }

                                                    break;


                                                case "9":
                                                    int stage9 = Convert.ToInt32(STAGEitem);
                                                    EmpDisciplineProcedings ST9Data = db.EmpDisciplineProcedings
                                                            .Include(e => e.ChargeSheetEnquiryProceedings).Include(e => e.ChargeSheetEnquiryProceedings.WitnessPresent)
                                                            .Include(e => e.ChargeSheetEnquiryProceedings.EnquiryPanelPresent)
                                                            .Where(e => e.CaseNo == itemPS.OCaseNo && e.ProceedingStage == stage9).FirstOrDefault();

                                                    if (ST9Data != null)
                                                    {
                                                        GenericField100 OGenericObjStatement9 = new GenericField100
                                                        {
                                                            Fld100 = STAGEitem,
                                                            Fld1 = ca.OEmpCode == null ? "" : ca.OEmpCode,
                                                            Fld2 = ca.OEmpName == null ? "" : ca.OEmpName,
                                                            Fld3 = GeoDataInd == null ? "" : GeoDataInd.FuncStruct_Job_Name,
                                                            Fld4 = itemPS.OCaseNo != "" ? itemPS.OCaseNo.ToString() : "",
                                                            Fld19 = ST9Data.ChargeSheetEnquiryProceedings != null ? ST9Data.ChargeSheetEnquiryProceedings.Narration.ToString() : "",
                                                            Fld25 = ST9Data.ChargeSheetEnquiryProceedings != null ? ST9Data.ChargeSheetEnquiryProceedings.IsEnquiryOver.ToString() : "",
                                                            Fld26 = ST9Data.ChargeSheetEnquiryProceedings != null && ST9Data.ChargeSheetEnquiryProceedings.EnquiryProceedingDate != null ? ST9Data.ChargeSheetEnquiryProceedings.EnquiryProceedingDate.Value.ToShortDateString() : "",
                                                            Fld20 = ST9Data.ChargeSheetEnquiryProceedings != null && ST9Data.ChargeSheetEnquiryProceedings.EnquiryProceedingDate != null ? ST9Data.ChargeSheetEnquiryProceedings.EnquiryProceedingTime.Value.ToShortTimeString() : "",
                                                            Fld27 = ST9Data.ChargeSheetEnquiryProceedings != null ? ST9Data.ChargeSheetEnquiryProceedings.IsEmpReport.ToString() : "",

                                                            //Fld80 = "IsEnquiryOver: ",
                                                            //Fld81 = "EnquiryProceeding Date: ",
                                                            //Fld82 = "IsEmployee Report: ",

                                                        };

                                                        if (comp)
                                                        {
                                                            OGenericObjStatement9.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                        }
                                                        if (div)
                                                        {
                                                            OGenericObjStatement9.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                        }
                                                        if (loca)
                                                        {
                                                            OGenericObjStatement9.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                        }
                                                        if (dept)
                                                        {
                                                            OGenericObjStatement9.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                        }
                                                        if (grp)
                                                        {
                                                            OGenericObjStatement9.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                        }
                                                        if (unit)
                                                        {
                                                            OGenericObjStatement9.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                        }
                                                        if (grade)
                                                        {
                                                            OGenericObjStatement9.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                        }
                                                        if (lvl)
                                                        {
                                                            OGenericObjStatement9.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                        }
                                                        if (jobstat)
                                                        {
                                                            OGenericObjStatement9.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                        }
                                                        if (job)
                                                        {
                                                            OGenericObjStatement9.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                        }
                                                        if (jobpos)
                                                        {
                                                            OGenericObjStatement9.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                        }
                                                        if (emp)
                                                        {
                                                            OGenericObjStatement9.Fld88 = ca.OEmpName;
                                                        }

                                                        OGenericPayrollStatement.Add(OGenericObjStatement9);

                                                        // return OGenericPayrollStatement;
                                                    }

                                                    break;


                                                case "10":
                                                    int stage10 = Convert.ToInt32(STAGEitem);
                                                    EmpDisciplineProcedings ST10Data = db.EmpDisciplineProcedings
                                                            .Include(e => e.ChargeSheetEnquiryReport)
                                                            .Where(e => e.CaseNo == itemPS.OCaseNo && e.ProceedingStage == stage10).FirstOrDefault();

                                                    if (ST10Data != null)
                                                    {
                                                        GenericField100 OGenericObjStatement10 = new GenericField100
                                                        {
                                                            Fld100 = STAGEitem,
                                                            Fld1 = ca.OEmpCode == null ? "" : ca.OEmpCode,
                                                            Fld2 = ca.OEmpName == null ? "" : ca.OEmpName,
                                                            Fld3 = GeoDataInd == null ? "" : GeoDataInd.FuncStruct_Job_Name,
                                                            Fld4 = itemPS.OCaseNo != "" ? itemPS.OCaseNo.ToString() : "",
                                                            Fld22 = ST10Data.ChargeSheetEnquiryReport != null ? ST10Data.ChargeSheetEnquiryReport.EnquiryReportDetails.ToString() : "",
                                                            Fld23 = ST10Data.ChargeSheetEnquiryReport != null ? ST10Data.ChargeSheetEnquiryReport.IsCloseCase.ToString() : "",
                                                            Fld24 = ST10Data.ChargeSheetEnquiryReport != null && ST10Data.ChargeSheetEnquiryReport.SuspensionRevokeDate != null ? ST10Data.ChargeSheetEnquiryReport.SuspensionRevokeDate.Value.ToShortDateString() : "",
                                                            Fld28 = ST10Data.ChargeSheetEnquiryReport != null ? ST10Data.ChargeSheetEnquiryReport.IsEmpGuilty.ToString() : "",
                                                            Fld29 = ST10Data.ChargeSheetEnquiryReport != null && ST10Data.ChargeSheetEnquiryReport.ReportSubmissionDate != null ? ST10Data.ChargeSheetEnquiryReport.ReportSubmissionDate.Value.ToShortDateString() : "",
                                                            Fld30 = ST10Data.ChargeSheetEnquiryReport != null ? ST10Data.ChargeSheetEnquiryReport.IsNotifyHRDept.ToString() : "",
                                                            Fld31 = ST10Data.ChargeSheetEnquiryReport != null ? ST10Data.ChargeSheetEnquiryReport.Narration.ToString() : ""

                                                            //Fld83 = "IsEmployee Guilty: ",
                                                            //Fld84 = "ReportSubmission Date: ",
                                                            //Fld85 = "IsNotify HRDept: ",
                                                        };

                                                        if (comp)
                                                        {
                                                            OGenericObjStatement10.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                        }
                                                        if (div)
                                                        {
                                                            OGenericObjStatement10.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                        }
                                                        if (loca)
                                                        {
                                                            OGenericObjStatement10.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                        }
                                                        if (dept)
                                                        {
                                                            OGenericObjStatement10.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                        }
                                                        if (grp)
                                                        {
                                                            OGenericObjStatement10.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                        }
                                                        if (unit)
                                                        {
                                                            OGenericObjStatement10.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                        }
                                                        if (grade)
                                                        {
                                                            OGenericObjStatement10.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                        }
                                                        if (lvl)
                                                        {
                                                            OGenericObjStatement10.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                        }
                                                        if (jobstat)
                                                        {
                                                            OGenericObjStatement10.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                        }
                                                        if (job)
                                                        {
                                                            OGenericObjStatement10.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                        }
                                                        if (jobpos)
                                                        {
                                                            OGenericObjStatement10.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                        }
                                                        if (emp)
                                                        {
                                                            OGenericObjStatement10.Fld88 = ca.OEmpName;
                                                        }
                                                        OGenericPayrollStatement.Add(OGenericObjStatement10);

                                                        // return OGenericPayrollStatement;
                                                    }

                                                    break;

                                                case "11":
                                                    int stage11 = Convert.ToInt32(STAGEitem);
                                                    EmpDisciplineProcedings ST11Data = db.EmpDisciplineProcedings
                                                            .Include(e => e.PostEnquiryPrerquisite)
                                                            .Where(e => e.CaseNo == itemPS.OCaseNo && e.ProceedingStage == stage11).FirstOrDefault();

                                                    if (ST11Data != null)
                                                    {
                                                        GenericField100 OGenericObjStatement11 = new GenericField100
                                                        {
                                                            Fld100 = STAGEitem,
                                                            Fld1 = ca.OEmpCode == null ? "" : ca.OEmpCode,
                                                            Fld2 = ca.OEmpName == null ? "" : ca.OEmpName,
                                                            Fld3 = GeoDataInd == null ? "" : GeoDataInd.FuncStruct_Job_Name,
                                                            Fld4 = itemPS.OCaseNo != "" ? itemPS.OCaseNo.ToString() : "",
                                                            Fld25 = ST11Data.PostEnquiryPrerquisite != null ? ST11Data.PostEnquiryPrerquisite.IsChkeckedEmpAdjusdication.ToString() : "",
                                                            Fld26 = ST11Data.PostEnquiryPrerquisite != null ? ST11Data.PostEnquiryPrerquisite.EmpAdjudicationDetails.ToString() : "",
                                                            Fld27 = ST11Data.PostEnquiryPrerquisite != null ? ST11Data.PostEnquiryPrerquisite.IndustrailDisputesActDetails.ToString() : "",
                                                            Fld28 = ST11Data.PostEnquiryPrerquisite != null ? ST11Data.PostEnquiryPrerquisite.Narration.ToString() : "",
                                                            Fld31 = ST11Data.PostEnquiryPrerquisite != null ? ST11Data.PostEnquiryPrerquisite.IsChkeckedEmpPastRecord.ToString() : "",
                                                            Fld32 = ST11Data.PostEnquiryPrerquisite != null ? ST11Data.PostEnquiryPrerquisite.EmpPastRecordDetails.ToString() : "",
                                                            Fld33 = ST11Data.PostEnquiryPrerquisite != null ? ST11Data.PostEnquiryPrerquisite.PastOffenseCount.ToString() : "0",

                                                            //Fld86 = "IsChkeckedEmpPast Record: ",
                                                            //Fld87 = "EmpPastRecord Details: ",
                                                            //Fld88 = "PastOffense Count: ",

                                                        };

                                                        if (comp)
                                                        {
                                                            OGenericObjStatement11.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                        }
                                                        if (div)
                                                        {
                                                            OGenericObjStatement11.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                        }
                                                        if (loca)
                                                        {
                                                            OGenericObjStatement11.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                        }
                                                        if (dept)
                                                        {
                                                            OGenericObjStatement11.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                        }
                                                        if (grp)
                                                        {
                                                            OGenericObjStatement11.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                        }
                                                        if (unit)
                                                        {
                                                            OGenericObjStatement11.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                        }
                                                        if (grade)
                                                        {
                                                            OGenericObjStatement11.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                        }
                                                        if (lvl)
                                                        {
                                                            OGenericObjStatement11.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                        }
                                                        if (jobstat)
                                                        {
                                                            OGenericObjStatement11.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                        }
                                                        if (job)
                                                        {
                                                            OGenericObjStatement11.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                        }
                                                        if (jobpos)
                                                        {
                                                            OGenericObjStatement11.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                        }
                                                        if (emp)
                                                        {
                                                            OGenericObjStatement11.Fld88 = ca.OEmpName;
                                                        }

                                                        OGenericPayrollStatement.Add(OGenericObjStatement11);

                                                        // return OGenericPayrollStatement;
                                                    }

                                                    break;


                                                case "12":
                                                    int stage12 = Convert.ToInt32(STAGEitem);
                                                    EmpDisciplineProcedings ST12Data = db.EmpDisciplineProcedings
                                                            .Include(e => e.FinalShowCauseNotice)
                                                            .Where(e => e.CaseNo == itemPS.OCaseNo && e.ProceedingStage == stage12).FirstOrDefault();

                                                    if (ST12Data != null)
                                                    {
                                                        GenericField100 OGenericObjStatement12 = new GenericField100
                                                        {
                                                            Fld100 = STAGEitem,
                                                            Fld1 = ca.OEmpCode == null ? "" : ca.OEmpCode,
                                                            Fld2 = ca.OEmpName == null ? "" : ca.OEmpName,
                                                            Fld3 = GeoDataInd == null ? "" : GeoDataInd.FuncStruct_Job_Name,
                                                            Fld4 = itemPS.OCaseNo != "" ? itemPS.OCaseNo.ToString() : "",
                                                            Fld20 = ST12Data.FinalShowCauseNotice != null ? ST12Data.FinalShowCauseNotice.ReplyTime.ToString() : "",
                                                            Fld21 = ST12Data.FinalShowCauseNotice != null ? ST12Data.FinalShowCauseNotice.Narration.ToString() : "",
                                                            Fld34 = ST12Data.FinalShowCauseNotice != null ? ST12Data.FinalShowCauseNotice.NoticeNo.ToString() : "",
                                                            Fld35 = ST12Data.FinalShowCauseNotice != null && ST12Data.FinalShowCauseNotice.NoticeDate != null ? ST12Data.FinalShowCauseNotice.NoticeDate.Value.ToShortDateString() : "",
                                                            Fld36 = ST12Data.FinalShowCauseNotice != null ? ST12Data.FinalShowCauseNotice.NoticeDetails.ToString() : "",

                                                            //Fld89 = "FinalShowCauseNotice No: ",
                                                            //Fld90 = "FinalShowCauseNotice Date: ",
                                                            //Fld91 = "FinalShowCauseNotice Details: ",

                                                        };

                                                        if (comp)
                                                        {
                                                            OGenericObjStatement12.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                        }
                                                        if (div)
                                                        {
                                                            OGenericObjStatement12.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                        }
                                                        if (loca)
                                                        {
                                                            OGenericObjStatement12.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                        }
                                                        if (dept)
                                                        {
                                                            OGenericObjStatement12.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                        }
                                                        if (grp)
                                                        {
                                                            OGenericObjStatement12.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                        }
                                                        if (unit)
                                                        {
                                                            OGenericObjStatement12.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                        }
                                                        if (grade)
                                                        {
                                                            OGenericObjStatement12.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                        }
                                                        if (lvl)
                                                        {
                                                            OGenericObjStatement12.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                        }
                                                        if (jobstat)
                                                        {
                                                            OGenericObjStatement12.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                        }
                                                        if (job)
                                                        {
                                                            OGenericObjStatement12.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                        }
                                                        if (jobpos)
                                                        {
                                                            OGenericObjStatement12.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                        }
                                                        if (emp)
                                                        {
                                                            OGenericObjStatement12.Fld88 = ca.OEmpName;
                                                        }
                                                        OGenericPayrollStatement.Add(OGenericObjStatement12);

                                                        // return OGenericPayrollStatement;
                                                    }

                                                    break;


                                                case "13":
                                                    int stage13 = Convert.ToInt32(STAGEitem);
                                                    EmpDisciplineProcedings ST13Data = db.EmpDisciplineProcedings
                                                            .Include(e => e.FinalShowCauseNoticeServing)
                                                            .Where(e => e.CaseNo == itemPS.OCaseNo && e.ProceedingStage == stage13).FirstOrDefault();

                                                    if (ST13Data != null)
                                                    {
                                                        GenericField100 OGenericObjStatement13 = new GenericField100
                                                        {
                                                            Fld100 = STAGEitem,
                                                            Fld1 = ca.OEmpCode == null ? "" : ca.OEmpCode,
                                                            Fld2 = ca.OEmpName == null ? "" : ca.OEmpName,
                                                            Fld3 = GeoDataInd == null ? "" : GeoDataInd.FuncStruct_Job_Name,
                                                            Fld4 = itemPS.OCaseNo != "" ? itemPS.OCaseNo.ToString() : "",
                                                            Fld16 = ST13Data.FinalShowCauseNoticeServing != null ? ST13Data.FinalShowCauseNoticeServing.IsClosedServing.ToString() : "",
                                                            Fld17 = ST13Data.FinalShowCauseNoticeServing != null ? ST13Data.FinalShowCauseNoticeServing.Narration.ToString() : "",
                                                            Fld37 = ST13Data.FinalShowCauseNoticeServing != null ? ST13Data.FinalShowCauseNoticeServing.IsNoticeRecd.ToString() : "",
                                                            Fld38 = ST13Data.FinalShowCauseNoticeServing != null && ST13Data.FinalShowCauseNoticeServing.NoticeServingDate != null ? ST13Data.FinalShowCauseNoticeServing.NoticeServingDate.Value.ToShortDateString() : "",
                                                            Fld39 = ST13Data.FinalShowCauseNoticeServing != null ? ST13Data.FinalShowCauseNoticeServing.IsWitnessReqd.ToString() : "",

                                                            //Fld92 = "IsNoticeRecd: ",
                                                            //Fld93 = "FinalShowCauseNoticeServing Date: ",
                                                            //Fld94 = "IsWitnessReqd: ",

                                                        };

                                                        if (comp)
                                                        {
                                                            OGenericObjStatement13.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                        }
                                                        if (div)
                                                        {
                                                            OGenericObjStatement13.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                        }
                                                        if (loca)
                                                        {
                                                            OGenericObjStatement13.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                        }
                                                        if (dept)
                                                        {
                                                            OGenericObjStatement13.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                        }
                                                        if (grp)
                                                        {
                                                            OGenericObjStatement13.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                        }
                                                        if (unit)
                                                        {
                                                            OGenericObjStatement13.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                        }
                                                        if (grade)
                                                        {
                                                            OGenericObjStatement13.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                        }
                                                        if (lvl)
                                                        {
                                                            OGenericObjStatement13.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                        }
                                                        if (jobstat)
                                                        {
                                                            OGenericObjStatement13.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                        }
                                                        if (job)
                                                        {
                                                            OGenericObjStatement13.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                        }
                                                        if (jobpos)
                                                        {
                                                            OGenericObjStatement13.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                        }
                                                        if (emp)
                                                        {
                                                            OGenericObjStatement13.Fld88 = ca.OEmpName;
                                                        }
                                                        OGenericPayrollStatement.Add(OGenericObjStatement13);

                                                        // return OGenericPayrollStatement;
                                                    }

                                                    break;


                                                case "14":
                                                    int stage14 = Convert.ToInt32(STAGEitem);
                                                    EmpDisciplineProcedings ST14Data = db.EmpDisciplineProcedings
                                                            .Include(e => e.FinalShowCauseNoticeReply)
                                                            .Where(e => e.CaseNo == itemPS.OCaseNo && e.ProceedingStage == stage14).FirstOrDefault();

                                                    if (ST14Data != null)
                                                    {
                                                        GenericField100 OGenericObjStatement14 = new GenericField100
                                                        {
                                                            Fld100 = STAGEitem,
                                                            Fld1 = ca.OEmpCode == null ? "" : ca.OEmpCode,
                                                            Fld2 = ca.OEmpName == null ? "" : ca.OEmpName,
                                                            Fld3 = GeoDataInd == null ? "" : GeoDataInd.FuncStruct_Job_Name,
                                                            Fld4 = itemPS.OCaseNo != "" ? itemPS.OCaseNo.ToString() : "",
                                                            Fld28 = ST14Data.FinalShowCauseNoticeReply != null ? ST14Data.FinalShowCauseNoticeReply.ReplyDetails.ToString() : "",
                                                            Fld29 = ST14Data.FinalShowCauseNoticeReply != null ? ST14Data.FinalShowCauseNoticeReply.IsReplyStudied.ToString() : "",
                                                            Fld40 = ST14Data.FinalShowCauseNoticeReply != null ? ST14Data.FinalShowCauseNoticeReply.FullDetails.ToString() : "",
                                                            Fld41 = ST14Data.FinalShowCauseNoticeReply != null ? ST14Data.FinalShowCauseNoticeReply.NoticeReplyRecdDate.Value.ToShortDateString() : "",

                                                            //Fld95 = "FinalShowCauseNoticeReply Date: ",
                                                            //Fld96 = "FinalShowCauseNoticeReply Details: ",


                                                        };


                                                        if (comp)
                                                        {
                                                            OGenericObjStatement14.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                        }
                                                        if (div)
                                                        {
                                                            OGenericObjStatement14.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                        }
                                                        if (loca)
                                                        {
                                                            OGenericObjStatement14.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                        }
                                                        if (dept)
                                                        {
                                                            OGenericObjStatement14.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                        }
                                                        if (grp)
                                                        {
                                                            OGenericObjStatement14.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                        }
                                                        if (unit)
                                                        {
                                                            OGenericObjStatement14.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                        }
                                                        if (grade)
                                                        {
                                                            OGenericObjStatement14.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                        }
                                                        if (lvl)
                                                        {
                                                            OGenericObjStatement14.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                        }
                                                        if (jobstat)
                                                        {
                                                            OGenericObjStatement14.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                        }
                                                        if (job)
                                                        {
                                                            OGenericObjStatement14.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                        }
                                                        if (jobpos)
                                                        {
                                                            OGenericObjStatement14.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                        }
                                                        if (emp)
                                                        {
                                                            OGenericObjStatement14.Fld88 = ca.OEmpName;
                                                        }

                                                        OGenericPayrollStatement.Add(OGenericObjStatement14);

                                                        // return OGenericPayrollStatement;
                                                    }

                                                    break;

                                                case "15":
                                                    int stage15 = Convert.ToInt32(STAGEitem);
                                                    EmpDisciplineProcedings ST15Data = db.EmpDisciplineProcedings
                                                            .Include(e => e.FinalShowCauseNoticeClarification)
                                                            .Where(e => e.CaseNo == itemPS.OCaseNo && e.ProceedingStage == stage15).FirstOrDefault();

                                                    if (ST15Data != null)
                                                    {
                                                        GenericField100 OGenericObjStatement15 = new GenericField100
                                                        {
                                                            Fld100 = STAGEitem,
                                                            Fld1 = ca.OEmpCode == null ? "" : ca.OEmpCode,
                                                            Fld2 = ca.OEmpName == null ? "" : ca.OEmpName,
                                                            Fld3 = GeoDataInd == null ? "" : GeoDataInd.FuncStruct_Job_Name,
                                                            Fld4 = itemPS.OCaseNo != "" ? itemPS.OCaseNo.ToString() : "",
                                                            Fld10 = ST15Data.FinalShowCauseNoticeClarification != null ? ST15Data.FinalShowCauseNoticeClarification.Narration.ToString() : "",
                                                            Fld42 = ST15Data.FinalShowCauseNoticeClarification != null ? ST15Data.FinalShowCauseNoticeClarification.ReplyClarificationDetails.ToString() : "",
                                                            Fld43 = ST15Data.FinalShowCauseNoticeClarification != null && ST15Data.FinalShowCauseNoticeClarification.NoticeReplyClarificationDate != null ? ST15Data.FinalShowCauseNoticeClarification.NoticeReplyClarificationDate.Value.ToShortDateString() : "",

                                                            //Fld97 = "ReplyClarificationDetails: ",
                                                            //Fld98 = "NoticeReplyClarification Date: ",

                                                        };

                                                        if (comp)
                                                        {
                                                            OGenericObjStatement15.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                        }
                                                        if (div)
                                                        {
                                                            OGenericObjStatement15.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                        }
                                                        if (loca)
                                                        {
                                                            OGenericObjStatement15.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                        }
                                                        if (dept)
                                                        {
                                                            OGenericObjStatement15.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                        }
                                                        if (grp)
                                                        {
                                                            OGenericObjStatement15.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                        }
                                                        if (unit)
                                                        {
                                                            OGenericObjStatement15.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                        }
                                                        if (grade)
                                                        {
                                                            OGenericObjStatement15.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                        }
                                                        if (lvl)
                                                        {
                                                            OGenericObjStatement15.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                        }
                                                        if (jobstat)
                                                        {
                                                            OGenericObjStatement15.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                        }
                                                        if (job)
                                                        {
                                                            OGenericObjStatement15.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                        }
                                                        if (jobpos)
                                                        {
                                                            OGenericObjStatement15.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                        }
                                                        if (emp)
                                                        {
                                                            OGenericObjStatement15.Fld88 = ca.OEmpName;
                                                        }

                                                        OGenericPayrollStatement.Add(OGenericObjStatement15);

                                                        // return OGenericPayrollStatement;
                                                    }

                                                    break;


                                                case "16":
                                                    int stage16 = Convert.ToInt32(STAGEitem);
                                                    EmpDisciplineProcedings ST16Data = db.EmpDisciplineProcedings
                                                            .Include(e => e.FinalShowCauseNoticeClarificarionServing)
                                                            .Where(e => e.CaseNo == itemPS.OCaseNo && e.ProceedingStage == stage16).FirstOrDefault();

                                                    if (ST16Data != null)
                                                    {
                                                        GenericField100 OGenericObjStatement16 = new GenericField100
                                                        {
                                                            Fld100 = STAGEitem,
                                                            Fld1 = ca.OEmpCode == null ? "" : ca.OEmpCode,
                                                            Fld2 = ca.OEmpName == null ? "" : ca.OEmpName,
                                                            Fld3 = GeoDataInd == null ? "" : GeoDataInd.FuncStruct_Job_Name,
                                                            Fld4 = itemPS.OCaseNo != "" ? itemPS.OCaseNo.ToString() : "",
                                                            Fld15 = ST16Data.FinalShowCauseNoticeClarificarionServing != null ? ST16Data.FinalShowCauseNoticeClarificarionServing.IsWitnessReqd.ToString() : "",
                                                            Fld16 = ST16Data.FinalShowCauseNoticeClarificarionServing != null ? ST16Data.FinalShowCauseNoticeClarificarionServing.IsClosedServing.ToString() : "",
                                                            Fld17 = ST16Data.FinalShowCauseNoticeClarificarionServing != null ? ST16Data.FinalShowCauseNoticeClarificarionServing.Narration.ToString() : "",
                                                            Fld44 = ST16Data.FinalShowCauseNoticeClarificarionServing != null ? ST16Data.FinalShowCauseNoticeClarificarionServing.IsNoticeRecd.ToString() : "",
                                                            Fld45 = ST16Data.FinalShowCauseNoticeClarificarionServing != null && ST16Data.FinalShowCauseNoticeClarificarionServing.NoticeClarificationServingDate != null ? ST16Data.FinalShowCauseNoticeClarificarionServing.NoticeClarificationServingDate.Value.ToShortDateString() : "",


                                                        };

                                                        if (comp)
                                                        {
                                                            OGenericObjStatement16.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                        }
                                                        if (div)
                                                        {
                                                            OGenericObjStatement16.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                        }
                                                        if (loca)
                                                        {
                                                            OGenericObjStatement16.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                        }
                                                        if (dept)
                                                        {
                                                            OGenericObjStatement16.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                        }
                                                        if (grp)
                                                        {
                                                            OGenericObjStatement16.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                        }
                                                        if (unit)
                                                        {
                                                            OGenericObjStatement16.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                        }
                                                        if (grade)
                                                        {
                                                            OGenericObjStatement16.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                        }
                                                        if (lvl)
                                                        {
                                                            OGenericObjStatement16.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                        }
                                                        if (jobstat)
                                                        {
                                                            OGenericObjStatement16.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                        }
                                                        if (job)
                                                        {
                                                            OGenericObjStatement16.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                        }
                                                        if (jobpos)
                                                        {
                                                            OGenericObjStatement16.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                        }
                                                        if (emp)
                                                        {
                                                            OGenericObjStatement16.Fld88 = ca.OEmpName;
                                                        }

                                                        OGenericPayrollStatement.Add(OGenericObjStatement16);

                                                        // return OGenericPayrollStatement;
                                                    }

                                                    break;


                                                case "17":
                                                    int stage17 = Convert.ToInt32(STAGEitem);
                                                    EmpDisciplineProcedings ST17Data = db.EmpDisciplineProcedings
                                                            .Include(e => e.PunishmentOrder)
                                                            .Where(e => e.CaseNo == itemPS.OCaseNo && e.ProceedingStage == stage17).FirstOrDefault();

                                                    if (ST17Data != null)
                                                    {
                                                        GenericField100 OGenericObjStatement17 = new GenericField100
                                                        {

                                                            Fld100 = STAGEitem,
                                                            Fld1 = ca.OEmpCode == null ? "" : ca.OEmpCode,
                                                            Fld2 = ca.OEmpName == null ? "" : ca.OEmpName,
                                                            Fld3 = GeoDataInd == null ? "" : GeoDataInd.FuncStruct_Job_Name,
                                                            Fld4 = itemPS.OCaseNo != "" ? itemPS.OCaseNo.ToString() : "",
                                                            Fld14 = ST17Data.PunishmentOrder != null ? ST17Data.PunishmentOrder.ReplyTime.ToString() : "",
                                                            Fld15 = ST17Data.PunishmentOrder != null ? ST17Data.PunishmentOrder.Narration.ToString() : "",
                                                            Fld46 = ST17Data.PunishmentOrder != null ? ST17Data.PunishmentOrder.PunishmentOrderNo.ToString() : "",
                                                            Fld47 = ST17Data.PunishmentOrder != null && ST17Data.PunishmentOrder.PunishmentOrderDate != null ? ST17Data.PunishmentOrder.PunishmentOrderDate.Value.ToShortDateString() : "",
                                                            Fld48 = ST17Data.PunishmentOrder != null ? ST17Data.PunishmentOrder.PunishmentOrderDetails.ToString() : "",

                                                        };

                                                        if (comp)
                                                        {
                                                            OGenericObjStatement17.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                        }
                                                        if (div)
                                                        {
                                                            OGenericObjStatement17.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                        }
                                                        if (loca)
                                                        {
                                                            OGenericObjStatement17.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                        }
                                                        if (dept)
                                                        {
                                                            OGenericObjStatement17.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                        }
                                                        if (grp)
                                                        {
                                                            OGenericObjStatement17.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                        }
                                                        if (unit)
                                                        {
                                                            OGenericObjStatement17.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                        }
                                                        if (grade)
                                                        {
                                                            OGenericObjStatement17.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                        }
                                                        if (lvl)
                                                        {
                                                            OGenericObjStatement17.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                        }
                                                        if (jobstat)
                                                        {
                                                            OGenericObjStatement17.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                        }
                                                        if (job)
                                                        {
                                                            OGenericObjStatement17.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                        }
                                                        if (jobpos)
                                                        {
                                                            OGenericObjStatement17.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                        }
                                                        if (emp)
                                                        {
                                                            OGenericObjStatement17.Fld88 = ca.OEmpName;
                                                        }

                                                        OGenericPayrollStatement.Add(OGenericObjStatement17);

                                                        // return OGenericPayrollStatement;
                                                    }

                                                    break;


                                                case "18":
                                                    int stage18 = Convert.ToInt32(STAGEitem);
                                                    EmpDisciplineProcedings ST18Data = db.EmpDisciplineProcedings
                                                            .Include(e => e.PunishmentOrderDelivery).Include(e => e.PunishmentOrderDelivery.PunishmentOrderServingMode)
                                                            .Include(e => e.PunishmentOrderDelivery.PunishmentOrderServingMode.ChargeSheetServingModeName)
                                                            .Where(e => e.CaseNo == itemPS.OCaseNo && e.ProceedingStage == stage18).FirstOrDefault();

                                                    if (ST18Data != null)
                                                    {

                                                        GenericField100 OGenericObjStatement18 = new GenericField100
                                                        {

                                                            Fld100 = STAGEitem,
                                                            Fld1 = ca.OEmpCode == null ? "" : ca.OEmpCode,
                                                            Fld2 = ca.OEmpName == null ? "" : ca.OEmpName,
                                                            Fld3 = GeoDataInd == null ? "" : GeoDataInd.FuncStruct_Job_Name,
                                                            Fld4 = itemPS.OCaseNo != "" ? itemPS.OCaseNo.ToString() : "",
                                                            Fld23 = ST18Data.PunishmentOrderDelivery != null ? ST18Data.PunishmentOrderDelivery.IsWitnessReqd.ToString() : "",
                                                            Fld24 = ST18Data.PunishmentOrderDelivery != null ? ST18Data.PunishmentOrderDelivery.IsClosedServing.ToString() : "",
                                                            Fld25 = ST18Data.PunishmentOrderDelivery != null ? ST18Data.PunishmentOrderDelivery.Narration.ToString() : "",
                                                            Fld49 = ST18Data.PunishmentOrderDelivery != null ? ST18Data.PunishmentOrderDelivery.IsNoticeRecd.ToString() : "",
                                                            Fld50 = ST18Data.PunishmentOrderDelivery != null && ST18Data.PunishmentOrderDelivery.PunishmentOrderServingDate != null ? ST18Data.PunishmentOrderDelivery.PunishmentOrderServingDate.Value.ToShortDateString() : "",
                                                            Fld51 = ST18Data.PunishmentOrderDelivery != null ? ST18Data.PunishmentOrderDelivery.PunishmentOrderServingMode.ChargeSheetServingModeName.LookupVal.ToString() : "",

                                                        };

                                                        if (comp)
                                                        {
                                                            OGenericObjStatement18.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                        }
                                                        if (div)
                                                        {
                                                            OGenericObjStatement18.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                        }
                                                        if (loca)
                                                        {
                                                            OGenericObjStatement18.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                        }
                                                        if (dept)
                                                        {
                                                            OGenericObjStatement18.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                        }
                                                        if (grp)
                                                        {
                                                            OGenericObjStatement18.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                        }
                                                        if (unit)
                                                        {
                                                            OGenericObjStatement18.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                        }
                                                        if (grade)
                                                        {
                                                            OGenericObjStatement18.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                        }
                                                        if (lvl)
                                                        {
                                                            OGenericObjStatement18.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                        }
                                                        if (jobstat)
                                                        {
                                                            OGenericObjStatement18.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                        }
                                                        if (job)
                                                        {
                                                            OGenericObjStatement18.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                        }
                                                        if (jobpos)
                                                        {
                                                            OGenericObjStatement18.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                        }
                                                        if (emp)
                                                        {
                                                            OGenericObjStatement18.Fld88 = ca.OEmpName;
                                                        }

                                                        OGenericPayrollStatement.Add(OGenericObjStatement18);

                                                        // return OGenericPayrollStatement;
                                                    }

                                                    break;


                                                case "19":
                                                    int stage19 = Convert.ToInt32(STAGEitem);
                                                    EmpDisciplineProcedings ST19Data = db.EmpDisciplineProcedings
                                                            .Include(e => e.PunishmentOrderApeal)
                                                            .Where(e => e.CaseNo == itemPS.OCaseNo && e.ProceedingStage == stage19).FirstOrDefault();

                                                    if (ST19Data != null)
                                                    {
                                                        GenericField100 OGenericObjStatement19 = new GenericField100
                                                        {
                                                            Fld100 = STAGEitem,
                                                            Fld1 = ca.OEmpCode == null ? "" : ca.OEmpCode,
                                                            Fld2 = ca.OEmpName == null ? "" : ca.OEmpName,
                                                            Fld3 = GeoDataInd == null ? "" : GeoDataInd.FuncStruct_Job_Name,
                                                            Fld4 = itemPS.OCaseNo != "" ? itemPS.OCaseNo.ToString() : "",
                                                            Fld52 = ST19Data.PunishmentOrderApeal != null ? ST19Data.PunishmentOrderApeal.IsPunishmentOrderApealStudied.ToString() : "",
                                                            Fld53 = ST19Data.PunishmentOrderApeal != null && ST19Data.PunishmentOrderApeal.PunishmentOrderApealRecdDate != null ? ST19Data.PunishmentOrderApeal.PunishmentOrderApealRecdDate.Value.ToShortDateString() : "",
                                                            Fld54 = ST19Data.PunishmentOrderApeal != null ? ST19Data.PunishmentOrderApeal.PunishmentOrderApealDetails.ToString() : "",
                                                            Fld16 = ST19Data.PunishmentOrderApeal != null ? ST19Data.PunishmentOrderApeal.Narration.ToString() : "",

                                                        };

                                                        if (comp)
                                                        {
                                                            OGenericObjStatement19.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                        }
                                                        if (div)
                                                        {
                                                            OGenericObjStatement19.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                        }
                                                        if (loca)
                                                        {
                                                            OGenericObjStatement19.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                        }
                                                        if (dept)
                                                        {
                                                            OGenericObjStatement19.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                        }
                                                        if (grp)
                                                        {
                                                            OGenericObjStatement19.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                        }
                                                        if (unit)
                                                        {
                                                            OGenericObjStatement19.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                        }
                                                        if (grade)
                                                        {
                                                            OGenericObjStatement19.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                        }
                                                        if (lvl)
                                                        {
                                                            OGenericObjStatement19.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                        }
                                                        if (jobstat)
                                                        {
                                                            OGenericObjStatement19.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                        }
                                                        if (job)
                                                        {
                                                            OGenericObjStatement19.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                        }
                                                        if (jobpos)
                                                        {
                                                            OGenericObjStatement19.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                        }
                                                        if (emp)
                                                        {
                                                            OGenericObjStatement19.Fld88 = ca.OEmpName;
                                                        }

                                                        OGenericPayrollStatement.Add(OGenericObjStatement19);

                                                        // return OGenericPayrollStatement;
                                                    }

                                                    break;


                                                case "20":
                                                    int stage20 = Convert.ToInt32(STAGEitem);
                                                    EmpDisciplineProcedings ST20Data = db.EmpDisciplineProcedings
                                                            .Include(e => e.PunishmentOrderApealReply)
                                                            .Where(e => e.CaseNo == itemPS.OCaseNo && e.ProceedingStage == stage20).FirstOrDefault();

                                                    if (ST20Data != null)
                                                    {
                                                        GenericField100 OGenericObjStatement20 = new GenericField100
                                                        {
                                                            Fld100 = STAGEitem,
                                                            Fld1 = ca.OEmpCode == null ? "" : ca.OEmpCode,
                                                            Fld2 = ca.OEmpName == null ? "" : ca.OEmpName,
                                                            Fld3 = GeoDataInd == null ? "" : GeoDataInd.FuncStruct_Job_Name,
                                                            Fld4 = itemPS.OCaseNo != "" ? itemPS.OCaseNo.ToString() : "",
                                                            Fld15 = ST20Data.PunishmentOrderApealReply != null ? ST20Data.PunishmentOrderApealReply.Narration.ToString() : "",
                                                            Fld55 = ST20Data.PunishmentOrderApealReply != null ? ST20Data.PunishmentOrderApealReply.PunishmentOrderApealReplyDetails.ToString() : "",
                                                            Fld56 = ST20Data.PunishmentOrderApealReply != null && ST20Data.PunishmentOrderApealReply.PunishmentOrderApealReplyDate != null ? ST20Data.PunishmentOrderApealReply.PunishmentOrderApealReplyDate.Value.ToShortDateString() : "",


                                                        };

                                                        if (comp)
                                                        {
                                                            OGenericObjStatement20.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                        }
                                                        if (div)
                                                        {
                                                            OGenericObjStatement20.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                        }
                                                        if (loca)
                                                        {
                                                            OGenericObjStatement20.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                        }
                                                        if (dept)
                                                        {
                                                            OGenericObjStatement20.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                        }
                                                        if (grp)
                                                        {
                                                            OGenericObjStatement20.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                        }
                                                        if (unit)
                                                        {
                                                            OGenericObjStatement20.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                        }
                                                        if (grade)
                                                        {
                                                            OGenericObjStatement20.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                        }
                                                        if (lvl)
                                                        {
                                                            OGenericObjStatement20.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                        }
                                                        if (jobstat)
                                                        {
                                                            OGenericObjStatement20.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                        }
                                                        if (job)
                                                        {
                                                            OGenericObjStatement20.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                        }
                                                        if (jobpos)
                                                        {
                                                            OGenericObjStatement20.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                        }
                                                        if (emp)
                                                        {
                                                            OGenericObjStatement20.Fld88 = ca.OEmpName;
                                                        }

                                                        OGenericPayrollStatement.Add(OGenericObjStatement20);

                                                        // return OGenericPayrollStatement;
                                                    }

                                                    break;


                                                case "21":
                                                    int stage21 = Convert.ToInt32(STAGEitem);
                                                    EmpDisciplineProcedings ST21Data = db.EmpDisciplineProcedings
                                                            .Include(e => e.PunishmentOrderImplementation)
                                                            .Where(e => e.CaseNo == itemPS.OCaseNo && e.ProceedingStage == stage21).FirstOrDefault();

                                                    if (ST21Data != null)
                                                    {
                                                        GenericField100 OGenericObjStatement21 = new GenericField100
                                                        {
                                                            Fld100 = STAGEitem,
                                                            Fld1 = ca.OEmpCode == null ? "" : ca.OEmpCode,
                                                            Fld2 = ca.OEmpName == null ? "" : ca.OEmpName,
                                                            Fld3 = GeoDataInd == null ? "" : GeoDataInd.FuncStruct_Job_Name,
                                                            Fld4 = itemPS.OCaseNo != "" ? itemPS.OCaseNo.ToString() : "",
                                                            Fld57 = ST21Data.PunishmentOrderImplementation != null ? ST21Data.PunishmentOrderImplementation.IsInformedHR.ToString() : "",
                                                            Fld58 = ST21Data.PunishmentOrderImplementation != null && ST21Data.PunishmentOrderImplementation.PunishmentOrderImplementationDate != null ? ST21Data.PunishmentOrderImplementation.PunishmentOrderImplementationDate.Value.ToShortDateString() : "",
                                                            Fld59 = ST21Data.PunishmentOrderImplementation != null ? ST21Data.PunishmentOrderImplementation.PunishmentOrderImplementationDetails.ToString() : "",

                                                        };

                                                        if (comp)
                                                        {
                                                            OGenericObjStatement21.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                        }
                                                        if (div)
                                                        {
                                                            OGenericObjStatement21.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                        }
                                                        if (loca)
                                                        {
                                                            OGenericObjStatement21.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                        }
                                                        if (dept)
                                                        {
                                                            OGenericObjStatement21.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                        }
                                                        if (grp)
                                                        {
                                                            OGenericObjStatement21.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                        }
                                                        if (unit)
                                                        {
                                                            OGenericObjStatement21.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                        }
                                                        if (grade)
                                                        {
                                                            OGenericObjStatement21.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                        }
                                                        if (lvl)
                                                        {
                                                            OGenericObjStatement21.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                        }
                                                        if (jobstat)
                                                        {
                                                            OGenericObjStatement21.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                        }
                                                        if (job)
                                                        {
                                                            OGenericObjStatement21.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                        }
                                                        if (jobpos)
                                                        {
                                                            OGenericObjStatement21.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                        }
                                                        if (emp)
                                                        {
                                                            OGenericObjStatement21.Fld88 = ca.OEmpName;
                                                        }
                                                        OGenericPayrollStatement.Add(OGenericObjStatement21);

                                                        // return OGenericPayrollStatement;
                                                    }

                                                    break;





                                            #endregion


                                            }
                                        }
                                    }



                                }
                            }
                            return OGenericPayrollStatement;
                        }

                        break;





                    case "HIERARCHY":
                        //Employee OEmp;
                        var OHIERARCHYLvDetails = new List<Employee>();
                        foreach (var item in EmpLeaveIdList)
                        {
                            var Employees = db.Employee
                                // .Include(e => e.EmpName)
                                //    .Include(e => e.FuncStruct)
                                // .Include(e => e.FuncStruct.Job)
                                // .Include(e => e.FuncStruct.JobPosition)
                                //    .Include(e => e.PayStruct)
                                //.Include(e => e.PayStruct.Grade)
                                //.Include(e => e.PayStruct.Level)
                                //.Include(e => e.PayStruct.JobStatus)
                                //    .Include(e => e.GeoStruct)
                                // .Include(e => e.GeoStruct.Division)
                                // .Include(e => e.GeoStruct.Location)
                                // .Include(e => e.GeoStruct.Location.LocationObj)
                                // .Include(e => e.GeoStruct.Department)
                                // .Include(e => e.GeoStruct.Department.DepartmentObj)
                                //.Include(e => e.GeoStruct.Group)
                                // .Include(e => e.GeoStruct.Unit)
                                //.Include(q => q.ReportingStructRights)
                                //.Include(q => q.ReportingStructRights.Select(e => e.FuncModules))
                                //.Include(q => q.ReportingStructRights.Select(e => e.FuncSubModules))
                                //.Include(q => q.ReportingStructRights.Select(e => e.ReportingStruct.GeoFuncList))
                                //.Include(q => q.ReportingStructRights.Select(e => e.ReportingStruct.GeoGraphList))
                                //.Include(q => q.ReportingStructRights.Select(e => e.ReportingStruct.FuncStruct))
                                //.Include(q => q.ReportingStructRights.Select(e => e.AccessRights))
                                //.Include(q => q.ReportingStructRights.Select(e => e.AccessRights.ActionName))
                            .Where(e => e.Id == item).AsNoTracking().AsParallel()
                                .FirstOrDefault();
                            if (Employees != null)
                            {
                                Employees.EmpName = db.NameSingle.Find(Employees.EmpName_Id);
                                Employees.ReportingStructRights = db.Employee.Where(e => e.Id == Employees.Id).Select(t => t.ReportingStructRights).AsNoTracking().FirstOrDefault();
                                foreach (var item1 in Employees.ReportingStructRights)
                                {
                                    item1.FuncModules = db.LookupValue.Find(item1.FuncModules_Id);
                                    item1.FuncSubModules = db.LookupValue.Find(item1.FuncSubModules_Id);
                                    item1.ReportingStruct = db.ReportingStruct.Find(item1.ReportingStruct_Id);
                                    item1.ReportingStruct.GeoFuncList = db.LookupValue.Find(item1.ReportingStruct.GeoFuncList_Id);
                                    item1.ReportingStruct.GeoGraphList = db.LookupValue.Find(item1.ReportingStruct.GeoGraphList_Id);
                                    item1.ReportingStruct.FuncStruct = db.FuncStruct.Find(item1.ReportingStruct.FuncStruct_Id);
                                    item1.AccessRights = db.AccessRights.Find(item1.AccessRights_Id);
                                    item1.AccessRights.ActionName = db.LookupValue.Find(item1.AccessRights.ActionName_Id);
                                }

                                OHIERARCHYLvDetails.Add(Employees);
                            }
                        }

                        if (OHIERARCHYLvDetails == null || OHIERARCHYLvDetails.Count() == 0)
                        {
                            return null;
                        }
                        else
                        {
                            var month = false;
                            var emp = false;
                            var dept = false;
                            var loca = false;
                            var comp = false;
                            var grp = false;
                            var unit = false;
                            var div = false;
                            var regn = false;
                            var grade = false;
                            var lvl = false;
                            var jobstat = false;
                            var job = false;
                            var jobpos = false;

                            var vc = db.LookupValue.Where(a => forithead.Contains(a.Id.ToString())).ToList();

                            foreach (var item in vc)
                            {
                                if (item.LookupVal.ToUpper() == "MONTH")
                                {
                                    month = true;
                                }
                                if (item.LookupVal.ToUpper() == "LOCATION")
                                {

                                    loca = true;
                                }
                                if (item.LookupVal.ToUpper() == "EMPLOYEE")
                                {
                                    emp = true;
                                }
                                if (item.LookupVal.ToUpper() == "DEPARTMENT")
                                {
                                    dept = true;
                                }
                                if (item.LookupVal.ToUpper() == "COMPANY")
                                {
                                    comp = true;
                                }
                                if (item.LookupVal.ToUpper() == "GROUP")
                                {
                                    grp = true;
                                }
                                if (item.LookupVal.ToUpper() == "UNIT")
                                {
                                    unit = true;
                                }
                                if (item.LookupVal.ToUpper() == "DIVISION")
                                {
                                    div = true;
                                }
                                if (item.LookupVal.ToUpper() == "REGION")
                                {
                                    regn = true;
                                }
                                if (item.LookupVal.ToUpper() == "GRADE")
                                {
                                    grade = true;
                                }
                                if (item.LookupVal.ToUpper() == "LEVEL")
                                {
                                    lvl = true;
                                }
                                if (item.LookupVal.ToUpper() == "JOBSTATUS")
                                {
                                    jobstat = true;
                                }

                                if (item.LookupVal.ToUpper() == "JOB")
                                {
                                    job = true;
                                }
                                if (item.LookupVal.ToUpper() == "JOBPOSITION")
                                {
                                    jobpos = true;
                                }
                            }

                            //List<Utility.ReportClass> GeoData = new List<Utility.ReportClass>();
                            //List<Utility.ReportClass> Paydata = new List<Utility.ReportClass>();
                            //List<Utility.ReportClass> Funcdata = new List<Utility.ReportClass>();

                            //Utility.ReportClass GeoDataInd = new Utility.ReportClass();
                            //Utility.ReportClass PaydataInd = new Utility.ReportClass();
                            //Utility.ReportClass FuncdataInd = new Utility.ReportClass();

                            //GeoData = GetViewData(0);
                            //Paydata = GetViewData(1);
                            //Funcdata = GetViewData(2);
                            Utility.GetOrganizationDataClass GeoDataInd = new Utility.GetOrganizationDataClass();

                            bool sanction = false, approval = false, recomendation = false;
                            if (SpecialGroupslist.Count() > 0 && SpecialGroupslist.Count() != 0)
                            {
                                List<GenericField100> OGenericLvTransObjList = new List<GenericField100>();
                                foreach (var item in SpecialGroupslist)
                                {
                                    if (item == "Sanction")
                                    {
                                        sanction = true;
                                    }
                                    if (item == "Approval")
                                    {
                                        approval = true;
                                    }
                                    if (item == "Recomendation")
                                    {
                                        recomendation = true;
                                    }
                                }
                            }

                            List<string> Module = new List<string>();
                            if (salheadlist.Count() != 0)
                            {
                                Module.AddRange(salheadlist);
                            }
                            else
                            {
                                var a = db.ReportingStructRights.Select(b => b.FuncModules.LookupVal).Distinct().ToList();
                                List<string> te = new List<string>();
                                foreach (var item in a)
                                {
                                    Module.Add(item);
                                }
                            }
                            foreach (var l1 in OHIERARCHYLvDetails)
                            {
                                int? geoid = l1.GeoStruct_Id;

                                int? payid = l1.PayStruct_Id;

                                int? funid = l1.FuncStruct_Id;

                                GeoStruct geostruct = db.GeoStruct.Find(geoid);

                                PayStruct paystruct = db.PayStruct.Find(payid);

                                FuncStruct funstruct = db.FuncStruct.Find(funid);

                                GeoDataInd = ReportRDLCObjectClass.GetOrganizationDataInd(geostruct, paystruct, funstruct, 0);
                                //int geoid = l1.GeoStruct.Id;

                                //int payid = l1.PayStruct.Id;

                                //int funId = l1.FuncStruct.Id;

                                //GeoDataInd = GetViewDataIndiv(geoid, payid, funId, GeoData, 0);
                                //PaydataInd = GetViewDataIndiv(geoid, payid, funId, Paydata, 1);
                                //FuncdataInd = GetViewDataIndiv(geoid, payid, funId, Funcdata, 2);

                                foreach (var item1 in Module)
                                {
                                    var ReportingStructRightsdata = l1.ReportingStructRights.Where(e => e.FuncModules.LookupVal.ToUpper() == item1.ToUpper()).GroupBy(e => e.FuncModules.LookupVal).ToList();

                                    foreach (var l2 in ReportingStructRightsdata)
                                    {
                                        string Sanctionecode = "";
                                        string Sanctionname = "";
                                        string Approvalecode = "";
                                        string Approvalname = "";
                                        string Recomendationcode = "";
                                        string Recomendationname = "";
                                        string FuncModules = "";
                                        string FuncSubModules = "";

                                        FuncModules = l2.Key.ToUpper();
                                        //if (FuncModules == "EPMS" || FuncModules == "ELMS")
                                        //{
                                        foreach (var item in l2)
                                        {
                                            //FuncModules = item.FuncModules.LookupVal;
                                            if (item.FuncSubModules != null)
                                            {
                                                FuncSubModules = item.FuncSubModules.LookupVal;
                                            }
                                            //switch (FuncModules)
                                            //{                                        
                                            //case "ETMS":
                                            //case "EMMS":
                                            //case "ETRM":
                                            //case "EEIS":
                                            //case "ELMS":
                                            if (item.AccessRights != null)
                                            {
                                                var ff = l1.GeoStruct_Id != null ? l1.GeoStruct_Id : 0;
                                                if (ff != 0)
                                                {
                                                    var EmpCode = ""; var EmpName = "";
                                                    //  Employee loc = new Employee();
                                                    GeoStruct temp = new GeoStruct();
                                                    if (item.AccessRights.ActionName.LookupVal == "Sanction")
                                                    {
                                                        Sanctionecode = "";
                                                        Sanctionname = "";
                                                        Approvalecode = "";
                                                        Approvalname = "";
                                                        Recomendationcode = "";
                                                        Recomendationname = "";

                                                        if (item.ReportingStruct != null)
                                                        {
                                                            if (item.ReportingStruct.GeographicalAppl == true)
                                                            {
                                                                switch (item.ReportingStruct.GeoGraphList.LookupVal.ToUpper())
                                                                {
                                                                    case "LOCATION":
                                                                        temp = db.GeoStruct.Include(a => a.Location.Incharge).Include(a => a.Location.Incharge.EmpName).Where(q => q.Id == ff).AsNoTracking().SingleOrDefault();
                                                                        if (temp.Location != null && temp.Location.Incharge != null)
                                                                        {
                                                                            EmpCode = temp.Location.Incharge.EmpCode;
                                                                            EmpName = temp.Location.Incharge.EmpName.FullNameFML;
                                                                        }
                                                                        else
                                                                        {
                                                                            EmpCode = "";
                                                                            EmpName = "";
                                                                        }

                                                                        break;

                                                                    case "DIVISION":
                                                                        temp = db.GeoStruct.Include(a => a.Division.Incharge).Include(a => a.Division.Incharge.EmpName).Where(q => q.Id == ff).AsNoTracking().SingleOrDefault();
                                                                        if (temp.Division != null && temp.Division.Incharge != null)
                                                                        {
                                                                            EmpCode = temp.Division.Incharge.EmpCode;
                                                                            EmpName = temp.Division.Incharge.EmpName.FullNameFML;
                                                                        }
                                                                        else
                                                                        {
                                                                            EmpCode = "";
                                                                            EmpName = "";
                                                                        }
                                                                        break;

                                                                    case "GROUP":
                                                                        temp = db.GeoStruct.Include(a => a.Group.Incharge).Include(a => a.Group.Incharge.EmpName).Where(q => q.Id == ff).AsNoTracking().SingleOrDefault();
                                                                        if (temp.Group != null && temp.Group.Incharge != null)
                                                                        {
                                                                            EmpCode = temp.Group.Incharge.EmpCode;
                                                                            EmpName = temp.Group.Incharge.EmpName.FullNameFML;
                                                                        }
                                                                        else
                                                                        {
                                                                            EmpCode = "";
                                                                            EmpName = "";
                                                                        }

                                                                        break;

                                                                    case "UNIT":
                                                                        temp = db.GeoStruct.Include(a => a.Unit.Incharge).Include(a => a.Unit.Incharge.EmpName).Where(q => q.Id == ff).AsNoTracking().SingleOrDefault();
                                                                        if (temp.Unit != null && temp.Unit.Incharge != null)
                                                                        {
                                                                            EmpCode = temp.Unit.Incharge.EmpCode;
                                                                            EmpName = temp.Unit.Incharge.EmpName.FullNameFML;
                                                                        }
                                                                        else
                                                                        {
                                                                            EmpCode = "";
                                                                            EmpName = "";
                                                                        }
                                                                        break;
                                                                }

                                                            }
                                                            else if (item.ReportingStruct.FunctionalAppl == true)
                                                            {
                                                                switch (item.ReportingStruct.GeoFuncList.LookupVal.ToUpper())
                                                                {
                                                                    case "DEPARTMENT":
                                                                        temp = db.GeoStruct.Include(a => a.Department.Incharge).Include(a => a.Department.Incharge.EmpName).Where(q => q.Id == ff).AsNoTracking().SingleOrDefault();
                                                                        if (temp.Department != null && temp.Department.Incharge != null)
                                                                        {
                                                                            EmpCode = temp.Department.Incharge.EmpCode;
                                                                            EmpName = temp.Department.Incharge.EmpName.FullNameFML;
                                                                        }
                                                                        else
                                                                        {
                                                                            EmpCode = "";
                                                                            EmpName = "";
                                                                        }
                                                                        break;
                                                                }
                                                            }
                                                            else if (item.ReportingStruct.RoleBasedAppl == true)
                                                            {
                                                                if (item.ReportingStruct.FuncStruct != null)
                                                                {
                                                                    var funrolebaseid = db.FuncStruct.Where(q => q.Id == item.ReportingStruct.FuncStruct.Id).Select(q => q.Id).SingleOrDefault();
                                                                    var loc = db.Employee.Include(q => q.EmpName).Where(q => q.FuncStruct.Id == funrolebaseid).AsNoTracking().FirstOrDefault();  //change afterward make it to list
                                                                    if (loc != null)
                                                                    {
                                                                        EmpName = loc.EmpName.FullNameFML;
                                                                        EmpCode = loc.EmpCode;

                                                                    }
                                                                    else
                                                                    {
                                                                        EmpCode = "";
                                                                        EmpName = "";
                                                                    }
                                                                }
                                                            }
                                                            //if (loc != null)
                                                            //{
                                                            Sanctionecode = EmpCode;
                                                            Sanctionname = EmpName;

                                                            GenericField100 OGenericLvTransObjStatement = new GenericField100()
                                                            //write data to generic class
                                                            {
                                                                Fld1 = l1.EmpCode.ToString(),
                                                                Fld2 = l1.EmpName.FullNameFML.ToString(),
                                                                Fld3 = GeoDataInd.GeoStruct_Location_Name,
                                                                Fld4 = GeoDataInd.GeoStruct_Department_Name,
                                                                Fld5 = GeoDataInd.PayStruct_Grade_Name,
                                                                Fld6 = GeoDataInd.FuncStruct_JobPosition_Name,
                                                                Fld7 = Sanctionecode,
                                                                Fld8 = Sanctionname,
                                                                Fld9 = Approvalecode,
                                                                Fld10 = Approvalname,
                                                                Fld15 = Recomendationcode,
                                                                Fld16 = Recomendationname,
                                                                Fld11 = FuncModules,
                                                                Fld12 = FuncSubModules,
                                                                Fld13 = item.AccessRights.LvNoOfDaysFrom != null ? item.AccessRights.LvNoOfDaysFrom.ToString() : "0",
                                                                Fld14 = item.AccessRights.LvNoOfDaysTo != null ? item.AccessRights.LvNoOfDaysTo.ToString() : "0"

                                                            };


                                                            if (comp)
                                                            {
                                                                OGenericLvTransObjStatement.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                            }
                                                            if (div)
                                                            {
                                                                OGenericLvTransObjStatement.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                            }
                                                            if (loca)
                                                            {
                                                                OGenericLvTransObjStatement.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                            }
                                                            if (dept)
                                                            {
                                                                OGenericLvTransObjStatement.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                            }
                                                            if (grp)
                                                            {
                                                                OGenericLvTransObjStatement.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                            }
                                                            if (unit)
                                                            {
                                                                OGenericLvTransObjStatement.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                            }
                                                            if (grade)
                                                            {
                                                                OGenericLvTransObjStatement.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                            }
                                                            if (lvl)
                                                            {
                                                                OGenericLvTransObjStatement.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                            }
                                                            if (jobstat)
                                                            {
                                                                OGenericLvTransObjStatement.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                            }
                                                            if (job)
                                                            {
                                                                OGenericLvTransObjStatement.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                            }
                                                            if (jobpos)
                                                            {
                                                                OGenericLvTransObjStatement.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                            }
                                                            if (emp)
                                                            {
                                                                OGenericLvTransObjStatement.Fld88 = l1.EmpName.FullNameFML.ToString();
                                                            }
                                                            if (sanction)
                                                            {
                                                                OGenericLvTransObjStatement.Fld87 = Sanctionecode;
                                                            }
                                                            if (approval)
                                                            {
                                                                OGenericLvTransObjStatement.Fld86 = Approvalecode;
                                                            }
                                                            if (recomendation)
                                                            {
                                                                OGenericLvTransObjStatement.Fld85 = Recomendationcode;
                                                            }
                                                            OGenericPayrollStatement.Add(OGenericLvTransObjStatement);

                                                            //}
                                                        }
                                                    }
                                                    else if (item.AccessRights.ActionName.LookupVal == "Approval")
                                                    {
                                                        Sanctionecode = "";
                                                        Sanctionname = "";
                                                        Approvalecode = "";
                                                        Approvalname = "";
                                                        Recomendationcode = "";
                                                        Recomendationname = "";
                                                        if (item.ReportingStruct != null)
                                                        {
                                                            if (item.ReportingStruct.GeographicalAppl == true)
                                                            {
                                                                switch (item.ReportingStruct.GeoGraphList.LookupVal.ToUpper())
                                                                {
                                                                    case "LOCATION":
                                                                        temp = db.GeoStruct.Include(a => a.Location.Incharge).Include(a => a.Location.Incharge.EmpName).Where(q => q.Id == ff).AsNoTracking().SingleOrDefault();
                                                                        if (temp.Location != null && temp.Location.Incharge != null)
                                                                        {
                                                                            EmpCode = temp.Location.Incharge.EmpCode;
                                                                            EmpName = temp.Location.Incharge.EmpName.FullNameFML;
                                                                        }
                                                                        else
                                                                        {
                                                                            EmpCode = "";
                                                                            EmpName = "";
                                                                        }
                                                                        break;

                                                                    case "DIVISION":
                                                                        temp = db.GeoStruct.Include(a => a.Division.Incharge).Include(a => a.Division.Incharge.EmpName).Where(q => q.Id == ff).AsNoTracking().SingleOrDefault();
                                                                        if (temp.Division != null && temp.Division.Incharge != null)
                                                                        {
                                                                            EmpCode = temp.Division.Incharge.EmpCode;
                                                                            EmpName = temp.Division.Incharge.EmpName.FullNameFML;
                                                                        }
                                                                        else
                                                                        {
                                                                            EmpCode = "";
                                                                            EmpName = "";
                                                                        }
                                                                        break;

                                                                    case "GROUP":
                                                                        temp = db.GeoStruct.Include(a => a.Group.Incharge).Include(a => a.Group.Incharge.EmpName).Where(q => q.Id == ff).AsNoTracking().SingleOrDefault();
                                                                        if (temp.Group != null && temp.Group.Incharge != null)
                                                                        {
                                                                            EmpCode = temp.Group.Incharge.EmpCode;
                                                                            EmpName = temp.Group.Incharge.EmpName.FullNameFML;
                                                                        }
                                                                        else
                                                                        {
                                                                            EmpCode = "";
                                                                            EmpName = "";
                                                                        }
                                                                        break;

                                                                    case "UNIT":
                                                                        temp = db.GeoStruct.Include(a => a.Unit.Incharge).Include(a => a.Unit.Incharge.EmpName).Where(q => q.Id == ff).AsNoTracking().SingleOrDefault();
                                                                        if (temp.Unit != null && temp.Unit.Incharge != null)
                                                                        {
                                                                            EmpCode = temp.Unit.Incharge.EmpCode;
                                                                            EmpName = temp.Unit.Incharge.EmpName.FullNameFML;
                                                                        }
                                                                        else
                                                                        {
                                                                            EmpCode = "";
                                                                            EmpName = "";
                                                                        }
                                                                        break;
                                                                }

                                                            }
                                                            else if (item.ReportingStruct.FunctionalAppl == true)
                                                            {
                                                                switch (item.ReportingStruct.GeoFuncList.LookupVal.ToUpper())
                                                                {
                                                                    case "DEPARTMENT":
                                                                        temp = db.GeoStruct.Include(a => a.Department.Incharge).Include(a => a.Department.Incharge.EmpName).Where(q => q.Id == ff).AsNoTracking().SingleOrDefault();
                                                                        if (temp.Department != null && temp.Department.Incharge != null)
                                                                        {
                                                                            EmpCode = temp.Department.Incharge.EmpCode;
                                                                            EmpName = temp.Department.Incharge.EmpName.FullNameFML;
                                                                        }
                                                                        else
                                                                        {
                                                                            EmpCode = "";
                                                                            EmpName = "";
                                                                        }
                                                                        break;
                                                                }
                                                            }
                                                            else if (item.ReportingStruct.RoleBasedAppl == true)
                                                            {
                                                                if (item.ReportingStruct.FuncStruct != null)
                                                                {
                                                                    var funrolebaseid = db.FuncStruct.Where(q => q.Id == item.ReportingStruct.FuncStruct.Id).Select(q => q.Id).SingleOrDefault();
                                                                    var loc = db.Employee.Include(q => q.EmpName).Include(q => q.FuncStruct).Where(q => q.FuncStruct.Id == funrolebaseid).AsNoTracking().FirstOrDefault();  //change afterward make it to list
                                                                    if (loc != null)
                                                                    {
                                                                        EmpName = loc.EmpName.FullNameFML;
                                                                        EmpCode = loc.EmpCode;

                                                                    }
                                                                    else
                                                                    {
                                                                        EmpCode = "";
                                                                        EmpName = "";
                                                                    }
                                                                }
                                                            }
                                                            //if (loc != null)
                                                            //{
                                                            Approvalecode = EmpCode;
                                                            Approvalname = EmpName;

                                                            GenericField100 OGenericLvTransObjStatement = new GenericField100()
                                                            //write data to generic class
                                                            {
                                                                Fld1 = l1.EmpCode.ToString(),
                                                                Fld2 = l1.EmpName.FullNameFML.ToString(),
                                                                Fld3 = GeoDataInd.GeoStruct_Location_Name,
                                                                Fld4 = GeoDataInd.GeoStruct_Department_Name,
                                                                Fld5 = GeoDataInd.PayStruct_Grade_Name,
                                                                Fld6 = GeoDataInd.FuncStruct_JobPosition_Name,
                                                                Fld7 = Sanctionecode,
                                                                Fld8 = Sanctionname,
                                                                Fld9 = Approvalecode,
                                                                Fld10 = Approvalname,
                                                                Fld15 = Recomendationcode,
                                                                Fld16 = Recomendationname,
                                                                Fld11 = FuncModules,
                                                                Fld12 = FuncSubModules,
                                                                Fld13 = item.AccessRights.LvNoOfDaysFrom != null ? item.AccessRights.LvNoOfDaysFrom.ToString() : "0",
                                                                Fld14 = item.AccessRights.LvNoOfDaysTo != null ? item.AccessRights.LvNoOfDaysTo.ToString() : "0"
                                                            };


                                                            if (comp)
                                                            {
                                                                OGenericLvTransObjStatement.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                            }
                                                            if (div)
                                                            {
                                                                OGenericLvTransObjStatement.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                            }
                                                            if (loca)
                                                            {
                                                                OGenericLvTransObjStatement.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                            }
                                                            if (dept)
                                                            {
                                                                OGenericLvTransObjStatement.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                            }
                                                            if (grp)
                                                            {
                                                                OGenericLvTransObjStatement.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                            }
                                                            if (unit)
                                                            {
                                                                OGenericLvTransObjStatement.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                            }
                                                            if (grade)
                                                            {
                                                                OGenericLvTransObjStatement.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                            }
                                                            if (lvl)
                                                            {
                                                                OGenericLvTransObjStatement.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                            }
                                                            if (jobstat)
                                                            {
                                                                OGenericLvTransObjStatement.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                            }
                                                            if (job)
                                                            {
                                                                OGenericLvTransObjStatement.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                            }
                                                            if (jobpos)
                                                            {
                                                                OGenericLvTransObjStatement.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                            }
                                                            if (emp)
                                                            {
                                                                OGenericLvTransObjStatement.Fld88 = l1.EmpName.FullNameFML.ToString();
                                                            }
                                                            if (sanction)
                                                            {
                                                                OGenericLvTransObjStatement.Fld87 = Sanctionecode;
                                                            }
                                                            if (approval)
                                                            {
                                                                OGenericLvTransObjStatement.Fld86 = Approvalecode;
                                                            }
                                                            if (recomendation)
                                                            {
                                                                OGenericLvTransObjStatement.Fld85 = Recomendationcode;
                                                            }
                                                            OGenericPayrollStatement.Add(OGenericLvTransObjStatement);

                                                            //}
                                                        }
                                                    }  //  ======== Approval End ========================

                                                    // =================== Recommendation Start ===================================

                                                    else if (item.AccessRights.ActionName.LookupVal == "Recomendation")
                                                    {
                                                        Sanctionecode = "";
                                                        Sanctionname = "";
                                                        Approvalecode = "";
                                                        Approvalname = "";
                                                        Recomendationcode = "";
                                                        Recomendationname = "";
                                                        if (item.ReportingStruct != null)
                                                        {
                                                            if (item.ReportingStruct.GeographicalAppl == true)
                                                            {
                                                                switch (item.ReportingStruct.GeoGraphList.LookupVal.ToUpper())
                                                                {
                                                                    case "LOCATION":
                                                                        temp = db.GeoStruct.Include(a => a.Location.Incharge).Include(a => a.Location.Incharge.EmpName).Where(q => q.Id == ff).AsNoTracking().SingleOrDefault();
                                                                        if (temp.Location != null && temp.Location.Incharge != null)
                                                                        {
                                                                            EmpCode = temp.Location.Incharge.EmpCode;
                                                                            EmpName = temp.Location.Incharge.EmpName.FullNameFML;
                                                                        }
                                                                        else
                                                                        {
                                                                            EmpCode = "";
                                                                            EmpName = "";
                                                                        }
                                                                        break;

                                                                    case "DIVISION":
                                                                        temp = db.GeoStruct.Include(a => a.Division.Incharge).Include(a => a.Division.Incharge.EmpName).Where(q => q.Id == ff).AsNoTracking().SingleOrDefault();
                                                                        if (temp.Division != null && temp.Division.Incharge != null)
                                                                        {
                                                                            EmpCode = temp.Division.Incharge.EmpCode;
                                                                            EmpName = temp.Division.Incharge.EmpName.FullNameFML;
                                                                        }
                                                                        else
                                                                        {
                                                                            EmpCode = "";
                                                                            EmpName = "";
                                                                        }
                                                                        break;

                                                                    case "GROUP":
                                                                        temp = db.GeoStruct.Include(a => a.Group.Incharge).Include(a => a.Group.Incharge.EmpName).Where(q => q.Id == ff).AsNoTracking().SingleOrDefault();
                                                                        if (temp.Group != null && temp.Group.Incharge != null)
                                                                        {
                                                                            EmpCode = temp.Group.Incharge.EmpCode;
                                                                            EmpName = temp.Group.Incharge.EmpName.FullNameFML;
                                                                        }
                                                                        else
                                                                        {
                                                                            EmpCode = "";
                                                                            EmpName = "";
                                                                        }
                                                                        break;

                                                                    case "UNIT":
                                                                        temp = db.GeoStruct.Include(a => a.Unit.Incharge).Include(a => a.Unit.Incharge.EmpName).Where(q => q.Id == ff).AsNoTracking().SingleOrDefault();
                                                                        if (temp.Unit != null && temp.Unit.Incharge != null)
                                                                        {
                                                                            EmpCode = temp.Unit.Incharge.EmpCode;
                                                                            EmpName = temp.Unit.Incharge.EmpName.FullNameFML;
                                                                        }
                                                                        else
                                                                        {
                                                                            EmpCode = "";
                                                                            EmpName = "";
                                                                        }
                                                                        break;
                                                                }

                                                            }
                                                            else if (item.ReportingStruct.FunctionalAppl == true)
                                                            {
                                                                switch (item.ReportingStruct.GeoFuncList.LookupVal.ToUpper())
                                                                {
                                                                    case "DEPARTMENT":
                                                                        temp = db.GeoStruct.Include(a => a.Department.Incharge).Include(a => a.Department.Incharge.EmpName).Where(q => q.Id == ff).AsNoTracking().SingleOrDefault();
                                                                        if (temp.Department != null && temp.Department.Incharge != null)
                                                                        {
                                                                            EmpCode = temp.Department.Incharge.EmpCode;
                                                                            EmpName = temp.Department.Incharge.EmpName.FullNameFML;
                                                                        }
                                                                        else
                                                                        {
                                                                            EmpCode = "";
                                                                            EmpName = "";
                                                                        }
                                                                        break;
                                                                }
                                                            }
                                                            else if (item.ReportingStruct.RoleBasedAppl == true)
                                                            {
                                                                if (item.ReportingStruct.FuncStruct != null)
                                                                {
                                                                    var funrolebaseid = db.FuncStruct.Where(q => q.Id == item.ReportingStruct.FuncStruct.Id).Select(q => q.Id).SingleOrDefault();
                                                                    var loc = db.Employee.Include(q => q.EmpName).Include(q => q.FuncStruct).Where(q => q.FuncStruct.Id == funrolebaseid).AsNoTracking().FirstOrDefault();  //change afterward make it to list
                                                                    if (loc != null)
                                                                    {
                                                                        EmpName = loc.EmpName.FullNameFML;
                                                                        EmpCode = loc.EmpCode;

                                                                    }
                                                                    else
                                                                    {
                                                                        EmpCode = "";
                                                                        EmpName = "";
                                                                    }
                                                                }
                                                            }
                                                            //if (loc != null)
                                                            //{
                                                            Recomendationcode = EmpCode;
                                                            Recomendationname = EmpName;

                                                            GenericField100 OGenericLvTransObjStatement = new GenericField100()
                                                            //write data to generic class
                                                            {
                                                                Fld1 = l1.EmpCode.ToString(),
                                                                Fld2 = l1.EmpName.FullNameFML.ToString(),
                                                                Fld3 = GeoDataInd.GeoStruct_Location_Name,
                                                                Fld4 = GeoDataInd.GeoStruct_Department_Name,
                                                                Fld5 = GeoDataInd.PayStruct_Grade_Name,
                                                                Fld6 = GeoDataInd.FuncStruct_JobPosition_Name,
                                                                Fld7 = Sanctionecode,
                                                                Fld8 = Sanctionname,
                                                                Fld9 = Approvalecode,
                                                                Fld10 = Approvalname,
                                                                Fld15 = Recomendationcode,
                                                                Fld16 = Recomendationname,
                                                                Fld11 = FuncModules,
                                                                Fld12 = FuncSubModules,
                                                                Fld13 = item.AccessRights.LvNoOfDaysFrom != null ? item.AccessRights.LvNoOfDaysFrom.ToString() : "0",
                                                                Fld14 = item.AccessRights.LvNoOfDaysTo != null ? item.AccessRights.LvNoOfDaysTo.ToString() : "0"
                                                            };


                                                            if (comp)
                                                            {
                                                                OGenericLvTransObjStatement.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                            }
                                                            if (div)
                                                            {
                                                                OGenericLvTransObjStatement.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                            }
                                                            if (loca)
                                                            {
                                                                OGenericLvTransObjStatement.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                            }
                                                            if (dept)
                                                            {
                                                                OGenericLvTransObjStatement.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                            }
                                                            if (grp)
                                                            {
                                                                OGenericLvTransObjStatement.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                            }
                                                            if (unit)
                                                            {
                                                                OGenericLvTransObjStatement.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                            }
                                                            if (grade)
                                                            {
                                                                OGenericLvTransObjStatement.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                            }
                                                            if (lvl)
                                                            {
                                                                OGenericLvTransObjStatement.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                            }
                                                            if (jobstat)
                                                            {
                                                                OGenericLvTransObjStatement.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                            }
                                                            if (job)
                                                            {
                                                                OGenericLvTransObjStatement.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                            }
                                                            if (jobpos)
                                                            {
                                                                OGenericLvTransObjStatement.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                            }
                                                            if (emp)
                                                            {
                                                                OGenericLvTransObjStatement.Fld88 = l1.EmpName.FullNameFML.ToString();
                                                            }
                                                            if (sanction)
                                                            {
                                                                OGenericLvTransObjStatement.Fld87 = Sanctionecode;
                                                            }
                                                            if (approval)
                                                            {
                                                                OGenericLvTransObjStatement.Fld86 = Approvalecode;
                                                            }
                                                            if (recomendation)
                                                            {
                                                                OGenericLvTransObjStatement.Fld85 = Recomendationcode;
                                                            }
                                                            OGenericPayrollStatement.Add(OGenericLvTransObjStatement);

                                                            //}
                                                        }
                                                    } // ================== Recommendation End =========================

                                                }
                                            }
                                            //break;
                                            //case "EPMS":
                                            //    if (item.AccessRights != null)
                                            //    {
                                            //        var ff = l1.GeoStruct_Id != null ? l1.GeoStruct_Id : 0;
                                            //        if (ff != 0)
                                            //        {
                                            //            var EmpCode = ""; var EmpName = "";
                                            //            // Employee loc = new Employee();
                                            //            GeoStruct temp = new GeoStruct();
                                            //            if (item.AccessRights.ActionName.LookupVal == "Sanction")
                                            //            {
                                            //                Sanctionecode = "";
                                            //                Sanctionname = "";
                                            //                Approvalecode = "";
                                            //                Approvalname = "";
                                            //                Recomendationcode = "";
                                            //                Recomendationname = "";

                                            //                if (item.ReportingStruct != null)
                                            //                {
                                            //                    if (item.ReportingStruct.GeographicalAppl == true)
                                            //                    {
                                            //                        switch (item.ReportingStruct.GeoGraphList.LookupVal.ToUpper())
                                            //                        {
                                            //                            case "LOCATION":
                                            //                                temp = db.GeoStruct.Include(a => a.Location.Incharge).Include(a => a.Location.Incharge.EmpName).Where(q => q.Id == ff).SingleOrDefault();
                                            //                                if (temp.Location != null && temp.Location.Incharge != null)
                                            //                                {
                                            //                                    EmpCode = temp.Location.Incharge.EmpCode;
                                            //                                    EmpName = temp.Location.Incharge.EmpName.FullNameFML;
                                            //                                }
                                            //                                else
                                            //                                {
                                            //                                    EmpCode = "";
                                            //                                    EmpName = "";
                                            //                                }
                                            //                                break;

                                            //                            case "DIVISION":
                                            //                                temp = db.GeoStruct.Include(a => a.Division.Incharge).Include(a => a.Division.Incharge.EmpName).Where(q => q.Id == ff).SingleOrDefault();
                                            //                                if (temp.Division != null && temp.Division.Incharge != null)
                                            //                                {
                                            //                                    EmpCode = temp.Division.Incharge.EmpCode;
                                            //                                    EmpName = temp.Division.Incharge.EmpName.FullNameFML;
                                            //                                }
                                            //                                else
                                            //                                {
                                            //                                    EmpCode = "";
                                            //                                    EmpName = "";
                                            //                                }
                                            //                                break;

                                            //                            case "GROUP":
                                            //                                temp = db.GeoStruct.Include(a => a.Group.Incharge).Include(a => a.Group.Incharge.EmpName).Where(q => q.Id == ff).SingleOrDefault();
                                            //                                if (temp.Group != null && temp.Group.Incharge != null)
                                            //                                {
                                            //                                    EmpCode = temp.Group.Incharge.EmpCode;
                                            //                                    EmpName = temp.Group.Incharge.EmpName.FullNameFML;
                                            //                                }
                                            //                                else
                                            //                                {
                                            //                                    EmpCode = "";
                                            //                                    EmpName = "";
                                            //                                }
                                            //                                break;

                                            //                            case "UNIT":
                                            //                                temp = db.GeoStruct.Include(a => a.Unit.Incharge).Include(a => a.Unit.Incharge.EmpName).Where(q => q.Id == ff).SingleOrDefault();
                                            //                                if (temp.Unit != null && temp.Unit.Incharge != null)
                                            //                                {
                                            //                                    EmpCode = temp.Unit.Incharge.EmpCode;
                                            //                                    EmpName = temp.Unit.Incharge.EmpName.FullNameFML;
                                            //                                }
                                            //                                else
                                            //                                {
                                            //                                    EmpCode = "";
                                            //                                    EmpName = "";
                                            //                                }
                                            //                                break;
                                            //                        }

                                            //                    }
                                            //                    else if (item.ReportingStruct.FunctionalAppl == true)
                                            //                    {
                                            //                        switch (item.ReportingStruct.GeoFuncList.LookupVal.ToUpper())
                                            //                        {
                                            //                            case "DEPARTMENT":
                                            //                                temp = db.GeoStruct.Include(a => a.Department.Incharge).Include(a => a.Department.Incharge.EmpName).Where(q => q.Id == ff).SingleOrDefault();
                                            //                                if (temp.Department != null && temp.Department.Incharge != null)
                                            //                                {
                                            //                                    EmpCode = temp.Department.Incharge.EmpCode;
                                            //                                    EmpName = temp.Department.Incharge.EmpName.FullNameFML;
                                            //                                }
                                            //                                else
                                            //                                {
                                            //                                    EmpCode = "";
                                            //                                    EmpName = "";
                                            //                                }
                                            //                                break;
                                            //                        }
                                            //                    }
                                            //                    else if (item.ReportingStruct.RoleBasedAppl == true)
                                            //                    {
                                            //                        if (item.ReportingStruct.FuncStruct != null)
                                            //                        {
                                            //                            var funrolebaseid = db.FuncStruct.Where(q => q.Id == item.ReportingStruct.FuncStruct.Id).Select(q => q.Id).SingleOrDefault();
                                            //                            var loc = db.Employee.Include(q => q.EmpName).Where(q => q.FuncStruct.Id == funrolebaseid).FirstOrDefault();  //change afterward make it to list
                                            //                            if (loc != null)
                                            //                            {
                                            //                                EmpName = loc.EmpName.FullNameFML;
                                            //                                EmpCode = loc.EmpCode;

                                            //                            }
                                            //                            else
                                            //                            {
                                            //                                EmpCode = "";
                                            //                                EmpName = "";
                                            //                            }
                                            //                        }
                                            //                    }
                                            //                    //if (loc != null)
                                            //                    //{
                                            //                    Sanctionecode = EmpCode;
                                            //                    Sanctionname = EmpName;

                                            //                    GenericField100 OGenericLvTransObjStatement = new GenericField100()
                                            //                    //write data to generic class
                                            //                    {
                                            //                        Fld1 = l1.EmpCode.ToString(),
                                            //                        Fld2 = l1.EmpName.FullNameFML.ToString(),
                                            //                        Fld3 = GeoDataInd.GeoStruct_Location_Name,
                                            //                        Fld4 = GeoDataInd.GeoStruct_Department_Name,
                                            //                        Fld5 = GeoDataInd.PayStruct_Grade_Name,
                                            //                        Fld6 = GeoDataInd.FuncStruct_JobPosition_Name,
                                            //                        Fld7 = Sanctionecode,
                                            //                        Fld8 = Sanctionname,
                                            //                        Fld9 = Approvalecode,
                                            //                        Fld10 = Approvalname,
                                            //                        Fld15 = Recomendationcode,
                                            //                        Fld16 = Recomendationname,
                                            //                        Fld11 = FuncModules,
                                            //                        Fld12 = FuncSubModules,
                                            //                        Fld13 = item.AccessRights.LvNoOfDaysFrom != null ? item.AccessRights.LvNoOfDaysFrom.ToString() : "0",
                                            //                        Fld14 = item.AccessRights.LvNoOfDaysTo != null ? item.AccessRights.LvNoOfDaysTo.ToString() : "0"
                                            //                    };


                                            //                    if (comp)
                                            //                    {
                                            //                        OGenericLvTransObjStatement.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                            //                    }
                                            //                    if (div)
                                            //                    {
                                            //                        OGenericLvTransObjStatement.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                            //                    }
                                            //                    if (loca)
                                            //                    {
                                            //                        OGenericLvTransObjStatement.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                            //                    }
                                            //                    if (dept)
                                            //                    {
                                            //                        OGenericLvTransObjStatement.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                            //                    }
                                            //                    if (grp)
                                            //                    {
                                            //                        OGenericLvTransObjStatement.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                            //                    }
                                            //                    if (unit)
                                            //                    {
                                            //                        OGenericLvTransObjStatement.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                            //                    }
                                            //                    if (grade)
                                            //                    {
                                            //                        OGenericLvTransObjStatement.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                            //                    }
                                            //                    if (lvl)
                                            //                    {
                                            //                        OGenericLvTransObjStatement.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                            //                    }
                                            //                    if (jobstat)
                                            //                    {
                                            //                        OGenericLvTransObjStatement.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                            //                    }
                                            //                    if (job)
                                            //                    {
                                            //                        OGenericLvTransObjStatement.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                            //                    }
                                            //                    if (jobpos)
                                            //                    {
                                            //                        OGenericLvTransObjStatement.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                            //                    }
                                            //                    if (emp)
                                            //                    {
                                            //                        OGenericLvTransObjStatement.Fld88 = l1.EmpName.FullNameFML.ToString();
                                            //                    }
                                            //                    if (sanction)
                                            //                    {
                                            //                        OGenericLvTransObjStatement.Fld87 = Sanctionecode;
                                            //                    }
                                            //                    if (approval)
                                            //                    {
                                            //                        OGenericLvTransObjStatement.Fld86 = Approvalecode;
                                            //                    }
                                            //                    if (recomendation)
                                            //                    {
                                            //                        OGenericLvTransObjStatement.Fld85 = Recomendationcode;
                                            //                    }
                                            //                    OGenericPayrollStatement.Add(OGenericLvTransObjStatement);
                                            //                    // }
                                            //                }
                                            //            }
                                            //            else if (item.AccessRights.ActionName.LookupVal == "Approval")
                                            //            {
                                            //                Sanctionecode = "";
                                            //                Sanctionname = "";
                                            //                Approvalecode = "";
                                            //                Approvalname = "";
                                            //                Recomendationcode = "";
                                            //                Recomendationname = "";

                                            //                if (item.ReportingStruct != null)
                                            //                {
                                            //                    if (item.ReportingStruct.GeographicalAppl == true)
                                            //                    {
                                            //                        switch (item.ReportingStruct.GeoGraphList.LookupVal.ToUpper())
                                            //                        {
                                            //                            case "LOCATION":
                                            //                                temp = db.GeoStruct.Include(a => a.Location.Incharge).Include(a => a.Location.Incharge.EmpName).Where(q => q.Id == ff).SingleOrDefault();
                                            //                                if (temp.Location != null && temp.Location.Incharge != null)
                                            //                                    if (temp.Location != null && temp.Location.Incharge != null)
                                            //                                    {
                                            //                                        EmpCode = temp.Location.Incharge.EmpCode;
                                            //                                        EmpName = temp.Location.Incharge.EmpName.FullNameFML;
                                            //                                    }
                                            //                                    else
                                            //                                    {
                                            //                                        EmpCode = "";
                                            //                                        EmpName = "";
                                            //                                    }
                                            //                                break;

                                            //                            case "DIVISION":
                                            //                                temp = db.GeoStruct.Include(a => a.Division.Incharge).Include(a => a.Division.Incharge.EmpName).Where(q => q.Id == ff).SingleOrDefault();
                                            //                                if (temp.Division != null && temp.Division.Incharge != null)
                                            //                                {
                                            //                                    EmpCode = temp.Division.Incharge.EmpCode;
                                            //                                    EmpName = temp.Division.Incharge.EmpName.FullNameFML;
                                            //                                }
                                            //                                else
                                            //                                {
                                            //                                    EmpCode = "";
                                            //                                    EmpName = "";
                                            //                                }
                                            //                                break;

                                            //                            case "GROUP":
                                            //                                temp = db.GeoStruct.Include(a => a.Group.Incharge).Include(a => a.Group.Incharge.EmpName).Where(q => q.Id == ff).SingleOrDefault();
                                            //                                if (temp.Group != null && temp.Group.Incharge != null)
                                            //                                {
                                            //                                    EmpCode = temp.Group.Incharge.EmpCode;
                                            //                                    EmpName = temp.Group.Incharge.EmpName.FullNameFML;
                                            //                                }
                                            //                                else
                                            //                                {
                                            //                                    EmpCode = "";
                                            //                                    EmpName = "";
                                            //                                }
                                            //                                break;

                                            //                            case "UNIT":
                                            //                                temp = db.GeoStruct.Include(a => a.Unit.Incharge).Include(a => a.Unit.Incharge.EmpName).Where(q => q.Id == ff).SingleOrDefault();
                                            //                                if (temp.Unit != null && temp.Unit.Incharge != null)
                                            //                                {
                                            //                                    EmpCode = temp.Unit.Incharge.EmpCode;
                                            //                                    EmpName = temp.Unit.Incharge.EmpName.FullNameFML;
                                            //                                }
                                            //                                else
                                            //                                {
                                            //                                    EmpCode = "";
                                            //                                    EmpName = "";
                                            //                                }
                                            //                                break;
                                            //                        }

                                            //                    }
                                            //                    else if (item.ReportingStruct.FunctionalAppl == true)
                                            //                    {
                                            //                        switch (item.ReportingStruct.GeoFuncList.LookupVal.ToUpper())
                                            //                        {
                                            //                            case "DEPARTMENT":
                                            //                                temp = db.GeoStruct.Include(a => a.Department.Incharge).Include(a => a.Department.Incharge.EmpName).Where(q => q.Id == ff).SingleOrDefault();
                                            //                                if (temp.Department != null && temp.Department.Incharge != null)
                                            //                                {
                                            //                                    EmpCode = temp.Department.Incharge.EmpCode;
                                            //                                    EmpName = temp.Department.Incharge.EmpName.FullNameFML;
                                            //                                }
                                            //                                else
                                            //                                {
                                            //                                    EmpCode = "";
                                            //                                    EmpName = "";
                                            //                                }
                                            //                                break;
                                            //                        }
                                            //                    }
                                            //                    else if (item.ReportingStruct.RoleBasedAppl == true)
                                            //                    {
                                            //                        if (item.ReportingStruct.FuncStruct != null)
                                            //                        {
                                            //                            var funrolebaseid = db.FuncStruct.Where(q => q.Id == item.ReportingStruct.FuncStruct.Id).Select(q => q.Id).SingleOrDefault();
                                            //                            var loc = db.Employee.Include(q => q.EmpName).Include(q => q.FuncStruct).Where(q => q.FuncStruct.Id == funrolebaseid).FirstOrDefault();  //change afterward make it to list
                                            //                            if (loc != null)
                                            //                            {
                                            //                                EmpName = loc.EmpName.FullNameFML;
                                            //                                EmpCode = loc.EmpCode;

                                            //                            }
                                            //                            else
                                            //                            {
                                            //                                EmpCode = "";
                                            //                                EmpName = "";
                                            //                            }
                                            //                        }
                                            //                    }
                                            //                    //if (loc != null)
                                            //                    //{
                                            //                    Approvalecode = EmpCode;
                                            //                    Approvalname = EmpName;

                                            //                    GenericField100 OGenericLvTransObjStatement = new GenericField100()
                                            //                    //write data to generic class
                                            //                    {
                                            //                        Fld1 = l1.EmpCode.ToString(),
                                            //                        Fld2 = l1.EmpName.FullNameFML.ToString(),
                                            //                        Fld3 = GeoDataInd.GeoStruct_Location_Name,
                                            //                        Fld4 = GeoDataInd.GeoStruct_Department_Name,
                                            //                        Fld5 = GeoDataInd.PayStruct_Grade_Name,
                                            //                        Fld6 = GeoDataInd.FuncStruct_JobPosition_Name,
                                            //                        Fld7 = Sanctionecode,
                                            //                        Fld8 = Sanctionname,
                                            //                        Fld9 = Approvalecode,
                                            //                        Fld10 = Approvalname,
                                            //                        Fld15 = Recomendationcode,
                                            //                        Fld16 = Recomendationname,
                                            //                        Fld11 = FuncModules,
                                            //                        Fld12 = FuncSubModules,
                                            //                        Fld13 = item.AccessRights.LvNoOfDaysFrom != null ? item.AccessRights.LvNoOfDaysFrom.ToString() : "0",
                                            //                        Fld14 = item.AccessRights.LvNoOfDaysTo != null ? item.AccessRights.LvNoOfDaysTo.ToString() : "0"
                                            //                    };


                                            //                    if (comp)
                                            //                    {
                                            //                        OGenericLvTransObjStatement.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                            //                    }
                                            //                    if (div)
                                            //                    {
                                            //                        OGenericLvTransObjStatement.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                            //                    }
                                            //                    if (loca)
                                            //                    {
                                            //                        OGenericLvTransObjStatement.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                            //                    }
                                            //                    if (dept)
                                            //                    {
                                            //                        OGenericLvTransObjStatement.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                            //                    }
                                            //                    if (grp)
                                            //                    {
                                            //                        OGenericLvTransObjStatement.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                            //                    }
                                            //                    if (unit)
                                            //                    {
                                            //                        OGenericLvTransObjStatement.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                            //                    }
                                            //                    if (grade)
                                            //                    {
                                            //                        OGenericLvTransObjStatement.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                            //                    }
                                            //                    if (lvl)
                                            //                    {
                                            //                        OGenericLvTransObjStatement.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                            //                    }
                                            //                    if (jobstat)
                                            //                    {
                                            //                        OGenericLvTransObjStatement.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                            //                    }
                                            //                    if (job)
                                            //                    {
                                            //                        OGenericLvTransObjStatement.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                            //                    }
                                            //                    if (jobpos)
                                            //                    {
                                            //                        OGenericLvTransObjStatement.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                            //                    }
                                            //                    if (emp)
                                            //                    {
                                            //                        OGenericLvTransObjStatement.Fld88 = l1.EmpName.FullNameFML.ToString();
                                            //                    }
                                            //                    if (sanction)
                                            //                    {
                                            //                        OGenericLvTransObjStatement.Fld87 = Sanctionecode;
                                            //                    }
                                            //                    if (approval)
                                            //                    {
                                            //                        OGenericLvTransObjStatement.Fld86 = Approvalecode;
                                            //                    }
                                            //                    if (recomendation)
                                            //                    {
                                            //                        OGenericLvTransObjStatement.Fld85 = Recomendationcode;
                                            //                    }
                                            //                    OGenericPayrollStatement.Add(OGenericLvTransObjStatement);
                                            //                    // }
                                            //                }
                                            //            }  //  ======== Approval End ========================

                                            //            // =================== Recommendation Start ===================================

                                            //            else if (item.AccessRights.ActionName.LookupVal == "Recomendation")
                                            //            {
                                            //                Sanctionecode = "";
                                            //                Sanctionname = "";
                                            //                Approvalecode = "";
                                            //                Approvalname = "";
                                            //                Recomendationcode = "";
                                            //                Recomendationname = "";

                                            //                if (item.ReportingStruct != null)
                                            //                {
                                            //                    if (item.ReportingStruct.GeographicalAppl == true)
                                            //                    {
                                            //                        switch (item.ReportingStruct.GeoGraphList.LookupVal.ToUpper())
                                            //                        {
                                            //                            case "LOCATION":
                                            //                                temp = db.GeoStruct.Include(a => a.Location.Incharge).Include(a => a.Location.Incharge.EmpName).Where(q => q.Id == ff).AsNoTracking().SingleOrDefault();
                                            //                                if (temp.Location != null && temp.Location.Incharge != null)
                                            //                                {
                                            //                                    EmpCode = temp.Location.Incharge.EmpCode;
                                            //                                    EmpName = temp.Location.Incharge.EmpName.FullNameFML;
                                            //                                }
                                            //                                else
                                            //                                {
                                            //                                    EmpCode = "";
                                            //                                    EmpName = "";
                                            //                                }
                                            //                                break;

                                            //                            case "DIVISION":
                                            //                                temp = db.GeoStruct.Include(a => a.Division.Incharge).Include(a => a.Division.Incharge.EmpName).Where(q => q.Id == ff).AsNoTracking().SingleOrDefault();
                                            //                                if (temp.Division != null && temp.Division.Incharge != null)
                                            //                                {
                                            //                                    EmpCode = temp.Division.Incharge.EmpCode;
                                            //                                    EmpName = temp.Division.Incharge.EmpName.FullNameFML;
                                            //                                }
                                            //                                else
                                            //                                {
                                            //                                    EmpCode = "";
                                            //                                    EmpName = "";
                                            //                                }
                                            //                                break;

                                            //                            case "GROUP":
                                            //                                temp = db.GeoStruct.Include(a => a.Group.Incharge).Include(a => a.Group.Incharge.EmpName).Where(q => q.Id == ff).AsNoTracking().SingleOrDefault();
                                            //                                if (temp.Group != null && temp.Group.Incharge != null)
                                            //                                {
                                            //                                    EmpCode = temp.Group.Incharge.EmpCode;
                                            //                                    EmpName = temp.Group.Incharge.EmpName.FullNameFML;
                                            //                                }
                                            //                                else
                                            //                                {
                                            //                                    EmpCode = "";
                                            //                                    EmpName = "";
                                            //                                }
                                            //                                break;

                                            //                            case "UNIT":
                                            //                                temp = db.GeoStruct.Include(a => a.Unit.Incharge).Include(a => a.Unit.Incharge.EmpName).Where(q => q.Id == ff).AsNoTracking().SingleOrDefault();
                                            //                                if (temp.Unit != null && temp.Unit.Incharge != null)
                                            //                                {
                                            //                                    EmpCode = temp.Unit.Incharge.EmpCode;
                                            //                                    EmpName = temp.Unit.Incharge.EmpName.FullNameFML;
                                            //                                }
                                            //                                else
                                            //                                {
                                            //                                    EmpCode = "";
                                            //                                    EmpName = "";
                                            //                                }
                                            //                                break;
                                            //                        }

                                            //                    }
                                            //                    else if (item.ReportingStruct.FunctionalAppl == true)
                                            //                    {
                                            //                        switch (item.ReportingStruct.GeoFuncList.LookupVal.ToUpper())
                                            //                        {
                                            //                            case "DEPARTMENT":
                                            //                                temp = db.GeoStruct.Include(a => a.Department.Incharge).Include(a => a.Department.Incharge.EmpName).Where(q => q.Id == ff).AsNoTracking().SingleOrDefault();
                                            //                                if (temp.Department != null && temp.Department.Incharge != null)
                                            //                                {
                                            //                                    EmpCode = temp.Department.Incharge.EmpCode;
                                            //                                    EmpName = temp.Department.Incharge.EmpName.FullNameFML;
                                            //                                }
                                            //                                else
                                            //                                {
                                            //                                    EmpCode = "";
                                            //                                    EmpName = "";
                                            //                                }
                                            //                                break;
                                            //                        }
                                            //                    }
                                            //                    else if (item.ReportingStruct.RoleBasedAppl == true)
                                            //                    {
                                            //                        if (item.ReportingStruct.FuncStruct != null)
                                            //                        {
                                            //                            var funrolebaseid = db.FuncStruct.Where(q => q.Id == item.ReportingStruct.FuncStruct.Id).Select(q => q.Id).SingleOrDefault();
                                            //                            var loc = db.Employee.Include(q => q.EmpName).Include(q => q.FuncStruct).Where(q => q.FuncStruct.Id == funrolebaseid).FirstOrDefault();  //change afterward make it to list
                                            //                            if (loc != null)
                                            //                            {
                                            //                                EmpName = loc.EmpName.FullNameFML;
                                            //                                EmpCode = loc.EmpCode;

                                            //                            }
                                            //                            else
                                            //                            {
                                            //                                EmpCode = "";
                                            //                                EmpName = "";
                                            //                            }
                                            //                        }
                                            //                    }
                                            //                    //if (loc != null)
                                            //                    //{
                                            //                    Recomendationcode = EmpCode;
                                            //                    Recomendationname = EmpName;

                                            //                    GenericField100 OGenericLvTransObjStatement = new GenericField100()
                                            //                    //write data to generic class
                                            //                    {
                                            //                        Fld1 = l1.EmpCode.ToString(),
                                            //                        Fld2 = l1.EmpName.FullNameFML.ToString(),
                                            //                        Fld3 = GeoDataInd.GeoStruct_Location_Name,
                                            //                        Fld4 = GeoDataInd.GeoStruct_Department_Name,
                                            //                        Fld5 = GeoDataInd.PayStruct_Grade_Name,
                                            //                        Fld6 = GeoDataInd.FuncStruct_JobPosition_Name,
                                            //                        Fld7 = Sanctionecode,
                                            //                        Fld8 = Sanctionname,
                                            //                        Fld9 = Approvalecode,
                                            //                        Fld10 = Approvalname,
                                            //                        Fld15 = Recomendationcode,
                                            //                        Fld16 = Recomendationname,
                                            //                        Fld11 = FuncModules,
                                            //                        Fld12 = FuncSubModules,
                                            //                        Fld13 = item.AccessRights.LvNoOfDaysFrom != null ? item.AccessRights.LvNoOfDaysFrom.ToString() : "0",
                                            //                        Fld14 = item.AccessRights.LvNoOfDaysTo != null ? item.AccessRights.LvNoOfDaysTo.ToString() : "0"
                                            //                    };


                                            //                    if (comp)
                                            //                    {
                                            //                        OGenericLvTransObjStatement.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                            //                    }
                                            //                    if (div)
                                            //                    {
                                            //                        OGenericLvTransObjStatement.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                            //                    }
                                            //                    if (loca)
                                            //                    {
                                            //                        OGenericLvTransObjStatement.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                            //                    }
                                            //                    if (dept)
                                            //                    {
                                            //                        OGenericLvTransObjStatement.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                            //                    }
                                            //                    if (grp)
                                            //                    {
                                            //                        OGenericLvTransObjStatement.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                            //                    }
                                            //                    if (unit)
                                            //                    {
                                            //                        OGenericLvTransObjStatement.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                            //                    }
                                            //                    if (grade)
                                            //                    {
                                            //                        OGenericLvTransObjStatement.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                            //                    }
                                            //                    if (lvl)
                                            //                    {
                                            //                        OGenericLvTransObjStatement.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                            //                    }
                                            //                    if (jobstat)
                                            //                    {
                                            //                        OGenericLvTransObjStatement.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                            //                    }
                                            //                    if (job)
                                            //                    {
                                            //                        OGenericLvTransObjStatement.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                            //                    }
                                            //                    if (jobpos)
                                            //                    {
                                            //                        OGenericLvTransObjStatement.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                            //                    }
                                            //                    if (emp)
                                            //                    {
                                            //                        OGenericLvTransObjStatement.Fld88 = l1.EmpName.FullNameFML.ToString();
                                            //                    }
                                            //                    if (sanction)
                                            //                    {
                                            //                        OGenericLvTransObjStatement.Fld87 = Sanctionecode;
                                            //                    }
                                            //                    if (approval)
                                            //                    {
                                            //                        OGenericLvTransObjStatement.Fld86 = Approvalecode;
                                            //                    }
                                            //                    if (recomendation)
                                            //                    {
                                            //                        OGenericLvTransObjStatement.Fld85 = Recomendationcode;
                                            //                    }
                                            //                    OGenericPayrollStatement.Add(OGenericLvTransObjStatement);

                                            //                    //}
                                            //                }
                                            //            } // ================== Recommendation End =========================

                                            //        }
                                            //    }
                                            //    break;
                                            //}

                                        }

                                        //}


                                    }
                                }
                            }

                            return OGenericPayrollStatement;
                        }
                        return null;
                        break;

                    case "APPASSIGNMENT":
                        var OAppDetails = db.EmployeeAppraisal
                            .Include(e => e.EmpAppEvaluation)
                            .Include(e => e.EmpAppEvaluation.Select(a => a.EmpAppRatingConclusion))
                            .Include(e => e.EmpAppEvaluation.Select(a => a.EmpAppRatingConclusion.Select(b => b.AppraisalAssistance)))
                            // .Include(e => e.EmpAppEvaluation.Select(a => a.EmpAppRatingConclusion.Select(b => b.AppraisalPeriodCalendar)))
                            .Include(e => e.EmpAppEvaluation.Select(a => a.EmpAppRatingConclusion.Select(b => b.EmpAppRating)))
                            .Include(e => e.EmpAppEvaluation.Select(a => a.YearlyProgramAssignment))
                            .Include(e => e.EmpAppEvaluation.Select(a => a.EmpAppRatingConclusion.Select(b => b.EmpAppRating.Select(c => c.AppAssignment.AppCategory))))
                            .Include(e => e.EmpAppEvaluation.Select(a => a.EmpAppRatingConclusion.Select(b => b.EmpAppRating.Select(c => c.AppAssignment.AppCategory.AppMode))))
                            .Include(e => e.EmpAppEvaluation)
                            .Include(e => e.Employee)
                            .Include(e => e.Employee.EmpName)
                            .Include(e => e.Employee.PayStruct.Grade)
                            .Include(e => e.Employee.GeoStruct.Department)
                                 .Include(e => e.Employee.FuncStruct.Job)

                         .Where(e => EmpPayrollIdList.Contains(e.Employee.Id)).ToList();

                        if (OAppDetails == null || OAppDetails.Count() == 0)
                        {
                            return null;
                        }
                        else
                        {
                            foreach (var item in OAppDetails)
                            {
                                var EmpC = item.Employee.EmpCode.ToString();

                                var EmpN = item.Employee.EmpName.FullNameFML.ToString();
                                var GrdC = item.Employee.PayStruct.Grade.Code.ToString();
                                var GrdN = item.Employee.PayStruct.Grade.Name.ToString();
                                var JOBN = item.Employee.FuncStruct.Job.Name.ToString();
                                foreach (var item1 in item.EmpAppEvaluation)
                                {
                                    foreach (var item2 in item1.EmpAppRatingConclusion)
                                    {
                                        //var SD = item2.AppraisalPeriodCalendar.FromDate.Value.ToShortDateString();
                                        //var ED = item2.AppraisalPeriodCalendar.ToDate.Value.ToShortDateString();

                                        foreach (var item3 in item2.EmpAppRating)
                                        {
                                            var CatC = item3.AppAssignment.AppCategory.Code.ToString();
                                            var CatN = item3.AppAssignment.AppCategory.Name.ToString();
                                            var AppType = item3.AppAssignment.AppCategory.AppMode.LookupVal.ToString();
                                            GenericField100 OGenericObjStatement = new GenericField100()
                                            {
                                                Fld1 = CatC.ToString(),
                                                Fld2 = AppType.ToString(),
                                                //Fld6 = GrdN.ToString(),

                                                Fld3 = GrdC.ToString(),
                                                Fld4 = GrdN.ToString(),
                                                Fld5 = JOBN.ToString(),



                                            };
                                            OGenericPayrollStatement.Add(OGenericObjStatement);
                                        }

                                    }

                                }

                            }
                            return OGenericPayrollStatement;
                        }
                        break;

                    case "APPRAISALCALENDAR":

                        var ORECcalReportData = db.Calendar.Include(e => e.Name).Where(a => a.Name.LookupVal.ToUpper() == "APPRAISALCALENDAR").ToList();

                        if (ORECcalReportData == null || ORECcalReportData.Count() == 0)
                        {
                            return null;
                        }
                        else
                        {
                            foreach (var ca in ORECcalReportData)
                            {

                                GenericField100 OGeneticApprStatement = new GenericField100()
                                {
                                    Fld1 = ca.FromDate != null ? ca.FromDate.Value.ToShortDateString() : "",
                                    Fld2 = ca.ToDate != null ? ca.ToDate.Value.ToShortDateString() : "",
                                    Fld3 = ca.Name != null ? ca.Name.LookupVal.ToString() : "",
                                    Fld4 = ca.Default != null ? ca.Default.ToString() : ""

                                };
                                OGenericPayrollStatement.Add(OGeneticApprStatement);

                            }
                        }

                        return OGenericPayrollStatement;
                        break;
                    case "APPRAISALEVALUATIONMETHOD":

                        var ORECcalReportDataevl = db.AppEvalMethod.ToList();

                        if (ORECcalReportDataevl == null || ORECcalReportDataevl.Count() == 0)
                        {
                            return null;
                        }
                        else
                        {
                            foreach (var ca in ORECcalReportDataevl)
                            {

                                GenericField100 OGeneticApprStatement = new GenericField100()
                                {
                                    Fld1 = ca.Code != null ? ca.Code.ToString() : "",
                                    Fld2 = ca.Name != null ? ca.Name.ToString() : "",
                                    Fld3 = ca.IsNormalAvg != null ? ca.IsNormalAvg.ToString() : "",
                                    Fld4 = ca.IsGPA != null ? ca.IsGPA.ToString() : ""

                                };
                                OGenericPayrollStatement.Add(OGeneticApprStatement);

                            }
                        }

                        return OGenericPayrollStatement;
                        break;
                    case "APPRAISALDETAIL":
                        var OAppDetail = db.EmployeeAppraisal
                            .Include(e => e.EmpAppEvaluation)
                            .Include(e => e.EmpAppEvaluation.Select(a => a.EmpAppRatingConclusion))
                            .Include(e => e.EmpAppEvaluation.Select(a => a.EmpAppRatingConclusion.Select(b => b.AppraisalAssistance)))
                            // .Include(e => e.EmpAppEvaluation.Select(a => a.EmpAppRatingConclusion.Select(b => b.AppraisalPeriodCalendar)))
                            .Include(e => e.EmpAppEvaluation.Select(a => a.EmpAppRatingConclusion.Select(b => b.EmpAppRating)))
                            .Include(e => e.EmpAppEvaluation.Select(a => a.YearlyProgramAssignment))
                            .Include(e => e.EmpAppEvaluation.Select(a => a.EmpAppRatingConclusion.Select(b => b.EmpAppRating.Select(c => c.AppAssignment.AppCategory))))
                            .Include(e => e.EmpAppEvaluation.Select(a => a.EmpAppRatingConclusion.Select(b => b.EmpAppRating.Select(c => c.AppAssignment.AppCategory.AppMode))))
                            .Include(e => e.EmpAppEvaluation)
                            .Include(e => e.Employee)
                            .Include(e => e.Employee.EmpName)
                            .Include(e => e.Employee.PayStruct.Grade)
                         .Where(e => EmpPayrollIdList.Contains(e.Employee.Id)).ToList();

                        if (OAppDetail == null || OAppDetail.Count() == 0)
                        {
                            return null;
                        }
                        else
                        {
                            foreach (var item in OAppDetail)
                            {
                                var EmpC = item.Employee.EmpCode.ToString();

                                var EmpN = item.Employee.EmpName.FullNameFML.ToString();
                                var GrdC = item.Employee.PayStruct.Grade.Code.ToString();
                                var GrdN = item.Employee.PayStruct.Grade.Name.ToString();
                                foreach (var item1 in item.EmpAppEvaluation)
                                {
                                    foreach (var item2 in item1.EmpAppRatingConclusion)
                                    {
                                        //var SD = item2.AppraisalPeriodCalendar.FromDate.Value.ToShortDateString();
                                        //var ED = item2.AppraisalPeriodCalendar.ToDate.Value.ToShortDateString();

                                        foreach (var item3 in item2.EmpAppRating)
                                        {
                                            var CatC = item3.AppAssignment.AppCategory.Code.ToString();
                                            var CatN = item3.AppAssignment.AppCategory.Name.ToString();
                                            var AppType = item3.AppAssignment.AppCategory.AppMode.LookupVal.ToString();
                                            GenericField100 OGenericObjStatement = new GenericField100()
                                            {
                                                //Fld1 = SD.ToString(),
                                                //Fld2 = ED.ToString(),
                                                Fld3 = GrdC.ToString(),
                                                Fld4 = GrdN.ToString(),
                                                Fld5 = EmpC.ToString(),
                                                Fld6 = EmpN.ToString(),
                                                Fld7 = CatC.ToString(),
                                                Fld8 = CatN.ToString(),
                                                Fld9 = AppType.ToString()
                                            };
                                            OGenericPayrollStatement.Add(OGenericObjStatement);
                                        }

                                    }

                                }

                            }
                            return OGenericPayrollStatement;
                        }
                        break;
                    case "APPRAISALSUBCATEGORYMASTER":

                        var OAppSCatMstr = db.EmployeeAppraisal
                            .Include(e => e.EmpAppEvaluation)
                            .Include(e => e.EmpAppEvaluation.Select(a => a.EmpAppRatingConclusion.Select(b => b.EmpAppRating)))
                            .Include(e => e.EmpAppEvaluation.Select(a => a.EmpAppRatingConclusion.Select(b => b.EmpAppRating.Select(c => c.AppAssignment))))
                            .Include(e => e.EmpAppEvaluation.Select(a => a.EmpAppRatingConclusion.Select(b => b.EmpAppRating.Select(c => c.AppAssignment.AppSubCategory))))
                            .Include(e => e.EmpAppEvaluation.Select(a => a.EmpAppRatingConclusion.Select(b => b.EmpAppRating.Select(c => c.AppAssignment.AppCategory.AppMode))))
                            .Include(e => e.EmpAppEvaluation.Select(a => a.EmpAppRatingConclusion.Select(b => b.EmpAppRating.Select(c => c.AppAssignment.AppCategory))))
                            .Include(e => e.Employee)
                            .Where(e => EmpPayrollIdList.Contains(e.Employee.Id)).ToList();
                        if (OAppSCatMstr == null || OAppSCatMstr.Count == 0)
                        {
                            return null;
                        }
                        else
                        {
                            foreach (var item in OAppSCatMstr)
                            {
                                foreach (var item1 in item.EmpAppEvaluation)
                                {
                                    foreach (var item2 in item1.EmpAppRatingConclusion)
                                    {
                                        foreach (var item3 in item2.EmpAppRating)
                                        {
                                            GenericField100 OGenericObjStatement = new GenericField100()
                                            {
                                                Fld1 = item3.AppAssignment.AppSubCategory.Code.ToString(), // AppSubCatCode
                                                Fld2 = item3.AppAssignment.AppSubCategory.Name.ToString(), // AppSubCatName
                                                Fld3 = item3.AppAssignment.AppSubCategory.FullDetails.ToString(), // AppSubCatDec
                                                Fld4 = item3.AppAssignment.AppCategory.Name.ToString(), // AppCatName
                                                Fld5 = item3.AppAssignment.AppCategory.FullDetails.ToString(), //AppCatDec
                                                Fld6 = item3.AppAssignment.AppCategory.AppMode.LookupVal.ToString(), // AppType
                                                Fld7 = item3.AppAssignment.MaxRatingPoints.ToString(), // MaxRatingPoint


                                            };
                                            OGenericPayrollStatement.Add(OGenericObjStatement);
                                        }

                                    }

                                }

                            }
                            return OGenericPayrollStatement;
                        }


                        break;
                    case "APPRKRAEVALUATION":

                        var OAppSCatMstrA = db.EmployeeAppraisal
                          .Include(e => e.EmpAppEvaluation)
                          .Include(e => e.EmpAppEvaluation.Select(a => a.EmpAppRatingConclusion.Select(b => b.EmpAppRating)))
                          .Include(e => e.EmpAppEvaluation.Select(a => a.EmpAppRatingConclusion.Select(b => b.EmpAppRating.Select(c => c.AppAssignment))))
                          .Include(e => e.EmpAppEvaluation.Select(a => a.EmpAppRatingConclusion.Select(b => b.EmpAppRating.Select(c => c.AppAssignment.AppCategory.AppMode))))
                          .Include(e => e.EmpAppEvaluation.Select(a => a.EmpAppRatingConclusion.Select(b => b.EmpAppRating.Select(c => c.AppAssignment.AppCategory))))
                          .Include(e => e.Employee)
                          .Include(e => e.Employee.EmpName)
                          .Include(e => e.Employee.GeoStruct)
                          .Include(e => e.Employee.GeoStruct.Location)
                          .Include(e => e.Employee.GeoStruct.Location.LocationObj)
                          .Where(e => EmpPayrollIdList.Contains(e.Employee.Id)).ToList();
                        if (OAppSCatMstrA == null || OAppSCatMstrA.Count == 0)
                        {
                            return null;
                        }
                        else
                        {
                            foreach (var item in OAppSCatMstrA)
                            {
                                foreach (var item1 in item.EmpAppEvaluation)
                                {
                                    GenericField100 OGenericObjStatement = new GenericField100()
                                    {
                                        Fld1 = item.Employee.GeoStruct.Location.LocationObj.LocCode,
                                        Fld2 = item.Employee.GeoStruct.Location.LocationObj.LocDesc,
                                        Fld3 = item.Employee.EmpCode,
                                        Fld4 = item.Employee.EmpName.FullNameFML,
                                        Fld5 = item1.MaxPoints.ToString(),
                                        Fld6 = item1.SecurePoints.ToString(),
                                        Fld7 = item1.ScorePercentage.ToString(),
                                        Fld8 = item1.HRComments,
                                    };
                                    OGenericPayrollStatement.Add(OGenericObjStatement);
                                }
                            }
                            return OGenericPayrollStatement;
                        }
                        break;

                    case "BUDGETPARA":
                        var budgetpara = db.BudgetParameters.ToList();
                        if (budgetpara == null || budgetpara.Count() == 0)
                        {
                            return null;

                        }
                        else
                        {
                            foreach (var ca in budgetpara)
                            {
                                GenericField100 OGeneticApprStatement = new GenericField100()
                                {
                                    Fld1 = ca.IsBudgetAppl.ToString(),
                                    Fld2 = ca.IsCategory.ToString(),
                                    Fld3 = ca.IsFuncStruct.ToString(),
                                    Fld4 = ca.IsGeoStruct.ToString(),
                                    Fld5 = ca.IsPayStruct.ToString(),
                                    Fld6 = ca.IsProgram.ToString()
                                };
                                OGenericPayrollStatement.Add(OGeneticApprStatement);
                            }
                        }
                        return OGenericPayrollStatement;
                        break;
                    case "CATEGORY":
                        var OcatReportData = db.Category.Include(a => a.SubCategory)
                                          .Include(a => a.SubCategory.Select(e => e.ProgramList))
                                          .Include(a => a.SubCategory.Select(e => e.ProgramList.Select(t => t.TrainingType)))
                            .ToList();
                        if (OcatReportData == null || OcatReportData.Count() == 0)
                        {
                            return null;
                        }
                        else
                        {
                            foreach (var ca in OcatReportData)
                            {
                                foreach (var item in ca.SubCategory)
                                {
                                    foreach (var item1 in item.ProgramList)
                                    {



                                        GenericField100 OGeneticApprStatement = new GenericField100()
                                        {
                                            Fld1 = ca.Code.ToString(),
                                            Fld2 = ca.Details.ToString(),
                                            Fld3 = item.Code != null ? item.Code.ToString() : null,
                                            Fld4 = item.Details != null ? item.Details.ToString() : null,
                                            Fld5 = item.ProgramList != null && item1.Subject != null ? item1.Subject.ToString() : null,
                                            Fld6 = item.ProgramList != null && item1.SubjectDetails != null ? item1.SubjectDetails.ToString() : null,
                                            Fld7 = item.ProgramList != null && item1.TrainingType == null ? "" : item1.TrainingType.LookupVal.ToString()

                                            // Fld3 = item.FullDetails.ToString()




                                        };
                                        OGenericPayrollStatement.Add(OGeneticApprStatement);
                                    }
                                }
                            }
                        }
                        return OGenericPayrollStatement;
                        break;
                    case "VENUE":
                        var OVenueReportData = db.Venue.Include(a => a.VenuType)
                            .Include(a => a.Address)

                            .Include(a => a.ContactDetails)
                            .ToList();
                        if (OVenueReportData == null || OVenueReportData.Count() == 0)
                        {
                            return null;
                        }
                        else
                        {
                            foreach (var ca in OVenueReportData)
                            {


                                GenericField100 OGeneticApprStatement = new GenericField100()
                                {
                                    Fld1 = ca.Name.ToString(),
                                    Fld2 = ca.ContactPerson != null ? ca.ContactPerson.ToString() : null,
                                    Fld3 = ca.Address != null && ca.Address.FullAddress != null ? ca.Address.FullAddress.ToString() : null,
                                    Fld4 = ca.ContactDetails != null && ca.ContactDetails.FullContactDetails != null ? ca.ContactDetails.FullContactDetails.ToString() : null,
                                    Fld5 = ca.Fees != null ? ca.Fees.ToString() : null,
                                    Fld6 = ca.VenuType != null ? ca.VenuType.LookupVal.ToString() : null,

                                    // Fld3 = item.FullDetails.ToString()


                                };
                                OGenericPayrollStatement.Add(OGeneticApprStatement);


                            }
                        }
                        return OGenericPayrollStatement;
                        break;
                    case "FACULTY":
                        var OFacultyReportData = db.FacultyInternalExternal.Include(a => a.FacultySpecialization)
                            .Include(a => a.FacultyType)
                            .Include(a => a.Address)
                            .Include(a => a.ContactDetails)
                            .Include(a => a.ProgramList)
                            .Include(a => a.TrainingInstitue)
                            .Include(a => a.ProgramList.Select(t => t.TrainingType))
                            .ToList();
                        if (OFacultyReportData == null || OFacultyReportData.Count() == 0)
                        {
                            return null;
                        }
                        else
                        {
                            foreach (var ca in OFacultyReportData)
                            {
                                var fspecarea = "";
                                var fspectype = "";
                                var fProgcode = "";
                                var fProgname = "";
                                var ftrngtype = "";
                                var fcode = ca.Code.ToString();
                                var fname = ca.Name.ToString();
                                var fadd = ca.Address == null ? "" : ca.Address.FullAddress.ToString();
                                var fcont = ca.ContactDetails == null ? "" : ca.ContactDetails.FullContactDetails.ToString();
                                var fftype = ca.FacultyType == null ? "" : ca.FacultyType.LookupVal.ToString();
                                var ftrainint = ca.TrainingInstitue == null ? "" : ca.TrainingInstitue.FullDetails.ToString();
                                foreach (var item in ca.FacultySpecialization)
                                {
                                    fspecarea = item.SpecArea != null ? item.SpecArea.ToString() : null;
                                    fspectype = item.SpecType != null ? item.SpecType.ToString() : null;

                                    GenericField100 OGeneticApprStatement = new GenericField100()
                                    {
                                        Fld1 = fcode.ToString(),
                                        Fld2 = fname.ToString(),
                                        Fld3 = fadd.ToString(),
                                        Fld4 = fcont.ToString(),
                                        Fld5 = fftype.ToString(),
                                        Fld6 = ftrainint.ToString(),

                                        Fld7 = fspecarea.ToString(),
                                        Fld8 = fspectype.ToString()
                                        //Fld9 = "",
                                        //Fld10 = "",
                                        //Fld11 = ""

                                        // Fld3 = item.FullDetails.ToString()




                                    };
                                    OGenericPayrollStatement.Add(OGeneticApprStatement);
                                }
                                foreach (var item1 in ca.ProgramList)
                                {
                                    fProgcode = item1.Subject != null ? item1.Subject.ToString() : null;
                                    fProgname = item1.SubjectDetails != null ? item1.SubjectDetails.ToString() : null;
                                    ftrngtype = item1.TrainingType == null ? "" : item1.TrainingType.LookupVal.ToString();

                                    GenericField100 OGeneticApprStatement = new GenericField100()
                                    {
                                        Fld1 = fcode.ToString(),
                                        Fld2 = fname.ToString(),
                                        Fld3 = fadd.ToString(),
                                        Fld4 = fcont.ToString(),
                                        Fld5 = fftype.ToString(),
                                        Fld6 = ftrainint.ToString(),
                                        //Fld7 ="",
                                        //Fld8 = "",
                                        Fld9 = fProgcode.ToString(),
                                        Fld10 = fProgname.ToString(),
                                        Fld11 = ftrngtype.ToString()

                                        // Fld3 = item.FullDetails.ToString()




                                    };
                                    OGenericPayrollStatement.Add(OGeneticApprStatement);

                                }



                            }
                        }
                        return OGenericPayrollStatement;
                        break;

                    case "YEARLYPROGRAMLIST":

                        //var OApptraBud = db.YearlyProgramAssignment
                        //    .Include(a => a.YearlyTrainingCalendar)
                        //    .Include(a => a.YearlyTrainingCalendar.TrainigProgramCalendar)
                        //    .Include(a => a.YearlyTrainingCalendar.TrainigProgramCalendar.Select(r => r.ProgramList.TrainingType))
                        //    .Include(a => a.YearlyTrainingCalendar.TrainigProgramCalendar.Select(z => z.ProgramList.SubCategory.Category))
                        //    .ToList();

                        var OApptraBud = db.YearlyProgramAssignment.Select(r => new
                        {
                               OTrainigProgramCalendar = r.YearlyTrainingCalendar.TrainigProgramCalendar.Select(i => new { 
                               OStartDate= i.StartDate,
                               OEndDate= i.EndDate,
                               OTrainingType=i.ProgramList.TrainingType.LookupVal,
                               OSubjectDetails= i.ProgramList.SubjectDetails,
                               OSubject=i.ProgramList.Subject,
                               OSubCategoryCode=i.ProgramList.SubCategory.Code,
                               OSubCategoryDetails=i.ProgramList.SubCategory.Details,
                               OCategoryCode= i.ProgramList.SubCategory.Category.Code,
                               OCategoryDetails=i.ProgramList.SubCategory.Category.Details
                               }).Where(e => (e.OStartDate >= pFromDate && e.OEndDate <= pToDate) && (salheadlist.Any() ? salheadlist.Contains(e.OSubCategoryDetails):true)).ToList(),
                        }).ToList();

                        if (OApptraBud == null || OApptraBud.Count() == 0)
                        {
                            return null;
                        }
                        else
                        {
                            foreach (var item in OApptraBud)
                            {
                                foreach (var item1 in item.OTrainigProgramCalendar)
                                {
                                    //if (item1.OStartDate >= pFromDate && item1.OEndDate <= pToDate)
                                    //{
                                        //if (salheadlist.Count > 0)
                                        //{
                                        //    foreach (var batch in salheadlist)
                                        //    {
                                        //        if (batch.ToUpper() == item1.OSubjectDetails.ToUpper())
                                        //        {
                                                    //var sd1 = item1.StartDate == null ? "" : item1.StartDate.Value.ToShortDateString();
                                                    //var ed1 = item1.EndDate == null ? "" : item1.EndDate.Value.ToShortDateString();
                                                    //var pn = item1.ProgramList == null ? "" : item1.ProgramList.SubjectDetails;
                                                    //var su = item1.ProgramList == null ? "" : item1.ProgramList.Subject;
                                                    //var tt = item1.ProgramList == null ? null : item1.ProgramList.TrainingType == null ? "" : item1.ProgramList.TrainingType.LookupVal;
                                                    //var tsubcat = item1.ProgramList == null ? null : item1.ProgramList.SubCategory == null ? "" : item1.ProgramList.SubCategory.Code.ToString();
                                                    //var tsubcatdet = item1.ProgramList == null ? null : item1.ProgramList.SubCategory == null ? "" : item1.ProgramList.SubCategory.Details.ToString();
                                                    //var tscat = item1.ProgramList == null ? null : item1.ProgramList.SubCategory == null ? null : item1.ProgramList.SubCategory.Category == null ? "" : item1.ProgramList.SubCategory.Category.Code.ToString();
                                                    //var tscatdet = item1.ProgramList == null ? null : item1.ProgramList.SubCategory == null ? null : item1.ProgramList.SubCategory.Category == null ? "" : item1.ProgramList.SubCategory.Category.Details.ToString();

                                                    GenericField100 OGenericObjStatement = new GenericField100()
                                                    {


                                                        Fld7 = item1.OStartDate == null ? "" : item1.OStartDate.Value.ToShortDateString(),
                                                        Fld8 = item1.OEndDate == null ? "" : item1.OEndDate.Value.ToShortDateString(),
                                                        Fld5 = item1.OSubjectDetails == null ? "" : item1.OSubjectDetails,
                                                        Fld6 = item1.OSubject == null ? "" : item1.OSubject,
                                                        Fld9 = item1.OTrainingType==null? "": item1.OTrainingType,           
                                                        Fld3 = item1.OSubCategoryCode == null ? "" : item1.OSubCategoryCode,
                                                        Fld4 = item1.OSubCategoryDetails==null ?"": item1.OSubCategoryDetails,
                                                        Fld1 = item1.OCategoryCode == null ? "" : item1.OCategoryCode,
                                                        Fld2 = item1.OCategoryDetails == null ? "" : item1.OCategoryDetails,
                                                      
                                                        //Fld2 = sd1.ToString(),//start date    
                                                        //Fld3 = ed1.ToString(),//end date
                                                        //Fld4 = pn.ToString(),// programme name
                                                        //Fld5 = su.ToString(),// subject
                                                        //Fld6 = tt.ToString(),//type

                                                    };
                                                    OGenericPayrollStatement.Add(OGenericObjStatement);
                                                //}
                                        //    }
                                        //}
                                        //else
                                        //{
                                        //    var sd1 = item1.StartDate == null ? "" : item1.StartDate.Value.ToShortDateString();
                                        //    var ed1 = item1.EndDate == null ? "" : item1.EndDate.Value.ToShortDateString();
                                        //    var pn = item1.ProgramList == null ? "" : item1.ProgramList.SubjectDetails;
                                        //    var su = item1.ProgramList == null ? "" : item1.ProgramList.Subject;
                                        //    var tt = item1.ProgramList == null ? null : item1.ProgramList.TrainingType == null ? "" : item1.ProgramList.TrainingType.LookupVal;
                                        //    var tsubcat = item1.ProgramList == null ? null : item1.ProgramList.SubCategory == null ? "" : item1.ProgramList.SubCategory.Code.ToString();
                                        //    var tsubcatdet = item1.ProgramList == null ? null : item1.ProgramList.SubCategory == null ? "" : item1.ProgramList.SubCategory.Details.ToString();
                                        //    var tscat = item1.ProgramList == null ? null : item1.ProgramList.SubCategory == null ? null : item1.ProgramList.SubCategory.Category == null ? "" : item1.ProgramList.SubCategory.Category.Code.ToString();
                                        //    var tscatdet = item1.ProgramList == null ? null : item1.ProgramList.SubCategory == null ? null : item1.ProgramList.SubCategory.Category == null ? "" : item1.ProgramList.SubCategory.Category.Details.ToString();

                                        //    GenericField100 OGenericObjStatement = new GenericField100()
                                        //    {
                                        //        Fld1 = tscat != null ? tscat.ToString() : "",
                                        //        Fld2 = tscatdet != null ? tscatdet.ToString() : "",
                                        //        Fld3 = tsubcat != null ? tsubcat.ToString() : "",
                                        //        Fld4 = tsubcatdet != null ? tsubcatdet.ToString() : "",
                                        //        Fld5 = pn != null ? pn.ToString() : "",
                                        //        Fld6 = su != null ? su.ToString() : "",
                                        //        Fld7 = sd1 != null ? sd1.ToString() : "",
                                        //        Fld8 = ed1 != null ? ed1.ToString() : "",
                                        //        Fld9 = tt != null ? tt.ToString() : "",

                                        //        //Fld2 = sd1.ToString(),//start date    
                                        //        //Fld3 = ed1.ToString(),//end date
                                        //        //Fld4 = pn.ToString(),// programme name
                                        //        //Fld5 = su.ToString(),// subject
                                        //        //Fld6 = tt.ToString(),//type

                                        //    };
                                        //    OGenericPayrollStatement.Add(OGenericObjStatement);
                                        //}
                                    //}
                                }
                                //}
                            }
                            return OGenericPayrollStatement;
                        }
                        break;

                    case "GRADEWISEAPPRAISALMASTER":
                        var OGrdWAppMstr = db.EmployeeAppraisal
                             .Include(e => e.EmpAppEvaluation)
                             .Include(e => e.EmpAppEvaluation.Select(a => a.EmpAppRatingConclusion.Select(b => b.EmpAppRating)))
                             .Include(e => e.EmpAppEvaluation.Select(a => a.EmpAppRatingConclusion.Select(b => b.EmpAppRating.Select(c => c.AppAssignment))))
                             .Include(e => e.EmpAppEvaluation.Select(a => a.EmpAppRatingConclusion.Select(b => b.EmpAppRating.Select(c => c.AppAssignment.AppSubCategory))))
                             .Include(e => e.EmpAppEvaluation.Select(a => a.EmpAppRatingConclusion.Select(b => b.EmpAppRating.Select(c => c.AppAssignment.AppCategory.AppMode))))
                             .Include(e => e.EmpAppEvaluation.Select(a => a.EmpAppRatingConclusion.Select(b => b.EmpAppRating.Select(c => c.AppAssignment.AppCategory))))
                             .Include(e => e.Employee)
                             .Include(e => e.Employee.PayStruct.Grade)
                             .Where(e => EmpPayrollIdList.Contains(e.Employee.Id)).ToList();

                        if (OGrdWAppMstr == null || OGrdWAppMstr.Count == 0)
                        {
                            return null;
                        }
                        else
                        {
                            foreach (var item in OGrdWAppMstr)
                            {
                                var GrdC = item.Employee.PayStruct.Grade.Code.ToString();
                                var GrdN = item.Employee.PayStruct.Grade.Name.ToString();
                                foreach (var item1 in item.EmpAppEvaluation)
                                {
                                    foreach (var item2 in item1.EmpAppRatingConclusion)
                                    {
                                        foreach (var item3 in item2.EmpAppRating)
                                        {
                                            var AppType = item3.AppAssignment.AppCategory.AppMode.LookupVal.ToString();
                                            var Cat = item3.AppAssignment.AppCategory.Name.ToString();
                                            var CatDec = item3.AppAssignment.AppCategory.FullDetails.ToString();


                                            GenericField100 OGenericObjStatement = new GenericField100()
                                            {
                                                Fld1 = AppType.ToString(), //AppType
                                                Fld2 = Cat.ToString(), //CatName
                                                Fld3 = CatDec.ToString(), //Cat Dec
                                                Fld4 = GrdC.ToString(), // GradeCode
                                                Fld5 = GrdN.ToString(), //GradeName

                                            };
                                            OGenericPayrollStatement.Add(OGenericObjStatement);
                                        }

                                    }

                                }


                            }
                            return OGenericPayrollStatement;
                        }


                        break;


                    case "NOMINEESINFO":
                        var OEmpNominee = db.EmployeePayroll
                            .Include(e => e.Employee)

                            .Include(e => e.Employee.EmpName)
                            .Include(e => e.Employee.Nominees.Select(a => a.BenefitList))
                                .Include(e => e.Employee.Nominees.Select(a => a.BenefitList.Select(b => b.BenefitType)))
                               .Include(e => e.Employee.Nominees.Select(a => a.NomineeName))
                                    .Include(e => e.Employee.Nominees.Select(a => a.Relation))
                                    .Include(e => e.Employee.Nominees.Select(a => a.Address))
                                    .Include(e => e.Employee.Nominees.Select(a => a.ContactDetails)).AsNoTracking()
                            .Where(e => EmpPayrollIdList.Contains(e.Id)).AsParallel().ToList();
                        if (OEmpNominee == null || OEmpNominee.Count == 0)
                        {
                            return null;
                        }
                        else
                        {
                            foreach (var ca in OEmpNominee)
                            {
                                foreach (var ca1 in ca.Employee.Nominees)
                                {
                                    if (ca1.BenefitList != null)
                                    {


                                        foreach (var item in ca1.BenefitList)
                                        {



                                            GenericField100 OGenericObjStatement = new GenericField100
                                            {
                                                Fld2 = ca.Employee.EmpCode,
                                                Fld3 = ca.Employee.EmpName.FullNameFML,
                                                Fld4 = ca.Employee != null && ca1 != null && ca1.NomineeName != null ? ca1.NomineeName.FullNameFML.ToString() : null,
                                                Fld5 = ca.Employee != null && ca1 != null && ca1.DateofBirth.Value.ToShortDateString() != null ? ca1.DateofBirth.Value.ToShortDateString() : null,
                                                Fld6 = ca.Employee != null && ca1 != null && ca1.Relation != null ? ca1.Relation.LookupVal.ToString() : null,
                                                // Fld7 = ca.Employee != null && ca1 != null && ca1.BenefitList != null ? ca1.BenefitList.ToString() : null,
                                                Fld8 = item.BenefitType == null ? "" : item.BenefitType.LookupVal.ToString(),
                                                Fld9 = item.BenefitPerc == null ? "" : item.BenefitPerc.ToString()
                                            };
                                            OGenericPayrollStatement.Add(OGenericObjStatement);
                                        }
                                    }
                                }
                            }
                            return OGenericPayrollStatement;
                        }
                        break;
                    case "PFAPPLICABLE":
                        var OEmpPFAppl = db.EmployeePayroll
                            .Include(e => e.Employee)

                            .Include(e => e.Employee.EmpName)
                            .Include(e => e.Employee.EmpOffInfo.NationalityID).AsNoTracking()
                            .Where(e => EmpPayrollIdList.Contains(e.Id)).AsParallel().ToList();
                        if (OEmpPFAppl == null || OEmpPFAppl.Count == 0)
                        {
                            return null;
                        }
                        else
                        {
                            foreach (var ca in OEmpPFAppl)
                            {
                                GenericField100 OGenericObjStatement = new GenericField100
                                {
                                    Fld2 = ca.Employee.EmpCode,
                                    Fld3 = ca.Employee.EmpName.FullNameFML,
                                    Fld4 = ca.Employee != null && ca.Employee.EmpOffInfo != null && ca.Employee.EmpOffInfo.PFAppl != null ? ca.Employee.EmpOffInfo.PFAppl.ToString() : null,
                                    Fld5 = ca.Employee != null && ca.Employee.EmpOffInfo != null && ca.Employee.EmpOffInfo.NationalityID != null && ca.Employee.EmpOffInfo.NationalityID.PFNo != null ? ca.Employee.EmpOffInfo.NationalityID.PFNo : null,
                                };
                                OGenericPayrollStatement.Add(OGenericObjStatement);
                            }
                            return OGenericPayrollStatement;
                        }
                        break;
                    case "BANKACCOUNT":
                        var OEmpAccountNo = db.EmployeePayroll
                            .Include(e => e.Employee)

                            .Include(e => e.Employee.EmpName)
                            .Include(e => e.Employee.EmpOffInfo)
                              .Include(e => e.Employee.EmpOffInfo.AccountType)
                            .Include(e => e.Employee.EmpOffInfo.Bank.Branches)
                            .Include(e => e.Employee.EmpOffInfo.Branch)
                            .Where(e => EmpPayrollIdList.Contains(e.Id)).ToList();
                        if (OEmpAccountNo == null || OEmpAccountNo.Count == 0)
                        {
                            return null;
                        }
                        else
                        {
                            foreach (var ca in OEmpAccountNo)
                            {

                                GenericField100 OGenericObjStatement = new GenericField100
                                {
                                    Fld2 = ca.Employee.EmpCode,
                                    Fld3 = ca.Employee.EmpName.FullNameFML,
                                    Fld4 = ca.Employee != null && ca.Employee.EmpOffInfo != null && ca.Employee.EmpOffInfo.Bank != null && ca.Employee.EmpOffInfo.Bank.Name != null ? ca.Employee.EmpOffInfo.Bank.Name.ToString() : null,
                                    Fld5 = ca.Employee != null && ca.Employee.EmpOffInfo != null && ca.Employee.EmpOffInfo.Branch != null && ca.Employee.EmpOffInfo.Branch.Code != null ? ca.Employee.EmpOffInfo.Branch.Code.ToString() : null,
                                    Fld6 = ca.Employee != null && ca.Employee.EmpOffInfo != null && ca.Employee.EmpOffInfo.Branch != null && ca.Employee.EmpOffInfo.Branch.Name != null ? ca.Employee.EmpOffInfo.Branch.Name.ToString() : null,
                                    Fld7 = ca.Employee != null && ca.Employee.EmpOffInfo != null && ca.Employee.EmpOffInfo.AccountType != null && ca.Employee.EmpOffInfo.AccountType.LookupVal != null ? ca.Employee.EmpOffInfo.AccountType.LookupVal.ToString() : null,
                                    Fld8 = ca.Employee != null && ca.Employee.EmpOffInfo != null && ca.Employee.EmpOffInfo.AccountNo != null ? ca.Employee.EmpOffInfo.AccountNo : null,

                                };
                                OGenericPayrollStatement.Add(OGenericObjStatement);

                            }
                            return OGenericPayrollStatement;
                        }
                        break;
                    case "GUARANTORNFO":
                        var OEmpGuarantor = db.EmployeePayroll
                            .Include(e => e.Employee)

                            .Include(e => e.Employee.EmpName)
                            .Include(e => e.Employee.GuarantorDetails)
                            .Include(e => e.Employee.GuarantorDetails.Select(t => t.GuarantorName))
                            .Where(e => EmpPayrollIdList.Contains(e.Id) && e.Employee != null && e.Employee.GuarantorDetails.Count > 0).ToList();
                        if (OEmpGuarantor == null || OEmpGuarantor.Count == 0)
                        {
                            return null;
                        }
                        else
                        {
                            foreach (var ca in OEmpGuarantor)
                            {
                                var v2 = ca.Employee.GuarantorDetails.ToList();
                                foreach (var item in v2)
                                {
                                    GenericField100 OGenericObjStatement = new GenericField100
                                    {
                                        Fld2 = ca.Employee.EmpCode,
                                        Fld3 = ca.Employee.EmpName.FullNameFML,
                                        Fld4 = item.GuarantorName != null ? item.GuarantorName.FullNameFML.ToString() : null,
                                        Fld5 = item.GuarantorType != null ? item.GuarantorType.LookupVal.ToString() : null,
                                        Fld6 = item.LoanType.ToString(),
                                        Fld7 = item.LoanDesc.ToString(),
                                        Fld8 = item.Amount.ToString(),
                                        Fld9 = item.LoanBank.ToString(),
                                        Fld10 = item.LoanBranch.ToString(),
                                        Fld11 = item.Outstanding.ToString(),
                                        Fld12 = item.Installment.ToString(),
                                        Fld13 = item.DueDate != null ? item.DueDate.Value.ToShortDateString() : null,
                                    };
                                    OGenericPayrollStatement.Add(OGenericObjStatement);
                                }
                            }
                            return OGenericPayrollStatement;
                        }
                        break;
                    case "HANDICAP":
                        var OEmpHandi = db.EmployeePayroll
                            .Include(e => e.Employee)

                            .Include(e => e.Employee.EmpName)
                            .Include(e => e.Employee.EmpOffInfo).AsNoTracking()
                            .Where(e => EmpPayrollIdList.Contains(e.Id)).AsParallel().ToList();
                        if (OEmpHandi == null || OEmpHandi.Count == 0)
                        {
                            return null;
                        }
                        else
                        {
                            foreach (var ca in OEmpHandi)
                            {
                                GenericField100 OGenericObjStatement = new GenericField100
                                {
                                    Fld2 = ca.Employee.EmpCode,
                                    Fld3 = ca.Employee.EmpName.FullNameFML,
                                    Fld4 = ca.Employee != null && ca.Employee.EmpOffInfo != null && ca.Employee.EmpOffInfo.SelfHandicap != null ? ca.Employee.EmpOffInfo.SelfHandicap.ToString() : null,
                                };
                                OGenericPayrollStatement.Add(OGenericObjStatement);
                            }
                            return OGenericPayrollStatement;


                        }
                        break;
                    case "MEDICALINFO":
                        var OEmpMedi = db.EmployeePayroll
                            .Include(e => e.Employee)

                            .Include(e => e.Employee.EmpName)
                            .Include(e => e.Employee.EmpmedicalInfo.BloodGroup)
                            .Include(e => e.Employee.EmpmedicalInfo.Allergy.Select(t => t.AllergyMedicine))
                            .Include(e => e.Employee.EmpmedicalInfo.Disease.Select(t => t.DiseaseMedicine))
                            .Include(e => e.Employee.EmpmedicalInfo.Doctor.Select(t => t.Name))
                            .Where(e => EmpPayrollIdList.Contains(e.Id) && e.Employee.EmpmedicalInfo != null).ToList();
                        if (OEmpMedi == null || OEmpMedi.Count == 0)
                        {
                            return null;
                        }
                        else
                        {
                            foreach (var ca in OEmpMedi)
                            {
                                if (ca.Employee.EmpmedicalInfo != null)
                                {


                                    var v2 = ca.Employee.EmpmedicalInfo.Allergy.ToList();
                                    foreach (var item in v2)
                                    {
                                        var v1 = ca.Employee.EmpmedicalInfo.Disease.ToList();
                                        foreach (var item1 in v1)
                                        {
                                            var v3 = ca.Employee.EmpmedicalInfo.Doctor.ToList();
                                            foreach (var item2 in v3)
                                            {
                                                GenericField100 OGenericObjStatement = new GenericField100
                                                {
                                                    Fld2 = ca.Employee.EmpCode,
                                                    Fld3 = ca.Employee.EmpName.FullNameFML,
                                                    Fld4 = ca.Employee != null && ca.Employee.EmpmedicalInfo != null && ca.Employee.EmpmedicalInfo.BloodGroup != null ? ca.Employee.EmpmedicalInfo.BloodGroup.LookupVal : null,
                                                    Fld5 = ca.Employee != null && ca.Employee.EmpmedicalInfo != null && ca.Employee.EmpmedicalInfo.Height != null ? ca.Employee.EmpmedicalInfo.Height.ToString() : null,
                                                    Fld6 = ca.Employee != null && ca.Employee.EmpmedicalInfo != null && ca.Employee.EmpmedicalInfo.Weight != null ? ca.Employee.EmpmedicalInfo.Weight.ToString() : null,
                                                    Fld7 = item.Name,
                                                    Fld8 = item1.Name,
                                                    Fld9 = item2.Name.FullNameFML.ToString(),
                                                    Fld10 = ca.Employee != null && ca.Employee.EmpmedicalInfo != null && ca.Employee.EmpmedicalInfo.PreferredHospital != null ? ca.Employee.EmpmedicalInfo.PreferredHospital : null,

                                                };
                                                OGenericPayrollStatement.Add(OGenericObjStatement);
                                            }
                                        }
                                    }
                                }
                            }
                            return OGenericPayrollStatement;
                        }
                        break;
                    //case "NOMINEESINFO":
                    //    var OEmpNominee = db.EmployeePayroll
                    //        .Include(e => e.Employee)

                    //        .Include(e => e.Employee.EmpName)
                    //        .Include(e => e.Employee.Nominees.Select(a => a.BenefitList))
                    //            .Include(e => e.Employee.Nominees.Select(a => a.BenefitList.Select(b => b.BenefitType)))
                    //           .Include(e => e.Employee.Nominees.Select(a => a.NomineeName))
                    //                .Include(e => e.Employee.Nominees.Select(a => a.Relation))
                    //                .Include(e => e.Employee.Nominees.Select(a => a.Address))
                    //                .Include(e => e.Employee.Nominees.Select(a => a.ContactDetails))
                    //        .Where(e => EmpPayrollIdList.Contains(e.Id)).ToList();
                    //    if (OEmpNominee == null || OEmpNominee.Count == 0)
                    //    {
                    //        return null;
                    //    }
                    //    else
                    //    {
                    //        foreach (var ca in OEmpNominee)
                    //        {
                    //            foreach (var ca1 in ca.Employee.Nominees)
                    //            {
                    //                if (ca1.BenefitList != null)
                    //                {


                    //                    foreach (var item in ca1.BenefitList)
                    //                    {



                    //                        GenericField100 OGenericObjStatement = new GenericField100
                    //                        {
                    //                            Fld2 = ca.Employee.EmpCode,
                    //                            Fld3 = ca.Employee.EmpName.FullNameFML,
                    //                            Fld4 = ca.Employee != null && ca1 != null && ca1.NomineeName != null ? ca1.NomineeName.FullNameFML.ToString() : null,
                    //                            Fld5 = ca.Employee != null && ca1 != null && ca1.DateofBirth.Value.ToShortDateString() != null ? ca1.DateofBirth.Value.ToShortDateString() : null,
                    //                            Fld6 = ca.Employee != null && ca1 != null && ca1.Relation != null ? ca1.Relation.LookupVal.ToString() : null,
                    //                            // Fld7 = ca.Employee != null && ca1 != null && ca1.BenefitList != null ? ca1.BenefitList.ToString() : null,
                    //                            Fld8 = item.BenefitType == null ? "" : item.BenefitType.LookupVal.ToString(),
                    //                            Fld9 = item.BenefitPerc == null ? "" : item.BenefitPerc.ToString()
                    //                        };
                    //                        OGenericPayrollStatement.Add(OGenericObjStatement);
                    //                    }
                    //                }
                    //            }
                    //        }
                    //        return OGenericPayrollStatement;
                    //    }
                    //    break;
                    case "PASSPORTINFO":
                        var OEmpPassport = db.EmployeePayroll
                            .Include(e => e.Employee)

                            .Include(e => e.Employee.EmpName)
                            .Include(e => e.Employee.PassportDetails).AsNoTracking()
                            .Where(e => EmpPayrollIdList.Contains(e.Id)).AsParallel().ToList();
                        if (OEmpPassport == null || OEmpPassport.Count == 0)
                        {
                            return null;
                        }
                        else
                        {
                            foreach (var ca in OEmpPassport)
                            {
                                if (ca.Employee.PassportDetails != null)
                                {
                                    foreach (var item in ca.Employee.PassportDetails)
                                    {
                                        GenericField100 OGenericObjStatement = new GenericField100
                                        {
                                            Fld2 = ca.Employee.EmpCode,
                                            Fld3 = ca.Employee.EmpName.FullNameFML,
                                            Fld4 = item.PassportNo == null ? "" : item.PassportNo,
                                            Fld5 = item.IssuePlace == null ? "" : item.IssuePlace,
                                            Fld6 = item.IssueDate == null ? "" : item.IssueDate.Value.ToShortDateString(),
                                            Fld7 = item.ExpiryDate == null ? "" : item.ExpiryDate.Value.ToShortDateString(),
                                        };
                                        OGenericPayrollStatement.Add(OGenericObjStatement);
                                    }
                                }
                            }
                            return OGenericPayrollStatement;
                        }
                        break;
                    case "YRSOFSERVICE":
                        var OEmpService = db.EmployeePayroll
                            .Include(e => e.Employee)

                            .Include(e => e.Employee.EmpName)
                            .Include(e => e.Employee.ServiceBookDates)
                            .Where(e => EmpPayrollIdList.Contains(e.Id)).ToList();
                        if (OEmpService == null || OEmpService.Count == 0)
                        {
                            return null;
                        }
                        else
                        {
                            foreach (var ca in OEmpService)
                            {
                                var doj = ca.Employee != null && ca.Employee.ServiceBookDates != null && ca.Employee.ServiceBookDates.JoiningDate != null ? ca.Employee.ServiceBookDates.JoiningDate : null;

                                int age = 0;
                                age = DateTime.Now.Year - doj.Value.Year;
                                if (DateTime.Now.DayOfYear < doj.Value.DayOfYear)
                                    age = age - 1;
                                var Age = age;

                                GenericField100 OGenericObjStatement = new GenericField100
                                {
                                    Fld2 = ca.Employee.EmpCode,
                                    Fld3 = ca.Employee.EmpName.FullNameFML,
                                    Fld4 = ca.Employee != null && ca.Employee.ServiceBookDates != null && ca.Employee.ServiceBookDates.JoiningDate != null ? ca.Employee.ServiceBookDates.JoiningDate.Value.ToShortDateString() : null,
                                    Fld5 = Age.ToString()
                                };
                                OGenericPayrollStatement.Add(OGenericObjStatement);
                            }
                            return OGenericPayrollStatement;
                        }
                        break;
                    case "SOCIALINFO":
                        var OEmpSocial = db.EmployeePayroll
                            .Include(e => e.Employee)

                            .Include(e => e.Employee.EmpName)
                            .Include(e => e.Employee.EmpSocialInfo.Religion)
                           .Include(e => e.Employee.EmpSocialInfo.Caste)
                           .Include(e => e.Employee.EmpSocialInfo.SubCaste)
                           .Include(e => e.Employee.EmpSocialInfo.Category)
                            .Include(e => e.Employee.EmpSocialInfo.SocialActivities)
                            .Where(e => EmpPayrollIdList.Contains(e.Id) && e.Employee.EmpSocialInfo != null && e.Employee.EmpSocialInfo.SocialActivities.Count > 0).ToList();
                        if (OEmpSocial == null || OEmpSocial.Count == 0)
                        {
                            return null;
                        }
                        else
                        {
                            foreach (var ca in OEmpSocial)
                            {
                                var v2 = ca.Employee.EmpSocialInfo.SocialActivities.ToList();
                                foreach (var item in v2)
                                {

                                    GenericField100 OGenericObjStatement = new GenericField100
                                    {
                                        Fld2 = ca.Employee.EmpCode,
                                        Fld3 = ca.Employee.EmpName.FullNameFML,
                                        Fld4 = ca.Employee != null && ca.Employee.EmpSocialInfo != null && ca.Employee.EmpSocialInfo.Religion != null ? ca.Employee.EmpSocialInfo.Religion.LookupVal : null,
                                        Fld5 = ca.Employee != null && ca.Employee.EmpSocialInfo != null && ca.Employee.EmpSocialInfo.Category != null ? ca.Employee.EmpSocialInfo.Category.LookupVal : null,
                                        Fld6 = ca.Employee != null && ca.Employee.EmpSocialInfo != null && ca.Employee.EmpSocialInfo.Caste != null ? ca.Employee.EmpSocialInfo.Caste.LookupVal : null,
                                        Fld7 = ca.Employee != null && ca.Employee.EmpSocialInfo != null && ca.Employee.EmpSocialInfo.SubCaste != null ? ca.Employee.EmpSocialInfo.SubCaste.LookupVal : null,
                                        Fld8 = item.InstituteName,
                                        Fld9 = item.PostHeld,
                                        Fld10 = item.FromPeriod.Value.ToShortDateString(),
                                        Fld11 = item.ToPeriod.Value.ToShortDateString(),
                                    };
                                    OGenericPayrollStatement.Add(OGenericObjStatement);
                                }
                            }
                            return OGenericPayrollStatement;
                        }
                        break;
                    case "YEARLYTRAININGBUD":
                        var OproReportData = db.YearlyProgramAssignment
                            .Include(a => a.TrainingYear)
                            .Include(a => a.Budget)
                             .Include(a => a.Budget.Select(x => x.Category))
                             .Include(a => a.Budget.Select(x => x.SubCategory))
                              .Include(a => a.Budget.Select(x => x.ProgramList))
                               .Include(a => a.Budget.Select(x => x.FuncStruct))
                               .Include(a => a.Budget.Select(x => x.PayStruct))
                               .Include(a => a.Budget.Select(x => x.GeoStruct))
                            //.Include(a => a.Category)
                            //.Include(a => a.SubCategory)
                            //.Include(a => a.SubCategory)
                            //.Include(a => a.ProgramList)
                            //.Include(a => a.FuncStruct)
                            // .Include(a => a.PayStruct)
                            //  .Include(a => a.GeoStruct)


                            .ToList();
                        if (OproReportData == null || OproReportData.Count() == 0)
                        {
                            return null;
                        }
                        else
                        {
                            foreach (var ca in OproReportData)
                            {

                                if (ca.TrainingYear.FromDate >= pFromDate && ca.TrainingYear.ToDate <= pToDate)
                                {
                                    foreach (var item in ca.Budget)
                                    {
                                        GenericField100 OGeneticApprStatement = new GenericField100()
                                        {
                                            Fld1 = item.Category == null ? "" : item.Category.Code.ToString(),
                                            Fld2 = item.SubCategory == null ? "" : item.SubCategory.Code.ToString(),
                                            Fld3 = item.ProgramList == null ? "" : item.ProgramList.SubjectDetails.ToString(),
                                            Fld4 = item.BudgetCredit == null ? "" : item.BudgetCredit.ToString(),
                                            Fld5 = item.BudgetDebit == null ? "" : item.BudgetDebit.ToString()
                                        };
                                        OGenericPayrollStatement.Add(OGeneticApprStatement);
                                    }



                                }



                            }
                        }

                        return OGenericPayrollStatement;
                        break;

                    case "TRAININGMASTER":
                        var OtrmReportData = db.TrainingMaster.Include(a => a.ProgramList).Include(a => a.ProgramList.TrainingType)

                            .ToList();
                        if (OtrmReportData == null || OtrmReportData.Count() == 0)
                        {
                            return null;
                        }
                        else
                        {
                            foreach (var ca in OtrmReportData)
                            {


                                GenericField100 OGeneticApprStatement = new GenericField100()
                                {
                                    // Fld1 = ca.StartDate.Value.ToShortDateString(),
                                    //  Fld2 = ca.EndDate.Value.ToShortDateString(),
                                    Fld4 = ca.ProgramList.TrainingType == null ? "" : ca.ProgramList.TrainingType.LookupVal.ToString(),
                                    Fld3 = ca.ProgramList.Subject,
                                    Fld2 = ca.ProgramList.SubjectDetails
                                };
                                OGenericPayrollStatement.Add(OGeneticApprStatement);
                            }

                        }

                        return OGenericPayrollStatement;
                        break;

                    case "TRAININGSCHEDULE":
                        var OtrngschReportData = db.TrainingSchedule
                            .Include(a => a.TrainingSession)
                            .Include(a => a.TrainingSession.Select(x => x.SessionType))
                            .Include(a => a.TrainingSession.Select(t => t.TrainingProgramCalendar))
                            .Include(a => a.TrainingSession.Select(t => t.TrainingProgramCalendar.ProgramList))
                             .Include(e => e.Venue)
                              .Include(e => e.Venue.VenuType)
                             .Include(e => e.City)
                             .Include(e => e.Expenses)
                             .Include(e => e.TrainingEmployeeSource)
                             .Include(e => e.TrainingEmployeeSource.Select(z => z.EmployeeTrainingSource))
                            .ToList();
                        if (OtrngschReportData == null || OtrngschReportData.Count() == 0)
                        {
                            return null;
                        }
                        else
                        {
                            foreach (var ca in OtrngschReportData)
                            {
                                foreach (var item in ca.TrainingSession)
                                {
                                    foreach (var item1 in ca.TrainingEmployeeSource)
                                    {


                                        if (item.TrainingProgramCalendar.StartDate >= pFromDate && item.TrainingProgramCalendar.EndDate <= pToDate)
                                        {
                                            if (salheadlist.Count > 0)
                                            {

                                                foreach (var batch in salheadlist)
                                                {
                                                    if (batch.ToUpper() == ca.TrainingBatchName.ToUpper())
                                                    {

                                                        GenericField100 OGeneticApprStatement = new GenericField100()
                                                        {
                                                            Fld1 = ca.TrainingBatchCode == null ? "" : ca.TrainingBatchCode.ToString(),
                                                            Fld2 = ca.TrainingBatchName == null ? "" : ca.TrainingBatchName.ToString(),
                                                            Fld3 = item.StartTime == null ? "" : item.StartTime.ToString(),
                                                            Fld4 = item.EndTime == null ? "" : item.EndTime.ToString(),
                                                            //  Fld5 = item.SubjectTopic == null ? "" : item.SubjectTopic.ToString(),
                                                            Fld6 = item.TrainerName == null ? "" : item.TrainerName.ToString(),
                                                            Fld7 = item.TrainingProgramCalendar.StartDate == null ? "" : item.TrainingProgramCalendar.StartDate.Value.ToShortDateString(),
                                                            Fld8 = item.TrainingProgramCalendar.EndDate == null ? "" : item.TrainingProgramCalendar.EndDate.Value.ToShortDateString(),
                                                            Fld9 = item.TrainingProgramCalendar.ProgramList == null ? "" : item.TrainingProgramCalendar.ProgramList.SubjectDetails.ToString(),
                                                            Fld10 = ca.Venue == null ? "" : ca.Venue.FullDetails.ToString(),
                                                            Fld11 = ca.City == null ? "" : ca.City.Name.ToString(),
                                                            Fld12 = ca.Expenses == null ? "" : ca.Expenses.FullDetails.ToString(),
                                                            Fld13 = item1.EmployeeTrainingSource == null ? "" : item1.EmployeeTrainingSource.LookupVal.ToString(),
                                                            Fld14 = item.SessionType == null ? "" : item.SessionType.LookupVal.ToString(),
                                                            Fld15 = ca.IsBatchClose == null ? "" : ca.IsBatchClose.ToString()
                                                        };
                                                        OGenericPayrollStatement.Add(OGeneticApprStatement);
                                                    }
                                                }
                                            }
                                            else
                                            {
                                                GenericField100 OGeneticApprStatement = new GenericField100()
                                                {
                                                    Fld1 = ca.TrainingBatchCode == null ? "" : ca.TrainingBatchCode.ToString(),
                                                    Fld2 = ca.TrainingBatchName == null ? "" : ca.TrainingBatchName.ToString(),
                                                    Fld3 = item.StartTime == null ? "" : item.StartTime.ToString(),
                                                    Fld4 = item.EndTime == null ? "" : item.EndTime.ToString(),
                                                    // Fld5 = item.SubjectTopic == null ? "" : item.SubjectTopic.ToString(),
                                                    Fld6 = item.TrainerName == null ? "" : item.TrainerName.ToString(),
                                                    Fld7 = item.TrainingProgramCalendar.StartDate == null ? "" : item.TrainingProgramCalendar.StartDate.Value.ToShortDateString(),
                                                    Fld8 = item.TrainingProgramCalendar.EndDate == null ? "" : item.TrainingProgramCalendar.EndDate.Value.ToShortDateString(),
                                                    Fld9 = item.TrainingProgramCalendar.ProgramList == null ? "" : item.TrainingProgramCalendar.ProgramList.SubjectDetails.ToString(),
                                                    Fld10 = ca.Venue == null ? "" : ca.Venue.FullDetails.ToString(),
                                                    Fld11 = ca.City == null ? "" : ca.City.Name.ToString(),
                                                    Fld12 = ca.Expenses == null ? "" : ca.Expenses.FullDetails.ToString(),
                                                    Fld13 = item1.EmployeeTrainingSource == null ? "" : item1.EmployeeTrainingSource.LookupVal.ToString(),
                                                    Fld14 = item.SessionType == null ? "" : item.SessionType.LookupVal.ToString(),
                                                    Fld15 = ca.IsBatchClose == null ? "" : ca.IsBatchClose.ToString()
                                                };
                                                OGenericPayrollStatement.Add(OGeneticApprStatement);
                                            }
                                        }
                                    }
                                }
                            }

                        }

                        return OGenericPayrollStatement;
                        break;

                    case "TRAININGEVALUATION":

                        var OTrnEvn = new List<EmployeeTraining>();
                        foreach (var item in EmpPayrollIdList)
                        {

                            var OTrnEvna122 = db.EmployeeTraining
                                .Include(e => e.TrainingDetails)
                                 .Include(e => e.TrainingDetails.Select(a => a.TrainigDetailSessionInfo))
                                  .Include(e => e.TrainingDetails.Select(a => a.TrainigDetailSessionInfo.Select(x => x.TrainingEvaluation)))
                                 .Include(e => e.TrainingDetails.Select(r => r.TrainingCalendar))
                               .Include(e => e.TrainingDetails.Select(t => t.TrainingSchedule))
                               .Include(e => e.TrainingDetails.Select(t => t.TrainingSchedule.TrainingSession))
                               .Include(e => e.TrainingDetails.Select(t => t.TrainingSchedule.TrainingSession.Select(x => x.SessionType)))
                               .Include(e => e.TrainingDetails.Select(t => t.TrainingSchedule.TrainingSession.Select(a => a.TrainingProgramCalendar)))
                               .Include(e => e.TrainingDetails.Select(t => t.TrainingSchedule.TrainingSession.Select(z => z.TrainingProgramCalendar.ProgramList.TrainingType)))
                                .Include(e => e.Employee)
                                .Include(e => e.Employee.EmpName)
                                    .Include(e => e.Employee.GeoStruct)
                                // .Include(e => e.Employee.GeoStruct.Location)
                                // .Include(e => e.Employee.GeoStruct.Location.LocationObj)
                                    .Include(e => e.Employee.FuncStruct)
                                // .Include(e => e.Employee.FuncStruct.Job)
                                    .Include(e => e.Employee.PayStruct)

                              .Where(e => e.Employee.Id == item)
                               .FirstOrDefault();

                            if (OTrnEvna122 != null)
                            {
                                OTrnEvn.Add(OTrnEvna122);
                            }

                        }



                        if (OTrnEvn == null || OTrnEvn.Count() == 0)
                        {
                            return null;
                        }
                        else
                        {
                            var emp = false;
                            var dept = false;
                            var loca = false;
                            var comp = false;
                            var grp = false;
                            var unit = false;
                            var div = false;
                            var regn = false;
                            var grade = false;
                            var lvl = false;
                            var jobstat = false;
                            var job = false;
                            var jobpos = false;
                            var vc = db.LookupValue.Where(a => forithead.Contains(a.Id.ToString())).ToList();

                            foreach (var item in vc)
                            {
                                //if (item.LookupVal.ToUpper() == "MONTH")
                                //{
                                //    month = true;
                                //}
                                if (item.LookupVal.ToUpper() == "LOCATION")
                                {

                                    loca = true;
                                }
                                if (item.LookupVal.ToUpper() == "EMPLOYEE")
                                {
                                    emp = true;
                                }
                                if (item.LookupVal.ToUpper() == "DEPARTMENT")
                                {
                                    dept = true;
                                }
                                if (item.LookupVal.ToUpper() == "COMPANY")
                                {
                                    comp = true;
                                }
                                if (item.LookupVal.ToUpper() == "GROUP")
                                {
                                    grp = true;
                                }
                                if (item.LookupVal.ToUpper() == "UNIT")
                                {
                                    unit = true;
                                }
                                if (item.LookupVal.ToUpper() == "DIVISION")
                                {
                                    div = true;
                                }
                                if (item.LookupVal.ToUpper() == "REGION")
                                {
                                    regn = true;
                                }
                                if (item.LookupVal.ToUpper() == "GRADE")
                                {
                                    grade = true;
                                }
                                if (item.LookupVal.ToUpper() == "LEVEL")
                                {
                                    lvl = true;
                                }
                                if (item.LookupVal.ToUpper() == "JOBSTATUS")
                                {
                                    jobstat = true;
                                }

                                if (item.LookupVal.ToUpper() == "JOB")
                                {
                                    job = true;
                                }
                                if (item.LookupVal.ToUpper() == "JOBPOSITION")
                                {
                                    jobpos = true;
                                }
                            }

                            List<Utility.ReportClass> GeoData = new List<Utility.ReportClass>();
                            List<Utility.ReportClass> Paydata = new List<Utility.ReportClass>();
                            List<Utility.ReportClass> Funcdata = new List<Utility.ReportClass>();

                            Utility.ReportClass GeoDataInd = new Utility.ReportClass();
                            Utility.ReportClass PaydataInd = new Utility.ReportClass();
                            Utility.ReportClass FuncdataInd = new Utility.ReportClass();

                            GeoData = GetViewData(0);
                            Paydata = GetViewData(1);
                            Funcdata = GetViewData(2);

                            foreach (var a in OTrnEvn)
                            {
                                int geoid = a.Employee.GeoStruct.Id;

                                int payid = a.Employee.PayStruct.Id;

                                int funid = a.Employee.FuncStruct.Id;

                                GeoDataInd = GetViewDataIndiv(geoid, payid, funid, GeoData, 0);
                                PaydataInd = GetViewDataIndiv(geoid, payid, funid, Paydata, 1);
                                FuncdataInd = GetViewDataIndiv(geoid, payid, funid, Funcdata, 2);

                                foreach (var item in a.TrainingDetails)
                                {
                                    var trsch = item.TrainingSchedule;
                                    if (trsch != null)
                                    {
                                        if (salheadlist.Count > 0)
                                        {
                                            foreach (var batch in salheadlist)
                                            {
                                                if (batch.ToUpper() == trsch.TrainingBatchName.ToUpper())
                                                {

                                                    foreach (var item1 in trsch.TrainingSession)
                                                    {
                                                        if (item1.TrainingProgramCalendar.StartDate >= pFromDate && item1.TrainingProgramCalendar.EndDate <= pToDate)
                                                        {
                                                            var prg = item1.TrainingProgramCalendar.ProgramList.SubjectDetails.ToString();
                                                            var cat = item1.TrainingProgramCalendar.ProgramList.TrainingType.LookupVal.ToString();

                                                            foreach (var item2 in item.TrainigDetailSessionInfo)
                                                            {
                                                                if (item2.TrainingEvaluation != null)
                                                                {


                                                                    //var cat1 = item1.TrainingCalendar.ProgramList.
                                                                    var sd = item.TrainingCalendar == null ? "" : item.TrainingCalendar.FromDate.Value.ToShortDateString();
                                                                    var ed = item.TrainingCalendar == null ? "" : item.TrainingCalendar.ToDate.Value.ToShortDateString();

                                                                    GenericField100 OGenericObjStatement = new GenericField100
                                                                    {
                                                                        Fld1 = a.Employee.EmpCode == null ? "" : a.Employee.EmpCode.ToString(),
                                                                        Fld2 = a.Employee.EmpName == null ? "" : a.Employee.EmpName.FullNameLFM.ToString(),
                                                                        Fld3 = item.TrainingSchedule == null ? "" : item.TrainingSchedule.TrainingBatchName.ToString(),
                                                                        Fld4 = prg == null ? "" : prg.ToString(),
                                                                        Fld5 = item1.SessionDate == null ? "" : item1.SessionDate.Value.ToShortDateString(),
                                                                        Fld6 = item1.SessionType == null ? "" : item1.SessionType.LookupVal.ToString(),
                                                                        Fld7 = cat == null ? "" : cat.ToString(),
                                                                        Fld8 = item2.TrainingEvaluation.EvaluationDetails == null ? "" : item2.TrainingEvaluation.EvaluationDetails.ToString(),
                                                                        Fld9 = item2.TrainingEvaluation.EvaluationDate == null ? "" : item2.TrainingEvaluation.EvaluationDate.Value.ToShortDateString(),
                                                                        Fld10 = item2.TrainingEvaluation.GDScore == null ? "" : item2.TrainingEvaluation.GDScore.ToString(),
                                                                        Fld11 = item2.TrainingEvaluation.WrittenScore == null ? "" : item2.TrainingEvaluation.WrittenScore.ToString(),
                                                                        Fld12 = item2.TrainingEvaluation.InterviewScore == null ? "" : item2.TrainingEvaluation.InterviewScore.ToString(),

                                                                    };
                                                                    if (comp)
                                                                    {
                                                                        OGenericObjStatement.Fld99 = GeoDataInd.Company_Name;
                                                                    }
                                                                    if (div)
                                                                    {
                                                                        OGenericObjStatement.Fld98 = GeoDataInd.Division_Name;
                                                                    }
                                                                    if (loca)
                                                                    {
                                                                        OGenericObjStatement.Fld97 = GeoDataInd.LocDesc;
                                                                    }
                                                                    if (dept)
                                                                    {
                                                                        OGenericObjStatement.Fld96 = GeoDataInd.DeptDesc;
                                                                    }
                                                                    if (grp)
                                                                    {
                                                                        OGenericObjStatement.Fld95 = GeoDataInd.Group_Name;
                                                                    }
                                                                    if (unit)
                                                                    {
                                                                        OGenericObjStatement.Fld94 = GeoDataInd.Unit_Name;
                                                                    }
                                                                    if (grade)
                                                                    {
                                                                        OGenericObjStatement.Fld93 = PaydataInd.Grade_Name;
                                                                    }
                                                                    if (lvl)
                                                                    {
                                                                        OGenericObjStatement.Fld92 = PaydataInd.Level_Name;
                                                                    }
                                                                    if (jobstat)
                                                                    {
                                                                        OGenericObjStatement.Fld91 = GeoDataInd.JobStatus_Id.ToString();
                                                                    }
                                                                    if (job)
                                                                    {
                                                                        OGenericObjStatement.Fld90 = FuncdataInd.Job_Name;
                                                                    }
                                                                    if (jobpos)
                                                                    {
                                                                        OGenericObjStatement.Fld89 = FuncdataInd.JobPositionDesc;
                                                                    }
                                                                    if (emp)
                                                                    {
                                                                        OGenericObjStatement.Fld88 = a.Employee.ToString();
                                                                    }

                                                                    OGenericPayrollStatement.Add(OGenericObjStatement);

                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                        else
                                        {
                                            foreach (var item1 in trsch.TrainingSession)
                                            {
                                                if (item1.TrainingProgramCalendar.StartDate >= pFromDate && item1.TrainingProgramCalendar.EndDate <= pToDate)
                                                {
                                                    var prg = item1.TrainingProgramCalendar.ProgramList.SubjectDetails.ToString();
                                                    var cat = item1.TrainingProgramCalendar.ProgramList.TrainingType.LookupVal.ToString();

                                                    foreach (var item2 in item.TrainigDetailSessionInfo)
                                                    {
                                                        if (item2.TrainingEvaluation != null)
                                                        {


                                                            //var cat1 = item1.TrainingCalendar.ProgramList.
                                                            var sd = item.TrainingCalendar == null ? "" : item.TrainingCalendar.FromDate.Value.ToShortDateString();
                                                            var ed = item.TrainingCalendar == null ? "" : item.TrainingCalendar.ToDate.Value.ToShortDateString();

                                                            GenericField100 OGenericObjStatement = new GenericField100
                                                            {
                                                                Fld1 = a.Employee.EmpCode == null ? "" : a.Employee.EmpCode.ToString(),
                                                                Fld2 = a.Employee.EmpName == null ? "" : a.Employee.EmpName.FullNameLFM.ToString(),
                                                                Fld3 = item.TrainingSchedule == null ? "" : item.TrainingSchedule.TrainingBatchName.ToString(),
                                                                Fld4 = prg == null ? "" : prg.ToString(),
                                                                Fld5 = item1.SessionDate == null ? "" : item1.SessionDate.Value.ToShortDateString(),
                                                                Fld6 = item1.SessionType == null ? "" : item1.SessionType.LookupVal.ToString(),
                                                                Fld7 = cat == null ? "" : cat.ToString(),
                                                                Fld8 = item2.TrainingEvaluation.EvaluationDetails == null ? "" : item2.TrainingEvaluation.EvaluationDetails.ToString(),
                                                                Fld9 = item2.TrainingEvaluation.EvaluationDate == null ? "" : item2.TrainingEvaluation.EvaluationDate.Value.ToShortDateString(),
                                                                Fld10 = item2.TrainingEvaluation.GDScore == null ? "" : item2.TrainingEvaluation.GDScore.ToString(),
                                                                Fld11 = item2.TrainingEvaluation.WrittenScore == null ? "" : item2.TrainingEvaluation.WrittenScore.ToString(),
                                                                Fld12 = item2.TrainingEvaluation.InterviewScore == null ? "" : item2.TrainingEvaluation.InterviewScore.ToString(),

                                                            };
                                                            if (comp)
                                                            {
                                                                OGenericObjStatement.Fld99 = GeoDataInd.Company_Name;
                                                            }
                                                            if (div)
                                                            {
                                                                OGenericObjStatement.Fld98 = GeoDataInd.Division_Name;
                                                            }
                                                            if (loca)
                                                            {
                                                                OGenericObjStatement.Fld97 = GeoDataInd.LocDesc;
                                                            }
                                                            if (dept)
                                                            {
                                                                OGenericObjStatement.Fld96 = GeoDataInd.DeptDesc;
                                                            }
                                                            if (grp)
                                                            {
                                                                OGenericObjStatement.Fld95 = GeoDataInd.Group_Name;
                                                            }
                                                            if (unit)
                                                            {
                                                                OGenericObjStatement.Fld94 = GeoDataInd.Unit_Name;
                                                            }
                                                            if (grade)
                                                            {
                                                                OGenericObjStatement.Fld93 = PaydataInd.Grade_Name;
                                                            }
                                                            if (lvl)
                                                            {
                                                                OGenericObjStatement.Fld92 = PaydataInd.Level_Name;
                                                            }
                                                            if (jobstat)
                                                            {
                                                                OGenericObjStatement.Fld91 = GeoDataInd.JobStatus_Id.ToString();
                                                            }
                                                            if (job)
                                                            {
                                                                OGenericObjStatement.Fld90 = FuncdataInd.Job_Name;
                                                            }
                                                            if (jobpos)
                                                            {
                                                                OGenericObjStatement.Fld89 = FuncdataInd.JobPositionDesc;
                                                            }
                                                            if (emp)
                                                            {
                                                                OGenericObjStatement.Fld88 = a.Employee.ToString();
                                                            }

                                                            OGenericPayrollStatement.Add(OGenericObjStatement);

                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        return OGenericPayrollStatement;

                        break;

                    case "SESSIONWISETRAININGEVALUATION":

                        var OTrnEvnsession = new List<EmployeeTraining>();
                        foreach (var item in EmpPayrollIdList)
                        {

                            var OTrnEvna122 = db.EmployeeTraining
                                .Include(e => e.TrainingDetails)
                                 .Include(e => e.TrainingDetails.Select(a => a.TrainigDetailSessionInfo))
                                  .Include(e => e.TrainingDetails.Select(a => a.TrainigDetailSessionInfo.Select(x => x.TrainingEvaluation)))
                                 .Include(e => e.TrainingDetails.Select(r => r.TrainingCalendar))
                               .Include(e => e.TrainingDetails.Select(t => t.TrainingSchedule))
                               .Include(e => e.TrainingDetails.Select(t => t.TrainingSchedule.TrainingSession))
                               .Include(e => e.TrainingDetails.Select(t => t.TrainingSchedule.TrainingSession.Select(x => x.SessionType)))
                               .Include(e => e.TrainingDetails.Select(t => t.TrainingSchedule.TrainingSession.Select(a => a.TrainingProgramCalendar)))
                               .Include(e => e.TrainingDetails.Select(t => t.TrainingSchedule.TrainingSession.Select(z => z.TrainingProgramCalendar.ProgramList.TrainingType)))
                                .Include(e => e.Employee)
                                .Include(e => e.Employee.EmpName)
                                    .Include(e => e.Employee.GeoStruct)
                                // .Include(e => e.Employee.GeoStruct.Location)
                                // .Include(e => e.Employee.GeoStruct.Location.LocationObj)
                                    .Include(e => e.Employee.FuncStruct)
                                // .Include(e => e.Employee.FuncStruct.Job)
                                    .Include(e => e.Employee.PayStruct)

                              .Where(e => e.Employee.Id == item)
                               .FirstOrDefault();

                            if (OTrnEvna122 != null)
                            {
                                OTrnEvnsession.Add(OTrnEvna122);
                            }

                        }



                        if (OTrnEvnsession == null || OTrnEvnsession.Count() == 0)
                        {
                            return null;
                        }
                        else
                        {
                            var emp = false;
                            var dept = false;
                            var loca = false;
                            var comp = false;
                            var grp = false;
                            var unit = false;
                            var div = false;
                            var regn = false;
                            var grade = false;
                            var lvl = false;
                            var jobstat = false;
                            var job = false;
                            var jobpos = false;
                            var vc = db.LookupValue.Where(a => forithead.Contains(a.Id.ToString())).ToList();

                            foreach (var item in vc)
                            {
                                //if (item.LookupVal.ToUpper() == "MONTH")
                                //{
                                //    month = true;
                                //}
                                if (item.LookupVal.ToUpper() == "LOCATION")
                                {

                                    loca = true;
                                }
                                if (item.LookupVal.ToUpper() == "EMPLOYEE")
                                {
                                    emp = true;
                                }
                                if (item.LookupVal.ToUpper() == "DEPARTMENT")
                                {
                                    dept = true;
                                }
                                if (item.LookupVal.ToUpper() == "COMPANY")
                                {
                                    comp = true;
                                }
                                if (item.LookupVal.ToUpper() == "GROUP")
                                {
                                    grp = true;
                                }
                                if (item.LookupVal.ToUpper() == "UNIT")
                                {
                                    unit = true;
                                }
                                if (item.LookupVal.ToUpper() == "DIVISION")
                                {
                                    div = true;
                                }
                                if (item.LookupVal.ToUpper() == "REGION")
                                {
                                    regn = true;
                                }
                                if (item.LookupVal.ToUpper() == "GRADE")
                                {
                                    grade = true;
                                }
                                if (item.LookupVal.ToUpper() == "LEVEL")
                                {
                                    lvl = true;
                                }
                                if (item.LookupVal.ToUpper() == "JOBSTATUS")
                                {
                                    jobstat = true;
                                }

                                if (item.LookupVal.ToUpper() == "JOB")
                                {
                                    job = true;
                                }
                                if (item.LookupVal.ToUpper() == "JOBPOSITION")
                                {
                                    jobpos = true;
                                }
                            }

                            List<Utility.ReportClass> GeoData = new List<Utility.ReportClass>();
                            List<Utility.ReportClass> Paydata = new List<Utility.ReportClass>();
                            List<Utility.ReportClass> Funcdata = new List<Utility.ReportClass>();

                            Utility.ReportClass GeoDataInd = new Utility.ReportClass();
                            Utility.ReportClass PaydataInd = new Utility.ReportClass();
                            Utility.ReportClass FuncdataInd = new Utility.ReportClass();

                            GeoData = GetViewData(0);
                            Paydata = GetViewData(1);
                            Funcdata = GetViewData(2);

                            foreach (var a in OTrnEvnsession)
                            {
                                int geoid = a.Employee.GeoStruct.Id;

                                int payid = a.Employee.PayStruct.Id;

                                int funid = a.Employee.FuncStruct.Id;

                                GeoDataInd = GetViewDataIndiv(geoid, payid, funid, GeoData, 0);
                                PaydataInd = GetViewDataIndiv(geoid, payid, funid, Paydata, 1);
                                FuncdataInd = GetViewDataIndiv(geoid, payid, funid, Funcdata, 2);

                                foreach (var item in a.TrainingDetails)
                                {
                                    var trsch = item.TrainingSchedule;
                                    if (trsch != null)
                                    {
                                        if (salheadlist.Count > 0)
                                        {
                                            foreach (var batch in salheadlist)
                                            {
                                                if (batch.ToUpper() == trsch.TrainingBatchName.ToUpper())
                                                {

                                                    foreach (var item1 in trsch.TrainingSession)
                                                    {
                                                        if (salheadlistLevel1.Count() > 0)
                                                        {
                                                            foreach (var Level1 in salheadlistLevel1)
                                                            {
                                                                if (Level1.ToUpper() == item1.SessionType.LookupVal.ToUpper())
                                                                {
                                                                    if (salheadlistLevel2.Count() > 0)
                                                                    {
                                                                        foreach (var Level2 in salheadlistLevel2)
                                                                        {
                                                                            if (Level2.ToUpper() == item1.TrainingProgramCalendar.ProgramList.SubjectDetails.ToUpper())
                                                                            {

                                                                                if (item1.TrainingProgramCalendar.StartDate >= pFromDate && item1.TrainingProgramCalendar.EndDate <= pToDate)
                                                                                {
                                                                                    var prg = item1.TrainingProgramCalendar.ProgramList.SubjectDetails.ToString();
                                                                                    var cat = item1.TrainingProgramCalendar.ProgramList.TrainingType.LookupVal.ToString();

                                                                                    foreach (var item2 in item.TrainigDetailSessionInfo)
                                                                                    {
                                                                                        if (item2.TrainingEvaluation != null)
                                                                                        {


                                                                                            //var cat1 = item1.TrainingCalendar.ProgramList.
                                                                                            var sd = item.TrainingCalendar == null ? "" : item.TrainingCalendar.FromDate.Value.ToShortDateString();
                                                                                            var ed = item.TrainingCalendar == null ? "" : item.TrainingCalendar.ToDate.Value.ToShortDateString();

                                                                                            GenericField100 OGenericObjStatement = new GenericField100
                                                                                            {
                                                                                                Fld1 = a.Employee.EmpCode == null ? "" : a.Employee.EmpCode.ToString(),
                                                                                                Fld2 = a.Employee.EmpName == null ? "" : a.Employee.EmpName.FullNameLFM.ToString(),
                                                                                                Fld3 = item.TrainingSchedule == null ? "" : item.TrainingSchedule.TrainingBatchName.ToString(),
                                                                                                Fld4 = prg == null ? "" : prg.ToString(),
                                                                                                Fld5 = item1.SessionDate == null ? "" : item1.SessionDate.Value.ToShortDateString(),
                                                                                                Fld6 = item1.SessionType == null ? "" : item1.SessionType.LookupVal.ToString(),
                                                                                                Fld7 = cat == null ? "" : cat.ToString(),
                                                                                                Fld8 = item2.TrainingEvaluation.EvaluationDetails == null ? "" : item2.TrainingEvaluation.EvaluationDetails.ToString(),
                                                                                                Fld9 = item2.TrainingEvaluation.EvaluationDate == null ? "" : item2.TrainingEvaluation.EvaluationDate.Value.ToShortDateString(),
                                                                                                Fld10 = item2.TrainingEvaluation.GDScore == null ? "" : item2.TrainingEvaluation.GDScore.ToString(),
                                                                                                Fld11 = item2.TrainingEvaluation.WrittenScore == null ? "" : item2.TrainingEvaluation.WrittenScore.ToString(),
                                                                                                Fld12 = item2.TrainingEvaluation.InterviewScore == null ? "" : item2.TrainingEvaluation.InterviewScore.ToString(),

                                                                                            };
                                                                                            if (comp)
                                                                                            {
                                                                                                OGenericObjStatement.Fld99 = GeoDataInd.Company_Name;
                                                                                            }
                                                                                            if (div)
                                                                                            {
                                                                                                OGenericObjStatement.Fld98 = GeoDataInd.Division_Name;
                                                                                            }
                                                                                            if (loca)
                                                                                            {
                                                                                                OGenericObjStatement.Fld97 = GeoDataInd.LocDesc;
                                                                                            }
                                                                                            if (dept)
                                                                                            {
                                                                                                OGenericObjStatement.Fld96 = GeoDataInd.DeptDesc;
                                                                                            }
                                                                                            if (grp)
                                                                                            {
                                                                                                OGenericObjStatement.Fld95 = GeoDataInd.Group_Name;
                                                                                            }
                                                                                            if (unit)
                                                                                            {
                                                                                                OGenericObjStatement.Fld94 = GeoDataInd.Unit_Name;
                                                                                            }
                                                                                            if (grade)
                                                                                            {
                                                                                                OGenericObjStatement.Fld93 = PaydataInd.Grade_Name;
                                                                                            }
                                                                                            if (lvl)
                                                                                            {
                                                                                                OGenericObjStatement.Fld92 = PaydataInd.Level_Name;
                                                                                            }
                                                                                            if (jobstat)
                                                                                            {
                                                                                                OGenericObjStatement.Fld91 = GeoDataInd.JobStatus_Id.ToString();
                                                                                            }
                                                                                            if (job)
                                                                                            {
                                                                                                OGenericObjStatement.Fld90 = FuncdataInd.Job_Name;
                                                                                            }
                                                                                            if (jobpos)
                                                                                            {
                                                                                                OGenericObjStatement.Fld89 = FuncdataInd.JobPositionDesc;
                                                                                            }
                                                                                            if (emp)
                                                                                            {
                                                                                                OGenericObjStatement.Fld88 = a.Employee.ToString();
                                                                                            }

                                                                                            OGenericPayrollStatement.Add(OGenericObjStatement);

                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                        else
                                                        {
                                                            if (salheadlistLevel2.Count() > 0)
                                                            {
                                                                foreach (var Level2 in salheadlistLevel2)
                                                                {
                                                                    if (Level2.ToUpper() == item1.TrainingProgramCalendar.ProgramList.SubjectDetails.ToUpper())
                                                                    {

                                                                        if (item1.TrainingProgramCalendar.StartDate >= pFromDate && item1.TrainingProgramCalendar.EndDate <= pToDate)
                                                                        {
                                                                            var prg = item1.TrainingProgramCalendar.ProgramList.SubjectDetails.ToString();
                                                                            var cat = item1.TrainingProgramCalendar.ProgramList.TrainingType.LookupVal.ToString();

                                                                            foreach (var item2 in item.TrainigDetailSessionInfo)
                                                                            {
                                                                                if (item2.TrainingEvaluation != null)
                                                                                {


                                                                                    //var cat1 = item1.TrainingCalendar.ProgramList.
                                                                                    var sd = item.TrainingCalendar == null ? "" : item.TrainingCalendar.FromDate.Value.ToShortDateString();
                                                                                    var ed = item.TrainingCalendar == null ? "" : item.TrainingCalendar.ToDate.Value.ToShortDateString();

                                                                                    GenericField100 OGenericObjStatement = new GenericField100
                                                                                    {
                                                                                        Fld1 = a.Employee.EmpCode == null ? "" : a.Employee.EmpCode.ToString(),
                                                                                        Fld2 = a.Employee.EmpName == null ? "" : a.Employee.EmpName.FullNameLFM.ToString(),
                                                                                        Fld3 = item.TrainingSchedule == null ? "" : item.TrainingSchedule.TrainingBatchName.ToString(),
                                                                                        Fld4 = prg == null ? "" : prg.ToString(),
                                                                                        Fld5 = item1.SessionDate == null ? "" : item1.SessionDate.Value.ToShortDateString(),
                                                                                        Fld6 = item1.SessionType == null ? "" : item1.SessionType.LookupVal.ToString(),
                                                                                        Fld7 = cat == null ? "" : cat.ToString(),
                                                                                        Fld8 = item2.TrainingEvaluation.EvaluationDetails == null ? "" : item2.TrainingEvaluation.EvaluationDetails.ToString(),
                                                                                        Fld9 = item2.TrainingEvaluation.EvaluationDate == null ? "" : item2.TrainingEvaluation.EvaluationDate.Value.ToShortDateString(),
                                                                                        Fld10 = item2.TrainingEvaluation.GDScore == null ? "" : item2.TrainingEvaluation.GDScore.ToString(),
                                                                                        Fld11 = item2.TrainingEvaluation.WrittenScore == null ? "" : item2.TrainingEvaluation.WrittenScore.ToString(),
                                                                                        Fld12 = item2.TrainingEvaluation.InterviewScore == null ? "" : item2.TrainingEvaluation.InterviewScore.ToString(),

                                                                                    };
                                                                                    if (comp)
                                                                                    {
                                                                                        OGenericObjStatement.Fld99 = GeoDataInd.Company_Name;
                                                                                    }
                                                                                    if (div)
                                                                                    {
                                                                                        OGenericObjStatement.Fld98 = GeoDataInd.Division_Name;
                                                                                    }
                                                                                    if (loca)
                                                                                    {
                                                                                        OGenericObjStatement.Fld97 = GeoDataInd.LocDesc;
                                                                                    }
                                                                                    if (dept)
                                                                                    {
                                                                                        OGenericObjStatement.Fld96 = GeoDataInd.DeptDesc;
                                                                                    }
                                                                                    if (grp)
                                                                                    {
                                                                                        OGenericObjStatement.Fld95 = GeoDataInd.Group_Name;
                                                                                    }
                                                                                    if (unit)
                                                                                    {
                                                                                        OGenericObjStatement.Fld94 = GeoDataInd.Unit_Name;
                                                                                    }
                                                                                    if (grade)
                                                                                    {
                                                                                        OGenericObjStatement.Fld93 = PaydataInd.Grade_Name;
                                                                                    }
                                                                                    if (lvl)
                                                                                    {
                                                                                        OGenericObjStatement.Fld92 = PaydataInd.Level_Name;
                                                                                    }
                                                                                    if (jobstat)
                                                                                    {
                                                                                        OGenericObjStatement.Fld91 = GeoDataInd.JobStatus_Id.ToString();
                                                                                    }
                                                                                    if (job)
                                                                                    {
                                                                                        OGenericObjStatement.Fld90 = FuncdataInd.Job_Name;
                                                                                    }
                                                                                    if (jobpos)
                                                                                    {
                                                                                        OGenericObjStatement.Fld89 = FuncdataInd.JobPositionDesc;
                                                                                    }
                                                                                    if (emp)
                                                                                    {
                                                                                        OGenericObjStatement.Fld88 = a.Employee.ToString();
                                                                                    }

                                                                                    OGenericPayrollStatement.Add(OGenericObjStatement);

                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                        else
                                        {
                                            foreach (var item1 in trsch.TrainingSession)
                                            {
                                                if (item1.TrainingProgramCalendar.StartDate >= pFromDate && item1.TrainingProgramCalendar.EndDate <= pToDate)
                                                {
                                                    var prg = item1.TrainingProgramCalendar.ProgramList.SubjectDetails.ToString();
                                                    var cat = item1.TrainingProgramCalendar.ProgramList.TrainingType.LookupVal.ToString();

                                                    foreach (var item2 in item.TrainigDetailSessionInfo)
                                                    {
                                                        if (item2.TrainingEvaluation != null)
                                                        {


                                                            //var cat1 = item1.TrainingCalendar.ProgramList.
                                                            var sd = item.TrainingCalendar == null ? "" : item.TrainingCalendar.FromDate.Value.ToShortDateString();
                                                            var ed = item.TrainingCalendar == null ? "" : item.TrainingCalendar.ToDate.Value.ToShortDateString();

                                                            GenericField100 OGenericObjStatement = new GenericField100
                                                            {
                                                                Fld1 = a.Employee.EmpCode == null ? "" : a.Employee.EmpCode.ToString(),
                                                                Fld2 = a.Employee.EmpName == null ? "" : a.Employee.EmpName.FullNameLFM.ToString(),
                                                                Fld3 = item.TrainingSchedule == null ? "" : item.TrainingSchedule.TrainingBatchName.ToString(),
                                                                Fld4 = prg == null ? "" : prg.ToString(),
                                                                Fld5 = item1.SessionDate == null ? "" : item1.SessionDate.Value.ToShortDateString(),
                                                                Fld6 = item1.SessionType == null ? "" : item1.SessionType.LookupVal.ToString(),
                                                                Fld7 = cat == null ? "" : cat.ToString(),
                                                                Fld8 = item2.TrainingEvaluation.EvaluationDetails == null ? "" : item2.TrainingEvaluation.EvaluationDetails.ToString(),
                                                                Fld9 = item2.TrainingEvaluation.EvaluationDate == null ? "" : item2.TrainingEvaluation.EvaluationDate.Value.ToShortDateString(),
                                                                Fld10 = item2.TrainingEvaluation.GDScore == null ? "" : item2.TrainingEvaluation.GDScore.ToString(),
                                                                Fld11 = item2.TrainingEvaluation.WrittenScore == null ? "" : item2.TrainingEvaluation.WrittenScore.ToString(),
                                                                Fld12 = item2.TrainingEvaluation.InterviewScore == null ? "" : item2.TrainingEvaluation.InterviewScore.ToString(),

                                                            };
                                                            if (comp)
                                                            {
                                                                OGenericObjStatement.Fld99 = GeoDataInd.Company_Name;
                                                            }
                                                            if (div)
                                                            {
                                                                OGenericObjStatement.Fld98 = GeoDataInd.Division_Name;
                                                            }
                                                            if (loca)
                                                            {
                                                                OGenericObjStatement.Fld97 = GeoDataInd.LocDesc;
                                                            }
                                                            if (dept)
                                                            {
                                                                OGenericObjStatement.Fld96 = GeoDataInd.DeptDesc;
                                                            }
                                                            if (grp)
                                                            {
                                                                OGenericObjStatement.Fld95 = GeoDataInd.Group_Name;
                                                            }
                                                            if (unit)
                                                            {
                                                                OGenericObjStatement.Fld94 = GeoDataInd.Unit_Name;
                                                            }
                                                            if (grade)
                                                            {
                                                                OGenericObjStatement.Fld93 = PaydataInd.Grade_Name;
                                                            }
                                                            if (lvl)
                                                            {
                                                                OGenericObjStatement.Fld92 = PaydataInd.Level_Name;
                                                            }
                                                            if (jobstat)
                                                            {
                                                                OGenericObjStatement.Fld91 = GeoDataInd.JobStatus_Id.ToString();
                                                            }
                                                            if (job)
                                                            {
                                                                OGenericObjStatement.Fld90 = FuncdataInd.Job_Name;
                                                            }
                                                            if (jobpos)
                                                            {
                                                                OGenericObjStatement.Fld89 = FuncdataInd.JobPositionDesc;
                                                            }
                                                            if (emp)
                                                            {
                                                                OGenericObjStatement.Fld88 = a.Employee.ToString();
                                                            }

                                                            OGenericPayrollStatement.Add(OGenericObjStatement);

                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        return OGenericPayrollStatement;

                        break;
                    ///////////////Recruitment///////////////////////////////
                    case "EMAIL":
                        var OEmpEmail = new List<EmployeePayroll>();
                        foreach (var item in EmpPayrollIdList)
                        {
                            var OITSection24PaymentData_temp = db.EmployeePayroll
                                 .Include(e => e.Employee)
                             .Include(e => e.Employee.EmpName)
                             .Include(e => e.Employee.ResContact).AsNoTracking()
                            .Where(e => e.Employee.Id == item).AsParallel().FirstOrDefault();

                            if (OITSection24PaymentData_temp != null)
                            {
                                OEmpEmail.Add(OITSection24PaymentData_temp);
                            }
                        }

                        if (OEmpEmail == null || OEmpEmail.Count == 0)
                        {
                            return null;
                        }
                        else
                        {
                            foreach (var ca in OEmpEmail)
                            {
                                if (ca.Employee.ResContact != null)
                                {
                                    GenericField100 OGenericObjStatement = new GenericField100
                                    {
                                        Fld2 = ca.Employee.EmpCode,
                                        Fld3 = ca.Employee.EmpName.FullNameFML,
                                        Fld4 = ca.Employee.ResContact.EmailId
                                    };
                                    OGenericPayrollStatement.Add(OGenericObjStatement);
                                }
                            }
                            return OGenericPayrollStatement;
                        }

                        break;




                    case "HOBBIES":

                        var OEmpHobbies = new List<EmployeePayroll>();
                        foreach (var item in EmpPayrollIdList)
                        {
                            var OITSection24PaymentData_temp = db.EmployeePayroll
                                 .Include(e => e.Employee)
                             .Include(e => e.Employee.EmpName)
                             .Include(e => e.Employee.EmpAcademicInfo.Hobby)
                            .Where(e => e.Employee.Id == item).FirstOrDefault();
                            if (OITSection24PaymentData_temp != null)
                            {
                                OEmpHobbies.Add(OITSection24PaymentData_temp);
                            }
                        }
                        if (OEmpHobbies == null || OEmpHobbies.Count == 0)
                        {
                            return null;
                        }
                        else
                        {
                            foreach (var ca in OEmpHobbies)
                            {
                                if (ca.Employee.EmpAcademicInfo != null && ca.Employee.EmpAcademicInfo.Hobby.Count > 0)
                                {


                                    var v2 = ca.Employee.EmpAcademicInfo.Hobby.ToList();
                                    foreach (var item in v2)
                                    {
                                        GenericField100 OGenericObjStatement = new GenericField100
                                        {
                                            Fld2 = ca.Employee.EmpCode,
                                            Fld3 = ca.Employee.EmpName.FullNameFML,
                                            Fld4 = item.HobbyName.ToString()
                                            //ca.Employee != null && ca.Employee.EmpAcademicInfo != null && ca.Employee.EmpAcademicInfo.Hobby != null ? ca.Employee.EmpAcademicInfo.Hobby.ToString() : null,
                                        };
                                        OGenericPayrollStatement.Add(OGenericObjStatement);
                                    }
                                }
                            }
                            return OGenericPayrollStatement;
                        }
                        break;



                    case "SKILL":
                        var OEmpSkill = new List<EmployeePayroll>();
                        foreach (var item in EmpPayrollIdList)
                        {
                            var OITSection24PaymentData_temp = db.EmployeePayroll
                                 .Include(e => e.Employee)
                             .Include(e => e.Employee.EmpName)
                             .Include(e => e.Employee.EmpAcademicInfo.Skill)
                            .Where(e => e.Employee.Id == item).FirstOrDefault();

                            if (OITSection24PaymentData_temp != null)
                            {
                                OEmpSkill.Add(OITSection24PaymentData_temp);
                            }
                        }

                        if (OEmpSkill == null || OEmpSkill.Count == 0)
                        {
                            return null;
                        }
                        else
                        {
                            foreach (var ca in OEmpSkill)
                            {
                                if (ca.Employee.EmpAcademicInfo != null && ca.Employee.EmpAcademicInfo.Skill.Count > 0)
                                {
                                    var v2 = ca.Employee.EmpAcademicInfo.Skill.Select(a => a.Name).ToList();
                                    foreach (var lm in v2)
                                    {
                                        GenericField100 OGenericObjStatement = new GenericField100
                                        {
                                            Fld2 = ca.Employee.EmpCode,
                                            Fld3 = ca.Employee.EmpName.FullNameFML,
                                            Fld4 = lm
                                        };
                                        OGenericPayrollStatement.Add(OGenericObjStatement);
                                    }
                                }
                            }
                            return OGenericPayrollStatement;
                        }
                        break;

                    case "CANDIDATEMASTER":
                        // recurt 
                        var oCompanyAppraisal = db.Candidate
                            .Include(e => e.BeforeMarriageName)
                            // .Include(e => e.CanAcademicInfo)
                            //   .Include(e => e.CanMedicalInfo)
                            .Include(e => e.CanName)

                            .Include(e => e.CorAddr)
                            .Include(e => e.PerAddr)
                            .Include(e => e.ResAddr)
                            .Include(e => e.FatherName)
                            .Include(e => e.HusbandName)
                            .Include(e => e.MotherName)
                            //.Include(e => e.JobStatus)
                            .Include(e => e.MaritalStatus)
                            .Include(e => e.CorContact)
                            .Include(e => e.PerContact)
                            .Include(e => e.ResContact)
                            .Include(e => e.Gender)

                            //.Include(e => e.CanFamilyDetails)
                            //.Include(e => e.CanForeignTrips)
                            //.Include(e => e.CanGuarantorDetails)
                            //.Include(e => e.CanPassportDetails)
                            //.Include(e => e.InsuranceDetails)
                            //.Include(e => e.CanPreCompExp)
                            //.Include(e => e.CanVisaDetails)
                            //.Include(e => e.CanWorkExp)
                          .ToList();


                        if (oCompanyAppraisal == null)
                        {
                            return null;
                        }
                        else
                        {
                            foreach (var ca in oCompanyAppraisal)
                            {
                                GenericField100 OGeneticApprStatement = new GenericField100()
                                {
                                    Fld1 = ca.CanCode,
                                    Fld2 = ca.BirthPlace,

                                    Fld4 = ca.CanName != null ? ca.CanName.FullNameFML : null,
                                    Fld5 = ca.FatherName != null ? ca.FatherName.FullNameFML : null,
                                    Fld6 = ca.HusbandName != null ? ca.HusbandName.FullNameFML : null,
                                    Fld7 = ca.MotherName != null ? ca.MotherName.FullNameFML : null,
                                    Fld8 = ca.BeforeMarriageName != null ? ca.BeforeMarriageName.FullNameFML : null,

                                    Fld9 = ca.Gender != null ? ca.Gender.LookupVal : null,
                                    Fld10 = ca.MaritalStatus != null ? ca.MaritalStatus.LookupVal : null,

                                    Fld11 = ca.ResAddr != null ? ca.ResAddr.FullAddress : null,
                                    Fld12 = ca.PerAddr != null ? ca.PerAddr.FullAddress : null,
                                    Fld13 = ca.CorAddr != null ? ca.CorAddr.FullAddress : null,

                                    Fld14 = ca.CorContact != null ? ca.CorContact.FullContactDetails : null,
                                    Fld15 = ca.PerContact != null ? ca.PerContact.FullContactDetails : null,
                                    Fld16 = ca.ResContact != null ? ca.ResContact.FullContactDetails : null,

                                };
                                OGenericPayrollStatement.Add(OGeneticApprStatement);
                            }
                        }
                        return OGenericPayrollStatement;
                        break;



                    case "CANDIDATEMEDICAL":
                        // recurt 
                        var oCanMedicalInfo = db.Candidate

                               .Include(e => e.CanMedicalInfo)
                               .Include(e => e.CanMedicalInfo.Allergy)
                               .Include(e => e.CanMedicalInfo.BloodGroup)
                               .Include(e => e.CanMedicalInfo.Disease)
                               .Include(e => e.CanMedicalInfo.Doctor)
                               .Include(e => e.CanMedicalInfo.EmergencyContact)
                               .Include(e => e.CanMedicalInfo.HospitalAddress)
                               .Include(e => e.CanMedicalInfo.HospitalContactDetails)
                               .Include(e => e.CanMedicalInfo.Doctor.Select(a => a.Name))
                            .Include(e => e.CanName)

                            .Where(a => a.CanMedicalInfo != null)
                          .ToList();


                        if (oCanMedicalInfo == null)
                        {
                            return null;
                        }
                        else
                        {
                            foreach (var ca in oCanMedicalInfo)
                            {

                                GenericField100 OGeneticApprStatement = new GenericField100()
                                {
                                    Fld2 = ca.CanCode,

                                    Fld3 = ca.CanName != null ? ca.CanName.FullNameFML : null,

                                    Fld4 = ca.CanMedicalInfo.BloodGroup != null ? ca.CanMedicalInfo.BloodGroup.LookupVal : null,
                                    Fld5 = ca.CanMedicalInfo.Height != 0 ? ca.CanMedicalInfo.Height.ToString() : null,
                                    Fld6 = ca.CanMedicalInfo.Weight != 0 ? ca.CanMedicalInfo.Weight.ToString() : null,

                                    //Fld6 = ca.HospitalAddress != null ? ca.HospitalAddress.FullAddress : null,
                                    //Fld7 = ca.HospitalContactDetails != null ? ca.HospitalContactDetails.FullContactDetails : null,

                                    //Fld10 = ca.IDMark != null ? ca.IDMark : null,

                                    Fld7 = ca.CanMedicalInfo.Allergy != null ? string.Join(",", ca.CanMedicalInfo.Allergy.Select(a => a.Name).ToArray()) : null,
                                    Fld8 = ca.CanMedicalInfo.Disease != null ? string.Join(",", ca.CanMedicalInfo.Disease.Select(a => a.Name).ToArray()) : null,
                                    Fld9 = ca.CanMedicalInfo.Doctor != null ? string.Join(",", ca.CanMedicalInfo.Doctor.Select(a => a.Name != null ? a.Name.FullNameFML : null).ToArray()) : null


                                };
                                OGenericPayrollStatement.Add(OGeneticApprStatement);
                            }
                        }
                        return OGenericPayrollStatement;
                        break;







                    case "CANDIDATEQUALIFICATION":
                        var OCandidateQuali = db.Candidate
                              .Include(a => a.CanAcademicInfo)
                            .Include(e => e.CanName)
                            .Include(e => e.CanAcademicInfo.QualificationDetails)
                            .Include(e => e.CanAcademicInfo.QualificationDetails.Select(t => t.Qualification))
                            .Where(e => e.CanAcademicInfo != null && e.CanAcademicInfo.QualificationDetails.Count > 0).ToList();
                        if (OCandidateQuali == null || OCandidateQuali.Count == 0)
                        {
                            return null;
                        }
                        else
                        {
                            foreach (var ca in OCandidateQuali)
                            {
                                if (ca.CanAcademicInfo != null)
                                {
                                    var v2 = ca.CanAcademicInfo.QualificationDetails.ToList();
                                    foreach (var item in v2)
                                    {
                                        GenericField100 OGenericObjStatement = new GenericField100
                                        {
                                            Fld2 = ca.CanCode,
                                            Fld3 = ca.CanName != null ? ca.CanName.FullNameFML : null,
                                            //  Fld4 = item.Qualification.ToString(),
                                            Fld5 = item.SpecilisedBranch.ToString(),
                                            Fld6 = item.Institute.ToString(),
                                            Fld7 = item.University.ToString(),
                                            Fld8 = item.ResultPercentage.ToString(),
                                            Fld9 = item.ResultGradation.ToString(),
                                            Fld10 = item.PasingYear.ToString(),
                                            Fld11 = item.ResultSubmissionDate.Value.ToShortDateString(),
                                            Fld12 = item.SpecialFeature.ToString(),
                                        };
                                        OGenericPayrollStatement.Add(OGenericObjStatement);
                                    }
                                }
                            }
                            return OGenericPayrollStatement;
                        }
                        break;




                    //case "CANDIDATESCHEDULING":
                    //    //   var cand = db.RecruitBatchInitiator.Include(e => e.ResumeCollection.Select(q => q.Candidate.Id)).ToList();
                    //    var Oschedule = db.RecruitInitiator
                    //        .Include(e => e.RecruitBatchInitiator)
                    //                .Include(e => e.RecruitBatchInitiator.Select(q => q.PostDetails))
                    //                .Include(e => e.RecruitBatchInitiator.Select(q => q.PostDetails.FuncStruct))
                    //                .Include(e => e.RecruitBatchInitiator.Select(q => q.PostDetails.FuncStruct.JobPosition))
                    //                .Include(e => e.RecruitBatchInitiator.Select(q => q.PostDetails.Qualification))
                    //                .Include(e => e.RecruitBatchInitiator.Select(q => q.ResumeCollection))
                    //                .Include(e => e.RecruitBatchInitiator.Select(q => q.ResumeCollection.Select(t => t.Candidate)))
                    //                .Include(e => e.RecruitBatchInitiator.Select(q => q.ResumeCollection.Select(y => y.Candidate.CanName)))
                    //        //      .Where(e=>e.ResumeCollection.Select(q => q.Candidate.Id!=null))
                    //                 .ToList();
                    //    if (Oschedule == null)
                    //    {
                    //        return null;
                    //    }
                    //    else
                    //    {
                    //        foreach (var ca1 in Oschedule)
                    //        {
                    //            foreach (var ca in ca1.RecruitBatchInitiator)
                    //            {


                    //                var qual = ca.PostDetails.Qualification.Select(r => r.QualificationDesc).FirstOrDefault();
                    //                var exp = ca.ResumeCollection.Select(r => r.YrsofExperience).FirstOrDefault();
                    //                var canname = ca.ResumeCollection.Select(e => e.Candidate.CanName.FullNameFML).FirstOrDefault();
                    //                var intvdate = ca.ResumeCollection.Select(q => q.InterviewDate.Value.ToShortDateString()).FirstOrDefault();
                    //                GenericField100 OGeneticApprStatement = new GenericField100()
                    //                {
                    //                    Fld1 = ca.ReferenceNo != null ? ca.ReferenceNo : "",//ref no
                    //                    //Fld2=ca. //reqi no
                    //                    Fld3 = ca.PostDetails.FuncStruct.JobPosition.JobPositionDesc != null ? ca.PostDetails.FuncStruct.JobPosition.JobPositionDesc : "",//post for
                    //                    Fld4 = qual != null ? qual : "",//qual
                    //                    Fld5 = exp != null ? exp.ToString() : "", //exp
                    //                    Fld6 = ca1.AdvertiseReferenceNo != null ? ca1.AdvertiseReferenceNo : "",    //appln no
                    //                    Fld7 = canname != null ? canname : "",//candidate name
                    //                    Fld8 = intvdate != null ? intvdate : "",

                    //                };
                    //                OGenericPayrollStatement.Add(OGeneticApprStatement);
                    //            }
                    //        }
                    //    }
                    //    return OGenericPayrollStatement;
                    //    break;



                    case "CANDIDATESOCIALINFO":
                        var OCandidateSocial = db.Candidate
                            .Include(a => a.CanSocialInfo)
                            .Include(e => e.CanName)
                            .Include(e => e.CanSocialInfo.Religion)
                           .Include(e => e.CanSocialInfo.Caste)
                           .Include(e => e.CanSocialInfo.SubCaste)
                           .Include(e => e.CanSocialInfo.Category)
                            .Include(e => e.CanSocialInfo.SocialActivities)
                            .Where(e => e.CanSocialInfo != null && e.CanSocialInfo.SocialActivities.Count > 0).ToList();
                        if (OCandidateSocial == null || OCandidateSocial.Count == 0)
                        {
                            return null;
                        }
                        else
                        {
                            foreach (var ca in OCandidateSocial)
                            {
                                var v2 = ca.CanSocialInfo.SocialActivities.ToList();
                                foreach (var item in v2)
                                {

                                    GenericField100 OGenericObjStatement = new GenericField100
                                    {
                                        Fld2 = ca.CanCode,
                                        Fld3 = ca.CanName != null ? ca.CanName.FullNameFML : null,
                                        Fld4 = ca.CanSocialInfo != null && ca.CanSocialInfo.Religion != null ? ca.CanSocialInfo.Religion.LookupVal : null,
                                        Fld5 = ca.CanSocialInfo != null && ca.CanSocialInfo.Category != null ? ca.CanSocialInfo.Category.LookupVal : null,
                                        Fld6 = ca.CanSocialInfo != null && ca.CanSocialInfo.Caste != null ? ca.CanSocialInfo.Caste.LookupVal : null,
                                        Fld7 = ca.CanSocialInfo != null && ca.CanSocialInfo.SubCaste != null ? ca.CanSocialInfo.SubCaste.LookupVal : null,
                                        Fld8 = item.InstituteName,
                                        Fld9 = item.PostHeld,
                                        Fld10 = item.FromPeriod != null ? item.FromPeriod.Value.ToShortDateString() : null,
                                        Fld11 = item.ToPeriod != null ? item.ToPeriod.Value.ToShortDateString() : null,
                                    };
                                    OGenericPayrollStatement.Add(OGenericObjStatement);
                                }
                            }
                            return OGenericPayrollStatement;
                        }
                        break;




                    //case "MANPOWERBUDGET":
                    //    var OCompanyBudget = db.ManPowerBudget
                    //        .Include(e => e.FuncStruct)
                    //        .Include(e => e.FuncStruct.Company)
                    //        .Include(e => e.FuncStruct.Job)
                    //        .Include(e => e.FuncStruct.JobPosition)
                    //        .Include(e => e.GeoStruct)
                    //        .Include(e => e.GeoStruct.Company)
                    //        .Include(e => e.GeoStruct.Location)
                    //        .Include(e => e.GeoStruct.Department)
                    //        .Include(e => e.RecruitmentCalendar)
                    //        .Include(e => e.RecruitmentCalendar.Name)
                    //        .Include(e => e.PayStruct)
                    //        .Include(e => e.PayStruct.Company)
                    //        .Include(e => e.PayStruct.Grade)
                    //        .Include(e => e.PayStruct.JobStatus)
                    //        .Include(e => e.PayStruct.Level)
                    //        .ToList();
                    //    if (OCompanyBudget == null)
                    //    {
                    //        return null;
                    //    }
                    //    else
                    //    {
                    //        foreach (var ca in OCompanyBudget)
                    //        {
                    //            GenericField100 OGeneticApprStatement = new GenericField100()
                    //            {
                    //                Fld1 = ca.RecruitmentCalendar != null ? ca.RecruitmentCalendar.FullDetails : null,
                    //                Fld2 = ca.GeoStruct != null ? ca.GeoStruct.FullDetails : null,
                    //                Fld3 = ca.PayStruct != null ? ca.PayStruct.FullDetails : null,//grade
                    //                Fld4 = ca.FuncStruct != null ? ca.FuncStruct.FullDetails : null,//job
                    //                Fld5 = ca.BudgetAmount.ToString(),
                    //                Fld6 = ca.SanctionedPosts.ToString()
                    //            };
                    //            OGenericPayrollStatement.Add(OGeneticApprStatement);
                    //        }
                    //    }
                    //    return OGenericPayrollStatement;
                    //    break;




                    //case "INTERVIEWDETAILS":
                    //    //   var cand = db.RecruitBatchInitiator.Include(e => e.ResumeCollection.Select(q => q.Candidate.Id)).ToList();
                    //    var Oschedule1 = db.RecruitInitiator
                    //        .Include(e => e.RecruitBatchInitiator)
                    //                .Include(e => e.RecruitBatchInitiator.Select(q => q.PostDetails))
                    //                .Include(e => e.RecruitBatchInitiator.Select(q => q.PostDetails.FuncStruct))
                    //                .Include(e => e.RecruitBatchInitiator.Select(q => q.PostDetails.FuncStruct.JobPosition))
                    //                .Include(e => e.RecruitBatchInitiator.Select(q => q.PostDetails.Qualification))
                    //                .Include(e => e.RecruitBatchInitiator.Select(q => q.ResumeCollection))
                    //                .Include(e => e.RecruitBatchInitiator.Select(q => q.ResumeCollection.Select(t => t.RecruitJoinParaProcessResult)))
                    //                .Include(e => e.RecruitBatchInitiator.Select(q => q.ResumeCollection.Select(t => t.Candidate)))
                    //                .Include(e => e.RecruitBatchInitiator.Select(q => q.ResumeCollection.Select(y => y.Candidate.CanName)))
                    //        //      .Where(e=>e.ResumeCollection.Select(q => q.Candidate.Id!=null))
                    //                 .ToList();
                    //    if (Oschedule1 == null)
                    //    {
                    //        return null;
                    //    }
                    //    else
                    //    {
                    //        foreach (var ca1 in Oschedule1)
                    //        {
                    //            foreach (var ca in ca1.RecruitBatchInitiator)
                    //            {
                    //                foreach (var ca2 in ca.ResumeCollection)
                    //                {
                    //                    foreach (var ca3 in ca2.RecruitJoinParaProcessResult)
                    //                    {

                    //                        var qual = ca.PostDetails.Qualification.Select(r => r.QualificationDesc).FirstOrDefault();
                    //                        var exp = ca2.YrsofExperience;
                    //                        var intvdate = ca2.InterviewDate != null ? ca2.InterviewDate.Value.ToShortDateString() : "";
                    //                        var canname = ca.ResumeCollection.Select(e => e.Candidate.CanName.FullNameFML).FirstOrDefault();
                    //                        var ActivityLetterIssue = ca3.ActivityLetterIssue;
                    //                        var Selected = ca3.ActivityAccepted;
                    //                        var ActivityAcceptedDate = ca3.ActivityAcceptedDate.Value.ToShortDateString();
                    //                        GenericField100 OGeneticApprStatement = new GenericField100()
                    //                        {
                    //                            Fld1 = ca.ReferenceNo != null ? ca.ReferenceNo : "",//ref no
                    //                            //Fld2=ca. //reqi no
                    //                            Fld3 = ca.PostDetails.FuncStruct.JobPosition.JobPositionDesc != null ? ca.PostDetails.FuncStruct.JobPosition.JobPositionDesc : "",//post for
                    //                            Fld4 = qual != null ? qual : "",//qual
                    //                            Fld5 = exp != null ? exp.ToString() : "", //exp
                    //                            Fld6 = ca1.AdvertiseReferenceNo != null ? ca1.AdvertiseReferenceNo : "",    //appln no
                    //                            Fld7 = canname != null ? canname : "",//candidate name
                    //                            Fld8 = intvdate != null ? intvdate : "",//Interview Date
                    //                            //  Fld9=//   Is Interview Taken 
                    //                            Fld10 = Selected != null ? Selected.ToString() : "",// Is Selected
                    //                            Fld11 = ActivityLetterIssue != null ? ActivityLetterIssue.ToString() : "",// Offer Letter Give
                    //                            Fld12 = Selected != null ? Selected.ToString() : "",//Accepted
                    //                            Fld13 = ActivityAcceptedDate != null ? ActivityAcceptedDate.ToString() : ""// Praposed Join Date 

                    //                        };
                    //                        OGenericPayrollStatement.Add(OGeneticApprStatement);
                    //                    }
                    //                }
                    //            }
                    //        }
                    //    }
                    //    return OGenericPayrollStatement;
                    //    break;
                    //case "CANDIDATESCHEDULING":
                    //    //   var cand = db.RecruitBatchInitiator.Include(e => e.ResumeCollection.Select(q => q.Candidate.Id)).ToList();
                    //    var Oschedule = db.RecruitInitiator
                    //        .Include(e => e.RecruitBatchInitiator)
                    //                .Include(e => e.RecruitBatchInitiator.Select(q => q.PostDetails))
                    //                .Include(e => e.RecruitBatchInitiator.Select(q => q.PostDetails.FuncStruct))
                    //                .Include(e => e.RecruitBatchInitiator.Select(q => q.PostDetails.FuncStruct.JobPosition))
                    //                .Include(e => e.RecruitBatchInitiator.Select(q => q.PostDetails.Qualification))
                    //                .Include(e => e.RecruitBatchInitiator.Select(q => q.ResumeCollection))
                    //                .Include(e => e.RecruitBatchInitiator.Select(q => q.ResumeCollection.Select(t => t.Candidate)))
                    //                .Include(e => e.RecruitBatchInitiator.Select(q => q.ResumeCollection.Select(y => y.Candidate.CanName)))
                    //        //      .Where(e=>e.ResumeCollection.Select(q => q.Candidate.Id!=null))
                    //                 .ToList();
                    //    if (Oschedule == null)
                    //    {
                    //        return null;
                    //    }
                    //    else
                    //    {
                    //        foreach (var ca1 in Oschedule)
                    //        {
                    //            foreach (var ca in ca1.RecruitBatchInitiator)
                    //            {


                    //                var qual = ca.PostDetails.Qualification.Select(r => r.QualificationDesc).FirstOrDefault();
                    //                var exp = ca.ResumeCollection.Select(r => r.YrsofExperience).FirstOrDefault();
                    //                var canname = ca.ResumeCollection.Select(e => e.Candidate.CanName.FullNameFML).FirstOrDefault();
                    //                var intvdate = ca.ResumeCollection.Select(q => q.InterviewDate.Value.ToShortDateString()).FirstOrDefault();
                    //                GenericField100 OGeneticApprStatement = new GenericField100()
                    //                {
                    //                    Fld1 = ca.ReferenceNo != null ? ca.ReferenceNo : "",//ref no
                    //                    //Fld2=ca. //reqi no
                    //                    Fld3 = ca.PostDetails.FuncStruct.JobPosition.JobPositionDesc != null ? ca.PostDetails.FuncStruct.JobPosition.JobPositionDesc : "",//post for
                    //                    Fld4 = qual != null ? qual : "",//qual
                    //                    Fld5 = exp != null ? exp.ToString() : "", //exp
                    //                    Fld6 = ca1.AdvertiseReferenceNo != null ? ca1.AdvertiseReferenceNo : "",    //appln no
                    //                    Fld7 = canname != null ? canname : "",//candidate name
                    //                    Fld8 = intvdate != null ? intvdate : "",

                    //                };
                    //                OGenericPayrollStatement.Add(OGeneticApprStatement);
                    //            }
                    //        }
                    //    }
                    //    return OGenericPayrollStatement;
                    //    break;






                    //case "CANDIDATESHORTLIST":
                    //    //   var cand = db.RecruitBatchInitiator.Include(e => e.ResumeCollection.Select(q => q.Candidate.Id)).ToList();
                    //    var Oschedule12 = db.RecruitInitiator
                    //        .Include(e => e.RecruitBatchInitiator)
                    //                .Include(e => e.RecruitBatchInitiator.Select(q => q.PostDetails))
                    //                .Include(e => e.RecruitBatchInitiator.Select(q => q.PostDetails.FuncStruct))
                    //                .Include(e => e.RecruitBatchInitiator.Select(q => q.PostDetails.FuncStruct.JobPosition))
                    //                .Include(e => e.RecruitBatchInitiator.Select(q => q.PostDetails.Qualification))
                    //                .Include(e => e.RecruitBatchInitiator.Select(q => q.ResumeCollection))
                    //                .Include(e => e.RecruitBatchInitiator.Select(q => q.ResumeCollection.Select(t => t.Candidate)))
                    //                .Include(e => e.RecruitBatchInitiator.Select(q => q.ResumeCollection.Select(y => y.Candidate.CanName)))
                    //        //      .Where(e=>e.ResumeCollection.Select(q => q.Candidate.Id!=null))
                    //                 .ToList();
                    //    if (Oschedule12 == null)
                    //    {
                    //        return null;
                    //    }
                    //    else
                    //    {
                    //        foreach (var ca1 in Oschedule12)
                    //        {
                    //            foreach (var ca in ca1.RecruitBatchInitiator)
                    //            {


                    //                var qual = ca.PostDetails.Qualification.Select(r => r.QualificationDesc).FirstOrDefault();
                    //                var exp = ca.ResumeCollection.Select(r => r.YrsofExperience).FirstOrDefault();
                    //                var canname = ca.ResumeCollection.Select(e => e.Candidate.CanName.FullNameFML).FirstOrDefault();
                    //                GenericField100 OGeneticApprStatement = new GenericField100()
                    //                {
                    //                    Fld1 = ca.ReferenceNo != null ? ca.ReferenceNo : "",//ref no
                    //                    //Fld2=ca. //reqi no
                    //                    Fld3 = ca.PostDetails.FuncStruct.JobPosition.JobPositionDesc != null ? ca.PostDetails.FuncStruct.JobPosition.JobPositionDesc : "",//post for
                    //                    Fld4 = qual != null ? qual : "",//qual
                    //                    Fld5 = exp != null ? exp.ToString() : "", //exp
                    //                    Fld6 = ca1.AdvertiseReferenceNo != null ? ca1.AdvertiseReferenceNo : "",    //appln no
                    //                    Fld7 = canname != null ? canname : "",//candidate name
                    //                };
                    //                OGenericPayrollStatement.Add(OGeneticApprStatement);
                    //            }
                    //        }
                    //    }
                    //    return OGenericPayrollStatement;
                    //    break;

                    case "LANGUAGE":

                        var OEmpLanguage = new List<EmployeePayroll>();
                        foreach (var item in EmpPayrollIdList)
                        {
                            var OITSection24PaymentData_temp = db.EmployeePayroll
                                 .Include(e => e.Employee)
                             .Include(e => e.Employee.EmpName)
                             .Include(e => e.Employee.EmpAcademicInfo.LanguageSkill.Select(t => t.Language))
                            .Include(e => e.Employee.EmpAcademicInfo.LanguageSkill.Select(t => t.SkillType))
                            .Where(e => e.Employee.Id == item).FirstOrDefault();
                            if (OITSection24PaymentData_temp != null)
                            {
                                OEmpLanguage.Add(OITSection24PaymentData_temp);
                            }
                        }

                        //var OEmpLanguage = db.EmployeePayroll
                        //    .Include(e => e.Employee)
                        //    .Include(e => e.Employee.EmpName)
                        //    .Include(e => e.Employee.EmpAcademicInfo.LanguageSkill.Select(t => t.Language))
                        //    .Include(e => e.Employee.EmpAcademicInfo.LanguageSkill.Select(t => t.SkillType))
                        //    .Where(e => EmpPayrollIdList.Contains(e.Id) && e.Employee != null && e.Employee.EmpAcademicInfo != null && e.Employee.EmpAcademicInfo.LanguageSkill.Count > 0).ToList();

                        if (OEmpLanguage == null || OEmpLanguage.Count == 0)
                        {
                            return null;
                        }
                        else
                        {
                            foreach (var ca in OEmpLanguage)
                            {
                                if (ca.Employee.EmpAcademicInfo != null && ca.Employee.EmpAcademicInfo.LanguageSkill.Count > 0)
                                {
                                    // var v2 = ca.Employee.EmpAcademicInfo.LanguageSkill.FirstOrDefault();

                                    foreach (var item in ca.Employee.EmpAcademicInfo.LanguageSkill)
                                    {
                                        foreach (var lm in item.Language)
                                        {
                                            GenericField100 OGenericObjStatement = new GenericField100
                                            {
                                                Fld2 = ca.Employee.EmpCode,
                                                Fld3 = ca.Employee.EmpName == null ? "" : ca.Employee.EmpName.FullNameFML,
                                                Fld4 = lm.LanguageName.ToString(),
                                                Fld5 = item.SkillType.LookupVal.ToString()
                                            };
                                            OGenericPayrollStatement.Add(OGenericObjStatement);
                                        }
                                    }
                                }
                            }
                            return OGenericPayrollStatement;
                        }
                        break;





                    case "QUALIFICATION":

                        var OEmpQuali = new List<EmployeePayroll>();
                        foreach (var item in EmpPayrollIdList)
                        {
                            var OITSection24PaymentData_temp = db.EmployeePayroll
                                 .Include(e => e.Employee)
                             .Include(e => e.Employee.EmpName)
                             .Include(e => e.Employee.EmpAcademicInfo.QualificationDetails)
                            .Include(e => e.Employee.EmpAcademicInfo.QualificationDetails.Select(t => t.Qualification))
                            .Where(e => e.Employee.Id == item).FirstOrDefault();

                            if (OITSection24PaymentData_temp != null)
                            {
                                OEmpQuali.Add(OITSection24PaymentData_temp);
                            }
                        }

                        if (OEmpQuali == null || OEmpQuali.Count == 0)
                        {
                            return null;
                        }
                        else
                        {
                            foreach (var ca in OEmpQuali)
                            {
                                if (ca.Employee.EmpAcademicInfo != null && ca.Employee.EmpAcademicInfo.QualificationDetails.Count > 0)
                                {
                                    foreach (var item in ca.Employee.EmpAcademicInfo.QualificationDetails)
                                    {
                                        foreach (var lm in item.Qualification)
                                        {
                                            GenericField100 OGenericObjStatement = new GenericField100
                                            {
                                                Fld2 = ca.Employee != null ? ca.Employee.EmpCode : "",
                                                Fld3 = ca.Employee != null && ca.Employee.EmpName != null ? ca.Employee.EmpName.FullNameFML : "",
                                                Fld4 = lm.FullDetails,
                                                Fld5 = item.SpecilisedBranch != null ? item.SpecilisedBranch.ToString() : "",
                                                Fld6 = item.Institute != null ? item.Institute.ToString() : "",
                                                Fld7 = item.University != null ? item.University.ToString() : "",
                                                Fld8 = item.ResultPercentage != null ? item.ResultPercentage.ToString() : "",
                                                Fld9 = item.ResultGradation != null ? item.ResultGradation.ToString() : "",
                                                Fld10 = item.PasingYear != null ? item.PasingYear.Value.ToShortDateString() : "",
                                                Fld11 = item.ResultSubmissionDate != null ? item.ResultSubmissionDate.Value.ToShortDateString() : "",
                                                Fld12 = item.SpecialFeature != null ? item.SpecialFeature.ToString() : "",
                                            };
                                            OGenericPayrollStatement.Add(OGenericObjStatement);
                                        }
                                    }
                                }
                            }
                            return OGenericPayrollStatement;
                        }

                        break;

                    case "CANDIDATEHOBBIES":
                        var OCanH = db.Candidate
                            .Include(e => e.CanName)
                            .Include(e => e.CanAcademicInfo)
                            .Include(e => e.CanAcademicInfo.Hobby)
                            .Include(e => e.CanAcademicInfo.Skill).ToList();
                        if (OCanH == null || OCanH.Count() == 0)
                        {
                            return null;
                        }
                        else
                        {
                            foreach (var item in OCanH)
                            {
                                // var hobby = item.CanAcademicInfo.Hobby.Select(e => e.HobbyName).ToString();

                                var Hobby = item.CanAcademicInfo.Hobby.Select(e => e.HobbyName).ToArray();
                                var skill = item.CanAcademicInfo.Skill.Select(e => e.Name).ToArray();



                                GenericField100 OGenericObjStatement = new GenericField100()
                                {
                                    Fld1 = item.CanName.FullNameFML.ToString(),
                                    Fld2 = Hobby.ToString(),
                                    Fld3 = skill.ToString(),
                                };
                                OGenericPayrollStatement.Add(OGenericObjStatement);


                            }
                            return OGenericPayrollStatement;
                        }

                        break;

                    case "CANDIDATELANGUAGES":
                        var OCanLang = db.Candidate
                            .Include(e => e.CanName)
                            .Include(e => e.CanAcademicInfo)
                            .Include(e => e.CanAcademicInfo.LanguageSkill)
                            .Include(e => e.CanAcademicInfo.LanguageSkill.Select(a => a.Language))
                            .Include(e => e.CanAcademicInfo.LanguageSkill.Select(a => a.SkillType)).ToList();
                        if (OCanLang == null || OCanLang.Count() == 0)
                        {
                            return null;
                        }
                        else
                        {
                            foreach (var item in OCanLang)
                            {
                                foreach (var item2 in item.CanAcademicInfo.LanguageSkill)
                                {
                                    foreach (var item3 in item2.Language)
                                    {
                                        GenericField100 OGenericObjStatement = new GenericField100()
                                        {
                                            Fld1 = item.CanName.FullNameFML.ToString(),  // can name
                                            Fld2 = item3.LanguageName.ToString(),      // Language
                                            Fld3 = item2.SkillType.LookupVal.ToString(), // read, write , speak
                                        };
                                        OGenericPayrollStatement.Add(OGenericObjStatement);

                                    }

                                }
                            }
                            return OGenericPayrollStatement;
                        }
                        break;


                    //case "RECRUITEMENTSOURCEALLOCATION":

                    //    var RecSAllc = db.RecruitInitiator
                    //        .Include(e => e.RecruitBatchInitiator)
                    //        .Include(e => e.RecruitBatchInitiator.Select(b => b.JobSource))
                    //        .Include(e => e.RecruitBatchInitiator.Select(b => b.JobSource.Select(d => d.JobAgency)))
                    //        .ToList();

                    //    if (RecSAllc == null || RecSAllc.Count() == 0)
                    //    {
                    //        return null;
                    //    }
                    //    else
                    //    {
                    //        foreach (var item in RecSAllc)
                    //        {
                    //            foreach (var item2 in item.RecruitBatchInitiator)
                    //            {
                    //                if (item2.JobSource != null)
                    //                {
                    //                    foreach (var item3 in item2.JobSource)
                    //                    {
                    //                        foreach (var item4 in item3.JobAgency)
                    //                        {
                    //                            GenericField100 OGenericObjStatement = new GenericField100()
                    //                            {
                    //                                Fld1 = item.AdvertiseReferenceNo.ToString(),
                    //                                Fld2 = item.initiatedDate.Value.ToShortDateString(),
                    //                                Fld3 = item2.ReferenceNo.ToString(),
                    //                                Fld4 = item4.Name.ToString()
                    //                            };
                    //                            OGenericPayrollStatement.Add(OGenericObjStatement);
                    //                        }

                    //                    }
                    //                }


                    //            }

                    //        }
                    //        return OGenericPayrollStatement;
                    //    }
                    //    break;


                    //case "CANDIDATEMPLOYEMENTHISTORYREPORT":
                    //    var OCan = db.Candidate
                    //       .Include(e => e.CanName)
                    //        .Include(e => e.CanPreCompExp)
                    //        .Include(e => e.CanPreCompExp.Select(a => a.CompAddress))
                    //          .Include(e => e.CanPreCompExp.Select(a => a.ContactDetails.ContactNumbers))
                    //        .Include(e => e.CanPreCompExp.Select(a => a.CompAddress.Area))
                    //        .Include(e => e.CanPreCompExp.Select(a => a.CompAddress.City))
                    //        .Include(e => e.CanPreCompExp.Select(a => a.CompAddress.Country))
                    //        .Include(e => e.CanPreCompExp.Select(a => a.CompAddress.District))
                    //        .Include(e => e.CanPreCompExp.Select(a => a.CompAddress.State))
                    //        .Include(e => e.CanPreCompExp.Select(a => a.CompAddress.StateRegion))
                    //        .Include(e => e.CanPreCompExp.Select(a => a.CompAddress.Taluka))

                    //        .Include(e => e.SerivceBookDates).ToList();

                    //    if (OCan == null || OCan.Count() == 0)
                    //    {
                    //        return null;
                    //    }
                    //    else
                    //    {
                    //        foreach (var item in OCan)
                    //        {
                    //            foreach (var item2 in item.CanPreCompExp)
                    //            {
                    //                foreach (var item3 in item2.ContactDetails.ContactNumbers)
                    //                {
                    //            GenericField100 OGenericObjStatement = new GenericField100()
                    //             {
                    //                 Fld1 = item.CanName.FullNameFML == null? "" : item.CanName.FullNameFML.ToString(), // can name
                    //                 Fld2 = item2.CompName == null ? "" : item2.CompName.ToString(), // CompName
                    //                 Fld3 = item2.FromDate == null ? "" : item2.FromDate.Value.ToShortDateString(), // exp from date
                    //                 Fld4 = item2.ToDate == null ? "" : item2.ToDate.Value.ToShortDateString(), // exp to date
                    //                 Fld5 = item2.YrOfService == null ? "" : item2.YrOfService.ToString(), // Years of exp
                    //                 Fld6 = item2.JoiningJobPosition == null ? "" : item2.JoiningJobPosition.ToString(), // Design at joing
                    //                 Fld7 = item2.LeaveingJobPosition == null ? "" : item2.LeaveingJobPosition.ToString(), // Design at Leaving
                    //                 Fld8 = item2.LastDrawnSalary == null ? "" : item2.LastDrawnSalary.ToString(), // Last Drawn Salary
                    //                 Fld9 = item2.Reason == null ? "" : item2.Reason.ToString(), // Reason
                    //                 Fld10 = item2.CompAddress.Area == null ? "" : item2.CompAddress.Area.Name.ToString(), 
                    //                 Fld11 = item2.CompAddress.Area == null ? "" : item2.CompAddress.Area.PinCode.ToString(), // pin code
                    //                 Fld12 = item2.CompAddress.City == null ? "" : item2.CompAddress.City.Name.ToString(), //City
                    //                 Fld13 = item2.CompAddress.Country == null ? "" : item2.CompAddress.Country.Name.ToString(), //Country
                    //                 Fld14 = item2.CompAddress.District == null ? "" : item2.CompAddress.District.Name.ToString(), 
                    //                 Fld15 = item2.CompAddress.Landmark == null ? "" : item2.CompAddress.Landmark.ToString(),
                    //                 Fld16 = item2.CompAddress.State == null ? "" : item2.CompAddress.State.Name.ToString(), //state
                    //                 Fld17 = item2.CompAddress.StateRegion == null ? "" : item2.CompAddress.StateRegion.Name.ToString(),
                    //                 Fld18 = item2.CompAddress.Taluka == null ? "" : item2.CompAddress.Taluka.Name.ToString(),
                    //                 Fld19 = item3.LandlineNo == null ? "" : item3.LandlineNo.ToString(), // phone no

                    //             };
                    //            OGenericPayrollStatement.Add(OGenericObjStatement);
                    //                }
                    //            }
                    //        }
                    //        return OGenericPayrollStatement;
                    //    }
                    //    break;

                    //////////////////////Appraisal////////////////////////

                    //case "APPRAISALDETAIL":
                    //    var OAppDetail = db.EmployeeAppraisal
                    //        .Include(e => e.EmpAppEvaluation)
                    //        .Include(e => e.EmpAppEvaluation.Select(a => a.EmpAppRatingConclusion))
                    //        .Include(e => e.EmpAppEvaluation.Select(a => a.EmpAppRatingConclusion.Select(b => b.AppraisalAssistance)))
                    //        // .Include(e => e.EmpAppEvaluation.Select(a => a.EmpAppRatingConclusion.Select(b => b.AppraisalPeriodCalendar)))
                    //        .Include(e => e.EmpAppEvaluation.Select(a => a.EmpAppRatingConclusion.Select(b => b.EmpAppRating)))
                    //        // .Include(e => e.EmpAppEvaluation.Select(a => a.YearlyProgramAssignment))
                    //        .Include(e => e.EmpAppEvaluation.Select(a => a.EmpAppRatingConclusion.Select(b => b.EmpAppRating.Select(c => c.AppAssignment.AppCategory))))
                    //        .Include(e => e.EmpAppEvaluation.Select(a => a.EmpAppRatingConclusion.Select(b => b.EmpAppRating.Select(c => c.AppAssignment.AppCategory.AppMode))))
                    //        .Include(e => e.EmpAppEvaluation)
                    //        .Include(e => e.Employee)
                    //        .Include(e => e.Employee.EmpName)
                    //        .Include(e => e.Employee.PayStruct.Grade)
                    //     .Where(e => EmpPayrollIdList.Contains(e.Employee.Id)).ToList();

                    //    if (OAppDetail == null || OAppDetail.Count() == 0)
                    //    {
                    //        return null;
                    //    }
                    //    else
                    //    {
                    //        foreach (var item in OAppDetail)
                    //        {
                    //            var EmpC = item.Employee.EmpCode.ToString();

                    //            var EmpN = item.Employee.EmpName.FullNameFML.ToString();
                    //            var GrdC = item.Employee.PayStruct.Grade.Code.ToString();
                    //            var GrdN = item.Employee.PayStruct.Grade.Name.ToString();
                    //            foreach (var item1 in item.EmpAppEvaluation)
                    //            {
                    //                foreach (var item2 in item1.EmpAppRatingConclusion)
                    //                {
                    //                    //var SD = item2.AppraisalPeriodCalendar.FromDate.Value.ToShortDateString();
                    //                    //var ED = item2.AppraisalPeriodCalendar.ToDate.Value.ToShortDateString();

                    //                    foreach (var item3 in item2.EmpAppRating)
                    //                    {
                    //                        var CatC = item3.AppAssignment.AppCategory.Code.ToString();
                    //                        var CatN = item3.AppAssignment.AppCategory.Name.ToString();
                    //                        var AppType = item3.AppAssignment.AppCategory.AppMode.LookupVal.ToString();
                    //                        GenericField100 OGenericObjStatement = new GenericField100()
                    //                      {
                    //                          //Fld1 = SD.ToString(),
                    //                          //Fld2 = ED.ToString(),
                    //                          Fld3 = GrdC.ToString(),
                    //                          Fld4 = GrdN.ToString(),
                    //                          Fld5 = EmpC.ToString(),
                    //                          Fld6 = EmpN.ToString(),
                    //                          Fld7 = CatC.ToString(),
                    //                          Fld8 = CatN.ToString(),
                    //                          Fld9 = AppType.ToString()
                    //                      };
                    //                        OGenericPayrollStatement.Add(OGenericObjStatement);
                    //                    }

                    //                }

                    //            }

                    //        }
                    //        return OGenericPayrollStatement;
                    //    }
                    //    break;

                    case "APPRAISALCATEGORYMASTER":

                        var OAppCatMstr = db.EmployeeAppraisal
                            .Include(e => e.EmpAppEvaluation)
                            .Include(e => e.EmpAppEvaluation.Select(a => a.EmpAppRatingConclusion.Select(b => b.EmpAppRating)))
                            .Include(e => e.EmpAppEvaluation.Select(a => a.EmpAppRatingConclusion.Select(b => b.EmpAppRating.Select(c => c.AppAssignment))))
                            .Include(e => e.EmpAppEvaluation.Select(a => a.EmpAppRatingConclusion.Select(b => b.EmpAppRating.Select(c => c.AppAssignment.AppCategory))))
                            .Include(e => e.EmpAppEvaluation.Select(a => a.EmpAppRatingConclusion.Select(b => b.EmpAppRating.Select(c => c.AppAssignment.AppCategory.AppMode))))
                            .Include(e => e.Employee)
                            .Where(e => EmpPayrollIdList.Contains(e.Employee.Id)).ToList();

                        if (OAppCatMstr == null || OAppCatMstr.Count() == 0)
                        {
                            return null;
                        }
                        else
                        {
                            foreach (var item in OAppCatMstr)
                            {
                                foreach (var item1 in item.EmpAppEvaluation)
                                {
                                    foreach (var item2 in item1.EmpAppRatingConclusion)
                                    {
                                        foreach (var item3 in item2.EmpAppRating)
                                        {
                                            GenericField100 OGenericObjStatement = new GenericField100()
                                            {
                                                Fld1 = item3.AppAssignment.AppCategory.Code == null ? "" : item3.AppAssignment.AppCategory.Code.ToString(), //CategoryCode
                                                Fld2 = item3.AppAssignment.AppCategory.Name == null ? "" : item3.AppAssignment.AppCategory.Name.ToString(), //CategoryName
                                                Fld3 = item3.AppAssignment.AppCategory.FullDetails == null ? "" : item3.AppAssignment.AppCategory.FullDetails.ToString(), //CategoryDec
                                                Fld4 = item3.AppAssignment.MaxRatingPoints == null ? "" : item3.AppAssignment.MaxRatingPoints.ToString(), //MaxRatingPoint
                                                Fld5 = item3.AppAssignment.AppCategory.AppMode.LookupVal == null ? "" : item3.AppAssignment.AppCategory.AppMode.LookupVal.ToString(), //Appraisal Type

                                            };
                                            OGenericPayrollStatement.Add(OGenericObjStatement);


                                        }

                                    }

                                }

                            }
                            return OGenericPayrollStatement;
                        }
                        break;
                    //vin
                    //case "APPRKRAEVALUATION":

                    //    var OAppSCatMstrA = db.EmployeeAppraisal
                    //      .Include(e => e.EmpAppEvaluation)
                    //      .Include(e => e.EmpAppEvaluation.Select(a => a.EmpAppRatingConclusion.Select(b => b.EmpAppRating)))
                    //      .Include(e => e.EmpAppEvaluation.Select(a => a.EmpAppRatingConclusion.Select(b => b.EmpAppRating.Select(c => c.AppAssignment))))
                    //      .Include(e => e.EmpAppEvaluation.Select(a => a.EmpAppRatingConclusion.Select(b => b.EmpAppRating.Select(c => c.AppAssignment.AppCategory.AppMode))))
                    //      .Include(e => e.EmpAppEvaluation.Select(a => a.EmpAppRatingConclusion.Select(b => b.EmpAppRating.Select(c => c.AppAssignment.AppCategory))))
                    //      .Include(e => e.Employee)
                    //      .Include(e => e.Employee.EmpName)
                    //      .Include(e => e.Employee.GeoStruct)
                    //      .Include(e => e.Employee.GeoStruct.Location)
                    //      .Include(e => e.Employee.GeoStruct.Location.LocationObj)
                    //      .Where(e => EmpPayrollIdList.Contains(e.Employee.Id)).ToList();
                    //    if (OAppSCatMstrA == null || OAppSCatMstrA.Count == 0)
                    //    {
                    //        return null;
                    //    }
                    //    else
                    //    {
                    //        foreach (var item in OAppSCatMstrA)
                    //        {
                    //            foreach (var item1 in item.EmpAppEvaluation)
                    //            {
                    //                GenericField100 OGenericObjStatement = new GenericField100()
                    //              {
                    //                  Fld1 = item.Employee.GeoStruct.Location.LocationObj.LocCode,
                    //                  Fld2 = item.Employee.GeoStruct.Location.LocationObj.LocDesc,
                    //                  Fld3 = item.Employee.EmpCode,
                    //                  Fld4 = item.Employee.EmpName.FullNameFML,
                    //                  Fld5 = item1.MaxPoints.ToString(),
                    //                  Fld6 = item1.SecurePoints.ToString(),
                    //                  Fld7 = item1.ScorePercentage.ToString(),
                    //                  Fld8 = item1.HRComments,
                    //              };
                    //                OGenericPayrollStatement.Add(OGenericObjStatement);
                    //            }
                    //        }
                    //        return OGenericPayrollStatement;
                    //    }
                    //    break;

                    //case "APPRAISALSUBCATEGORYMASTER":

                    //    var OAppSCatMstr = db.EmployeeAppraisal
                    //        .Include(e => e.EmpAppEvaluation)
                    //        .Include(e => e.EmpAppEvaluation.Select(a => a.EmpAppRatingConclusion.Select(b => b.EmpAppRating)))
                    //        .Include(e => e.EmpAppEvaluation.Select(a => a.EmpAppRatingConclusion.Select(b => b.EmpAppRating.Select(c => c.AppAssignment))))
                    //        .Include(e => e.EmpAppEvaluation.Select(a => a.EmpAppRatingConclusion.Select(b => b.EmpAppRating.Select(c => c.AppAssignment.AppSubCategory))))
                    //        .Include(e => e.EmpAppEvaluation.Select(a => a.EmpAppRatingConclusion.Select(b => b.EmpAppRating.Select(c => c.AppAssignment.AppCategory.AppMode))))
                    //        .Include(e => e.EmpAppEvaluation.Select(a => a.EmpAppRatingConclusion.Select(b => b.EmpAppRating.Select(c => c.AppAssignment.AppCategory))))
                    //        .Include(e => e.Employee)
                    //        .Where(e => EmpPayrollIdList.Contains(e.Employee.Id)).ToList();
                    //    if (OAppSCatMstr == null || OAppSCatMstr.Count == 0)
                    //    {
                    //        return null;
                    //    }
                    //    else
                    //    {
                    //        foreach (var item in OAppSCatMstr)
                    //        {
                    //            foreach (var item1 in item.EmpAppEvaluation)
                    //            {
                    //                foreach (var item2 in item1.EmpAppRatingConclusion)
                    //                {
                    //                    foreach (var item3 in item2.EmpAppRating)
                    //                    {
                    //                        GenericField100 OGenericObjStatement = new GenericField100()
                    //                      {
                    //                          Fld1 = item3.AppAssignment.AppSubCategory.Code.ToString(), // AppSubCatCode
                    //                          Fld2 = item3.AppAssignment.AppSubCategory.Name.ToString(), // AppSubCatName
                    //                          Fld3 = item3.AppAssignment.AppSubCategory.FullDetails.ToString(), // AppSubCatDec
                    //                          Fld4 = item3.AppAssignment.AppCategory.Name.ToString(), // AppCatName
                    //                          Fld5 = item3.AppAssignment.AppCategory.FullDetails.ToString(), //AppCatDec
                    //                          Fld6 = item3.AppAssignment.AppCategory.AppMode.LookupVal.ToString(), // AppType
                    //                          Fld7 = item3.AppAssignment.MaxRatingPoints.ToString(), // MaxRatingPoint


                    //                      };
                    //                        OGenericPayrollStatement.Add(OGenericObjStatement);
                    //                    }

                    //                }

                    //            }

                    //        }
                    //        return OGenericPayrollStatement;
                    //    }


                    //    break;

                    //case "GRADEWISEAPPRAISALMASTER":
                    //    var OGrdWAppMstr = db.EmployeeAppraisal
                    //         .Include(e => e.EmpAppEvaluation)
                    //         .Include(e => e.EmpAppEvaluation.Select(a => a.EmpAppRatingConclusion.Select(b => b.EmpAppRating)))
                    //         .Include(e => e.EmpAppEvaluation.Select(a => a.EmpAppRatingConclusion.Select(b => b.EmpAppRating.Select(c => c.AppAssignment))))
                    //         .Include(e => e.EmpAppEvaluation.Select(a => a.EmpAppRatingConclusion.Select(b => b.EmpAppRating.Select(c => c.AppAssignment.AppSubCategory))))
                    //         .Include(e => e.EmpAppEvaluation.Select(a => a.EmpAppRatingConclusion.Select(b => b.EmpAppRating.Select(c => c.AppAssignment.AppCategory.AppMode))))
                    //         .Include(e => e.EmpAppEvaluation.Select(a => a.EmpAppRatingConclusion.Select(b => b.EmpAppRating.Select(c => c.AppAssignment.AppCategory))))
                    //         .Include(e => e.Employee)
                    //         .Include(e => e.Employee.PayStruct.Grade)
                    //         .Where(e => EmpPayrollIdList.Contains(e.Employee.Id)).ToList();

                    //    if (OGrdWAppMstr == null || OGrdWAppMstr.Count == 0)
                    //    {
                    //        return null;
                    //    }
                    //    else
                    //    {
                    //        foreach (var item in OGrdWAppMstr)
                    //        {
                    //            var GrdC = item.Employee.PayStruct.Grade.Code.ToString();
                    //            var GrdN = item.Employee.PayStruct.Grade.Name.ToString();
                    //            foreach (var item1 in item.EmpAppEvaluation)
                    //            {
                    //                foreach (var item2 in item1.EmpAppRatingConclusion)
                    //                {
                    //                    foreach (var item3 in item2.EmpAppRating)
                    //                    {
                    //                        var AppType = item3.AppAssignment.AppCategory.AppMode.LookupVal.ToString();
                    //                        var Cat = item3.AppAssignment.AppCategory.Name.ToString();
                    //                        var CatDec = item3.AppAssignment.AppCategory.FullDetails.ToString();


                    //                        GenericField100 OGenericObjStatement = new GenericField100()
                    //                       {
                    //                           Fld1 = AppType.ToString(), //AppType
                    //                           Fld2 = Cat.ToString(), //CatName
                    //                           Fld3 = CatDec.ToString(), //Cat Dec
                    //                           Fld4 = GrdC.ToString(), // GradeCode
                    //                           Fld5 = GrdN.ToString(), //GradeName

                    //                       };
                    //                        OGenericPayrollStatement.Add(OGenericObjStatement);
                    //                    }

                    //                }

                    //            }


                    //        }
                    //        return OGenericPayrollStatement;
                    //    }


                    //    break;

                    case "APPRDEPTWISE":
                        var ODeptW = db.EmployeeAppraisal
                            .Include(e => e.EmpAppEvaluation)
                             .Include(e => e.EmpAppEvaluation.Select(a => a.EmpAppRatingConclusion.Select(b => b.EmpAppRating)))
                             .Include(e => e.EmpAppEvaluation.Select(a => a.EmpAppRatingConclusion.Select(b => b.EmpAppRating.Select(c => c.AppAssignment))))
                             .Include(e => e.EmpAppEvaluation.Select(a => a.EmpAppRatingConclusion.Select(b => b.EmpAppRating.Select(c => c.AppAssignment.AppCategory.AppMode))))
                             .Include(e => e.EmpAppEvaluation.Select(a => a.EmpAppRatingConclusion.Select(b => b.EmpAppRating.Select(c => c.AppAssignment.AppCategory))))
                             .Include(e => e.Employee)
                             .Include(e => e.Employee.GeoStruct.Department.DepartmentObj)
                             .Include(e => e.Employee.GeoStruct.Location.LocationObj)
                             .Where(e => EmpPayrollIdList.Contains(e.Employee.Id)).ToList();

                        if (ODeptW == null || ODeptW.Count() == 0)
                        {
                            return null;
                        }
                        else
                        {
                            foreach (var item in ODeptW)
                            {
                                var EmpDepC = item.Employee.GeoStruct.Department.DepartmentObj.DeptCode.ToString();
                                var EmpDepD = item.Employee.GeoStruct.Department.DepartmentObj.DeptDesc.ToString();
                                var EmpLocC = item.Employee.GeoStruct.Location.LocationObj.LocCode.ToString();
                                var EmpLocD = item.Employee.GeoStruct.Location.LocationObj.LocDesc.ToString();


                                foreach (var item1 in item.EmpAppEvaluation)
                                {
                                    foreach (var item2 in item1.EmpAppRatingConclusion)
                                    {
                                        foreach (var item3 in item2.EmpAppRating)
                                        {
                                            GenericField100 OGenericObjStatement = new GenericField100()
                                            {
                                                Fld1 = EmpDepC.ToString(), // EmpDepartment Code
                                                Fld2 = EmpDepD.ToString(), // EmpDepartment Dec
                                                Fld4 = EmpLocC.ToString(), // EmpLoc Code
                                                Fld5 = EmpLocD.ToString(), // EmpLoc Dec
                                                Fld6 = item3.AppAssignment.AppCategory.AppMode.LookupVal.ToString(), // AppType
                                                Fld7 = item3.AppAssignment.AppCategory.Code.ToString(), //Cat Code
                                                Fld8 = item3.AppAssignment.AppCategory.Name.ToString() // Cat Name

                                            };
                                            OGenericPayrollStatement.Add(OGenericObjStatement);
                                        }
                                    }
                                }
                            }
                            return OGenericPayrollStatement;
                        }
                        break;


                    case "APPRGRADEWISE":
                        var OGrdWise = db.EmployeeAppraisal
                       .Include(e => e.EmpAppEvaluation)
                        .Include(e => e.EmpAppEvaluation.Select(a => a.EmpAppRatingConclusion.Select(b => b.EmpAppRating)))
                        .Include(e => e.EmpAppEvaluation.Select(a => a.EmpAppRatingConclusion.Select(b => b.EmpAppRating.Select(c => c.AppAssignment))))
                        .Include(e => e.EmpAppEvaluation.Select(a => a.EmpAppRatingConclusion.Select(b => b.EmpAppRating.Select(c => c.AppAssignment.AppCategory.AppMode))))
                        .Include(e => e.EmpAppEvaluation.Select(a => a.EmpAppRatingConclusion.Select(b => b.EmpAppRating.Select(c => c.AppAssignment.AppCategory))))
                        .Include(e => e.Employee)
                        .Include(e => e.Employee.GeoStruct.Department.DepartmentObj)
                        .Include(e => e.Employee.GeoStruct.Location.LocationObj)
                        .Include(e => e.Employee.PayStruct.Grade)
                        .Where(e => EmpPayrollIdList.Contains(e.Employee.Id)).ToList();

                        if (OGrdWise == null || OGrdWise.Count() == 0)
                        {
                            return null;
                        }
                        else
                        {
                            foreach (var item in OGrdWise)
                            {
                                var EmpDepC = item.Employee.GeoStruct.Department.DepartmentObj.DeptCode.ToString();
                                var EmpDepD = item.Employee.GeoStruct.Department.DepartmentObj.DeptDesc.ToString();
                                var EmpLocC = item.Employee.GeoStruct.Location.LocationObj.LocCode.ToString();
                                var EmpLocD = item.Employee.GeoStruct.Location.LocationObj.LocDesc.ToString();
                                var EmpGrdC = item.Employee.PayStruct.Grade.Code.ToString();
                                var EmpGrdD = item.Employee.PayStruct.Grade.Name.ToString();

                                foreach (var item1 in item.EmpAppEvaluation)
                                {
                                    foreach (var item2 in item1.EmpAppRatingConclusion)
                                    {
                                        foreach (var item3 in item2.EmpAppRating)
                                        {
                                            GenericField100 OGenericObjStatement = new GenericField100()
                                            {
                                                Fld1 = EmpDepC.ToString(), // EmpDepartment Code
                                                Fld2 = EmpDepD.ToString(), // EmpDepartment Dec
                                                Fld4 = EmpLocC.ToString(), // EmpLoc Code
                                                Fld5 = EmpLocD.ToString(), // EmpLoc Dec
                                                Fld6 = item3.AppAssignment.AppCategory.AppMode.LookupVal.ToString(), // AppType
                                                Fld7 = item3.AppAssignment.AppCategory.Code.ToString(), //Cat Code
                                                Fld8 = item3.AppAssignment.AppCategory.Name.ToString(), // Cat Name
                                                Fld9 = EmpGrdC.ToString(), // EmpGrd Code
                                                Fld10 = EmpGrdD.ToString(), // EmpGrd Dec

                                            };
                                            OGenericPayrollStatement.Add(OGenericObjStatement);
                                        }
                                    }
                                }
                            }
                            return OGenericPayrollStatement;
                        }
                        break;











                    /////////////////////////////////Training//////////////
                    //case "TRAININGEMPLOYEEEVALUATION":
                    //    var OEmpEval = db.EmployeeTraining
                    //        .Include(e => e.TrainingDetails)
                    //        .Include(e => e.TrainingDetails.Select(a => a.TrainingSchedule))
                    //        .Include(e => e.TrainingDetails.Select(a => a.TrainingSchedule.Select(h => h.TrainingCalendar)))
                    //        .Include(e => e.TrainingDetails.Select(a => a.TrainingSchedule.Select(h => h.TrainingCalendar.ProgramList)))
                    //        .Include(e => e.TrainingDetails.Select(a => a.TrainingSchedule.Select(h => h.TrainingCalendar.ProgramList.TrainingType)))
                    //         .Include(e => e.TrainingDetails.Select(a => a.TrainingSchedule.Select(h => h.TrainingCalendar.ProgramList.TrainingType)))
                    //       .Include(e => e.TrainingDetails.Select(a => a.TrainingSchedule.Select(h => h.Session)))
                    //        .Include(e => e.TrainingDetails.Select(a => a.TrainingSchedule.Select(h => h.Venue)))
                    //        .Include(e => e.TrainingDetails.Select(a => a.TrainingSchedule.Select(h => h.Expenses)))
                    //        .Include(e => e.TrainingDetails.Select(a => a.TrainingSchedule.Select(h => h.City)))
                    //       .Include(e => e.Employee)
                    //        .Include(e => e.Employee.EmpName)
                    //        .Include(e => e.Employee.GeoStruct)
                    //        .Include(e => e.Employee.GeoStruct.Location)
                    //        .Include(e => e.Employee.GeoStruct.Location.LocationObj)
                    //        .Include(e => e.Employee.FuncStruct)
                    //        .Include(e => e.Employee.FuncStruct.Job)
                    //        .Include(e => e.Employee.PayStruct)
                    //      .Where(e => EmpPayrollIdList.Contains(e.Employee.Id)).ToList();

                    //    if (OEmpEval == null || OEmpEval.Count() == 0)
                    //    {
                    //        return null;
                    //    }
                    //    else
                    //    {
                    //        foreach (var a in OEmpEval)
                    //        {
                    //            foreach (var item in a.TrainingDetails)
                    //            {
                    //                foreach (var item1 in item.TrainingSchedule)
                    //                {
                    //                    var prg = item1.TrainingCalendar.ProgramList.SubjectDetails.ToString();
                    //                    var cat = item1.TrainingCalendar.ProgramList.TrainingType.LookupVal.ToString();
                    //                    //var cat1 = item1.TrainingCalendar.ProgramList.
                    //                    var sd = item1.TrainingCalendar.StartDate.Value.ToShortDateString();
                    //                    var ed = item1.TrainingCalendar.EndDate.Value.ToShortDateString();
                    //                    var pr = item.IsPresent == true ? "Present" : "Absent";

                    //                    GenericField100 OGenericObjStatement = new GenericField100()
                    //                    {
                    //                        Fld1 = a.Employee.EmpCode == null ? "" : a.Employee.EmpCode.ToString(),
                    //                        Fld2 = a.Employee.EmpName == null ? "" : a.Employee.EmpName.FullNameLFM.ToString(),
                    //                        Fld3 = a.Employee.GeoStruct.Location == null ? "" : a.Employee.GeoStruct.Location.LocationObj.LocCode.ToString(),
                    //                        Fld4 = a.Employee.FuncStruct.Job.Name == null ? "" : a.Employee.FuncStruct.Job.Name.ToString(),
                    //                        Fld5 = a.Employee.GeoStruct == null ? "" : a.Employee.GeoStruct.Location.LocationObj.LocDesc.ToString(),
                    //                        Fld10 = pr,
                    //                        Fld6 = prg == null ? "" : prg.ToString(),
                    //                        Fld7 = cat == null ? "" : cat.ToString(),
                    //                        Fld8 = sd == null ? "" : sd.ToString(),
                    //                        Fld9 = ed == null ? "" : ed.ToString()
                    //                    };
                    //                    OGenericPayrollStatement.Add(OGenericObjStatement);

                    //                }
                    //            }
                    //        }
                    //        return OGenericPayrollStatement;
                    //    }

                    //    break;


                    //case "TRAININGEVALUATION":
                    //    var OTrnEvna = db.EmployeeTraining
                    //        .Include(e => e.TrainingDetails)
                    //        .Include(e => e.TrainingDetails.Select(a => a.TrainingSchedule))
                    //        .Include(e => e.TrainingDetails.Select(a => a.TrainingSchedule.Select(h => h.TrainingCalendar)))
                    //        .Include(e => e.TrainingDetails.Select(a => a.TrainingSchedule.Select(h => h.TrainingCalendar.ProgramList)))
                    //        .Include(e => e.TrainingDetails.Select(a => a.TrainingSchedule.Select(h => h.TrainingCalendar.ProgramList.TrainingType)))
                    //       .Include(e => e.TrainingDetails.Select(a => a.TrainingSchedule.Select(h => h.Session)))
                    //        //   .Include(e => e.TrainingDetails.Select(a => a.TrainingSchedule.Select(h => h.Venue)))
                    //        //    .Include(e => e.TrainingDetails.Select(a => a.TrainingSchedule.Select(h => h.Expenses)))
                    //        //    .Include(e => e.TrainingDetails.Select(a => a.TrainingSchedule.Select(h => h.City)))
                    //       .Include(e => e.Employee)
                    //        .Include(e => e.Employee.EmpName)
                    //        .Include(e => e.Employee.GeoStruct)
                    //        .Include(e => e.Employee.GeoStruct.Location)
                    //        .Include(e => e.Employee.GeoStruct.Location.LocationObj)
                    //        //.Include(e => e.Employee.FuncStruct)
                    //        //.Include(e => e.Employee.FuncStruct.Job)
                    //      .Where(e => EmpPayrollIdList.Contains(e.Employee.Id)).ToList();

                    //    if (OTrnEvna == null || OTrnEvna.Count() == 0)
                    //    {
                    //        return null;
                    //    }
                    //    else
                    //    {
                    //        foreach (var a in OTrnEvna)
                    //        {
                    //            foreach (var item in a.TrainingDetails)
                    //            {
                    //                foreach (var item1 in item.TrainingSchedule)
                    //                {
                    //                    var prg = item1.TrainingCalendar.ProgramList.SubjectDetails.ToString();
                    //                    var cat = item1.TrainingCalendar.ProgramList.TrainingType.LookupVal.ToString();
                    //                    //var cat1 = item1.TrainingCalendar.ProgramList.
                    //                    var sd = item1.TrainingCalendar.StartDate.Value.ToShortDateString();
                    //                    var ed = item1.TrainingCalendar.EndDate.Value.ToShortDateString();

                    //                    if (a.Employee != null)
                    //                    {
                    //                        GenericField100 OGenericObjStatement = new GenericField100
                    //                        {
                    //                            Fld1 = a.Employee.EmpCode == null ? "" : a.Employee.EmpCode.ToString(),
                    //                            Fld2 = a.Employee.EmpName == null ? "" : a.Employee.EmpName.FullNameLFM.ToString(),
                    //                            Fld3 = a.Employee.GeoStruct == null ? "" : a.Employee.GeoStruct.Location == null ? "" : a.Employee.GeoStruct.Location.LocationObj == null ? "" : a.Employee.GeoStruct.Location.LocationObj.LocDesc.ToString(),
                    //                            //Fld4 = a.Employee.FuncStruct.Job.Name == null ? "" : a.Employee.FuncStruct.Job.Name.ToString(),
                    //                            //Fld5 = a.Employee.GeoStruct.FullDetailsLD == null ? "" : a.Employee.GeoStruct.FullDetailsLD.ToString(),
                    //                            Fld6 = prg == null ? "" : prg.ToString(),
                    //                            Fld7 = cat == null ? "" : cat.ToString(),
                    //                            Fld8 = sd == null ? "" : sd.ToString(),
                    //                            Fld9 = ed == null ? "" : ed.ToString()
                    //                        };
                    //                        OGenericPayrollStatement.Add(OGenericObjStatement);
                    //                    }
                    //                }
                    //            }
                    //        }
                    //        return OGenericPayrollStatement;
                    //    }
                    //    break;


                    case "EMPLOYEEWISETRAINING":
                        //var OTrnEvna1 = new List<EmployeeTraining>();
                        //foreach (var item in EmpPayrollIdList)
                        //{
                        //    var OTrnEvna11 = db.EmployeeTraining
                        //        .Include(e => e.TrainingDetails)
                        //         .Include(e => e.TrainingDetails.Select(r => r.TrainingCalendar))
                        //        .Include(e => e.TrainingDetails.Select(t => t.TrainingSchedule))
                        //        .Include(e => e.TrainingDetails.Select(t => t.TrainingSchedule.TrainingSession))
                        //         .Include(e => e.TrainingDetails.Select(t => t.TrainingSchedule.TrainingSession.Select(x => x.SessionType)))
                        //        .Include(e => e.TrainingDetails.Select(t => t.TrainingSchedule.TrainingSession.Select(a => a.TrainingProgramCalendar)))
                        //        .Include(e => e.TrainingDetails.Select(t => t.TrainingSchedule.TrainingSession.Select(z => z.TrainingProgramCalendar.ProgramList)))
                        //        .Include(e => e.TrainingDetails.Select(t => t.TrainingSchedule.TrainingSession.Select(z => z.TrainingProgramCalendar.ProgramList.TrainingType)))

                        //       .Include(e => e.Employee)
                        //        .Include(e => e.Employee.EmpName)
                        //        .Include(e => e.Employee.GeoStruct)
                        //        .Include(e => e.Employee.GeoStruct.Location)
                        //        .Include(e => e.Employee.GeoStruct.Location.LocationObj)
                        //        .Include(e => e.Employee.FuncStruct)
                        //        .Include(e => e.Employee.PayStruct)
                        //        //.Include(e => e.Employee.FuncStruct.Job)
                        //       .Where(e => e.Employee.Id == item)
                        //        .FirstOrDefault();
                        //    if (OTrnEvna11 != null)
                        //    {
                        //        OTrnEvna1.Add(OTrnEvna11);
                        //    }
                        //}

                        var OTrnEvna1 = db.EmployeeTraining.Where(e => EmpPayrollIdList.Contains(e.Employee_Id.Value)).Select(e => new
                        {
                            OEmployee = e.Employee,
                            OEmpCode = e.Employee.EmpCode,
                            OEmpName = e.Employee.EmpName.FullNameFML,
                            OGeostructId = e.Employee.GeoStruct.Id,
                            OPayStructId = e.Employee.PayStruct.Id,
                            OFuncStructId = e.Employee.FuncStruct.Id,
                            OLocDesc = e.Employee.GeoStruct.Location.LocationObj.LocDesc,
                            OTrainingDetails = e.TrainingDetails.Select(f => new
                            {
                                OTrainingBatchCode = f.TrainingSchedule.TrainingBatchCode,
                                OTrainingBatchName = f.TrainingSchedule.TrainingBatchName,
                                OTrainingSession = f.TrainingSchedule.TrainingSession.Select(g => new
                                {
                                    OSessionTypeLookupVal = g.SessionType.LookupVal,
                                    OStartDate = g.TrainingProgramCalendar.StartDate,
                                    OEndDate = g.TrainingProgramCalendar.EndDate,
                                    OSubjectDetails = g.TrainingProgramCalendar.ProgramList.SubjectDetails,
                                    OTrainingTypeLookupVal = g.TrainingProgramCalendar.ProgramList.TrainingType.LookupVal,
                                    OStartTime = g.StartTime,
                                    OEndTime = g.EndTime,
                                    OSessionDate = g.SessionDate,
                                    OTrainerName = g.TrainerName
                                }).ToList()

                            }).ToList()

                        }).ToList();

                        if (OTrnEvna1 == null || OTrnEvna1.Count() == 0)
                        {
                            return null;
                        }
                        else
                        {
                            var emp = false;
                            var dept = false;
                            var loca = false;
                            var comp = false;
                            var grp = false;
                            var unit = false;
                            var div = false;
                            var regn = false;
                            var grade = false;
                            var lvl = false;
                            var jobstat = false;
                            var job = false;
                            var jobpos = false;
                            var vc = db.LookupValue.Where(a => forithead.Contains(a.Id.ToString())).ToList();

                            foreach (var item in vc)
                            {
                                //if (item.LookupVal.ToUpper() == "MONTH")
                                //{
                                //    month = true;
                                //}
                                if (item.LookupVal.ToUpper() == "LOCATION")
                                {

                                    loca = true;
                                }
                                if (item.LookupVal.ToUpper() == "EMPLOYEE")
                                {
                                    emp = true;
                                }
                                if (item.LookupVal.ToUpper() == "DEPARTMENT")
                                {
                                    dept = true;
                                }
                                if (item.LookupVal.ToUpper() == "COMPANY")
                                {
                                    comp = true;
                                }
                                if (item.LookupVal.ToUpper() == "GROUP")
                                {
                                    grp = true;
                                }
                                if (item.LookupVal.ToUpper() == "UNIT")
                                {
                                    unit = true;
                                }
                                if (item.LookupVal.ToUpper() == "DIVISION")
                                {
                                    div = true;
                                }
                                if (item.LookupVal.ToUpper() == "REGION")
                                {
                                    regn = true;
                                }
                                if (item.LookupVal.ToUpper() == "GRADE")
                                {
                                    grade = true;
                                }
                                if (item.LookupVal.ToUpper() == "LEVEL")
                                {
                                    lvl = true;
                                }
                                if (item.LookupVal.ToUpper() == "JOBSTATUS")
                                {
                                    jobstat = true;
                                }

                                if (item.LookupVal.ToUpper() == "JOB")
                                {
                                    job = true;
                                }
                                if (item.LookupVal.ToUpper() == "JOBPOSITION")
                                {
                                    jobpos = true;
                                }
                            }

                            List<Utility.ReportClass> GeoData = new List<Utility.ReportClass>();
                            List<Utility.ReportClass> Paydata = new List<Utility.ReportClass>();
                            List<Utility.ReportClass> Funcdata = new List<Utility.ReportClass>();

                            Utility.ReportClass GeoDataInd = new Utility.ReportClass();
                            Utility.ReportClass PaydataInd = new Utility.ReportClass();
                            Utility.ReportClass FuncdataInd = new Utility.ReportClass();

                            GeoData = GetViewData(0);
                            Paydata = GetViewData(1);
                            Funcdata = GetViewData(2);

                            foreach (var a in OTrnEvna1)
                            {
                                int geoid = a.OGeostructId;

                                int payid = a.OPayStructId;

                                int funid = a.OFuncStructId;

                                GeoDataInd = GetViewDataIndiv(geoid, payid, funid, GeoData, 0);
                                PaydataInd = GetViewDataIndiv(geoid, payid, funid, Paydata, 1);
                                FuncdataInd = GetViewDataIndiv(geoid, payid, funid, Funcdata, 2);

                                foreach (var item in a.OTrainingDetails)
                                {
                                    //var trsch = item.OTrainingSchedule;
                                    //if (trsch != null)
                                    //{

                                    //  string sd = item.TrainingCalendar == null ? "" : item.TrainingCalendar.FromDate.Value.ToShortDateString();
                                    //string ed = item.OTrainingCalendar == null ? "" : item.OTrainingCalendar.ToDate.Value.ToShortDateString();
                                    //string trbatch = item.OTrainingSchedule.TrainingBatchCode.ToString();
                                    //string trbatchname = item.OTrainingSchedule.TrainingBatchName.ToString();

                                    if (salheadlist.Count > 0)
                                    {
                                        foreach (var batch in salheadlist)
                                        {
                                            //if (batch.ToUpper() == trbatchname.ToUpper())
                                            //{
                                            if (batch.ToUpper() == item.OTrainingBatchName.ToUpper())
                                            {

                                                foreach (var item1 in item.OTrainingSession)
                                                {
                                                    ////string prg = item1.TrainingProgramCalendar.ProgramList.SubjectDetails.ToString();
                                                    //string trstdate = item1.OTrainingProgramCalendar.StartDate.Value.ToShortDateString();
                                                    //string trstenddate = item1.OTrainingProgramCalendar.EndDate.Value.ToShortDateString();
                                                    //string trsttime = item1.OStartTime.ToString();
                                                    //string tredtime = item1.OEndTime.ToString();
                                                    ////string prg = item1.TrainingCalendar.ProgramList.SubjectDetails.ToString();
                                                    //string prg = item1.OProgramList.SubjectDetails.ToString();
                                                    ////string cat = item1.TrainingCalendar.ProgramList.TrainingType.LookupVal.ToString();
                                                    //string cat = item1.OTrainingType.LookupVal.ToString();
                                                    //////var cat1 = item1.TrainingCalendar.ProgramList.
                                                    ////string cat = item1.TrainingProgramCalendar.ProgramList.TrainingType.LookupVal.ToString();
                                                    //string trbatch = item.OTrainingSchedule.TrainingBatchCode.ToString();
                                                    //string trbatchname = item.OTrainingSchedule.TrainingBatchName.ToString();

                                                    ////string trf = item1.Expenses.TrainingFees.ToString();
                                                    ////string ven = item1.Venue.Name;
                                                    if (item1.OStartDate >= pFromDate && item1.OEndDate <= pToDate)
                                                    {
                                                        //if (a.Employee != null)
                                                        //{
                                                        GenericField100 OGenericObjStatement = new GenericField100
                                                        {
                                                            //Fld1 = a.OEmployee.EmpCode == null ? "" : a.OEmployee.EmpCode.ToString(),
                                                            Fld1 = a.OEmpCode == null ? "" : a.OEmpCode,
                                                            //Fld2 = a.OEmployee.EmpName == null ? "" : a.OEmployee.EmpName.FullNameLFM.ToString(),
                                                            Fld2 = a.OEmpName == null ? "" : a.OEmpName,

                                                            //Fld3 = a.OEmployee.GeoStruct == null ? "" : a.OEmployee.GeoStruct.Location == null ? "" : a.OEmployee.GeoStruct.Location.LocationObj == null ? "" : a.OEmployee.GeoStruct.Location.LocationObj.LocDesc.ToString(),
                                                            Fld3 = a.OLocDesc == null ? "" : a.OLocDesc,
                                                            //Fld4 = a.Employee.FuncStruct.Job.Name == null ? "" : a.Employee.FuncStruct.Job.Name.ToString(),
                                                            //Fld5 = a.Employee.GeoStruct.FullDetailsLD == null ? "" : a.Employee.GeoStruct.FullDetailsLD.ToString(),
                                                            Fld6 = item1.OSubjectDetails == null ? "" : item1.OSubjectDetails,
                                                            //Fld7 = cat == null ? "" : cat.ToString(),
                                                            Fld7 = item1.OTrainingTypeLookupVal == null ? "" : item1.OTrainingTypeLookupVal,
                                                            //Fld8 = item1.OSessionType == null ? "" : item1.OSessionType.LookupVal.ToString(),
                                                            Fld8 = item1.OSessionTypeLookupVal == null ? "" : item1.OSessionTypeLookupVal,
                                                            // Fld9 = ed == null ? "" : ed.ToString(),
                                                            //Fld10 = trbatch == null ? "" : trbatch.ToString(),
                                                            //Fld11 = trbatchname == null ? "" : trbatchname.ToString(),
                                                            Fld10 = item.OTrainingBatchCode == null ? "" : item.OTrainingBatchCode,
                                                            Fld11 = item.OTrainingBatchName == null ? "" : item.OTrainingBatchName,
                                                            //Fld12 = trstdate == null ? "" : trstdate.ToString(),
                                                            //Fld13 = trstenddate == null ? "" : trstenddate.ToString(),

                                                            Fld12 = item1.OStartDate == null ? "" : item1.OStartDate.Value.ToShortDateString(),
                                                            Fld13 = item1.OEndDate == null ? "" : item1.OEndDate.Value.ToShortDateString(),
                                                            //Fld14 = trsttime == null ? "" : trsttime.ToString(),
                                                            //Fld15 = tredtime == null ? "" : tredtime.ToString(),
                                                            Fld14 = item1.OStartTime == null ? "" : item1.OStartTime.ToString(),
                                                            Fld15 = item1.OStartTime == null ? "" : item1.OStartTime.ToString(),
                                                            Fld16 = item1.OSessionDate == null ? "" : item1.OSessionDate.Value.ToShortDateString(),
                                                            Fld17 = item1.OTrainerName == null ? "" : item1.OTrainerName.ToString()

                                                        };

                                                        if (comp)
                                                        {
                                                            OGenericObjStatement.Fld99 = GeoDataInd.Company_Name;
                                                        }
                                                        if (div)
                                                        {
                                                            OGenericObjStatement.Fld98 = GeoDataInd.Division_Name;
                                                        }
                                                        if (loca)
                                                        {
                                                            OGenericObjStatement.Fld97 = GeoDataInd.LocDesc;
                                                        }
                                                        if (dept)
                                                        {
                                                            OGenericObjStatement.Fld96 = GeoDataInd.DeptDesc;
                                                        }
                                                        if (grp)
                                                        {
                                                            OGenericObjStatement.Fld95 = GeoDataInd.Group_Name;
                                                        }
                                                        if (unit)
                                                        {
                                                            OGenericObjStatement.Fld94 = GeoDataInd.Unit_Name;
                                                        }
                                                        if (grade)
                                                        {
                                                            OGenericObjStatement.Fld93 = PaydataInd.Grade_Name;
                                                        }
                                                        if (lvl)
                                                        {
                                                            OGenericObjStatement.Fld92 = PaydataInd.Level_Name;
                                                        }
                                                        if (jobstat)
                                                        {
                                                            OGenericObjStatement.Fld91 = GeoDataInd.JobStatus_Id.ToString();
                                                        }
                                                        if (job)
                                                        {
                                                            OGenericObjStatement.Fld90 = FuncdataInd.Job_Name;
                                                        }
                                                        if (jobpos)
                                                        {
                                                            OGenericObjStatement.Fld89 = FuncdataInd.JobPositionDesc;
                                                        }
                                                        if (emp)
                                                        {
                                                            OGenericObjStatement.Fld88 = a.OEmployee.ToString();
                                                        }

                                                        OGenericPayrollStatement.Add(OGenericObjStatement);
                                                    }
                                                }
                                                //}
                                            }
                                        }
                                    }
                                    else
                                    {
                                        foreach (var item1 in item.OTrainingSession)
                                        {

                                            if (item1.OStartDate >= pFromDate && item1.OEndDate <= pToDate)
                                            {
                                                //if (a.Employee != null)
                                                //{
                                                //string trstdate = item1.OTrainingProgramCalendar.StartDate.Value.ToShortDateString();
                                                //string trstenddate = item1.OTrainingProgramCalendar.EndDate.Value.ToShortDateString();
                                                //string trsttime = item1.OStartTime.ToString();
                                                //string tredtime = item1.OEndTime.ToString();
                                                ////string prg = item1.TrainingCalendar.ProgramList.SubjectDetails.ToString();
                                                //string prg = item1.OProgramList.SubjectDetails.ToString();
                                                ////string cat = item1.TrainingCalendar.ProgramList.TrainingType.LookupVal.ToString();
                                                //string cat = item1.OTrainingType.LookupVal.ToString();
                                                //////var cat1 = item1.TrainingCalendar.ProgramList.
                                                ////string cat = item1.TrainingProgramCalendar.ProgramList.TrainingType.LookupVal.ToString();
                                                //string trbatch = item.OTrainingSchedule.TrainingBatchCode.ToString();
                                                //string trbatchname = item.OTrainingSchedule.TrainingBatchName.ToString();

                                                //string trf = item1.Expenses.TrainingFees.ToString();
                                                //string ven = item1.Venue.Name;
                                                GenericField100 OGenericObjStatement = new GenericField100
                                                {
                                                    //Fld1 = a.OEmployee.EmpCode == null ? "" : a.OEmployee.EmpCode.ToString(),
                                                    //Fld2 = a.OEmployee.EmpName == null ? "" : a.OEmployee.EmpName.FullNameLFM.ToString(),
                                                    //Fld3 = a.OEmployee.GeoStruct == null ? "" : a.OEmployee.GeoStruct.Location == null ? "" : a.OEmployee.GeoStruct.Location.LocationObj == null ? "" : a.OEmployee.GeoStruct.Location.LocationObj.LocDesc.ToString(),
                                                    ////Fld4 = a.Employee.FuncStruct.Job.Name == null ? "" : a.Employee.FuncStruct.Job.Name.ToString(),
                                                    ////Fld5 = a.Employee.GeoStruct.FullDetailsLD == null ? "" : a.Employee.GeoStruct.FullDetailsLD.ToString(),
                                                    //Fld6 = prg == null ? "" : prg.ToString(),
                                                    //Fld7 = cat == null ? "" : cat.ToString(),
                                                    //Fld8 = item1.OSessionType == null ? "" : item1.OSessionType.LookupVal.ToString(),
                                                    //// Fld9 = ed == null ? "" : ed.ToString(),
                                                    //Fld10 = trbatch == null ? "" : trbatch.ToString(),
                                                    //Fld11 = trbatchname == null ? "" : trbatchname.ToString(),
                                                    //Fld12 = trstdate == null ? "" : trstdate.ToString(),
                                                    //Fld13 = trstenddate == null ? "" : trstenddate.ToString(),
                                                    //Fld14 = trsttime == null ? "" : trsttime.ToString(),
                                                    //Fld15 = tredtime == null ? "" : tredtime.ToString(),
                                                    //Fld16 = item1.OSessionDate == null ? "" : item1.OSessionDate.Value.ToShortDateString(),
                                                    //Fld17 = item1.OTrainerName == null ? "" : item1.OTrainerName.ToString()

                                                    //Fld1 = a.OEmployee.EmpCode == null ? "" : a.OEmployee.EmpCode.ToString(),
                                                    Fld1 = a.OEmpCode == null ? "" : a.OEmpCode,
                                                    //Fld2 = a.OEmployee.EmpName == null ? "" : a.OEmployee.EmpName.FullNameLFM.ToString(),
                                                    Fld2 = a.OEmpName == null ? "" : a.OEmpName,

                                                    //Fld3 = a.OEmployee.GeoStruct == null ? "" : a.OEmployee.GeoStruct.Location == null ? "" : a.OEmployee.GeoStruct.Location.LocationObj == null ? "" : a.OEmployee.GeoStruct.Location.LocationObj.LocDesc.ToString(),
                                                    Fld3 = a.OLocDesc == null ? "" : a.OLocDesc,
                                                    //Fld4 = a.Employee.FuncStruct.Job.Name == null ? "" : a.Employee.FuncStruct.Job.Name.ToString(),
                                                    //Fld5 = a.Employee.GeoStruct.FullDetailsLD == null ? "" : a.Employee.GeoStruct.FullDetailsLD.ToString(),
                                                    Fld6 = item1.OSubjectDetails == null ? "" : item1.OSubjectDetails,
                                                    //Fld7 = cat == null ? "" : cat.ToString(),
                                                    Fld7 = item1.OTrainingTypeLookupVal == null ? "" : item1.OTrainingTypeLookupVal,
                                                    //Fld8 = item1.OSessionType == null ? "" : item1.OSessionType.LookupVal.ToString(),
                                                    Fld8 = item1.OSessionTypeLookupVal == null ? "" : item1.OSessionTypeLookupVal,
                                                    // Fld9 = ed == null ? "" : ed.ToString(),
                                                    //Fld10 = trbatch == null ? "" : trbatch.ToString(),
                                                    //Fld11 = trbatchname == null ? "" : trbatchname.ToString(),
                                                    Fld10 = item.OTrainingBatchCode == null ? "" : item.OTrainingBatchCode,
                                                    Fld11 = item.OTrainingBatchName == null ? "" : item.OTrainingBatchName,
                                                    //Fld12 = trstdate == null ? "" : trstdate.ToString(),
                                                    //Fld13 = trstenddate == null ? "" : trstenddate.ToString(),

                                                    Fld12 = item1.OStartDate == null ? "" : item1.OStartDate.Value.ToShortDateString(),
                                                    Fld13 = item1.OEndDate == null ? "" : item1.OEndDate.Value.ToShortDateString(),
                                                    //Fld14 = trsttime == null ? "" : trsttime.ToString(),
                                                    //Fld15 = tredtime == null ? "" : tredtime.ToString(),
                                                    Fld14 = item1.OStartTime == null ? "" : item1.OStartTime.ToString(),
                                                    Fld15 = item1.OStartTime == null ? "" : item1.OStartTime.ToString(),
                                                    Fld16 = item1.OSessionDate == null ? "" : item1.OSessionDate.Value.ToShortDateString(),
                                                    Fld17 = item1.OTrainerName == null ? "" : item1.OTrainerName.ToString()


                                                };

                                                if (comp)
                                                {
                                                    OGenericObjStatement.Fld99 = GeoDataInd.Company_Name;
                                                }
                                                if (div)
                                                {
                                                    OGenericObjStatement.Fld98 = GeoDataInd.Division_Name;
                                                }
                                                if (loca)
                                                {
                                                    OGenericObjStatement.Fld97 = GeoDataInd.LocDesc;
                                                }
                                                if (dept)
                                                {
                                                    OGenericObjStatement.Fld96 = GeoDataInd.DeptDesc;
                                                }
                                                if (grp)
                                                {
                                                    OGenericObjStatement.Fld95 = GeoDataInd.Group_Name;
                                                }
                                                if (unit)
                                                {
                                                    OGenericObjStatement.Fld94 = GeoDataInd.Unit_Name;
                                                }
                                                if (grade)
                                                {
                                                    OGenericObjStatement.Fld93 = PaydataInd.Grade_Name;
                                                }
                                                if (lvl)
                                                {
                                                    OGenericObjStatement.Fld92 = PaydataInd.Level_Name;
                                                }
                                                if (jobstat)
                                                {
                                                    OGenericObjStatement.Fld91 = GeoDataInd.JobStatus_Id.ToString();
                                                }
                                                if (job)
                                                {
                                                    OGenericObjStatement.Fld90 = FuncdataInd.Job_Name;
                                                }
                                                if (jobpos)
                                                {
                                                    OGenericObjStatement.Fld89 = FuncdataInd.JobPositionDesc;
                                                }
                                                if (emp)
                                                {
                                                    OGenericObjStatement.Fld88 = a.OEmployee.ToString();
                                                }

                                                OGenericPayrollStatement.Add(OGenericObjStatement);
                                            }
                                        }
                                        //}
                                        //}
                                    }
                                }
                            }
                            return OGenericPayrollStatement;
                        }
                        break;
                    case "SESSIONWISEEMPLOYEETRAINING":
                        //var OTrnEvna1session = new List<EmployeeTraining>();
                        //foreach (var item in EmpPayrollIdList)
                        //{
                        //    var OTrnEvna11 = db.EmployeeTraining
                        //        .Include(e => e.TrainingDetails)
                        //         .Include(e => e.TrainingDetails.Select(r => r.TrainingCalendar))
                        //        .Include(e => e.TrainingDetails.Select(t => t.TrainingSchedule))
                        //        .Include(e => e.TrainingDetails.Select(t => t.TrainingSchedule.TrainingSession))
                        //         .Include(e => e.TrainingDetails.Select(t => t.TrainingSchedule.TrainingSession.Select(x => x.SessionType)))
                        //        .Include(e => e.TrainingDetails.Select(t => t.TrainingSchedule.TrainingSession.Select(a => a.TrainingProgramCalendar)))
                        //        .Include(e => e.TrainingDetails.Select(t => t.TrainingSchedule.TrainingSession.Select(z => z.TrainingProgramCalendar.ProgramList)))
                        //        .Include(e => e.TrainingDetails.Select(t => t.TrainingSchedule.TrainingSession.Select(z => z.TrainingProgramCalendar.ProgramList.TrainingType)))

                        //       .Include(e => e.Employee)
                        //        .Include(e => e.Employee.EmpName)
                        //        .Include(e => e.Employee.GeoStruct)
                        //        .Include(e => e.Employee.GeoStruct.Location)
                        //        .Include(e => e.Employee.GeoStruct.Location.LocationObj)
                        //        .Include(e => e.Employee.FuncStruct)
                        //        .Include(e => e.Employee.PayStruct)
                        //        //.Include(e => e.Employee.FuncStruct.Job)
                        //       .Where(e => e.Employee.Id == item)
                        //        .FirstOrDefault();
                        //    if (OTrnEvna11 != null)
                        //    {
                        //        OTrnEvna1session.Add(OTrnEvna11);
                        //    }
                        //}

                        var OTrnEvna1session = db.EmployeeTraining.Where(e => EmpPayrollIdList.Contains(e.Employee_Id.Value)).Select(e => new
                        {
                            OEmployee = e.Employee,
                            OEmpCode = e.Employee.EmpCode,
                            OEmpName = e.Employee.EmpName.FullNameFML,
                            OGeostructId = e.Employee.GeoStruct.Id,
                            OPayStructId = e.Employee.PayStruct.Id,
                            OFuncStructId = e.Employee.FuncStruct.Id,
                            OLocDesc = e.Employee.GeoStruct.Location.LocationObj.LocDesc,
                            OTrainingDetails = e.TrainingDetails.Select(f => new
                            {
                                OTrainingBatchCode = f.TrainingSchedule.TrainingBatchCode,
                                OTrainingBatchName = f.TrainingSchedule.TrainingBatchName,
                                OTrainingSession = f.TrainingSchedule.TrainingSession.Select(g => new
                                {
                                    OSessionTypeLookupVal = g.SessionType.LookupVal,
                                    OStartDate = g.TrainingProgramCalendar.StartDate,
                                    OEndDate = g.TrainingProgramCalendar.EndDate,
                                    OSubjectDetails = g.TrainingProgramCalendar.ProgramList.SubjectDetails,
                                    OTrainingTypeLookupVal = g.TrainingProgramCalendar.ProgramList.TrainingType.LookupVal,
                                    OStartTime = g.StartTime,
                                    OEndTime = g.EndTime,
                                    OSessionDate = g.SessionDate,
                                    OTrainerName = g.TrainerName
                                }).ToList()

                            }).ToList()

                        }).ToList();



                        if (OTrnEvna1session == null || OTrnEvna1session.Count() == 0)
                        {
                            return null;
                        }
                        else
                        {
                            var emp = false;
                            var dept = false;
                            var loca = false;
                            var comp = false;
                            var grp = false;
                            var unit = false;
                            var div = false;
                            var regn = false;
                            var grade = false;
                            var lvl = false;
                            var jobstat = false;
                            var job = false;
                            var jobpos = false;
                            var vc = db.LookupValue.Where(a => forithead.Contains(a.Id.ToString())).ToList();

                            foreach (var item in vc)
                            {
                                //if (item.LookupVal.ToUpper() == "MONTH")
                                //{
                                //    month = true;
                                //}
                                if (item.LookupVal.ToUpper() == "LOCATION")
                                {

                                    loca = true;
                                }
                                if (item.LookupVal.ToUpper() == "EMPLOYEE")
                                {
                                    emp = true;
                                }
                                if (item.LookupVal.ToUpper() == "DEPARTMENT")
                                {
                                    dept = true;
                                }
                                if (item.LookupVal.ToUpper() == "COMPANY")
                                {
                                    comp = true;
                                }
                                if (item.LookupVal.ToUpper() == "GROUP")
                                {
                                    grp = true;
                                }
                                if (item.LookupVal.ToUpper() == "UNIT")
                                {
                                    unit = true;
                                }
                                if (item.LookupVal.ToUpper() == "DIVISION")
                                {
                                    div = true;
                                }
                                if (item.LookupVal.ToUpper() == "REGION")
                                {
                                    regn = true;
                                }
                                if (item.LookupVal.ToUpper() == "GRADE")
                                {
                                    grade = true;
                                }
                                if (item.LookupVal.ToUpper() == "LEVEL")
                                {
                                    lvl = true;
                                }
                                if (item.LookupVal.ToUpper() == "JOBSTATUS")
                                {
                                    jobstat = true;
                                }

                                if (item.LookupVal.ToUpper() == "JOB")
                                {
                                    job = true;
                                }
                                if (item.LookupVal.ToUpper() == "JOBPOSITION")
                                {
                                    jobpos = true;
                                }
                            }

                            List<Utility.ReportClass> GeoData = new List<Utility.ReportClass>();
                            List<Utility.ReportClass> Paydata = new List<Utility.ReportClass>();
                            List<Utility.ReportClass> Funcdata = new List<Utility.ReportClass>();

                            Utility.ReportClass GeoDataInd = new Utility.ReportClass();
                            Utility.ReportClass PaydataInd = new Utility.ReportClass();
                            Utility.ReportClass FuncdataInd = new Utility.ReportClass();

                            GeoData = GetViewData(0);
                            Paydata = GetViewData(1);
                            Funcdata = GetViewData(2);

                            foreach (var a in OTrnEvna1session)
                            {
                                int geoid = a.OGeostructId;

                                int payid = a.OPayStructId;

                                int funid = a.OFuncStructId;

                                GeoDataInd = GetViewDataIndiv(geoid, payid, funid, GeoData, 0);
                                PaydataInd = GetViewDataIndiv(geoid, payid, funid, Paydata, 1);
                                FuncdataInd = GetViewDataIndiv(geoid, payid, funid, Funcdata, 2);

                                foreach (var item in a.OTrainingDetails)
                                {
                                    if (salheadlist.Count > 0 && salheadlistLevel1.Count() > 0 && salheadlistLevel2.Count() > 0)
                                    {
                                        foreach (var batch in salheadlist)
                                        {
                                            if (batch.ToUpper() == item.OTrainingBatchName.ToUpper())
                                            {

                                                foreach (var item1 in item.OTrainingSession)
                                                {
                                                    if (salheadlistLevel1.Count() > 0)
                                                    {
                                                        foreach (var Level1 in salheadlistLevel1)
                                                        {
                                                            if (Level1.ToUpper() == item1.OSessionTypeLookupVal.ToUpper())
                                                            {
                                                                if (salheadlistLevel2.Count() > 0)
                                                                {
                                                                    foreach (var Level2 in salheadlistLevel2)
                                                                    {
                                                                        if (Level2.ToUpper() == item1.OSubjectDetails.ToUpper())
                                                                        {
                                                                            if (item1.OStartDate >= pFromDate && item1.OEndDate <= pToDate)
                                                                            {
                                                                                //if (a.Employee != null)
                                                                                //{
                                                                                GenericField100 OGenericObjStatement = new GenericField100
                                                                                {
                                                                                    Fld1 = a.OEmpCode == null ? "" : a.OEmpCode.ToString(),
                                                                                    Fld2 = a.OEmpName == null ? "" : a.OEmpName.ToString(),
                                                                                    Fld3 = a.OLocDesc == null ? "" : a.OLocDesc,
                                                                                    //Fld4 = a.Employee.FuncStruct.Job.Name == null ? "" : a.Employee.FuncStruct.Job.Name.ToString(),
                                                                                    //Fld5 = a.Employee.GeoStruct.FullDetailsLD == null ? "" : a.Employee.GeoStruct.FullDetailsLD.ToString(),
                                                                                    Fld6 = item1.OSubjectDetails == null ? "" : item1.OSubjectDetails.ToString(),
                                                                                    Fld7 = item1.OTrainingTypeLookupVal == null ? "" : item1.OTrainingTypeLookupVal.ToString(),
                                                                                    Fld8 = item1.OSessionTypeLookupVal == null ? "" : item1.OSessionTypeLookupVal.ToString(),
                                                                                    // Fld9 = ed == null ? "" : ed.ToString(),
                                                                                    Fld10 = item.OTrainingBatchCode == null ? "" : item.OTrainingBatchCode.ToString(),
                                                                                    Fld11 = item.OTrainingBatchName == null ? "" : item.OTrainingBatchName.ToString(),
                                                                                    Fld12 = item1.OStartDate == null ? "" : item1.OStartDate.Value.ToShortDateString(),
                                                                                    Fld13 = item1.OEndDate == null ? "" : item1.OEndDate.Value.ToShortDateString(),
                                                                                    Fld14 = item1.OStartTime == null ? "" : item1.OStartTime.ToString(),
                                                                                    Fld15 = item1.OEndTime == null ? "" : item1.OEndTime.ToString(),
                                                                                    Fld16 = item1.OSessionDate == null ? "" : item1.OSessionDate.Value.ToShortDateString(),
                                                                                    Fld17 = item1.OTrainerName == null ? "" : item1.OTrainerName.ToString()

                                                                                };

                                                                                if (comp)
                                                                                {
                                                                                    OGenericObjStatement.Fld99 = GeoDataInd.Company_Name;
                                                                                }
                                                                                if (div)
                                                                                {
                                                                                    OGenericObjStatement.Fld98 = GeoDataInd.Division_Name;
                                                                                }
                                                                                if (loca)
                                                                                {
                                                                                    OGenericObjStatement.Fld97 = GeoDataInd.LocDesc;
                                                                                }
                                                                                if (dept)
                                                                                {
                                                                                    OGenericObjStatement.Fld96 = GeoDataInd.DeptDesc;
                                                                                }
                                                                                if (grp)
                                                                                {
                                                                                    OGenericObjStatement.Fld95 = GeoDataInd.Group_Name;
                                                                                }
                                                                                if (unit)
                                                                                {
                                                                                    OGenericObjStatement.Fld94 = GeoDataInd.Unit_Name;
                                                                                }
                                                                                if (grade)
                                                                                {
                                                                                    OGenericObjStatement.Fld93 = PaydataInd.Grade_Name;
                                                                                }
                                                                                if (lvl)
                                                                                {
                                                                                    OGenericObjStatement.Fld92 = PaydataInd.Level_Name;
                                                                                }
                                                                                if (jobstat)
                                                                                {
                                                                                    OGenericObjStatement.Fld91 = GeoDataInd.JobStatus_Id.ToString();
                                                                                }
                                                                                if (job)
                                                                                {
                                                                                    OGenericObjStatement.Fld90 = FuncdataInd.Job_Name;
                                                                                }
                                                                                if (jobpos)
                                                                                {
                                                                                    OGenericObjStatement.Fld89 = FuncdataInd.JobPositionDesc;
                                                                                }
                                                                                if (emp)
                                                                                {
                                                                                    OGenericObjStatement.Fld88 = a.OEmployee.ToString();
                                                                                }

                                                                                OGenericPayrollStatement.Add(OGenericObjStatement);
                                                                            }
                                                                        }

                                                                    }
                                                                    //}
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }

                                    else if (salheadlist.Count > 0 && salheadlistLevel1.Count() == 0 && salheadlistLevel2.Count() == 0)
                                    {
                                        foreach (var batch in salheadlist)
                                        {
                                            if (batch.ToUpper() == item.OTrainingBatchName.ToUpper())
                                            {
                                                foreach (var item1 in item.OTrainingSession)
                                                {
                                                    if (item1.OStartDate >= pFromDate && item1.OEndDate <= pToDate)
                                                    {
                                                        //if (a.Employee != null)
                                                        //{
                                                        GenericField100 OGenericObjStatement = new GenericField100
                                                        {
                                                            Fld1 = a.OEmpCode == null ? "" : a.OEmpCode.ToString(),
                                                            Fld2 = a.OEmpName == null ? "" : a.OEmpName.ToString(),
                                                            Fld3 = a.OLocDesc == null ? "" : a.OLocDesc,
                                                            //Fld4 = a.Employee.FuncStruct.Job.Name == null ? "" : a.Employee.FuncStruct.Job.Name.ToString(),
                                                            //Fld5 = a.Employee.GeoStruct.FullDetailsLD == null ? "" : a.Employee.GeoStruct.FullDetailsLD.ToString(),
                                                            Fld6 = item1.OSubjectDetails == null ? "" : item1.OSubjectDetails.ToString(),
                                                            Fld7 = item1.OTrainingTypeLookupVal == null ? "" : item1.OTrainingTypeLookupVal.ToString(),
                                                            Fld8 = item1.OSessionTypeLookupVal == null ? "" : item1.OSessionTypeLookupVal.ToString(),
                                                            // Fld9 = ed == null ? "" : ed.ToString(),
                                                            Fld10 = item.OTrainingBatchCode == null ? "" : item.OTrainingBatchCode.ToString(),
                                                            Fld11 = item.OTrainingBatchName == null ? "" : item.OTrainingBatchName.ToString(),
                                                            Fld12 = item1.OStartDate == null ? "" : item1.OStartDate.Value.ToShortDateString(),
                                                            Fld13 = item1.OEndDate == null ? "" : item1.OEndDate.Value.ToShortDateString(),
                                                            Fld14 = item1.OStartTime == null ? "" : item1.OStartTime.ToString(),
                                                            Fld15 = item1.OEndTime == null ? "" : item1.OEndTime.ToString(),
                                                            Fld16 = item1.OSessionDate == null ? "" : item1.OSessionDate.Value.ToShortDateString(),
                                                            Fld17 = item1.OTrainerName == null ? "" : item1.OTrainerName.ToString()

                                                        };

                                                        if (comp)
                                                        {
                                                            OGenericObjStatement.Fld99 = GeoDataInd.Company_Name;
                                                        }
                                                        if (div)
                                                        {
                                                            OGenericObjStatement.Fld98 = GeoDataInd.Division_Name;
                                                        }
                                                        if (loca)
                                                        {
                                                            OGenericObjStatement.Fld97 = GeoDataInd.LocDesc;
                                                        }
                                                        if (dept)
                                                        {
                                                            OGenericObjStatement.Fld96 = GeoDataInd.DeptDesc;
                                                        }
                                                        if (grp)
                                                        {
                                                            OGenericObjStatement.Fld95 = GeoDataInd.Group_Name;
                                                        }
                                                        if (unit)
                                                        {
                                                            OGenericObjStatement.Fld94 = GeoDataInd.Unit_Name;
                                                        }
                                                        if (grade)
                                                        {
                                                            OGenericObjStatement.Fld93 = PaydataInd.Grade_Name;
                                                        }
                                                        if (lvl)
                                                        {
                                                            OGenericObjStatement.Fld92 = PaydataInd.Level_Name;
                                                        }
                                                        if (jobstat)
                                                        {
                                                            OGenericObjStatement.Fld91 = GeoDataInd.JobStatus_Id.ToString();
                                                        }
                                                        if (job)
                                                        {
                                                            OGenericObjStatement.Fld90 = FuncdataInd.Job_Name;
                                                        }
                                                        if (jobpos)
                                                        {
                                                            OGenericObjStatement.Fld89 = FuncdataInd.JobPositionDesc;
                                                        }
                                                        if (emp)
                                                        {
                                                            OGenericObjStatement.Fld88 = a.OEmployee.ToString();
                                                        }

                                                        OGenericPayrollStatement.Add(OGenericObjStatement);
                                                    }
                                                }

                                            }
                                        }
                                    }

                                    else if (salheadlist.Count > 0 && salheadlistLevel1.Count() > 0 && salheadlistLevel2.Count() == 0)
                                    {
                                        foreach (var batch in salheadlist)
                                        {
                                            if (batch.ToUpper() == item.OTrainingBatchName.ToUpper())
                                            {

                                                foreach (var item1 in item.OTrainingSession)
                                                {
                                                    if (salheadlistLevel1.Count() > 0)
                                                    {
                                                        foreach (var Level1 in salheadlistLevel1)
                                                        {
                                                            if (Level1.ToUpper() == item1.OSessionTypeLookupVal.ToUpper())
                                                            {

                                                                if (item1.OStartDate >= pFromDate && item1.OEndDate <= pToDate)
                                                                {
                                                                    //if (a.Employee != null)
                                                                    //{
                                                                    GenericField100 OGenericObjStatement = new GenericField100
                                                                    {
                                                                        Fld1 = a.OEmpCode == null ? "" : a.OEmpCode.ToString(),
                                                                        Fld2 = a.OEmpName == null ? "" : a.OEmpName.ToString(),
                                                                        Fld3 = a.OLocDesc == null ? "" : a.OLocDesc,
                                                                        //Fld4 = a.Employee.FuncStruct.Job.Name == null ? "" : a.Employee.FuncStruct.Job.Name.ToString(),
                                                                        //Fld5 = a.Employee.GeoStruct.FullDetailsLD == null ? "" : a.Employee.GeoStruct.FullDetailsLD.ToString(),
                                                                        Fld6 = item1.OSubjectDetails == null ? "" : item1.OSubjectDetails.ToString(),
                                                                        Fld7 = item1.OTrainingTypeLookupVal == null ? "" : item1.OTrainingTypeLookupVal.ToString(),
                                                                        Fld8 = item1.OSessionTypeLookupVal == null ? "" : item1.OSessionTypeLookupVal.ToString(),
                                                                        // Fld9 = ed == null ? "" : ed.ToString(),
                                                                        Fld10 = item.OTrainingBatchCode == null ? "" : item.OTrainingBatchCode.ToString(),
                                                                        Fld11 = item.OTrainingBatchName == null ? "" : item.OTrainingBatchName.ToString(),
                                                                        Fld12 = item1.OStartDate == null ? "" : item1.OStartDate.Value.ToShortDateString(),
                                                                        Fld13 = item1.OEndDate == null ? "" : item1.OEndDate.Value.ToShortDateString(),
                                                                        Fld14 = item1.OStartTime == null ? "" : item1.OStartTime.ToString(),
                                                                        Fld15 = item1.OEndTime == null ? "" : item1.OEndTime.ToString(),
                                                                        Fld16 = item1.OSessionDate == null ? "" : item1.OSessionDate.Value.ToShortDateString(),
                                                                        Fld17 = item1.OTrainerName == null ? "" : item1.OTrainerName.ToString()

                                                                    };

                                                                    if (comp)
                                                                    {
                                                                        OGenericObjStatement.Fld99 = GeoDataInd.Company_Name;
                                                                    }
                                                                    if (div)
                                                                    {
                                                                        OGenericObjStatement.Fld98 = GeoDataInd.Division_Name;
                                                                    }
                                                                    if (loca)
                                                                    {
                                                                        OGenericObjStatement.Fld97 = GeoDataInd.LocDesc;
                                                                    }
                                                                    if (dept)
                                                                    {
                                                                        OGenericObjStatement.Fld96 = GeoDataInd.DeptDesc;
                                                                    }
                                                                    if (grp)
                                                                    {
                                                                        OGenericObjStatement.Fld95 = GeoDataInd.Group_Name;
                                                                    }
                                                                    if (unit)
                                                                    {
                                                                        OGenericObjStatement.Fld94 = GeoDataInd.Unit_Name;
                                                                    }
                                                                    if (grade)
                                                                    {
                                                                        OGenericObjStatement.Fld93 = PaydataInd.Grade_Name;
                                                                    }
                                                                    if (lvl)
                                                                    {
                                                                        OGenericObjStatement.Fld92 = PaydataInd.Level_Name;
                                                                    }
                                                                    if (jobstat)
                                                                    {
                                                                        OGenericObjStatement.Fld91 = GeoDataInd.JobStatus_Id.ToString();
                                                                    }
                                                                    if (job)
                                                                    {
                                                                        OGenericObjStatement.Fld90 = FuncdataInd.Job_Name;
                                                                    }
                                                                    if (jobpos)
                                                                    {
                                                                        OGenericObjStatement.Fld89 = FuncdataInd.JobPositionDesc;
                                                                    }
                                                                    if (emp)
                                                                    {
                                                                        OGenericObjStatement.Fld88 = a.OEmployee.ToString();
                                                                    }

                                                                    OGenericPayrollStatement.Add(OGenericObjStatement);
                                                                }
                                                            }

                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                    else if (salheadlist.Count > 0 && salheadlistLevel2.Count() > 0 && salheadlistLevel1.Count() == 0)
                                    {
                                        foreach (var batch in salheadlist)
                                        {
                                            if (batch.ToUpper() == item.OTrainingBatchName.ToUpper())
                                            {

                                                foreach (var item1 in item.OTrainingSession)
                                                {
                                                    if (salheadlistLevel2.Count() > 0)
                                                    {
                                                        foreach (var Level2 in salheadlistLevel2)
                                                        {
                                                            if (Level2.ToUpper() == item1.OSubjectDetails.ToUpper())
                                                            {

                                                                if (item1.OStartDate >= pFromDate && item1.OEndDate <= pToDate)
                                                                {
                                                                    //if (a.Employee != null)
                                                                    //{
                                                                    GenericField100 OGenericObjStatement = new GenericField100
                                                                    {
                                                                        Fld1 = a.OEmpCode == null ? "" : a.OEmpCode.ToString(),
                                                                        Fld2 = a.OEmpName == null ? "" : a.OEmpName.ToString(),
                                                                        Fld3 = a.OLocDesc == null ? "" : a.OLocDesc,
                                                                        //Fld4 = a.Employee.FuncStruct.Job.Name == null ? "" : a.Employee.FuncStruct.Job.Name.ToString(),
                                                                        //Fld5 = a.Employee.GeoStruct.FullDetailsLD == null ? "" : a.Employee.GeoStruct.FullDetailsLD.ToString(),
                                                                        Fld6 = item1.OSubjectDetails == null ? "" : item1.OSubjectDetails.ToString(),
                                                                        Fld7 = item1.OTrainingTypeLookupVal == null ? "" : item1.OTrainingTypeLookupVal.ToString(),
                                                                        Fld8 = item1.OSessionTypeLookupVal == null ? "" : item1.OSessionTypeLookupVal.ToString(),
                                                                        // Fld9 = ed == null ? "" : ed.ToString(),
                                                                        Fld10 = item.OTrainingBatchCode == null ? "" : item.OTrainingBatchCode.ToString(),
                                                                        Fld11 = item.OTrainingBatchName == null ? "" : item.OTrainingBatchName.ToString(),
                                                                        Fld12 = item1.OStartDate == null ? "" : item1.OStartDate.Value.ToShortDateString(),
                                                                        Fld13 = item1.OEndDate == null ? "" : item1.OEndDate.Value.ToShortDateString(),
                                                                        Fld14 = item1.OStartTime == null ? "" : item1.OStartTime.ToString(),
                                                                        Fld15 = item1.OEndTime == null ? "" : item1.OEndTime.ToString(),
                                                                        Fld16 = item1.OSessionDate == null ? "" : item1.OSessionDate.Value.ToShortDateString(),
                                                                        Fld17 = item1.OTrainerName == null ? "" : item1.OTrainerName.ToString()

                                                                    };

                                                                    if (comp)
                                                                    {
                                                                        OGenericObjStatement.Fld99 = GeoDataInd.Company_Name;
                                                                    }
                                                                    if (div)
                                                                    {
                                                                        OGenericObjStatement.Fld98 = GeoDataInd.Division_Name;
                                                                    }
                                                                    if (loca)
                                                                    {
                                                                        OGenericObjStatement.Fld97 = GeoDataInd.LocDesc;
                                                                    }
                                                                    if (dept)
                                                                    {
                                                                        OGenericObjStatement.Fld96 = GeoDataInd.DeptDesc;
                                                                    }
                                                                    if (grp)
                                                                    {
                                                                        OGenericObjStatement.Fld95 = GeoDataInd.Group_Name;
                                                                    }
                                                                    if (unit)
                                                                    {
                                                                        OGenericObjStatement.Fld94 = GeoDataInd.Unit_Name;
                                                                    }
                                                                    if (grade)
                                                                    {
                                                                        OGenericObjStatement.Fld93 = PaydataInd.Grade_Name;
                                                                    }
                                                                    if (lvl)
                                                                    {
                                                                        OGenericObjStatement.Fld92 = PaydataInd.Level_Name;
                                                                    }
                                                                    if (jobstat)
                                                                    {
                                                                        OGenericObjStatement.Fld91 = GeoDataInd.JobStatus_Id.ToString();
                                                                    }
                                                                    if (job)
                                                                    {
                                                                        OGenericObjStatement.Fld90 = FuncdataInd.Job_Name;
                                                                    }
                                                                    if (jobpos)
                                                                    {
                                                                        OGenericObjStatement.Fld89 = FuncdataInd.JobPositionDesc;
                                                                    }
                                                                    if (emp)
                                                                    {
                                                                        OGenericObjStatement.Fld88 = a.OEmployee.ToString();
                                                                    }

                                                                    OGenericPayrollStatement.Add(OGenericObjStatement);
                                                                }
                                                            }

                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }

                                    else if (salheadlist.Count() == 0 && salheadlistLevel1.Count() == 0 && salheadlistLevel2.Count() == 0)
                                    {
                                        foreach (var item1 in item.OTrainingSession)
                                        {
                                            if (item1.OStartDate >= pFromDate && item1.OEndDate <= pToDate)
                                            {
                                                //if (a.Employee != null)
                                                //{
                                                GenericField100 OGenericObjStatement = new GenericField100
                                                {
                                                    Fld1 = a.OEmpCode == null ? "" : a.OEmpCode.ToString(),
                                                    Fld2 = a.OEmpName == null ? "" : a.OEmpName.ToString(),
                                                    Fld3 = a.OLocDesc == null ? "" : a.OLocDesc,
                                                    //Fld4 = a.Employee.FuncStruct.Job.Name == null ? "" : a.Employee.FuncStruct.Job.Name.ToString(),
                                                    //Fld5 = a.Employee.GeoStruct.FullDetailsLD == null ? "" : a.Employee.GeoStruct.FullDetailsLD.ToString(),
                                                    Fld6 = item1.OSubjectDetails == null ? "" : item1.OSubjectDetails.ToString(),
                                                    Fld7 = item1.OTrainingTypeLookupVal == null ? "" : item1.OTrainingTypeLookupVal.ToString(),
                                                    Fld8 = item1.OSessionTypeLookupVal == null ? "" : item1.OSessionTypeLookupVal.ToString(),
                                                    // Fld9 = ed == null ? "" : ed.ToString(),
                                                    Fld10 = item.OTrainingBatchCode == null ? "" : item.OTrainingBatchCode.ToString(),
                                                    Fld11 = item.OTrainingBatchName == null ? "" : item.OTrainingBatchName.ToString(),
                                                    Fld12 = item1.OStartDate == null ? "" : item1.OStartDate.Value.ToShortDateString(),
                                                    Fld13 = item1.OEndDate == null ? "" : item1.OEndDate.Value.ToShortDateString(),
                                                    Fld14 = item1.OStartTime == null ? "" : item1.OStartTime.ToString(),
                                                    Fld15 = item1.OEndTime == null ? "" : item1.OEndTime.ToString(),
                                                    Fld16 = item1.OSessionDate == null ? "" : item1.OSessionDate.Value.ToShortDateString(),
                                                    Fld17 = item1.OTrainerName == null ? "" : item1.OTrainerName.ToString()


                                                };

                                                if (comp)
                                                {
                                                    OGenericObjStatement.Fld99 = GeoDataInd.Company_Name;
                                                }
                                                if (div)
                                                {
                                                    OGenericObjStatement.Fld98 = GeoDataInd.Division_Name;
                                                }
                                                if (loca)
                                                {
                                                    OGenericObjStatement.Fld97 = GeoDataInd.LocDesc;
                                                }
                                                if (dept)
                                                {
                                                    OGenericObjStatement.Fld96 = GeoDataInd.DeptDesc;
                                                }
                                                if (grp)
                                                {
                                                    OGenericObjStatement.Fld95 = GeoDataInd.Group_Name;
                                                }
                                                if (unit)
                                                {
                                                    OGenericObjStatement.Fld94 = GeoDataInd.Unit_Name;
                                                }
                                                if (grade)
                                                {
                                                    OGenericObjStatement.Fld93 = PaydataInd.Grade_Name;
                                                }
                                                if (lvl)
                                                {
                                                    OGenericObjStatement.Fld92 = PaydataInd.Level_Name;
                                                }
                                                if (jobstat)
                                                {
                                                    OGenericObjStatement.Fld91 = GeoDataInd.JobStatus_Id.ToString();
                                                }
                                                if (job)
                                                {
                                                    OGenericObjStatement.Fld90 = FuncdataInd.Job_Name;
                                                }
                                                if (jobpos)
                                                {
                                                    OGenericObjStatement.Fld89 = FuncdataInd.JobPositionDesc;
                                                }
                                                if (emp)
                                                {
                                                    OGenericObjStatement.Fld88 = a.OEmployee.ToString();
                                                }

                                                OGenericPayrollStatement.Add(OGenericObjStatement);
                                            }
                                            //}
                                        }
                                        //}
                                    }

                                }
                            }
                            return OGenericPayrollStatement;
                        }
                        break;
                    case "PROGRAMWISEATTENDANCE":
                        var OTrnEvna12 = new List<EmployeeTraining>();
                        //var specialgrp = SpecialGroupslist.Count() > 0 ? SpecialGroupslist.FirstOrDefault() : "";

                        foreach (var item in EmpPayrollIdList)
                        {

                            var OTrnEvna122 = db.EmployeeTraining
                                .Include(e => e.TrainingDetails)
                                .Include(e => e.Employee)
                                .Include(e => e.Employee.GeoStruct)
                                .Include(e => e.Employee.FuncStruct)
                                .Include(e => e.Employee.PayStruct)
                                .Include(e => e.Employee.EmpName)
                                 .Include(e => e.TrainingDetails.Select(a => a.TrainigDetailSessionInfo))
                                 .Include(e => e.TrainingDetails.Select(r => r.TrainingCalendar))
                               .Include(e => e.TrainingDetails.Select(t => t.TrainingSchedule))
                               .Include(e => e.TrainingDetails.Select(t => t.TrainingSchedule.TrainingSession))
                               .Include(e => e.TrainingDetails.Select(t => t.TrainingSchedule.TrainingSession.Select(x => x.SessionType)))
                               .Include(e => e.TrainingDetails.Select(t => t.TrainingSchedule.TrainingSession.Select(a => a.TrainingProgramCalendar)))
                               .Include(e => e.TrainingDetails.Select(t => t.TrainingSchedule.TrainingSession.Select(z => z.TrainingProgramCalendar.ProgramList)))

                               // .Include(e => e.TrainingDetails.Select(a => a.TrainingSchedule))
                                //.Include(e => e.TrainingDetails.Select(a => a.TrainingSchedule.Select(h => h.TrainingCalendar)))
                                //.Include(e => e.TrainingDetails.Select(a => a.TrainingSchedule.Select(h => h.TrainingCalendar.ProgramList)))
                                //.Include(e => e.Employee.GeoStruct)
                                //.Include(e => e.Employee.GeoStruct.Location)
                                //.Include(e => e.Employee.GeoStruct.Location.LocationObj)
                                //.Include(e => e.Employee.FuncStruct)
                                //.Include(e => e.Employee.FuncStruct.Job)
                              .Where(e => e.Employee.Id == item)
                               .FirstOrDefault();

                            if (OTrnEvna122 != null)
                            {
                                OTrnEvna12.Add(OTrnEvna122);
                            }

                        }
                        if (OTrnEvna12 == null || OTrnEvna12.Count() == 0)
                        {
                            return null;
                        }
                        else
                        {
                            var SpGroup = SpecialGroupslist.ToList();
                            var Present = false;
                            var Absent = false;
                            var Cancel = false;

                            foreach (var item1 in SpGroup)
                            {
                                if (item1 == "Present")
                                {

                                    Present = true;
                                }

                            }
                            foreach (var item1 in SpGroup)
                            {
                                if (item1 == "Absent")
                                {

                                    Absent = true;
                                }

                            }
                            foreach (var item1 in SpGroup)
                            {
                                if (item1 == "Cancel")
                                {

                                    Cancel = true;
                                }

                            }

                            var emp = false;
                            var dept = false;
                            var loca = false;
                            var comp = false;
                            var grp = false;
                            var unit = false;
                            var div = false;
                            var regn = false;
                            var grade = false;
                            var lvl = false;
                            var jobstat = false;
                            var job = false;
                            var jobpos = false;
                            var vc = db.LookupValue.Where(a => forithead.Contains(a.Id.ToString())).ToList();

                            foreach (var item in vc)
                            {
                                //if (item.LookupVal.ToUpper() == "MONTH")
                                //{
                                //    month = true;
                                //}
                                if (item.LookupVal.ToUpper() == "LOCATION")
                                {

                                    loca = true;
                                }
                                if (item.LookupVal.ToUpper() == "EMPLOYEE")
                                {
                                    emp = true;
                                }
                                if (item.LookupVal.ToUpper() == "DEPARTMENT")
                                {
                                    dept = true;
                                }
                                if (item.LookupVal.ToUpper() == "COMPANY")
                                {
                                    comp = true;
                                }
                                if (item.LookupVal.ToUpper() == "GROUP")
                                {
                                    grp = true;
                                }
                                if (item.LookupVal.ToUpper() == "UNIT")
                                {
                                    unit = true;
                                }
                                if (item.LookupVal.ToUpper() == "DIVISION")
                                {
                                    div = true;
                                }
                                if (item.LookupVal.ToUpper() == "REGION")
                                {
                                    regn = true;
                                }
                                if (item.LookupVal.ToUpper() == "GRADE")
                                {
                                    grade = true;
                                }
                                if (item.LookupVal.ToUpper() == "LEVEL")
                                {
                                    lvl = true;
                                }
                                if (item.LookupVal.ToUpper() == "JOBSTATUS")
                                {
                                    jobstat = true;
                                }

                                if (item.LookupVal.ToUpper() == "JOB")
                                {
                                    job = true;
                                }
                                if (item.LookupVal.ToUpper() == "JOBPOSITION")
                                {
                                    jobpos = true;
                                }
                            }

                            List<Utility.ReportClass> GeoData = new List<Utility.ReportClass>();
                            List<Utility.ReportClass> Paydata = new List<Utility.ReportClass>();
                            List<Utility.ReportClass> Funcdata = new List<Utility.ReportClass>();

                            Utility.ReportClass GeoDataInd = new Utility.ReportClass();
                            Utility.ReportClass PaydataInd = new Utility.ReportClass();
                            Utility.ReportClass FuncdataInd = new Utility.ReportClass();

                            GeoData = GetViewData(0);
                            Paydata = GetViewData(1);
                            Funcdata = GetViewData(2);

                            foreach (var a in OTrnEvna12)
                            {
                                int geoid = a.Employee.GeoStruct.Id;

                                int payid = a.Employee.PayStruct.Id;

                                int funid = a.Employee.FuncStruct.Id;

                                GeoDataInd = GetViewDataIndiv(geoid, payid, funid, GeoData, 0);
                                PaydataInd = GetViewDataIndiv(geoid, payid, funid, Paydata, 1);
                                FuncdataInd = GetViewDataIndiv(geoid, payid, funid, Funcdata, 2);

                                foreach (var item in a.TrainingDetails)
                                {
                                    var trsch = item.TrainingSchedule;
                                    if (trsch != null)
                                    {
                                        if (salheadlist.Count > 0)
                                        {

                                            foreach (var batch in salheadlist)
                                            {
                                                if (batch.ToUpper() == trsch.TrainingBatchName.ToUpper())
                                                {

                                                    foreach (var item1 in trsch.TrainingSession)
                                                    {
                                                        if (item1.TrainingProgramCalendar.StartDate >= pFromDate && item1.TrainingProgramCalendar.EndDate <= pToDate)
                                                        {
                                                            string prg = item1.TrainingProgramCalendar.ProgramList.SubjectDetails.ToString();

                                                            foreach (var item2 in item.TrainigDetailSessionInfo)
                                                            {
                                                                if (SpecialGroupslist.Count() > 0)
                                                                {
                                                                    foreach (var specialgrp in SpecialGroupslist)
                                                                    {


                                                                        // string prg = item1.TrainingCalendar.ProgramList.SubjectDetails.ToString();
                                                                        if (a.Employee != null && item2.IsPresent == true && specialgrp == "Present")
                                                                        {
                                                                            GenericField100 OGenericObjStatement = new GenericField100
                                                                            {
                                                                                Fld1 = a.Employee.EmpCode == null ? "" : a.Employee.EmpCode.ToString(),
                                                                                Fld2 = a.Employee.EmpName == null ? "" : a.Employee.EmpName.FullNameLFM.ToString(),
                                                                                Fld3 = item.TrainingSchedule == null ? "" : item.TrainingSchedule.TrainingBatchName.ToString(),
                                                                                Fld4 = prg == null ? "" : prg.ToString(),
                                                                                Fld5 = item1.SessionDate == null ? "" : item1.SessionDate.Value.ToShortDateString(),
                                                                                Fld6 = item1.SessionType == null ? "" : item1.SessionType.LookupVal.ToString(),
                                                                                Fld7 = item1.StartTime == null ? "" : item1.StartTime.ToString(),
                                                                                Fld8 = item1.EndTime == null ? "" : item1.EndTime.ToString(),
                                                                                Fld9 = item2.IsPresent == null ? "" : item2.IsPresent.ToString(),

                                                                            };
                                                                            if (comp)
                                                                            {
                                                                                OGenericObjStatement.Fld99 = GeoDataInd.Company_Name;
                                                                            }
                                                                            if (div)
                                                                            {
                                                                                OGenericObjStatement.Fld98 = GeoDataInd.Division_Name;
                                                                            }
                                                                            if (loca)
                                                                            {
                                                                                OGenericObjStatement.Fld97 = GeoDataInd.LocDesc;
                                                                            }
                                                                            if (dept)
                                                                            {
                                                                                OGenericObjStatement.Fld96 = GeoDataInd.DeptDesc;
                                                                            }
                                                                            if (grp)
                                                                            {
                                                                                OGenericObjStatement.Fld95 = GeoDataInd.Group_Name;
                                                                            }
                                                                            if (unit)
                                                                            {
                                                                                OGenericObjStatement.Fld94 = GeoDataInd.Unit_Name;
                                                                            }
                                                                            if (grade)
                                                                            {
                                                                                OGenericObjStatement.Fld93 = PaydataInd.Grade_Name;
                                                                            }
                                                                            if (lvl)
                                                                            {
                                                                                OGenericObjStatement.Fld92 = PaydataInd.Level_Name;
                                                                            }
                                                                            if (jobstat)
                                                                            {
                                                                                OGenericObjStatement.Fld91 = GeoDataInd.JobStatus_Id.ToString();
                                                                            }
                                                                            if (job)
                                                                            {
                                                                                OGenericObjStatement.Fld90 = FuncdataInd.Job_Name;
                                                                            }
                                                                            if (jobpos)
                                                                            {
                                                                                OGenericObjStatement.Fld89 = FuncdataInd.JobPositionDesc;
                                                                            }
                                                                            if (emp)
                                                                            {
                                                                                OGenericObjStatement.Fld88 = a.Employee.ToString();
                                                                            }
                                                                            if (Present)
                                                                            {
                                                                                OGenericObjStatement.Fld87 = "Present";
                                                                            }
                                                                            if (Absent)
                                                                            {
                                                                                OGenericObjStatement.Fld86 = "";
                                                                            }
                                                                            if (Cancel)
                                                                            {
                                                                                OGenericObjStatement.Fld85 = "";
                                                                            }

                                                                            OGenericPayrollStatement.Add(OGenericObjStatement);
                                                                        }
                                                                        else if (a.Employee != null && item2.IsPresent == false && specialgrp == "Absent" && item2.CancelReason != null && item2.CancelReason.ToUpper() == "ABSENT")
                                                                        {
                                                                            GenericField100 OGenericObjStatement = new GenericField100
                                                                            {
                                                                                Fld1 = a.Employee.EmpCode == null ? "" : a.Employee.EmpCode.ToString(),
                                                                                Fld2 = a.Employee.EmpName == null ? "" : a.Employee.EmpName.FullNameLFM.ToString(),
                                                                                Fld3 = item.TrainingSchedule == null ? "" : item.TrainingSchedule.TrainingBatchName.ToString(),
                                                                                Fld4 = prg == null ? "" : prg.ToString(),
                                                                                Fld5 = item1.SessionDate == null ? "" : item1.SessionDate.Value.ToShortDateString(),
                                                                                Fld6 = item1.SessionType == null ? "" : item1.SessionType.LookupVal.ToString(),
                                                                                Fld7 = item1.StartTime == null ? "" : item1.StartTime.ToString(),
                                                                                Fld8 = item1.EndTime == null ? "" : item1.EndTime.ToString(),
                                                                                Fld9 = item2.IsPresent == null ? "" : item2.IsPresent.ToString(),

                                                                            };
                                                                            if (comp)
                                                                            {
                                                                                OGenericObjStatement.Fld99 = GeoDataInd.Company_Name;
                                                                            }
                                                                            if (div)
                                                                            {
                                                                                OGenericObjStatement.Fld98 = GeoDataInd.Division_Name;
                                                                            }
                                                                            if (loca)
                                                                            {
                                                                                OGenericObjStatement.Fld97 = GeoDataInd.LocDesc;
                                                                            }
                                                                            if (dept)
                                                                            {
                                                                                OGenericObjStatement.Fld96 = GeoDataInd.DeptDesc;
                                                                            }
                                                                            if (grp)
                                                                            {
                                                                                OGenericObjStatement.Fld95 = GeoDataInd.Group_Name;
                                                                            }
                                                                            if (unit)
                                                                            {
                                                                                OGenericObjStatement.Fld94 = GeoDataInd.Unit_Name;
                                                                            }
                                                                            if (grade)
                                                                            {
                                                                                OGenericObjStatement.Fld93 = PaydataInd.Grade_Name;
                                                                            }
                                                                            if (lvl)
                                                                            {
                                                                                OGenericObjStatement.Fld92 = PaydataInd.Level_Name;
                                                                            }
                                                                            if (jobstat)
                                                                            {
                                                                                OGenericObjStatement.Fld91 = GeoDataInd.JobStatus_Id.ToString();
                                                                            }
                                                                            if (job)
                                                                            {
                                                                                OGenericObjStatement.Fld90 = FuncdataInd.Job_Name;
                                                                            }
                                                                            if (jobpos)
                                                                            {
                                                                                OGenericObjStatement.Fld89 = FuncdataInd.JobPositionDesc;
                                                                            }
                                                                            if (emp)
                                                                            {
                                                                                OGenericObjStatement.Fld88 = a.Employee.ToString();
                                                                            }
                                                                            if (Present)
                                                                            {
                                                                                OGenericObjStatement.Fld87 = "";
                                                                            }
                                                                            if (Absent)
                                                                            {
                                                                                OGenericObjStatement.Fld86 = "Absent";
                                                                            }
                                                                            if (Cancel)
                                                                            {
                                                                                OGenericObjStatement.Fld85 = "";
                                                                            }
                                                                            OGenericPayrollStatement.Add(OGenericObjStatement);
                                                                        }
                                                                        else if (a.Employee != null && item2.IsPresent == false && item2.IsCancelled == true && specialgrp == "Cancel")
                                                                        {
                                                                            GenericField100 OGenericObjStatement = new GenericField100
                                                                            {
                                                                                Fld1 = a.Employee.EmpCode == null ? "" : a.Employee.EmpCode.ToString(),
                                                                                Fld2 = a.Employee.EmpName == null ? "" : a.Employee.EmpName.FullNameLFM.ToString(),
                                                                                Fld3 = item.TrainingSchedule == null ? "" : item.TrainingSchedule.TrainingBatchName.ToString(),
                                                                                Fld4 = prg == null ? "" : prg.ToString(),
                                                                                Fld5 = item1.SessionDate == null ? "" : item1.SessionDate.Value.ToShortDateString(),
                                                                                Fld6 = item1.SessionType == null ? "" : item1.SessionType.LookupVal.ToString(),
                                                                                Fld7 = item1.StartTime == null ? "" : item1.StartTime.ToString(),
                                                                                Fld8 = item1.EndTime == null ? "" : item1.EndTime.ToString(),
                                                                                // Fld9 = item2.IsPresent == null ? "" : item2.IsPresent.ToString(),
                                                                                Fld10 = item2.IsCancelled == null ? "" : item2.IsCancelled.ToString(),
                                                                                Fld11 = item2.CancelReason == null ? "" : item2.CancelReason.ToString(),

                                                                            };
                                                                            if (comp)
                                                                            {
                                                                                OGenericObjStatement.Fld99 = GeoDataInd.Company_Name;
                                                                            }
                                                                            if (div)
                                                                            {
                                                                                OGenericObjStatement.Fld98 = GeoDataInd.Division_Name;
                                                                            }
                                                                            if (loca)
                                                                            {
                                                                                OGenericObjStatement.Fld97 = GeoDataInd.LocDesc;
                                                                            }
                                                                            if (dept)
                                                                            {
                                                                                OGenericObjStatement.Fld96 = GeoDataInd.DeptDesc;
                                                                            }
                                                                            if (grp)
                                                                            {
                                                                                OGenericObjStatement.Fld95 = GeoDataInd.Group_Name;
                                                                            }
                                                                            if (unit)
                                                                            {
                                                                                OGenericObjStatement.Fld94 = GeoDataInd.Unit_Name;
                                                                            }
                                                                            if (grade)
                                                                            {
                                                                                OGenericObjStatement.Fld93 = PaydataInd.Grade_Name;
                                                                            }
                                                                            if (lvl)
                                                                            {
                                                                                OGenericObjStatement.Fld92 = PaydataInd.Level_Name;
                                                                            }
                                                                            if (jobstat)
                                                                            {
                                                                                OGenericObjStatement.Fld91 = GeoDataInd.JobStatus_Id.ToString();
                                                                            }
                                                                            if (job)
                                                                            {
                                                                                OGenericObjStatement.Fld90 = FuncdataInd.Job_Name;
                                                                            }
                                                                            if (jobpos)
                                                                            {
                                                                                OGenericObjStatement.Fld89 = FuncdataInd.JobPositionDesc;
                                                                            }
                                                                            if (emp)
                                                                            {
                                                                                OGenericObjStatement.Fld88 = a.Employee.ToString();
                                                                            }
                                                                            if (Present)
                                                                            {
                                                                                OGenericObjStatement.Fld87 = "";
                                                                            }
                                                                            if (Absent)
                                                                            {
                                                                                OGenericObjStatement.Fld86 = "";
                                                                            }
                                                                            if (Cancel)
                                                                            {
                                                                                OGenericObjStatement.Fld85 = "Cancel";
                                                                            }
                                                                            OGenericPayrollStatement.Add(OGenericObjStatement);
                                                                        }
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    if (a.Employee != null)
                                                                    {
                                                                        GenericField100 OGenericObjStatement = new GenericField100
                                                                        {
                                                                            Fld1 = a.Employee.EmpCode == null ? "" : a.Employee.EmpCode.ToString(),
                                                                            Fld2 = a.Employee.EmpName == null ? "" : a.Employee.EmpName.FullNameLFM.ToString(),
                                                                            Fld3 = item.TrainingSchedule == null ? "" : item.TrainingSchedule.TrainingBatchName.ToString(),
                                                                            Fld4 = prg == null ? "" : prg.ToString(),
                                                                            Fld5 = item1.SessionDate == null ? "" : item1.SessionDate.Value.ToShortDateString(),
                                                                            Fld6 = item1.SessionType == null ? "" : item1.SessionType.LookupVal.ToString(),
                                                                            Fld7 = item1.StartTime == null ? "" : item1.StartTime.ToString(),
                                                                            Fld8 = item1.EndTime == null ? "" : item1.EndTime.ToString(),
                                                                            // Fld9 = item2.IsPresent == null ? "" : item2.IsPresent.ToString(),
                                                                            Fld10 = item2.IsCancelled == null ? "" : item2.IsCancelled.ToString(),
                                                                            Fld11 = item2.CancelReason == null ? "" : item2.CancelReason.ToString(),

                                                                        };
                                                                        if (comp)
                                                                        {
                                                                            OGenericObjStatement.Fld99 = GeoDataInd.Company_Name;
                                                                        }
                                                                        if (div)
                                                                        {
                                                                            OGenericObjStatement.Fld98 = GeoDataInd.Division_Name;
                                                                        }
                                                                        if (loca)
                                                                        {
                                                                            OGenericObjStatement.Fld97 = GeoDataInd.LocDesc;
                                                                        }
                                                                        if (dept)
                                                                        {
                                                                            OGenericObjStatement.Fld96 = GeoDataInd.DeptDesc;
                                                                        }
                                                                        if (grp)
                                                                        {
                                                                            OGenericObjStatement.Fld95 = GeoDataInd.Group_Name;
                                                                        }
                                                                        if (unit)
                                                                        {
                                                                            OGenericObjStatement.Fld94 = GeoDataInd.Unit_Name;
                                                                        }
                                                                        if (grade)
                                                                        {
                                                                            OGenericObjStatement.Fld93 = PaydataInd.Grade_Name;
                                                                        }
                                                                        if (lvl)
                                                                        {
                                                                            OGenericObjStatement.Fld92 = PaydataInd.Level_Name;
                                                                        }
                                                                        if (jobstat)
                                                                        {
                                                                            OGenericObjStatement.Fld91 = GeoDataInd.JobStatus_Id.ToString();
                                                                        }
                                                                        if (job)
                                                                        {
                                                                            OGenericObjStatement.Fld90 = FuncdataInd.Job_Name;
                                                                        }
                                                                        if (jobpos)
                                                                        {
                                                                            OGenericObjStatement.Fld89 = FuncdataInd.JobPositionDesc;
                                                                        }
                                                                        if (emp)
                                                                        {
                                                                            OGenericObjStatement.Fld88 = a.Employee.ToString();
                                                                        }

                                                                        OGenericPayrollStatement.Add(OGenericObjStatement);
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                        else
                                        {
                                            foreach (var item1 in trsch.TrainingSession)
                                            {
                                                if (item1.TrainingProgramCalendar.StartDate >= pFromDate && item1.TrainingProgramCalendar.EndDate <= pToDate)
                                                {
                                                    string prg = item1.TrainingProgramCalendar.ProgramList.SubjectDetails.ToString();

                                                    foreach (var item2 in item.TrainigDetailSessionInfo)
                                                    {
                                                        if (SpecialGroupslist.Count() > 0)
                                                        {
                                                            foreach (var specialgrp in SpecialGroupslist)
                                                            {
                                                                // string prg = item1.TrainingCalendar.ProgramList.SubjectDetails.ToString();
                                                                if (a.Employee != null && item2.IsPresent == true && specialgrp == "Present")
                                                                {
                                                                    GenericField100 OGenericObjStatement = new GenericField100
                                                                    {
                                                                        Fld1 = a.Employee.EmpCode == null ? "" : a.Employee.EmpCode.ToString(),
                                                                        Fld2 = a.Employee.EmpName == null ? "" : a.Employee.EmpName.FullNameLFM.ToString(),
                                                                        Fld3 = item.TrainingSchedule == null ? "" : item.TrainingSchedule.TrainingBatchName.ToString(),
                                                                        Fld4 = prg == null ? "" : prg.ToString(),
                                                                        Fld5 = item1.SessionDate == null ? "" : item1.SessionDate.Value.ToShortDateString(),
                                                                        Fld6 = item1.SessionType == null ? "" : item1.SessionType.LookupVal.ToString(),
                                                                        Fld7 = item1.StartTime == null ? "" : item1.StartTime.ToString(),
                                                                        Fld8 = item1.EndTime == null ? "" : item1.EndTime.ToString(),
                                                                        Fld9 = item2.IsPresent == null ? "" : item2.IsPresent.ToString(),

                                                                    };
                                                                    if (comp)
                                                                    {
                                                                        OGenericObjStatement.Fld99 = GeoDataInd.Company_Name;
                                                                    }
                                                                    if (div)
                                                                    {
                                                                        OGenericObjStatement.Fld98 = GeoDataInd.Division_Name;
                                                                    }
                                                                    if (loca)
                                                                    {
                                                                        OGenericObjStatement.Fld97 = GeoDataInd.LocDesc;
                                                                    }
                                                                    if (dept)
                                                                    {
                                                                        OGenericObjStatement.Fld96 = GeoDataInd.DeptDesc;
                                                                    }
                                                                    if (grp)
                                                                    {
                                                                        OGenericObjStatement.Fld95 = GeoDataInd.Group_Name;
                                                                    }
                                                                    if (unit)
                                                                    {
                                                                        OGenericObjStatement.Fld94 = GeoDataInd.Unit_Name;
                                                                    }
                                                                    if (grade)
                                                                    {
                                                                        OGenericObjStatement.Fld93 = PaydataInd.Grade_Name;
                                                                    }
                                                                    if (lvl)
                                                                    {
                                                                        OGenericObjStatement.Fld92 = PaydataInd.Level_Name;
                                                                    }
                                                                    if (jobstat)
                                                                    {
                                                                        OGenericObjStatement.Fld91 = GeoDataInd.JobStatus_Id.ToString();
                                                                    }
                                                                    if (job)
                                                                    {
                                                                        OGenericObjStatement.Fld90 = FuncdataInd.Job_Name;
                                                                    }
                                                                    if (jobpos)
                                                                    {
                                                                        OGenericObjStatement.Fld89 = FuncdataInd.JobPositionDesc;
                                                                    }
                                                                    if (emp)
                                                                    {
                                                                        OGenericObjStatement.Fld88 = a.Employee.ToString();
                                                                    }
                                                                    if (Present)
                                                                    {
                                                                        OGenericObjStatement.Fld87 = "Present";
                                                                    }
                                                                    if (Absent)
                                                                    {
                                                                        OGenericObjStatement.Fld86 = "";
                                                                    }
                                                                    if (Cancel)
                                                                    {
                                                                        OGenericObjStatement.Fld85 = "";
                                                                    }
                                                                    OGenericPayrollStatement.Add(OGenericObjStatement);
                                                                }
                                                                else if (a.Employee != null && item2.IsPresent == false && specialgrp == "Absent" && item2.CancelReason != null && item2.CancelReason.ToUpper() == "ABSENT")
                                                                {
                                                                    GenericField100 OGenericObjStatement = new GenericField100
                                                                    {
                                                                        Fld1 = a.Employee.EmpCode == null ? "" : a.Employee.EmpCode.ToString(),
                                                                        Fld2 = a.Employee.EmpName == null ? "" : a.Employee.EmpName.FullNameLFM.ToString(),
                                                                        Fld3 = item.TrainingSchedule == null ? "" : item.TrainingSchedule.TrainingBatchName.ToString(),
                                                                        Fld4 = prg == null ? "" : prg.ToString(),
                                                                        Fld5 = item1.SessionDate == null ? "" : item1.SessionDate.Value.ToShortDateString(),
                                                                        Fld6 = item1.SessionType == null ? "" : item1.SessionType.LookupVal.ToString(),
                                                                        Fld7 = item1.StartTime == null ? "" : item1.StartTime.ToString(),
                                                                        Fld8 = item1.EndTime == null ? "" : item1.EndTime.ToString(),
                                                                        Fld9 = item2.IsPresent == null ? "" : item2.IsPresent.ToString(),

                                                                    };
                                                                    if (comp)
                                                                    {
                                                                        OGenericObjStatement.Fld99 = GeoDataInd.Company_Name;
                                                                    }
                                                                    if (div)
                                                                    {
                                                                        OGenericObjStatement.Fld98 = GeoDataInd.Division_Name;
                                                                    }
                                                                    if (loca)
                                                                    {
                                                                        OGenericObjStatement.Fld97 = GeoDataInd.LocDesc;
                                                                    }
                                                                    if (dept)
                                                                    {
                                                                        OGenericObjStatement.Fld96 = GeoDataInd.DeptDesc;
                                                                    }
                                                                    if (grp)
                                                                    {
                                                                        OGenericObjStatement.Fld95 = GeoDataInd.Group_Name;
                                                                    }
                                                                    if (unit)
                                                                    {
                                                                        OGenericObjStatement.Fld94 = GeoDataInd.Unit_Name;
                                                                    }
                                                                    if (grade)
                                                                    {
                                                                        OGenericObjStatement.Fld93 = PaydataInd.Grade_Name;
                                                                    }
                                                                    if (lvl)
                                                                    {
                                                                        OGenericObjStatement.Fld92 = PaydataInd.Level_Name;
                                                                    }
                                                                    if (jobstat)
                                                                    {
                                                                        OGenericObjStatement.Fld91 = GeoDataInd.JobStatus_Id.ToString();
                                                                    }
                                                                    if (job)
                                                                    {
                                                                        OGenericObjStatement.Fld90 = FuncdataInd.Job_Name;
                                                                    }
                                                                    if (jobpos)
                                                                    {
                                                                        OGenericObjStatement.Fld89 = FuncdataInd.JobPositionDesc;
                                                                    }
                                                                    if (emp)
                                                                    {
                                                                        OGenericObjStatement.Fld88 = a.Employee.ToString();
                                                                    }
                                                                    if (Present)
                                                                    {
                                                                        OGenericObjStatement.Fld87 = "";
                                                                    }
                                                                    if (Absent)
                                                                    {
                                                                        OGenericObjStatement.Fld86 = "Absent";
                                                                    }
                                                                    if (Cancel)
                                                                    {
                                                                        OGenericObjStatement.Fld85 = "";
                                                                    }
                                                                    OGenericPayrollStatement.Add(OGenericObjStatement);
                                                                }
                                                                else if (a.Employee != null && item2.IsPresent == false && item2.IsCancelled == true && specialgrp == "Cancel")
                                                                {
                                                                    GenericField100 OGenericObjStatement = new GenericField100
                                                                    {
                                                                        Fld1 = a.Employee.EmpCode == null ? "" : a.Employee.EmpCode.ToString(),
                                                                        Fld2 = a.Employee.EmpName == null ? "" : a.Employee.EmpName.FullNameLFM.ToString(),
                                                                        Fld3 = item.TrainingSchedule == null ? "" : item.TrainingSchedule.TrainingBatchName.ToString(),
                                                                        Fld4 = prg == null ? "" : prg.ToString(),
                                                                        Fld5 = item1.SessionDate == null ? "" : item1.SessionDate.Value.ToShortDateString(),
                                                                        Fld6 = item1.SessionType == null ? "" : item1.SessionType.LookupVal.ToString(),
                                                                        Fld7 = item1.StartTime == null ? "" : item1.StartTime.ToString(),
                                                                        Fld8 = item1.EndTime == null ? "" : item1.EndTime.ToString(),
                                                                        // Fld9 = item2.IsPresent == null ? "" : item2.IsPresent.ToString(),
                                                                        Fld10 = item2.IsCancelled == null ? "" : item2.IsCancelled.ToString(),
                                                                        Fld11 = item2.CancelReason == null ? "" : item2.CancelReason.ToString(),

                                                                    };
                                                                    if (comp)
                                                                    {
                                                                        OGenericObjStatement.Fld99 = GeoDataInd.Company_Name;
                                                                    }
                                                                    if (div)
                                                                    {
                                                                        OGenericObjStatement.Fld98 = GeoDataInd.Division_Name;
                                                                    }
                                                                    if (loca)
                                                                    {
                                                                        OGenericObjStatement.Fld97 = GeoDataInd.LocDesc;
                                                                    }
                                                                    if (dept)
                                                                    {
                                                                        OGenericObjStatement.Fld96 = GeoDataInd.DeptDesc;
                                                                    }
                                                                    if (grp)
                                                                    {
                                                                        OGenericObjStatement.Fld95 = GeoDataInd.Group_Name;
                                                                    }
                                                                    if (unit)
                                                                    {
                                                                        OGenericObjStatement.Fld94 = GeoDataInd.Unit_Name;
                                                                    }
                                                                    if (grade)
                                                                    {
                                                                        OGenericObjStatement.Fld93 = PaydataInd.Grade_Name;
                                                                    }
                                                                    if (lvl)
                                                                    {
                                                                        OGenericObjStatement.Fld92 = PaydataInd.Level_Name;
                                                                    }
                                                                    if (jobstat)
                                                                    {
                                                                        OGenericObjStatement.Fld91 = GeoDataInd.JobStatus_Id.ToString();
                                                                    }
                                                                    if (job)
                                                                    {
                                                                        OGenericObjStatement.Fld90 = FuncdataInd.Job_Name;
                                                                    }
                                                                    if (jobpos)
                                                                    {
                                                                        OGenericObjStatement.Fld89 = FuncdataInd.JobPositionDesc;
                                                                    }
                                                                    if (emp)
                                                                    {
                                                                        OGenericObjStatement.Fld88 = a.Employee.ToString();
                                                                    }
                                                                    if (Present)
                                                                    {
                                                                        OGenericObjStatement.Fld87 = "";
                                                                    }
                                                                    if (Absent)
                                                                    {
                                                                        OGenericObjStatement.Fld86 = "";
                                                                    }
                                                                    if (Cancel)
                                                                    {
                                                                        OGenericObjStatement.Fld85 = "Cancel";
                                                                    }
                                                                    OGenericPayrollStatement.Add(OGenericObjStatement);
                                                                }
                                                            }
                                                        }
                                                        else
                                                        {
                                                            if (a.Employee != null)
                                                            {
                                                                GenericField100 OGenericObjStatement = new GenericField100
                                                                {
                                                                    Fld1 = a.Employee.EmpCode == null ? "" : a.Employee.EmpCode.ToString(),
                                                                    Fld2 = a.Employee.EmpName == null ? "" : a.Employee.EmpName.FullNameLFM.ToString(),
                                                                    Fld3 = item.TrainingSchedule == null ? "" : item.TrainingSchedule.TrainingBatchName.ToString(),
                                                                    Fld4 = prg == null ? "" : prg.ToString(),
                                                                    Fld5 = item1.SessionDate == null ? "" : item1.SessionDate.Value.ToShortDateString(),
                                                                    Fld6 = item1.SessionType == null ? "" : item1.SessionType.LookupVal.ToString(),
                                                                    Fld7 = item1.StartTime == null ? "" : item1.StartTime.ToString(),
                                                                    Fld8 = item1.EndTime == null ? "" : item1.EndTime.ToString(),
                                                                    // Fld9 = item2.IsPresent == null ? "" : item2.IsPresent.ToString(),
                                                                    Fld10 = item2.IsCancelled == null ? "" : item2.IsCancelled.ToString(),
                                                                    Fld11 = item2.CancelReason == null ? "" : item2.CancelReason.ToString(),

                                                                };
                                                                if (comp)
                                                                {
                                                                    OGenericObjStatement.Fld99 = GeoDataInd.Company_Name;
                                                                }
                                                                if (div)
                                                                {
                                                                    OGenericObjStatement.Fld98 = GeoDataInd.Division_Name;
                                                                }
                                                                if (loca)
                                                                {
                                                                    OGenericObjStatement.Fld97 = GeoDataInd.LocDesc;
                                                                }
                                                                if (dept)
                                                                {
                                                                    OGenericObjStatement.Fld96 = GeoDataInd.DeptDesc;
                                                                }
                                                                if (grp)
                                                                {
                                                                    OGenericObjStatement.Fld95 = GeoDataInd.Group_Name;
                                                                }
                                                                if (unit)
                                                                {
                                                                    OGenericObjStatement.Fld94 = GeoDataInd.Unit_Name;
                                                                }
                                                                if (grade)
                                                                {
                                                                    OGenericObjStatement.Fld93 = PaydataInd.Grade_Name;
                                                                }
                                                                if (lvl)
                                                                {
                                                                    OGenericObjStatement.Fld92 = PaydataInd.Level_Name;
                                                                }
                                                                if (jobstat)
                                                                {
                                                                    OGenericObjStatement.Fld91 = GeoDataInd.JobStatus_Id.ToString();
                                                                }
                                                                if (job)
                                                                {
                                                                    OGenericObjStatement.Fld90 = FuncdataInd.Job_Name;
                                                                }
                                                                if (jobpos)
                                                                {
                                                                    OGenericObjStatement.Fld89 = FuncdataInd.JobPositionDesc;
                                                                }
                                                                if (emp)
                                                                {
                                                                    OGenericObjStatement.Fld88 = a.Employee.ToString();
                                                                }

                                                                OGenericPayrollStatement.Add(OGenericObjStatement);
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                            return OGenericPayrollStatement;
                        }
                        break;

                    case "SESSIONWISEPROGRAMATTENDANCE":
                        var OTrnEvna12session = new List<EmployeeTraining>();
                        //var specialgrp = SpecialGroupslist.Count() > 0 ? SpecialGroupslist.FirstOrDefault() : "";
                       
                        foreach (var item in EmpPayrollIdList)
                        {

                            var OTrnEvna122 = db.EmployeeTraining
                                .Include(e => e.TrainingDetails)
                                .Include(e => e.Employee)
                                .Include(e => e.Employee.GeoStruct)
                                .Include(e => e.Employee.FuncStruct)
                                .Include(e => e.Employee.PayStruct)
                                .Include(e => e.Employee.EmpName)
                                 .Include(e => e.TrainingDetails.Select(a => a.TrainigDetailSessionInfo))
                                 .Include(e => e.TrainingDetails.Select(r => r.TrainingCalendar))
                               .Include(e => e.TrainingDetails.Select(t => t.TrainingSchedule))
                               .Include(e => e.TrainingDetails.Select(t => t.TrainingSchedule.TrainingSession))
                               .Include(e => e.TrainingDetails.Select(t => t.TrainingSchedule.TrainingSession.Select(x => x.SessionType)))
                               .Include(e => e.TrainingDetails.Select(t => t.TrainingSchedule.TrainingSession.Select(a => a.TrainingProgramCalendar)))
                               .Include(e => e.TrainingDetails.Select(t => t.TrainingSchedule.TrainingSession.Select(z => z.TrainingProgramCalendar.ProgramList)))

                               // .Include(e => e.TrainingDetails.Select(a => a.TrainingSchedule))
                                //.Include(e => e.TrainingDetails.Select(a => a.TrainingSchedule.Select(h => h.TrainingCalendar)))
                                //.Include(e => e.TrainingDetails.Select(a => a.TrainingSchedule.Select(h => h.TrainingCalendar.ProgramList)))
                                //.Include(e => e.Employee.GeoStruct)
                                //.Include(e => e.Employee.GeoStruct.Location)
                                //.Include(e => e.Employee.GeoStruct.Location.LocationObj)
                                //.Include(e => e.Employee.FuncStruct)
                                //.Include(e => e.Employee.FuncStruct.Job)
                              .Where(e => e.Employee.Id == item)
                               .FirstOrDefault();

                            if (OTrnEvna122 != null)
                            {
                                OTrnEvna12session.Add(OTrnEvna122);
                            }

                        }

                        if (OTrnEvna12session == null || OTrnEvna12session.Count() == 0)
                        {
                            return null;
                        }
                        else
                        {
                            var SpGroup = SpecialGroupslist.ToList();
                            var Present = false;
                            var Absent = false;
                            var Cancel = false;

                            foreach (var item1 in SpGroup)
                            {
                                if (item1 == "Present")
                                {

                                    Present = true;
                                }

                            }
                            foreach (var item1 in SpGroup)
                            {
                                if (item1 == "Absent")
                                {

                                    Absent = true;
                                }

                            }
                            foreach (var item1 in SpGroup)
                            {
                                if (item1 == "Cancel")
                                {

                                    Cancel = true;
                                }

                            }

                            var emp = false;
                            var dept = false;
                            var loca = false;
                            var comp = false;
                            var grp = false;
                            var unit = false;
                            var div = false;
                            var regn = false;
                            var grade = false;
                            var lvl = false;
                            var jobstat = false;
                            var job = false;
                            var jobpos = false;
                            var vc = db.LookupValue.Where(a => forithead.Contains(a.Id.ToString())).ToList();

                            foreach (var item in vc)
                            {
                                //if (item.LookupVal.ToUpper() == "MONTH")
                                //{
                                //    month = true;
                                //}
                                if (item.LookupVal.ToUpper() == "LOCATION")
                                {

                                    loca = true;
                                }
                                if (item.LookupVal.ToUpper() == "EMPLOYEE")
                                {
                                    emp = true;
                                }
                                if (item.LookupVal.ToUpper() == "DEPARTMENT")
                                {
                                    dept = true;
                                }
                                if (item.LookupVal.ToUpper() == "COMPANY")
                                {
                                    comp = true;
                                }
                                if (item.LookupVal.ToUpper() == "GROUP")
                                {
                                    grp = true;
                                }
                                if (item.LookupVal.ToUpper() == "UNIT")
                                {
                                    unit = true;
                                }
                                if (item.LookupVal.ToUpper() == "DIVISION")
                                {
                                    div = true;
                                }
                                if (item.LookupVal.ToUpper() == "REGION")
                                {
                                    regn = true;
                                }
                                if (item.LookupVal.ToUpper() == "GRADE")
                                {
                                    grade = true;
                                }
                                if (item.LookupVal.ToUpper() == "LEVEL")
                                {
                                    lvl = true;
                                }
                                if (item.LookupVal.ToUpper() == "JOBSTATUS")
                                {
                                    jobstat = true;
                                }

                                if (item.LookupVal.ToUpper() == "JOB")
                                {
                                    job = true;
                                }
                                if (item.LookupVal.ToUpper() == "JOBPOSITION")
                                {
                                    jobpos = true;
                                }
                            }

                            List<Utility.ReportClass> GeoData = new List<Utility.ReportClass>();
                            List<Utility.ReportClass> Paydata = new List<Utility.ReportClass>();
                            List<Utility.ReportClass> Funcdata = new List<Utility.ReportClass>();

                            Utility.ReportClass GeoDataInd = new Utility.ReportClass();
                            Utility.ReportClass PaydataInd = new Utility.ReportClass();
                            Utility.ReportClass FuncdataInd = new Utility.ReportClass();

                            GeoData = GetViewData(0);
                            Paydata = GetViewData(1);
                            Funcdata = GetViewData(2);
                            // Utility.GetOrganizationDataClass GeoDataInd = new Utility.GetOrganizationDataClass();

                            foreach (var a in OTrnEvna12session)
                            {
                                int geoid = a.Employee.GeoStruct.Id;

                                int payid = a.Employee.PayStruct.Id;

                                int funid = a.Employee.FuncStruct.Id;

                                GeoDataInd = GetViewDataIndiv(geoid, payid, funid, GeoData, 0);
                                PaydataInd = GetViewDataIndiv(geoid, payid, funid, Paydata, 1);
                                FuncdataInd = GetViewDataIndiv(geoid, payid, funid, Funcdata, 2);

                                foreach (var item in a.TrainingDetails)
                                {
                                    string prg ="";
                                   
                                    var trsch = item.TrainingSchedule;
                                    if (trsch != null)
                                    {
                                        if (salheadlist.Count > 0)
                                        {

                                            foreach (var batch in salheadlist)
                                            {
                                                if (batch.ToUpper() == trsch.TrainingBatchName.ToUpper())
                                                {

                                                    foreach (var item1 in trsch.TrainingSession)
                                                    {
                                                        prg = item1.TrainingProgramCalendar.ProgramList.SubjectDetails.ToString();
                                                        if (salheadlistLevel1.Count() > 0)
                                                        {
                                                            foreach (var Level1 in salheadlistLevel1)
                                                            {
                                                                if (Level1.ToUpper() == item1.SessionType.LookupVal.ToUpper())
                                                                {
                                                                    if (salheadlistLevel2.Count() > 0)
                                                                    {
                                                                        foreach (var Level2 in salheadlistLevel2)
                                                                        {
                                                                            if (Level2.ToUpper() == item1.TrainingProgramCalendar.ProgramList.SubjectDetails.ToUpper())
                                                                            {

                                                                                if (item1.TrainingProgramCalendar.StartDate >= pFromDate && item1.TrainingProgramCalendar.EndDate <= pToDate)
                                                                                {
                                                                                    //string prg = item1.TrainingProgramCalendar.ProgramList.SubjectDetails.ToString();
                                                                                     prg = item1.TrainingProgramCalendar.ProgramList.SubjectDetails.ToString();

                                                                                    foreach (var item2 in item.TrainigDetailSessionInfo)
                                                                                    {
                                                                                        item2.IsCancelled = item2.IsCancelled; 
                                                                                        if (SpecialGroupslist.Count() > 0)
                                                                                        {
                                                                                            foreach (var specialgrp in SpecialGroupslist)
                                                                                            {


                                                                                                // string prg = item1.TrainingCalendar.ProgramList.SubjectDetails.ToString();
                                                                                                if (a.Employee != null && item2.IsPresent == true && specialgrp == "Present")
                                                                                                {
                                                                                                    GenericField100 OGenericObjStatement = new GenericField100
                                                                                                    {
                                                                                                        Fld1 = a.Employee.EmpCode == null ? "" : a.Employee.EmpCode.ToString(),
                                                                                                        Fld2 = a.Employee.EmpName == null ? "" : a.Employee.EmpName.FullNameLFM.ToString(),
                                                                                                        Fld3 = item.TrainingSchedule == null ? "" : item.TrainingSchedule.TrainingBatchName.ToString(),
                                                                                                        Fld4 = prg == null ? "" : prg.ToString(),
                                                                                                        Fld5 = item1.SessionDate == null ? "" : item1.SessionDate.Value.ToShortDateString(),
                                                                                                        Fld6 = item1.SessionType == null ? "" : item1.SessionType.LookupVal.ToString(),
                                                                                                        Fld7 = item1.StartTime == null ? "" : item1.StartTime.ToString(),
                                                                                                        Fld8 = item1.EndTime == null ? "" : item1.EndTime.ToString(),
                                                                                                        Fld9 = item2.IsPresent == null ? "" : item2.IsPresent.ToString(),

                                                                                                    };
                                                                                                    if (comp)
                                                                                                    {
                                                                                                        OGenericObjStatement.Fld99 = GeoDataInd.Company_Name;
                                                                                                    }
                                                                                                    if (div)
                                                                                                    {
                                                                                                        OGenericObjStatement.Fld98 = GeoDataInd.Division_Name;
                                                                                                    }
                                                                                                    if (loca)
                                                                                                    {
                                                                                                        OGenericObjStatement.Fld97 = GeoDataInd.LocDesc;
                                                                                                    }
                                                                                                    if (dept)
                                                                                                    {
                                                                                                        OGenericObjStatement.Fld96 = GeoDataInd.DeptDesc;
                                                                                                    }
                                                                                                    if (grp)
                                                                                                    {
                                                                                                        OGenericObjStatement.Fld95 = GeoDataInd.Group_Name;
                                                                                                    }
                                                                                                    if (unit)
                                                                                                    {
                                                                                                        OGenericObjStatement.Fld94 = GeoDataInd.Unit_Name;
                                                                                                    }
                                                                                                    if (grade)
                                                                                                    {
                                                                                                        OGenericObjStatement.Fld93 = PaydataInd.Grade_Name;
                                                                                                    }
                                                                                                    if (lvl)
                                                                                                    {
                                                                                                        OGenericObjStatement.Fld92 = PaydataInd.Level_Name;
                                                                                                    }
                                                                                                    if (jobstat)
                                                                                                    {
                                                                                                        OGenericObjStatement.Fld91 = GeoDataInd.JobStatus_Id.ToString();
                                                                                                    }
                                                                                                    if (job)
                                                                                                    {
                                                                                                        OGenericObjStatement.Fld90 = FuncdataInd.Job_Name;
                                                                                                    }
                                                                                                    if (jobpos)
                                                                                                    {
                                                                                                        OGenericObjStatement.Fld89 = FuncdataInd.JobPositionDesc;
                                                                                                    }
                                                                                                    if (emp)
                                                                                                    {
                                                                                                        OGenericObjStatement.Fld88 = a.Employee.ToString();
                                                                                                    }
                                                                                                    if (Present)
                                                                                                    {
                                                                                                        OGenericObjStatement.Fld87 = "Present";
                                                                                                    }
                                                                                                    if (Absent)
                                                                                                    {
                                                                                                        OGenericObjStatement.Fld86 = "";
                                                                                                    }
                                                                                                    if (Cancel)
                                                                                                    {
                                                                                                        OGenericObjStatement.Fld85 = "";
                                                                                                    }

                                                                                                    OGenericPayrollStatement.Add(OGenericObjStatement);
                                                                                                }
                                                                                                else if (a.Employee != null && item2.IsPresent == false && specialgrp == "Absent" && item2.CancelReason != null && item2.CancelReason.ToUpper() == "ABSENT")
                                                                                                {
                                                                                                    GenericField100 OGenericObjStatement = new GenericField100
                                                                                                    {
                                                                                                        Fld1 = a.Employee.EmpCode == null ? "" : a.Employee.EmpCode.ToString(),
                                                                                                        Fld2 = a.Employee.EmpName == null ? "" : a.Employee.EmpName.FullNameLFM.ToString(),
                                                                                                        Fld3 = item.TrainingSchedule == null ? "" : item.TrainingSchedule.TrainingBatchName.ToString(),
                                                                                                        Fld4 = prg == null ? "" : prg.ToString(),
                                                                                                        Fld5 = item1.SessionDate == null ? "" : item1.SessionDate.Value.ToShortDateString(),
                                                                                                        Fld6 = item1.SessionType == null ? "" : item1.SessionType.LookupVal.ToString(),
                                                                                                        Fld7 = item1.StartTime == null ? "" : item1.StartTime.ToString(),
                                                                                                        Fld8 = item1.EndTime == null ? "" : item1.EndTime.ToString(),
                                                                                                        Fld9 = item2.IsPresent == null ? "" : item2.IsPresent.ToString(),

                                                                                                    };
                                                                                                    if (comp)
                                                                                                    {
                                                                                                        OGenericObjStatement.Fld99 = GeoDataInd.Company_Name;
                                                                                                    }
                                                                                                    if (div)
                                                                                                    {
                                                                                                        OGenericObjStatement.Fld98 = GeoDataInd.Division_Name;
                                                                                                    }
                                                                                                    if (loca)
                                                                                                    {
                                                                                                        OGenericObjStatement.Fld97 = GeoDataInd.LocDesc;
                                                                                                    }
                                                                                                    if (dept)
                                                                                                    {
                                                                                                        OGenericObjStatement.Fld96 = GeoDataInd.DeptDesc;
                                                                                                    }
                                                                                                    if (grp)
                                                                                                    {
                                                                                                        OGenericObjStatement.Fld95 = GeoDataInd.Group_Name;
                                                                                                    }
                                                                                                    if (unit)
                                                                                                    {
                                                                                                        OGenericObjStatement.Fld94 = GeoDataInd.Unit_Name;
                                                                                                    }
                                                                                                    if (grade)
                                                                                                    {
                                                                                                        OGenericObjStatement.Fld93 = PaydataInd.Grade_Name;
                                                                                                    }
                                                                                                    if (lvl)
                                                                                                    {
                                                                                                        OGenericObjStatement.Fld92 = PaydataInd.Level_Name;
                                                                                                    }
                                                                                                    if (jobstat)
                                                                                                    {
                                                                                                        OGenericObjStatement.Fld91 = GeoDataInd.JobStatus_Id.ToString();
                                                                                                    }
                                                                                                    if (job)
                                                                                                    {
                                                                                                        OGenericObjStatement.Fld90 = FuncdataInd.Job_Name;
                                                                                                    }
                                                                                                    if (jobpos)
                                                                                                    {
                                                                                                        OGenericObjStatement.Fld89 = FuncdataInd.JobPositionDesc;
                                                                                                    }
                                                                                                    if (emp)
                                                                                                    {
                                                                                                        OGenericObjStatement.Fld88 = a.Employee.ToString();
                                                                                                    }
                                                                                                    if (Present)
                                                                                                    {
                                                                                                        OGenericObjStatement.Fld87 = "";
                                                                                                    }
                                                                                                    if (Absent)
                                                                                                    {
                                                                                                        OGenericObjStatement.Fld86 = "Absent";
                                                                                                    }
                                                                                                    if (Cancel)
                                                                                                    {
                                                                                                        OGenericObjStatement.Fld85 = "";
                                                                                                    }
                                                                                                    OGenericPayrollStatement.Add(OGenericObjStatement);
                                                                                                }
                                                                                                else if (a.Employee != null && item2.IsPresent == false && item2.IsCancelled == true && specialgrp == "Cancel")
                                                                                                {
                                                                                                    GenericField100 OGenericObjStatement = new GenericField100
                                                                                                    {
                                                                                                        Fld1 = a.Employee.EmpCode == null ? "" : a.Employee.EmpCode.ToString(),
                                                                                                        Fld2 = a.Employee.EmpName == null ? "" : a.Employee.EmpName.FullNameLFM.ToString(),
                                                                                                        Fld3 = item.TrainingSchedule == null ? "" : item.TrainingSchedule.TrainingBatchName.ToString(),
                                                                                                        Fld4 = prg == null ? "" : prg.ToString(),
                                                                                                        Fld5 = item1.SessionDate == null ? "" : item1.SessionDate.Value.ToShortDateString(),
                                                                                                        Fld6 = item1.SessionType == null ? "" : item1.SessionType.LookupVal.ToString(),
                                                                                                        Fld7 = item1.StartTime == null ? "" : item1.StartTime.ToString(),
                                                                                                        Fld8 = item1.EndTime == null ? "" : item1.EndTime.ToString(),
                                                                                                        // Fld9 = item2.IsPresent == null ? "" : item2.IsPresent.ToString(),
                                                                                                        Fld10 = item2.IsCancelled == null ? "" : item2.IsCancelled.ToString(),
                                                                                                        Fld11 = item2.CancelReason == null ? "" : item2.CancelReason.ToString(),

                                                                                                    };
                                                                                                    if (comp)
                                                                                                    {
                                                                                                        OGenericObjStatement.Fld99 = GeoDataInd.Company_Name;
                                                                                                    }
                                                                                                    if (div)
                                                                                                    {
                                                                                                        OGenericObjStatement.Fld98 = GeoDataInd.Division_Name;
                                                                                                    }
                                                                                                    if (loca)
                                                                                                    {
                                                                                                        OGenericObjStatement.Fld97 = GeoDataInd.LocDesc;
                                                                                                    }
                                                                                                    if (dept)
                                                                                                    {
                                                                                                        OGenericObjStatement.Fld96 = GeoDataInd.DeptDesc;
                                                                                                    }
                                                                                                    if (grp)
                                                                                                    {
                                                                                                        OGenericObjStatement.Fld95 = GeoDataInd.Group_Name;
                                                                                                    }
                                                                                                    if (unit)
                                                                                                    {
                                                                                                        OGenericObjStatement.Fld94 = GeoDataInd.Unit_Name;
                                                                                                    }
                                                                                                    if (grade)
                                                                                                    {
                                                                                                        OGenericObjStatement.Fld93 = PaydataInd.Grade_Name;
                                                                                                    }
                                                                                                    if (lvl)
                                                                                                    {
                                                                                                        OGenericObjStatement.Fld92 = PaydataInd.Level_Name;
                                                                                                    }
                                                                                                    if (jobstat)
                                                                                                    {
                                                                                                        OGenericObjStatement.Fld91 = GeoDataInd.JobStatus_Id.ToString();
                                                                                                    }
                                                                                                    if (job)
                                                                                                    {
                                                                                                        OGenericObjStatement.Fld90 = FuncdataInd.Job_Name;
                                                                                                    }
                                                                                                    if (jobpos)
                                                                                                    {
                                                                                                        OGenericObjStatement.Fld89 = FuncdataInd.JobPositionDesc;
                                                                                                    }
                                                                                                    if (emp)
                                                                                                    {
                                                                                                        OGenericObjStatement.Fld88 = a.Employee.ToString();
                                                                                                    }
                                                                                                    if (Present)
                                                                                                    {
                                                                                                        OGenericObjStatement.Fld87 = "";
                                                                                                    }
                                                                                                    if (Absent)
                                                                                                    {
                                                                                                        OGenericObjStatement.Fld86 = "";
                                                                                                    }
                                                                                                    if (Cancel)
                                                                                                    {
                                                                                                        OGenericObjStatement.Fld85 = "Cancel";
                                                                                                    }
                                                                                                    OGenericPayrollStatement.Add(OGenericObjStatement);
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                            if (a.Employee != null)
                                                                                            {
                                                                                                GenericField100 OGenericObjStatement = new GenericField100
                                                                                                {
                                                                                                    Fld1 = a.Employee.EmpCode == null ? "" : a.Employee.EmpCode.ToString(),
                                                                                                    Fld2 = a.Employee.EmpName == null ? "" : a.Employee.EmpName.FullNameLFM.ToString(),
                                                                                                    Fld3 = item.TrainingSchedule == null ? "" : item.TrainingSchedule.TrainingBatchName.ToString(),
                                                                                                    Fld4 = prg == null ? "" : prg.ToString(),
                                                                                                    Fld5 = item1.SessionDate == null ? "" : item1.SessionDate.Value.ToShortDateString(),
                                                                                                    Fld6 = item1.SessionType == null ? "" : item1.SessionType.LookupVal.ToString(),
                                                                                                    Fld7 = item1.StartTime == null ? "" : item1.StartTime.ToString(),
                                                                                                    Fld8 = item1.EndTime == null ? "" : item1.EndTime.ToString(),
                                                                                                    // Fld9 = item2.IsPresent == null ? "" : item2.IsPresent.ToString(),
                                                                                                    Fld10 = item2.IsCancelled == null ? "" : item2.IsCancelled.ToString(),
                                                                                                    Fld11 = item2.CancelReason == null ? "" : item2.CancelReason.ToString(),

                                                                                                };
                                                                                                if (comp)
                                                                                                {
                                                                                                    OGenericObjStatement.Fld99 = GeoDataInd.Company_Name;
                                                                                                }
                                                                                                if (div)
                                                                                                {
                                                                                                    OGenericObjStatement.Fld98 = GeoDataInd.Division_Name;
                                                                                                }
                                                                                                if (loca)
                                                                                                {
                                                                                                    OGenericObjStatement.Fld97 = GeoDataInd.LocDesc;
                                                                                                }
                                                                                                if (dept)
                                                                                                {
                                                                                                    OGenericObjStatement.Fld96 = GeoDataInd.DeptDesc;
                                                                                                }
                                                                                                if (grp)
                                                                                                {
                                                                                                    OGenericObjStatement.Fld95 = GeoDataInd.Group_Name;
                                                                                                }
                                                                                                if (unit)
                                                                                                {
                                                                                                    OGenericObjStatement.Fld94 = GeoDataInd.Unit_Name;
                                                                                                }
                                                                                                if (grade)
                                                                                                {
                                                                                                    OGenericObjStatement.Fld93 = PaydataInd.Grade_Name;
                                                                                                }
                                                                                                if (lvl)
                                                                                                {
                                                                                                    OGenericObjStatement.Fld92 = PaydataInd.Level_Name;
                                                                                                }
                                                                                                if (jobstat)
                                                                                                {
                                                                                                    OGenericObjStatement.Fld91 = GeoDataInd.JobStatus_Id.ToString();
                                                                                                }
                                                                                                if (job)
                                                                                                {
                                                                                                    OGenericObjStatement.Fld90 = FuncdataInd.Job_Name;
                                                                                                }
                                                                                                if (jobpos)
                                                                                                {
                                                                                                    OGenericObjStatement.Fld89 = FuncdataInd.JobPositionDesc;
                                                                                                }
                                                                                                if (emp)
                                                                                                {
                                                                                                    OGenericObjStatement.Fld88 = a.Employee.ToString();
                                                                                                }

                                                                                                OGenericPayrollStatement.Add(OGenericObjStatement);
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                    else
                                                                    {

                                                                        prg = item1.TrainingProgramCalendar.ProgramList.SubjectDetails.ToString();

                                                                        if (a.Employee != null)
                                                                        {

                                                                            foreach (var item2 in item.TrainigDetailSessionInfo)
                                                                            {
                                                                                GenericField100 OGenericObjStatement = new GenericField100
                                                                                {
                                                                                    Fld1 = a.Employee.EmpCode == null ? "" : a.Employee.EmpCode.ToString(),
                                                                                    Fld2 = a.Employee.EmpName == null ? "" : a.Employee.EmpName.FullNameLFM.ToString(),
                                                                                    Fld3 = item.TrainingSchedule == null ? "" : item.TrainingSchedule.TrainingBatchName.ToString(),
                                                                                    Fld4 = prg == null ? "" : prg.ToString(),
                                                                                    Fld5 = item1.SessionDate == null ? "" : item1.SessionDate.Value.ToShortDateString(),
                                                                                    Fld6 = item1.SessionType == null ? "" : item1.SessionType.LookupVal.ToString(),
                                                                                    Fld7 = item1.StartTime == null ? "" : item1.StartTime.ToString(),
                                                                                    Fld8 = item1.EndTime == null ? "" : item1.EndTime.ToString(),
                                                                                    // Fld9 = item2.IsPresent == null ? "" : item2.IsPresent.ToString(),
                                                                                    Fld10 = item2.IsCancelled == null ? "" : item2.IsCancelled.ToString(),
                                                                                    Fld11 = item2.CancelReason == null ? "" : item2.CancelReason.ToString(),

                                                                                };
                                                                                if (comp)
                                                                                {
                                                                                    OGenericObjStatement.Fld99 = GeoDataInd.Company_Name;
                                                                                }
                                                                                if (div)
                                                                                {
                                                                                    OGenericObjStatement.Fld98 = GeoDataInd.Division_Name;
                                                                                }
                                                                                if (loca)
                                                                                {
                                                                                    OGenericObjStatement.Fld97 = GeoDataInd.LocDesc;
                                                                                }
                                                                                if (dept)
                                                                                {
                                                                                    OGenericObjStatement.Fld96 = GeoDataInd.DeptDesc;
                                                                                }
                                                                                if (grp)
                                                                                {
                                                                                    OGenericObjStatement.Fld95 = GeoDataInd.Group_Name;
                                                                                }
                                                                                if (unit)
                                                                                {
                                                                                    OGenericObjStatement.Fld94 = GeoDataInd.Unit_Name;
                                                                                }
                                                                                if (grade)
                                                                                {
                                                                                    OGenericObjStatement.Fld93 = PaydataInd.Grade_Name;
                                                                                }
                                                                                if (lvl)
                                                                                {
                                                                                    OGenericObjStatement.Fld92 = PaydataInd.Level_Name;
                                                                                }
                                                                                if (jobstat)
                                                                                {
                                                                                    OGenericObjStatement.Fld91 = GeoDataInd.JobStatus_Id.ToString();
                                                                                }
                                                                                if (job)
                                                                                {
                                                                                    OGenericObjStatement.Fld90 = FuncdataInd.Job_Name;
                                                                                }
                                                                                if (jobpos)
                                                                                {
                                                                                    OGenericObjStatement.Fld89 = FuncdataInd.JobPositionDesc;
                                                                                }
                                                                                if (emp)
                                                                                {
                                                                                    OGenericObjStatement.Fld88 = a.Employee.ToString();
                                                                                }

                                                                                OGenericPayrollStatement.Add(OGenericObjStatement);
                                                                            }
                                                                        }
                                                                    }

                                                                }
                                                            }
                                                        }
                                                        else
                                                        {
                                                            if (salheadlistLevel2.Count() > 0)
                                                            {///
                                                                foreach (var Level2 in salheadlistLevel2)
                                                                {
                                                                    if (Level2.ToUpper() == item1.TrainingProgramCalendar.ProgramList.SubjectDetails.ToUpper())
                                                                    {

                                                                        if (item1.TrainingProgramCalendar.StartDate >= pFromDate && item1.TrainingProgramCalendar.EndDate <= pToDate)
                                                                        {
                                                                             //string prg = item1.TrainingProgramCalendar.ProgramList.SubjectDetails.ToString();
                                                                            prg = item1.TrainingProgramCalendar.ProgramList.SubjectDetails.ToString();

                                                                            foreach (var item2 in item.TrainigDetailSessionInfo)
                                                                            {
                                                                                if (SpecialGroupslist.Count() > 0)
                                                                                {
                                                                                    foreach (var specialgrp in SpecialGroupslist)
                                                                                    {


                                                                                        // string prg = item1.TrainingCalendar.ProgramList.SubjectDetails.ToString();
                                                                                        if (a.Employee != null && item2.IsPresent == true && specialgrp == "Present")
                                                                                        {
                                                                                            GenericField100 OGenericObjStatement = new GenericField100
                                                                                            {
                                                                                                Fld1 = a.Employee.EmpCode == null ? "" : a.Employee.EmpCode.ToString(),
                                                                                                Fld2 = a.Employee.EmpName == null ? "" : a.Employee.EmpName.FullNameLFM.ToString(),
                                                                                                Fld3 = item.TrainingSchedule == null ? "" : item.TrainingSchedule.TrainingBatchName.ToString(),
                                                                                                Fld4 = prg == null ? "" : prg.ToString(),
                                                                                                Fld5 = item1.SessionDate == null ? "" : item1.SessionDate.Value.ToShortDateString(),
                                                                                                Fld6 = item1.SessionType == null ? "" : item1.SessionType.LookupVal.ToString(),
                                                                                                Fld7 = item1.StartTime == null ? "" : item1.StartTime.ToString(),
                                                                                                Fld8 = item1.EndTime == null ? "" : item1.EndTime.ToString(),
                                                                                                Fld9 = item2.IsPresent == null ? "" : item2.IsPresent.ToString(),

                                                                                            };
                                                                                            if (comp)
                                                                                            {
                                                                                                OGenericObjStatement.Fld99 = GeoDataInd.Company_Name;
                                                                                            }
                                                                                            if (div)
                                                                                            {
                                                                                                OGenericObjStatement.Fld98 = GeoDataInd.Division_Name;
                                                                                            }
                                                                                            if (loca)
                                                                                            {
                                                                                                OGenericObjStatement.Fld97 = GeoDataInd.LocDesc;
                                                                                            }
                                                                                            if (dept)
                                                                                            {
                                                                                                OGenericObjStatement.Fld96 = GeoDataInd.DeptDesc;
                                                                                            }
                                                                                            if (grp)
                                                                                            {
                                                                                                OGenericObjStatement.Fld95 = GeoDataInd.Group_Name;
                                                                                            }
                                                                                            if (unit)
                                                                                            {
                                                                                                OGenericObjStatement.Fld94 = GeoDataInd.Unit_Name;
                                                                                            }
                                                                                            if (grade)
                                                                                            {
                                                                                                OGenericObjStatement.Fld93 = PaydataInd.Grade_Name;
                                                                                            }
                                                                                            if (lvl)
                                                                                            {
                                                                                                OGenericObjStatement.Fld92 = PaydataInd.Level_Name;
                                                                                            }
                                                                                            if (jobstat)
                                                                                            {
                                                                                                OGenericObjStatement.Fld91 = GeoDataInd.JobStatus_Id.ToString();
                                                                                            }
                                                                                            if (job)
                                                                                            {
                                                                                                OGenericObjStatement.Fld90 = FuncdataInd.Job_Name;
                                                                                            }
                                                                                            if (jobpos)
                                                                                            {
                                                                                                OGenericObjStatement.Fld89 = FuncdataInd.JobPositionDesc;
                                                                                            }
                                                                                            if (emp)
                                                                                            {
                                                                                                OGenericObjStatement.Fld88 = a.Employee.ToString();
                                                                                            }
                                                                                            if (Present)
                                                                                            {
                                                                                                OGenericObjStatement.Fld87 = "Present";
                                                                                            }
                                                                                            if (Absent)
                                                                                            {
                                                                                                OGenericObjStatement.Fld86 = "";
                                                                                            }
                                                                                            if (Cancel)
                                                                                            {
                                                                                                OGenericObjStatement.Fld85 = "";
                                                                                            }

                                                                                            OGenericPayrollStatement.Add(OGenericObjStatement);
                                                                                        }
                                                                                        else if (a.Employee != null && item2.IsPresent == false && specialgrp == "Absent" && item2.CancelReason != null && item2.CancelReason.ToUpper() == "ABSENT")
                                                                                        {
                                                                                            GenericField100 OGenericObjStatement = new GenericField100
                                                                                            {
                                                                                                Fld1 = a.Employee.EmpCode == null ? "" : a.Employee.EmpCode.ToString(),
                                                                                                Fld2 = a.Employee.EmpName == null ? "" : a.Employee.EmpName.FullNameLFM.ToString(),
                                                                                                Fld3 = item.TrainingSchedule == null ? "" : item.TrainingSchedule.TrainingBatchName.ToString(),
                                                                                                Fld4 = prg == null ? "" : prg.ToString(),
                                                                                                Fld5 = item1.SessionDate == null ? "" : item1.SessionDate.Value.ToShortDateString(),
                                                                                                Fld6 = item1.SessionType == null ? "" : item1.SessionType.LookupVal.ToString(),
                                                                                                Fld7 = item1.StartTime == null ? "" : item1.StartTime.ToString(),
                                                                                                Fld8 = item1.EndTime == null ? "" : item1.EndTime.ToString(),
                                                                                                Fld9 = item2.IsPresent == null ? "" : item2.IsPresent.ToString(),

                                                                                            };
                                                                                            if (comp)
                                                                                            {
                                                                                                OGenericObjStatement.Fld99 = GeoDataInd.Company_Name;
                                                                                            }
                                                                                            if (div)
                                                                                            {
                                                                                                OGenericObjStatement.Fld98 = GeoDataInd.Division_Name;
                                                                                            }
                                                                                            if (loca)
                                                                                            {
                                                                                                OGenericObjStatement.Fld97 = GeoDataInd.LocDesc;
                                                                                            }
                                                                                            if (dept)
                                                                                            {
                                                                                                OGenericObjStatement.Fld96 = GeoDataInd.DeptDesc;
                                                                                            }
                                                                                            if (grp)
                                                                                            {
                                                                                                OGenericObjStatement.Fld95 = GeoDataInd.Group_Name;
                                                                                            }
                                                                                            if (unit)
                                                                                            {
                                                                                                OGenericObjStatement.Fld94 = GeoDataInd.Unit_Name;
                                                                                            }
                                                                                            if (grade)
                                                                                            {
                                                                                                OGenericObjStatement.Fld93 = PaydataInd.Grade_Name;
                                                                                            }
                                                                                            if (lvl)
                                                                                            {
                                                                                                OGenericObjStatement.Fld92 = PaydataInd.Level_Name;
                                                                                            }
                                                                                            if (jobstat)
                                                                                            {
                                                                                                OGenericObjStatement.Fld91 = GeoDataInd.JobStatus_Id.ToString();
                                                                                            }
                                                                                            if (job)
                                                                                            {
                                                                                                OGenericObjStatement.Fld90 = FuncdataInd.Job_Name;
                                                                                            }
                                                                                            if (jobpos)
                                                                                            {
                                                                                                OGenericObjStatement.Fld89 = FuncdataInd.JobPositionDesc;
                                                                                            }
                                                                                            if (emp)
                                                                                            {
                                                                                                OGenericObjStatement.Fld88 = a.Employee.ToString();
                                                                                            }
                                                                                            if (Present)
                                                                                            {
                                                                                                OGenericObjStatement.Fld87 = "";
                                                                                            }
                                                                                            if (Absent)
                                                                                            {
                                                                                                OGenericObjStatement.Fld86 = "Absent";
                                                                                            }
                                                                                            if (Cancel)
                                                                                            {
                                                                                                OGenericObjStatement.Fld85 = "";
                                                                                            }
                                                                                            OGenericPayrollStatement.Add(OGenericObjStatement);
                                                                                        }
                                                                                        else if (a.Employee != null && item2.IsPresent == false && item2.IsCancelled == true && specialgrp == "Cancel")
                                                                                        {
                                                                                            GenericField100 OGenericObjStatement = new GenericField100
                                                                                            {
                                                                                                Fld1 = a.Employee.EmpCode == null ? "" : a.Employee.EmpCode.ToString(),
                                                                                                Fld2 = a.Employee.EmpName == null ? "" : a.Employee.EmpName.FullNameLFM.ToString(),
                                                                                                Fld3 = item.TrainingSchedule == null ? "" : item.TrainingSchedule.TrainingBatchName.ToString(),
                                                                                                Fld4 = prg == null ? "" : prg.ToString(),
                                                                                                Fld5 = item1.SessionDate == null ? "" : item1.SessionDate.Value.ToShortDateString(),
                                                                                                Fld6 = item1.SessionType == null ? "" : item1.SessionType.LookupVal.ToString(),
                                                                                                Fld7 = item1.StartTime == null ? "" : item1.StartTime.ToString(),
                                                                                                Fld8 = item1.EndTime == null ? "" : item1.EndTime.ToString(),
                                                                                                // Fld9 = item2.IsPresent == null ? "" : item2.IsPresent.ToString(),
                                                                                                Fld10 = item2.IsCancelled == null ? "" : item2.IsCancelled.ToString(),
                                                                                                Fld11 = item2.CancelReason == null ? "" : item2.CancelReason.ToString(),

                                                                                            };
                                                                                            if (comp)
                                                                                            {
                                                                                                OGenericObjStatement.Fld99 = GeoDataInd.Company_Name;
                                                                                            }
                                                                                            if (div)
                                                                                            {
                                                                                                OGenericObjStatement.Fld98 = GeoDataInd.Division_Name;
                                                                                            }
                                                                                            if (loca)
                                                                                            {
                                                                                                OGenericObjStatement.Fld97 = GeoDataInd.LocDesc;
                                                                                            }
                                                                                            if (dept)
                                                                                            {
                                                                                                OGenericObjStatement.Fld96 = GeoDataInd.DeptDesc;
                                                                                            }
                                                                                            if (grp)
                                                                                            {
                                                                                                OGenericObjStatement.Fld95 = GeoDataInd.Group_Name;
                                                                                            }
                                                                                            if (unit)
                                                                                            {
                                                                                                OGenericObjStatement.Fld94 = GeoDataInd.Unit_Name;
                                                                                            }
                                                                                            if (grade)
                                                                                            {
                                                                                                OGenericObjStatement.Fld93 = PaydataInd.Grade_Name;
                                                                                            }
                                                                                            if (lvl)
                                                                                            {
                                                                                                OGenericObjStatement.Fld92 = PaydataInd.Level_Name;
                                                                                            }
                                                                                            if (jobstat)
                                                                                            {
                                                                                                OGenericObjStatement.Fld91 = GeoDataInd.JobStatus_Id.ToString();
                                                                                            }
                                                                                            if (job)
                                                                                            {
                                                                                                OGenericObjStatement.Fld90 = FuncdataInd.Job_Name;
                                                                                            }
                                                                                            if (jobpos)
                                                                                            {
                                                                                                OGenericObjStatement.Fld89 = FuncdataInd.JobPositionDesc;
                                                                                            }
                                                                                            if (emp)
                                                                                            {
                                                                                                OGenericObjStatement.Fld88 = a.Employee.ToString();
                                                                                            }
                                                                                            if (Present)
                                                                                            {
                                                                                                OGenericObjStatement.Fld87 = "";
                                                                                            }
                                                                                            if (Absent)
                                                                                            {
                                                                                                OGenericObjStatement.Fld86 = "";
                                                                                            }
                                                                                            if (Cancel)
                                                                                            {
                                                                                                OGenericObjStatement.Fld85 = "Cancel";
                                                                                            }
                                                                                            OGenericPayrollStatement.Add(OGenericObjStatement);
                                                                                        }
                                                                                    }
                                                                                }
                                                                                else
                                                                                {
                                                                                    if (a.Employee != null)
                                                                                    {
                                                                                        GenericField100 OGenericObjStatement = new GenericField100
                                                                                        {
                                                                                            Fld1 = a.Employee.EmpCode == null ? "" : a.Employee.EmpCode.ToString(),
                                                                                            Fld2 = a.Employee.EmpName == null ? "" : a.Employee.EmpName.FullNameLFM.ToString(),
                                                                                            Fld3 = item.TrainingSchedule == null ? "" : item.TrainingSchedule.TrainingBatchName.ToString(),
                                                                                            Fld4 = prg == null ? "" : prg.ToString(),
                                                                                            Fld5 = item1.SessionDate == null ? "" : item1.SessionDate.Value.ToShortDateString(),
                                                                                            Fld6 = item1.SessionType == null ? "" : item1.SessionType.LookupVal.ToString(),
                                                                                            Fld7 = item1.StartTime == null ? "" : item1.StartTime.ToString(),
                                                                                            Fld8 = item1.EndTime == null ? "" : item1.EndTime.ToString(),
                                                                                            // Fld9 = item2.IsPresent == null ? "" : item2.IsPresent.ToString(),
                                                                                            Fld10 = item2.IsCancelled == null ? "" : item2.IsCancelled.ToString(),
                                                                                            Fld11 = item2.CancelReason == null ? "" : item2.CancelReason.ToString(),

                                                                                        };
                                                                                        if (comp)
                                                                                        {
                                                                                            OGenericObjStatement.Fld99 = GeoDataInd.Company_Name;
                                                                                        }
                                                                                        if (div)
                                                                                        {
                                                                                            OGenericObjStatement.Fld98 = GeoDataInd.Division_Name;
                                                                                        }
                                                                                        if (loca)
                                                                                        {
                                                                                            OGenericObjStatement.Fld97 = GeoDataInd.LocDesc;
                                                                                        }
                                                                                        if (dept)
                                                                                        {
                                                                                            OGenericObjStatement.Fld96 = GeoDataInd.DeptDesc;
                                                                                        }
                                                                                        if (grp)
                                                                                        {
                                                                                            OGenericObjStatement.Fld95 = GeoDataInd.Group_Name;
                                                                                        }
                                                                                        if (unit)
                                                                                        {
                                                                                            OGenericObjStatement.Fld94 = GeoDataInd.Unit_Name;
                                                                                        }
                                                                                        if (grade)
                                                                                        {
                                                                                            OGenericObjStatement.Fld93 = PaydataInd.Grade_Name;
                                                                                        }
                                                                                        if (lvl)
                                                                                        {
                                                                                            OGenericObjStatement.Fld92 = PaydataInd.Level_Name;
                                                                                        }
                                                                                        if (jobstat)
                                                                                        {
                                                                                            OGenericObjStatement.Fld91 = GeoDataInd.JobStatus_Id.ToString();
                                                                                        }
                                                                                        if (job)
                                                                                        {
                                                                                            OGenericObjStatement.Fld90 = FuncdataInd.Job_Name;
                                                                                        }
                                                                                        if (jobpos)
                                                                                        {
                                                                                            OGenericObjStatement.Fld89 = FuncdataInd.JobPositionDesc;
                                                                                        }
                                                                                        if (emp)
                                                                                        {
                                                                                            OGenericObjStatement.Fld88 = a.Employee.ToString();
                                                                                        }

                                                                                        OGenericPayrollStatement.Add(OGenericObjStatement);
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                            else
                                                            {



                                                                if (a.Employee != null)
                                                                {

                                                                    foreach (var item2 in item.TrainigDetailSessionInfo)
                                                                    {
                                                                        GenericField100 OGenericObjStatement = new GenericField100
                                                                        {
                                                                            Fld1 = a.Employee.EmpCode == null ? "" : a.Employee.EmpCode.ToString(),
                                                                            Fld2 = a.Employee.EmpName == null ? "" : a.Employee.EmpName.FullNameLFM.ToString(),
                                                                            Fld3 = item.TrainingSchedule == null ? "" : item.TrainingSchedule.TrainingBatchName.ToString(),
                                                                            Fld4 = prg == null ? "" : prg.ToString(),
                                                                            Fld5 = item1.SessionDate == null ? "" : item1.SessionDate.Value.ToShortDateString(),
                                                                            Fld6 = item1.SessionType == null ? "" : item1.SessionType.LookupVal.ToString(),
                                                                            Fld7 = item1.StartTime == null ? "" : item1.StartTime.ToString(),
                                                                            Fld8 = item1.EndTime == null ? "" : item1.EndTime.ToString(),
                                                                            // Fld9 = item2.IsPresent == null ? "" : item2.IsPresent.ToString(),
                                                                            Fld10 = item2.IsCancelled == null ? "" : item2.IsCancelled.ToString(),
                                                                            Fld11 = item2.CancelReason == null ? "" : item2.CancelReason.ToString(),

                                                                        };
                                                                        if (comp)
                                                                        {
                                                                            OGenericObjStatement.Fld99 = GeoDataInd.Company_Name;
                                                                        }
                                                                        if (div)
                                                                        {
                                                                            OGenericObjStatement.Fld98 = GeoDataInd.Division_Name;
                                                                        }
                                                                        if (loca)
                                                                        {
                                                                            OGenericObjStatement.Fld97 = GeoDataInd.LocDesc;
                                                                        }
                                                                        if (dept)
                                                                        {
                                                                            OGenericObjStatement.Fld96 = GeoDataInd.DeptDesc;
                                                                        }
                                                                        if (grp)
                                                                        {
                                                                            OGenericObjStatement.Fld95 = GeoDataInd.Group_Name;
                                                                        }
                                                                        if (unit)
                                                                        {
                                                                            OGenericObjStatement.Fld94 = GeoDataInd.Unit_Name;
                                                                        }
                                                                        if (grade)
                                                                        {
                                                                            OGenericObjStatement.Fld93 = PaydataInd.Grade_Name;
                                                                        }
                                                                        if (lvl)
                                                                        {
                                                                            OGenericObjStatement.Fld92 = PaydataInd.Level_Name;
                                                                        }
                                                                        if (jobstat)
                                                                        {
                                                                            OGenericObjStatement.Fld91 = GeoDataInd.JobStatus_Id.ToString();
                                                                        }
                                                                        if (job)
                                                                        {
                                                                            OGenericObjStatement.Fld90 = FuncdataInd.Job_Name;
                                                                        }
                                                                        if (jobpos)
                                                                        {
                                                                            OGenericObjStatement.Fld89 = FuncdataInd.JobPositionDesc;
                                                                        }
                                                                        if (emp)
                                                                        {
                                                                            OGenericObjStatement.Fld88 = a.Employee.ToString();
                                                                        }

                                                                        OGenericPayrollStatement.Add(OGenericObjStatement);
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                        else
                                        {
                                            foreach (var item1 in trsch.TrainingSession)
                                            {
                                                if (item1.TrainingProgramCalendar.StartDate >= pFromDate && item1.TrainingProgramCalendar.EndDate <= pToDate)
                                                {
                                                     prg = item1.TrainingProgramCalendar.ProgramList.SubjectDetails.ToString();

                                                    foreach (var item2 in item.TrainigDetailSessionInfo)
                                                    {
                                                        if (SpecialGroupslist.Count() > 0)
                                                        {
                                                            foreach (var specialgrp in SpecialGroupslist)
                                                            {
                                                                // string prg = item1.TrainingCalendar.ProgramList.SubjectDetails.ToString();
                                                                if (a.Employee != null && item2.IsPresent == true && specialgrp == "Present")
                                                                {
                                                                    GenericField100 OGenericObjStatement = new GenericField100
                                                                    {
                                                                        Fld1 = a.Employee.EmpCode == null ? "" : a.Employee.EmpCode.ToString(),
                                                                        Fld2 = a.Employee.EmpName == null ? "" : a.Employee.EmpName.FullNameLFM.ToString(),
                                                                        Fld3 = item.TrainingSchedule == null ? "" : item.TrainingSchedule.TrainingBatchName.ToString(),
                                                                        Fld4 = prg == null ? "" : prg.ToString(),
                                                                        Fld5 = item1.SessionDate == null ? "" : item1.SessionDate.Value.ToShortDateString(),
                                                                        Fld6 = item1.SessionType == null ? "" : item1.SessionType.LookupVal.ToString(),
                                                                        Fld7 = item1.StartTime == null ? "" : item1.StartTime.ToString(),
                                                                        Fld8 = item1.EndTime == null ? "" : item1.EndTime.ToString(),
                                                                        Fld9 = item2.IsPresent == null ? "" : item2.IsPresent.ToString(),

                                                                    };
                                                                    if (comp)
                                                                    {
                                                                        OGenericObjStatement.Fld99 = GeoDataInd.Company_Name;
                                                                    }
                                                                    if (div)
                                                                    {
                                                                        OGenericObjStatement.Fld98 = GeoDataInd.Division_Name;
                                                                    }
                                                                    if (loca)
                                                                    {
                                                                        OGenericObjStatement.Fld97 = GeoDataInd.LocDesc;
                                                                    }
                                                                    if (dept)
                                                                    {
                                                                        OGenericObjStatement.Fld96 = GeoDataInd.DeptDesc;
                                                                    }
                                                                    if (grp)
                                                                    {
                                                                        OGenericObjStatement.Fld95 = GeoDataInd.Group_Name;
                                                                    }
                                                                    if (unit)
                                                                    {
                                                                        OGenericObjStatement.Fld94 = GeoDataInd.Unit_Name;
                                                                    }
                                                                    if (grade)
                                                                    {
                                                                        OGenericObjStatement.Fld93 = PaydataInd.Grade_Name;
                                                                    }
                                                                    if (lvl)
                                                                    {
                                                                        OGenericObjStatement.Fld92 = PaydataInd.Level_Name;
                                                                    }
                                                                    if (jobstat)
                                                                    {
                                                                        OGenericObjStatement.Fld91 = GeoDataInd.JobStatus_Id.ToString();
                                                                    }
                                                                    if (job)
                                                                    {
                                                                        OGenericObjStatement.Fld90 = FuncdataInd.Job_Name;
                                                                    }
                                                                    if (jobpos)
                                                                    {
                                                                        OGenericObjStatement.Fld89 = FuncdataInd.JobPositionDesc;
                                                                    }
                                                                    if (emp)
                                                                    {
                                                                        OGenericObjStatement.Fld88 = a.Employee.ToString();
                                                                    }
                                                                    if (Present)
                                                                    {
                                                                        OGenericObjStatement.Fld87 = "Present";
                                                                    }
                                                                    if (Absent)
                                                                    {
                                                                        OGenericObjStatement.Fld86 = "";
                                                                    }
                                                                    if (Cancel)
                                                                    {
                                                                        OGenericObjStatement.Fld85 = "";
                                                                    }
                                                                    OGenericPayrollStatement.Add(OGenericObjStatement);
                                                                }
                                                                else if (a.Employee != null && item2.IsPresent == false && specialgrp == "Absent" && item2.CancelReason != null && item2.CancelReason.ToUpper() == "ABSENT")
                                                                {
                                                                    GenericField100 OGenericObjStatement = new GenericField100
                                                                    {
                                                                        Fld1 = a.Employee.EmpCode == null ? "" : a.Employee.EmpCode.ToString(),
                                                                        Fld2 = a.Employee.EmpName == null ? "" : a.Employee.EmpName.FullNameLFM.ToString(),
                                                                        Fld3 = item.TrainingSchedule == null ? "" : item.TrainingSchedule.TrainingBatchName.ToString(),
                                                                        Fld4 = prg == null ? "" : prg.ToString(),
                                                                        Fld5 = item1.SessionDate == null ? "" : item1.SessionDate.Value.ToShortDateString(),
                                                                        Fld6 = item1.SessionType == null ? "" : item1.SessionType.LookupVal.ToString(),
                                                                        Fld7 = item1.StartTime == null ? "" : item1.StartTime.ToString(),
                                                                        Fld8 = item1.EndTime == null ? "" : item1.EndTime.ToString(),
                                                                        Fld9 = item2.IsPresent == null ? "" : item2.IsPresent.ToString(),

                                                                    };
                                                                    if (comp)
                                                                    {
                                                                        OGenericObjStatement.Fld99 = GeoDataInd.Company_Name;
                                                                    }
                                                                    if (div)
                                                                    {
                                                                        OGenericObjStatement.Fld98 = GeoDataInd.Division_Name;
                                                                    }
                                                                    if (loca)
                                                                    {
                                                                        OGenericObjStatement.Fld97 = GeoDataInd.LocDesc;
                                                                    }
                                                                    if (dept)
                                                                    {
                                                                        OGenericObjStatement.Fld96 = GeoDataInd.DeptDesc;
                                                                    }
                                                                    if (grp)
                                                                    {
                                                                        OGenericObjStatement.Fld95 = GeoDataInd.Group_Name;
                                                                    }
                                                                    if (unit)
                                                                    {
                                                                        OGenericObjStatement.Fld94 = GeoDataInd.Unit_Name;
                                                                    }
                                                                    if (grade)
                                                                    {
                                                                        OGenericObjStatement.Fld93 = PaydataInd.Grade_Name;
                                                                    }
                                                                    if (lvl)
                                                                    {
                                                                        OGenericObjStatement.Fld92 = PaydataInd.Level_Name;
                                                                    }
                                                                    if (jobstat)
                                                                    {
                                                                        OGenericObjStatement.Fld91 = GeoDataInd.JobStatus_Id.ToString();
                                                                    }
                                                                    if (job)
                                                                    {
                                                                        OGenericObjStatement.Fld90 = FuncdataInd.Job_Name;
                                                                    }
                                                                    if (jobpos)
                                                                    {
                                                                        OGenericObjStatement.Fld89 = FuncdataInd.JobPositionDesc;
                                                                    }
                                                                    if (emp)
                                                                    {
                                                                        OGenericObjStatement.Fld88 = a.Employee.ToString();
                                                                    }
                                                                    if (Present)
                                                                    {
                                                                        OGenericObjStatement.Fld87 = "";
                                                                    }
                                                                    if (Absent)
                                                                    {
                                                                        OGenericObjStatement.Fld86 = "Absent";
                                                                    }
                                                                    if (Cancel)
                                                                    {
                                                                        OGenericObjStatement.Fld85 = "";
                                                                    }
                                                                    OGenericPayrollStatement.Add(OGenericObjStatement);
                                                                }
                                                                else if (a.Employee != null && item2.IsPresent == false && item2.IsCancelled == true && specialgrp == "Cancel")
                                                                {
                                                                    GenericField100 OGenericObjStatement = new GenericField100
                                                                    {
                                                                        Fld1 = a.Employee.EmpCode == null ? "" : a.Employee.EmpCode.ToString(),
                                                                        Fld2 = a.Employee.EmpName == null ? "" : a.Employee.EmpName.FullNameLFM.ToString(),
                                                                        Fld3 = item.TrainingSchedule == null ? "" : item.TrainingSchedule.TrainingBatchName.ToString(),
                                                                        Fld4 = prg == null ? "" : prg.ToString(),
                                                                        Fld5 = item1.SessionDate == null ? "" : item1.SessionDate.Value.ToShortDateString(),
                                                                        Fld6 = item1.SessionType == null ? "" : item1.SessionType.LookupVal.ToString(),
                                                                        Fld7 = item1.StartTime == null ? "" : item1.StartTime.ToString(),
                                                                        Fld8 = item1.EndTime == null ? "" : item1.EndTime.ToString(),
                                                                        // Fld9 = item2.IsPresent == null ? "" : item2.IsPresent.ToString(),
                                                                        Fld10 = item2.IsCancelled == null ? "" : item2.IsCancelled.ToString(),
                                                                        Fld11 = item2.CancelReason == null ? "" : item2.CancelReason.ToString(),

                                                                    };
                                                                    if (comp)
                                                                    {
                                                                        OGenericObjStatement.Fld99 = GeoDataInd.Company_Name;
                                                                    }
                                                                    if (div)
                                                                    {
                                                                        OGenericObjStatement.Fld98 = GeoDataInd.Division_Name;
                                                                    }
                                                                    if (loca)
                                                                    {
                                                                        OGenericObjStatement.Fld97 = GeoDataInd.LocDesc;
                                                                    }
                                                                    if (dept)
                                                                    {
                                                                        OGenericObjStatement.Fld96 = GeoDataInd.DeptDesc;
                                                                    }
                                                                    if (grp)
                                                                    {
                                                                        OGenericObjStatement.Fld95 = GeoDataInd.Group_Name;
                                                                    }
                                                                    if (unit)
                                                                    {
                                                                        OGenericObjStatement.Fld94 = GeoDataInd.Unit_Name;
                                                                    }
                                                                    if (grade)
                                                                    {
                                                                        OGenericObjStatement.Fld93 = PaydataInd.Grade_Name;
                                                                    }
                                                                    if (lvl)
                                                                    {
                                                                        OGenericObjStatement.Fld92 = PaydataInd.Level_Name;
                                                                    }
                                                                    if (jobstat)
                                                                    {
                                                                        OGenericObjStatement.Fld91 = GeoDataInd.JobStatus_Id.ToString();
                                                                    }
                                                                    if (job)
                                                                    {
                                                                        OGenericObjStatement.Fld90 = FuncdataInd.Job_Name;
                                                                    }
                                                                    if (jobpos)
                                                                    {
                                                                        OGenericObjStatement.Fld89 = FuncdataInd.JobPositionDesc;
                                                                    }
                                                                    if (emp)
                                                                    {
                                                                        OGenericObjStatement.Fld88 = a.Employee.ToString();
                                                                    }
                                                                    if (Present)
                                                                    {
                                                                        OGenericObjStatement.Fld87 = "";
                                                                    }
                                                                    if (Absent)
                                                                    {
                                                                        OGenericObjStatement.Fld86 = "";
                                                                    }
                                                                    if (Cancel)
                                                                    {
                                                                        OGenericObjStatement.Fld85 = "Cancel";
                                                                    }
                                                                    OGenericPayrollStatement.Add(OGenericObjStatement);
                                                                }
                                                            }
                                                        }
                                                        else
                                                        {
                                                            if (a.Employee != null)
                                                            {
                                                                GenericField100 OGenericObjStatement = new GenericField100
                                                                {
                                                                    Fld1 = a.Employee.EmpCode == null ? "" : a.Employee.EmpCode.ToString(),
                                                                    Fld2 = a.Employee.EmpName == null ? "" : a.Employee.EmpName.FullNameLFM.ToString(),
                                                                    Fld3 = item.TrainingSchedule == null ? "" : item.TrainingSchedule.TrainingBatchName.ToString(),
                                                                    Fld4 = prg == null ? "" : prg.ToString(),
                                                                    Fld5 = item1.SessionDate == null ? "" : item1.SessionDate.Value.ToShortDateString(),
                                                                    Fld6 = item1.SessionType == null ? "" : item1.SessionType.LookupVal.ToString(),
                                                                    Fld7 = item1.StartTime == null ? "" : item1.StartTime.ToString(),
                                                                    Fld8 = item1.EndTime == null ? "" : item1.EndTime.ToString(),
                                                                    // Fld9 = item2.IsPresent == null ? "" : item2.IsPresent.ToString(),
                                                                    Fld10 = item2.IsCancelled == null ? "" : item2.IsCancelled.ToString(),
                                                                    Fld11 = item2.CancelReason == null ? "" : item2.CancelReason.ToString(),

                                                                };
                                                                if (comp)
                                                                {
                                                                    OGenericObjStatement.Fld99 = GeoDataInd.Company_Name;
                                                                }
                                                                if (div)
                                                                {
                                                                    OGenericObjStatement.Fld98 = GeoDataInd.Division_Name;
                                                                }
                                                                if (loca)
                                                                {
                                                                    OGenericObjStatement.Fld97 = GeoDataInd.LocDesc;
                                                                }
                                                                if (dept)
                                                                {
                                                                    OGenericObjStatement.Fld96 = GeoDataInd.DeptDesc;
                                                                }
                                                                if (grp)
                                                                {
                                                                    OGenericObjStatement.Fld95 = GeoDataInd.Group_Name;
                                                                }
                                                                if (unit)
                                                                {
                                                                    OGenericObjStatement.Fld94 = GeoDataInd.Unit_Name;
                                                                }
                                                                if (grade)
                                                                {
                                                                    OGenericObjStatement.Fld93 = PaydataInd.Grade_Name;
                                                                }
                                                                if (lvl)
                                                                {
                                                                    OGenericObjStatement.Fld92 = PaydataInd.Level_Name;
                                                                }
                                                                if (jobstat)
                                                                {
                                                                    OGenericObjStatement.Fld91 = GeoDataInd.JobStatus_Id.ToString();
                                                                }
                                                                if (job)
                                                                {
                                                                    OGenericObjStatement.Fld90 = FuncdataInd.Job_Name;
                                                                }
                                                                if (jobpos)
                                                                {
                                                                    OGenericObjStatement.Fld89 = FuncdataInd.JobPositionDesc;
                                                                }
                                                                if (emp)
                                                                {
                                                                    OGenericObjStatement.Fld88 = a.Employee.ToString();
                                                                }

                                                                OGenericPayrollStatement.Add(OGenericObjStatement);
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                            return OGenericPayrollStatement;
                        }
                        break;

                    case "TRAININGFEEDBACK":
                        var OTrnEvnatr = new List<EmployeeTraining>();
                        foreach (var item in EmpPayrollIdList)
                        {

                            var OTrnEvna122 = db.EmployeeTraining
                                .Include(e => e.TrainingDetails)
                                .Include(e => e.Employee)
                                .Include(e => e.Employee.GeoStruct)
                                .Include(e => e.Employee.PayStruct)
                                .Include(e => e.Employee.FuncStruct)
                                .Include(e => e.Employee.EmpName)
                                 .Include(e => e.TrainingDetails.Select(a => a.TrainigDetailSessionInfo))
                                 .Include(e => e.TrainingDetails.Select(r => r.TrainingCalendar))
                               .Include(e => e.TrainingDetails.Select(t => t.TrainingSchedule))
                               .Include(e => e.TrainingDetails.Select(t => t.TrainingSchedule.TrainingSession))
                               .Include(e => e.TrainingDetails.Select(t => t.TrainingSchedule.TrainingSession.Select(x => x.SessionType)))
                               .Include(e => e.TrainingDetails.Select(t => t.TrainingSchedule.TrainingSession.Select(a => a.TrainingProgramCalendar)))
                               .Include(e => e.TrainingDetails.Select(t => t.TrainingSchedule.TrainingSession.Select(z => z.TrainingProgramCalendar.ProgramList)))

                               // .Include(e => e.TrainingDetails.Select(a => a.TrainingSchedule))
                                //.Include(e => e.TrainingDetails.Select(a => a.TrainingSchedule.Select(h => h.TrainingCalendar)))
                                //.Include(e => e.TrainingDetails.Select(a => a.TrainingSchedule.Select(h => h.TrainingCalendar.ProgramList)))
                                //.Include(e => e.Employee.GeoStruct)
                                //.Include(e => e.Employee.GeoStruct.Location)
                                //.Include(e => e.Employee.GeoStruct.Location.LocationObj)
                                //.Include(e => e.Employee.FuncStruct)
                                //.Include(e => e.Employee.FuncStruct.Job)
                              .Where(e => e.Employee.Id == item)
                               .FirstOrDefault();

                            if (OTrnEvna122 != null)
                            {
                                OTrnEvnatr.Add(OTrnEvna122);
                            }

                        }
                        if (OTrnEvnatr == null || OTrnEvnatr.Count() == 0)
                        {
                            return null;
                        }
                        else
                        {
                            var emp = false;
                            var dept = false;
                            var loca = false;
                            var comp = false;
                            var grp = false;
                            var unit = false;
                            var div = false;
                            var regn = false;
                            var grade = false;
                            var lvl = false;
                            var jobstat = false;
                            var job = false;
                            var jobpos = false;
                            var vc = db.LookupValue.Where(a => forithead.Contains(a.Id.ToString())).ToList();

                            foreach (var item in vc)
                            {
                                //if (item.LookupVal.ToUpper() == "MONTH")
                                //{
                                //    month = true;
                                //}
                                if (item.LookupVal.ToUpper() == "LOCATION")
                                {

                                    loca = true;
                                }
                                if (item.LookupVal.ToUpper() == "EMPLOYEE")
                                {
                                    emp = true;
                                }
                                if (item.LookupVal.ToUpper() == "DEPARTMENT")
                                {
                                    dept = true;
                                }
                                if (item.LookupVal.ToUpper() == "COMPANY")
                                {
                                    comp = true;
                                }
                                if (item.LookupVal.ToUpper() == "GROUP")
                                {
                                    grp = true;
                                }
                                if (item.LookupVal.ToUpper() == "UNIT")
                                {
                                    unit = true;
                                }
                                if (item.LookupVal.ToUpper() == "DIVISION")
                                {
                                    div = true;
                                }
                                if (item.LookupVal.ToUpper() == "REGION")
                                {
                                    regn = true;
                                }
                                if (item.LookupVal.ToUpper() == "GRADE")
                                {
                                    grade = true;
                                }
                                if (item.LookupVal.ToUpper() == "LEVEL")
                                {
                                    lvl = true;
                                }
                                if (item.LookupVal.ToUpper() == "JOBSTATUS")
                                {
                                    jobstat = true;
                                }

                                if (item.LookupVal.ToUpper() == "JOB")
                                {
                                    job = true;
                                }
                                if (item.LookupVal.ToUpper() == "JOBPOSITION")
                                {
                                    jobpos = true;
                                }
                            }

                            List<Utility.ReportClass> GeoData = new List<Utility.ReportClass>();
                            List<Utility.ReportClass> Paydata = new List<Utility.ReportClass>();
                            List<Utility.ReportClass> Funcdata = new List<Utility.ReportClass>();

                            Utility.ReportClass GeoDataInd = new Utility.ReportClass();
                            Utility.ReportClass PaydataInd = new Utility.ReportClass();
                            Utility.ReportClass FuncdataInd = new Utility.ReportClass();

                            GeoData = GetViewData(0);
                            Paydata = GetViewData(1);
                            Funcdata = GetViewData(2);

                            foreach (var a in OTrnEvnatr)
                            {
                                int geoid = a.Employee.GeoStruct.Id;

                                int payid = a.Employee.PayStruct.Id;

                                int funid = a.Employee.FuncStruct.Id;

                                GeoDataInd = GetViewDataIndiv(geoid, payid, funid, GeoData, 0);
                                PaydataInd = GetViewDataIndiv(geoid, payid, funid, Paydata, 1);
                                FuncdataInd = GetViewDataIndiv(geoid, payid, funid, Funcdata, 2);

                                foreach (var item in a.TrainingDetails)
                                {
                                    var trsch = item.TrainingSchedule;
                                    if (trsch != null)
                                    {
                                        if (salheadlist.Count > 0)
                                        {
                                            foreach (var batch in salheadlist)
                                            {
                                                if (batch.ToUpper() == trsch.TrainingBatchName.ToUpper())
                                                {
                                                    foreach (var item1 in trsch.TrainingSession)
                                                    {
                                                        if (item1.TrainingProgramCalendar.StartDate >= pFromDate && item1.TrainingProgramCalendar.EndDate <= pToDate)
                                                        {
                                                            string prg = item1.TrainingProgramCalendar.ProgramList.SubjectDetails.ToString();

                                                            foreach (var item2 in item.TrainigDetailSessionInfo)
                                                            {
                                                                // string prg = item1.TrainingCalendar.ProgramList.SubjectDetails.ToString();
                                                                if (a.Employee != null && item2.IsPresent == true)
                                                                {
                                                                    GenericField100 OGenericObjStatement = new GenericField100
                                                                    {
                                                                        Fld1 = a.Employee.EmpCode == null ? "" : a.Employee.EmpCode.ToString(),
                                                                        Fld2 = a.Employee.EmpName == null ? "" : a.Employee.EmpName.FullNameLFM.ToString(),
                                                                        Fld3 = item.TrainingSchedule == null ? "" : item.TrainingSchedule.TrainingBatchName.ToString(),
                                                                        Fld4 = prg == null ? "" : prg.ToString(),
                                                                        Fld5 = item1.SessionDate == null ? "" : item1.SessionDate.Value.ToShortDateString(),
                                                                        Fld6 = item1.SessionType == null ? "" : item1.SessionType.LookupVal.ToString(),
                                                                        Fld7 = item1.StartTime == null ? "" : item1.StartTime.ToString(),
                                                                        Fld8 = item1.EndTime == null ? "" : item1.EndTime.ToString(),
                                                                        Fld9 = item2.TrainingFeedback == null ? "" : item2.TrainingFeedback.ToString(),
                                                                        Fld10 = item2.TrainingRating == null ? "" : item2.TrainingRating.ToString(),
                                                                        Fld11 = item2.FacultyFeedback == null ? "" : item2.FacultyFeedback.ToString(),
                                                                        Fld12 = item2.FaultyRating == null ? "" : item2.FaultyRating.ToString(),
                                                                    };
                                                                    if (comp)
                                                                    {
                                                                        OGenericObjStatement.Fld99 = GeoDataInd.Company_Name;
                                                                    }
                                                                    if (div)
                                                                    {
                                                                        OGenericObjStatement.Fld98 = GeoDataInd.Division_Name;
                                                                    }
                                                                    if (loca)
                                                                    {
                                                                        OGenericObjStatement.Fld97 = GeoDataInd.LocDesc;
                                                                    }
                                                                    if (dept)
                                                                    {
                                                                        OGenericObjStatement.Fld96 = GeoDataInd.DeptDesc;
                                                                    }
                                                                    if (grp)
                                                                    {
                                                                        OGenericObjStatement.Fld95 = GeoDataInd.Group_Name;
                                                                    }
                                                                    if (unit)
                                                                    {
                                                                        OGenericObjStatement.Fld94 = GeoDataInd.Unit_Name;
                                                                    }
                                                                    if (grade)
                                                                    {
                                                                        OGenericObjStatement.Fld93 = PaydataInd.Grade_Name;
                                                                    }
                                                                    if (lvl)
                                                                    {
                                                                        OGenericObjStatement.Fld92 = PaydataInd.Level_Name;
                                                                    }
                                                                    if (jobstat)
                                                                    {
                                                                        OGenericObjStatement.Fld91 = GeoDataInd.JobStatus_Id.ToString();
                                                                    }
                                                                    if (job)
                                                                    {
                                                                        OGenericObjStatement.Fld90 = FuncdataInd.Job_Name;
                                                                    }
                                                                    if (jobpos)
                                                                    {
                                                                        OGenericObjStatement.Fld89 = FuncdataInd.JobPositionDesc;
                                                                    }
                                                                    if (emp)
                                                                    {
                                                                        OGenericObjStatement.Fld88 = a.Employee.ToString();
                                                                    }
                                                                    OGenericPayrollStatement.Add(OGenericObjStatement);
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                        else
                                        {
                                            foreach (var item1 in trsch.TrainingSession)
                                            {
                                                if (item1.TrainingProgramCalendar.StartDate >= pFromDate && item1.TrainingProgramCalendar.EndDate <= pToDate)
                                                {
                                                    string prg = item1.TrainingProgramCalendar.ProgramList.SubjectDetails.ToString();

                                                    foreach (var item2 in item.TrainigDetailSessionInfo)
                                                    {
                                                        // string prg = item1.TrainingCalendar.ProgramList.SubjectDetails.ToString();
                                                        if (a.Employee != null && item2.IsPresent == true)
                                                        {
                                                            GenericField100 OGenericObjStatement = new GenericField100
                                                            {
                                                                Fld1 = a.Employee.EmpCode == null ? "" : a.Employee.EmpCode.ToString(),
                                                                Fld2 = a.Employee.EmpName == null ? "" : a.Employee.EmpName.FullNameLFM.ToString(),
                                                                Fld3 = item.TrainingSchedule == null ? "" : item.TrainingSchedule.TrainingBatchName.ToString(),
                                                                Fld4 = prg == null ? "" : prg.ToString(),
                                                                Fld5 = item1.SessionDate == null ? "" : item1.SessionDate.Value.ToShortDateString(),
                                                                Fld6 = item1.SessionType == null ? "" : item1.SessionType.LookupVal.ToString(),
                                                                Fld7 = item1.StartTime == null ? "" : item1.StartTime.ToString(),
                                                                Fld8 = item1.EndTime == null ? "" : item1.EndTime.ToString(),
                                                                Fld9 = item2.TrainingFeedback == null ? "" : item2.TrainingFeedback.ToString(),
                                                                Fld10 = item2.TrainingRating == null ? "" : item2.TrainingRating.ToString(),
                                                                Fld11 = item2.FacultyFeedback == null ? "" : item2.FacultyFeedback.ToString(),
                                                                Fld12 = item2.FaultyRating == null ? "" : item2.FaultyRating.ToString(),
                                                            };
                                                            if (comp)
                                                            {
                                                                OGenericObjStatement.Fld99 = GeoDataInd.Company_Name;
                                                            }
                                                            if (div)
                                                            {
                                                                OGenericObjStatement.Fld98 = GeoDataInd.Division_Name;
                                                            }
                                                            if (loca)
                                                            {
                                                                OGenericObjStatement.Fld97 = GeoDataInd.LocDesc;
                                                            }
                                                            if (dept)
                                                            {
                                                                OGenericObjStatement.Fld96 = GeoDataInd.DeptDesc;
                                                            }
                                                            if (grp)
                                                            {
                                                                OGenericObjStatement.Fld95 = GeoDataInd.Group_Name;
                                                            }
                                                            if (unit)
                                                            {
                                                                OGenericObjStatement.Fld94 = GeoDataInd.Unit_Name;
                                                            }
                                                            if (grade)
                                                            {
                                                                OGenericObjStatement.Fld93 = PaydataInd.Grade_Name;
                                                            }
                                                            if (lvl)
                                                            {
                                                                OGenericObjStatement.Fld92 = PaydataInd.Level_Name;
                                                            }
                                                            if (jobstat)
                                                            {
                                                                OGenericObjStatement.Fld91 = GeoDataInd.JobStatus_Id.ToString();
                                                            }
                                                            if (job)
                                                            {
                                                                OGenericObjStatement.Fld90 = FuncdataInd.Job_Name;
                                                            }
                                                            if (jobpos)
                                                            {
                                                                OGenericObjStatement.Fld89 = FuncdataInd.JobPositionDesc;
                                                            }
                                                            if (emp)
                                                            {
                                                                OGenericObjStatement.Fld88 = a.Employee.ToString();
                                                            }
                                                            OGenericPayrollStatement.Add(OGenericObjStatement);
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                            return OGenericPayrollStatement;
                        }
                        break;
                    case "SESSIONWISETRAININGFEEDBACK":
                        //var OTrnEvnatrsession = new List<EmployeeTraining>();
                        //foreach (var item in EmpPayrollIdList)
                        //{

                        //    var OTrnEvna122 = db.EmployeeTraining
                        //        .Include(e => e.TrainingDetails)
                        //        .Include(e => e.Employee)
                        //        .Include(e => e.Employee.GeoStruct)
                        //        .Include(e => e.Employee.PayStruct)
                        //        .Include(e => e.Employee.FuncStruct)
                        //        .Include(e => e.Employee.EmpName)
                        //         .Include(e => e.TrainingDetails.Select(a => a.TrainigDetailSessionInfo))
                        //         .Include(e => e.TrainingDetails.Select(r => r.TrainingCalendar))
                        //       .Include(e => e.TrainingDetails.Select(t => t.TrainingSchedule))
                        //       .Include(e => e.TrainingDetails.Select(t => t.TrainingSchedule.TrainingSession))
                        //       .Include(e => e.TrainingDetails.Select(t => t.TrainingSchedule.TrainingSession.Select(x => x.SessionType)))
                        //       .Include(e => e.TrainingDetails.Select(t => t.TrainingSchedule.TrainingSession.Select(a => a.TrainingProgramCalendar)))
                        //       .Include(e => e.TrainingDetails.Select(t => t.TrainingSchedule.TrainingSession.Select(z => z.TrainingProgramCalendar.ProgramList)))                          
                        //      .Where(e => e.Employee.Id == item)
                        //       .FirstOrDefault();

                        //    if (OTrnEvna122 != null)
                        //    {
                        //        OTrnEvnatrsession.Add(OTrnEvna122);
                        //    }

                        //}
                        var OTrnEvnatrsession = db.EmployeeTraining.Select(p => new
                        {
                            EmployeeId = p.Employee.Id,
                            GeoStructId = p.Employee.GeoStruct_Id,
                            PayStructId = p.Employee.PayStruct_Id,
                            FuncStructId = p.Employee.FuncStruct_Id,
                            EmpCode = p.Employee.EmpCode,
                            EmpName = p.Employee.EmpName.FullNameFML,
                            TrainingDetails = p.TrainingDetails.Select(q => new
                            {
                                TrainingBatchCode = q.TrainingSchedule.TrainingBatchCode,
                                TrainingBatchName = q.TrainingSchedule.TrainingBatchName,
                                TrainigDetailSessionInfo = q.TrainigDetailSessionInfo.Select(z => new
                                {
                                    IsPresent = z.IsPresent,
                                    TrainingFeedback = z.TrainingFeedback,
                                    TrainingRating = z.TrainingRating,
                                    FacultyFeedback = z.FacultyFeedback,
                                    FaultyRating = z.FaultyRating,
                                    SessionTypeLookupVal = z.TrainingSession.SessionType.LookupVal,
                                    SessionDate = z.TrainingSession.SessionDate,
                                    StartTime = z.TrainingSession.StartTime,
                                    EndTime = z.TrainingSession.EndTime,
                                    TrainingProgramCalendarStartDate = z.TrainingSession.TrainingProgramCalendar.StartDate,
                                    TrainingProgramCalendarEndDate = z.TrainingSession.TrainingProgramCalendar.EndDate,
                                    ProgramListSubjectDetails = z.TrainingSession.TrainingProgramCalendar.ProgramList.SubjectDetails
                                }).Where(e => (e.TrainingProgramCalendarStartDate >= pFromDate && e.TrainingProgramCalendarEndDate <= pToDate) && (salheadlistLevel1.Any() ? salheadlistLevel1.Contains(e.SessionTypeLookupVal) : true) && (salheadlistLevel2.Any() ? salheadlistLevel2.Contains(e.ProgramListSubjectDetails) : true)).ToList(),
                            }).Where(e => salheadlist.Any() ? salheadlist.Contains(e.TrainingBatchName) : true).ToList(),
                        }).Where(y => EmpPayrollIdList.Contains(y.EmployeeId)).ToList();

                        if (OTrnEvnatrsession.Count() == 0)
                        {
                            return null;
                        }
                        else
                        {
                            var emp = false;
                            var dept = false;
                            var loca = false;
                            var comp = false;
                            var grp = false;
                            var unit = false;
                            var div = false;
                            var regn = false;
                            var grade = false;
                            var lvl = false;
                            var jobstat = false;
                            var job = false;
                            var jobpos = false;
                            var vc = db.LookupValue.Where(a => forithead.Contains(a.Id.ToString())).ToList();

                            foreach (var item in vc)
                            {
                                //if (item.LookupVal.ToUpper() == "MONTH")
                                //{
                                //    month = true;
                                //}
                                if (item.LookupVal.ToUpper() == "LOCATION")
                                {

                                    loca = true;
                                }
                                if (item.LookupVal.ToUpper() == "EMPLOYEE")
                                {
                                    emp = true;
                                }
                                if (item.LookupVal.ToUpper() == "DEPARTMENT")
                                {
                                    dept = true;
                                }
                                if (item.LookupVal.ToUpper() == "COMPANY")
                                {
                                    comp = true;
                                }
                                if (item.LookupVal.ToUpper() == "GROUP")
                                {
                                    grp = true;
                                }
                                if (item.LookupVal.ToUpper() == "UNIT")
                                {
                                    unit = true;
                                }
                                if (item.LookupVal.ToUpper() == "DIVISION")
                                {
                                    div = true;
                                }
                                if (item.LookupVal.ToUpper() == "REGION")
                                {
                                    regn = true;
                                }
                                if (item.LookupVal.ToUpper() == "GRADE")
                                {
                                    grade = true;
                                }
                                if (item.LookupVal.ToUpper() == "LEVEL")
                                {
                                    lvl = true;
                                }
                                if (item.LookupVal.ToUpper() == "JOBSTATUS")
                                {
                                    jobstat = true;
                                }

                                if (item.LookupVal.ToUpper() == "JOB")
                                {
                                    job = true;
                                }
                                if (item.LookupVal.ToUpper() == "JOBPOSITION")
                                {
                                    jobpos = true;
                                }
                            }

                            //List<Utility.ReportClass> GeoData = new List<Utility.ReportClass>();
                            //List<Utility.ReportClass> Paydata = new List<Utility.ReportClass>();
                            //List<Utility.ReportClass> Funcdata = new List<Utility.ReportClass>();

                            //Utility.ReportClass GeoDataInd = new Utility.ReportClass();
                            //Utility.ReportClass PaydataInd = new Utility.ReportClass();
                            //Utility.ReportClass FuncdataInd = new Utility.ReportClass();

                            //GeoData = GetViewData(0);
                            //Paydata = GetViewData(1);
                            //Funcdata = GetViewData(2);

                            Utility.GetOrganizationDataClass GeoDataInd = new Utility.GetOrganizationDataClass();

                            foreach (var a in OTrnEvnatrsession)
                            {
                                //int geoid = a.Employee.GeoStruct.Id;

                                //int payid = a.Employee.PayStruct.Id;

                                //int funid = a.Employee.FuncStruct.Id;

                                //GeoDataInd = GetViewDataIndiv(geoid, payid, funid, GeoData, 0);
                                //PaydataInd = GetViewDataIndiv(geoid, payid, funid, Paydata, 1);
                                //FuncdataInd = GetViewDataIndiv(geoid, payid, funid, Funcdata, 2);

                                int? geoid = a.GeoStructId;

                                int? payid = a.PayStructId;

                                int? funid = a.FuncStructId;

                                GeoStruct geostruct = db.GeoStruct.Find(geoid);

                                PayStruct paystruct = db.PayStruct.Find(payid);

                                FuncStruct funstruct = db.FuncStruct.Find(funid);

                                GeoDataInd = ReportRDLCObjectClass.GetOrganizationDataInd(geostruct, paystruct, funstruct, 0);

                                foreach (var item in a.TrainingDetails)
                                {
                                    //var trsch = item.TrainingSchedule;
                                    //if (trsch != null)
                                    //{
                                    //if (salheadlist.Count > 0)
                                    //{
                                    //    foreach (var batch in salheadlist)
                                    //    {
                                    //        if (batch.ToUpper() == trsch.TrainingBatchName.ToUpper())
                                    //        {
                                    //foreach (var item1 in item.TrainingSession)
                                    //{
                                    //if (salheadlistLevel1.Count() > 0)
                                    //{
                                    //foreach (var Level1 in salheadlistLevel1)
                                    //{
                                    //if (Level1.ToUpper() == item1.SessionType.LookupVal.ToUpper())
                                    //{
                                    //if (salheadlistLevel2.Count() > 0)
                                    //{
                                    //foreach (var Level2 in salheadlistLevel2)
                                    //{
                                    //if (Level2.ToUpper() == item1.TrainingProgramCalendar.ProgramList.SubjectDetails.ToUpper())
                                    //{

                                    //if (item1.TrainingProgramCalendar.StartDate >= pFromDate && item1.TrainingProgramCalendar.EndDate <= pToDate)
                                    //{
                                    //string prg = item1.TrainingProgramCalendar.ProgramList.SubjectDetails.ToString();

                                    foreach (var item1 in item.TrainigDetailSessionInfo)
                                    {
                                        // string prg = item1.TrainingCalendar.ProgramList.SubjectDetails.ToString();
                                        if (item1.IsPresent == true)
                                        {
                                            GenericField100 OGenericObjStatement = new GenericField100
                                            {
                                                Fld1 = a.EmpCode == null ? "" : a.EmpCode,
                                                Fld2 = a.EmpName == null ? "" : a.EmpName,
                                                Fld3 = item.TrainingBatchName == null ? "" : item.TrainingBatchName,
                                                Fld4 = item1.ProgramListSubjectDetails == null ? "" : item1.ProgramListSubjectDetails,
                                                Fld5 = item1.SessionDate == null ? "" : item1.SessionDate.Value.ToShortDateString(),
                                                Fld6 = item1.SessionTypeLookupVal == null ? "" : item1.SessionTypeLookupVal,
                                                Fld7 = item1.StartTime == null ? "" : item1.StartTime.ToString(),
                                                Fld8 = item1.EndTime == null ? "" : item1.EndTime.ToString(),
                                                Fld9 = item1.TrainingFeedback == null ? "" : item1.TrainingFeedback,
                                                Fld10 = item1.TrainingRating == null ? "" : item1.TrainingRating,
                                                Fld11 = item1.FacultyFeedback == null ? "" : item1.FacultyFeedback,
                                                Fld12 = item1.FaultyRating == null ? "" : item1.FaultyRating
                                            };
                                            if (comp)
                                            {
                                                OGenericObjStatement.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                            }
                                            if (div)
                                            {
                                                OGenericObjStatement.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                            }
                                            if (loca)
                                            {
                                                OGenericObjStatement.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                            }
                                            if (dept)
                                            {
                                                OGenericObjStatement.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                            }
                                            if (grp)
                                            {
                                                OGenericObjStatement.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                            }
                                            if (unit)
                                            {
                                                OGenericObjStatement.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                            }
                                            if (grade)
                                            {
                                                OGenericObjStatement.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                            }
                                            if (lvl)
                                            {
                                                OGenericObjStatement.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                            }
                                            if (jobstat)
                                            {
                                                OGenericObjStatement.Fld91 = GeoDataInd.PayStruct_JobStatus_Id;
                                            }
                                            if (job)
                                            {
                                                OGenericObjStatement.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                            }
                                            if (jobpos)
                                            {
                                                OGenericObjStatement.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                            }
                                            //if (emp)
                                            //{
                                            //    OGenericObjStatement.Fld88 = a.Employee.ToString();
                                            //}
                                            OGenericPayrollStatement.Add(OGenericObjStatement);
                                        }
                                    }
                                    //}
                                    //}
                                    //}
                                    //}
                                    //}
                                    //}
                                    //}
                                    //else
                                    //{
                                    //    if (salheadlistLevel2.Count() > 0)
                                    //    {
                                    //        foreach (var Level2 in salheadlistLevel2)
                                    //        {
                                    //            if (Level2.ToUpper() == item1.TrainingProgramCalendar.ProgramList.SubjectDetails.ToUpper())
                                    //            {

                                    //                if (item1.TrainingProgramCalendar.StartDate >= pFromDate && item1.TrainingProgramCalendar.EndDate <= pToDate)
                                    //                {
                                    //                    string prg = item1.TrainingProgramCalendar.ProgramList.SubjectDetails.ToString();

                                    //                    foreach (var item2 in item.TrainigDetailSessionInfo)
                                    //                    {
                                    //                        // string prg = item1.TrainingCalendar.ProgramList.SubjectDetails.ToString();
                                    //                        if (a.Employee != null && item2.IsPresent == true)
                                    //                        {
                                    //                            GenericField100 OGenericObjStatement = new GenericField100
                                    //                            {
                                    //                                Fld1 = a.Employee.EmpCode == null ? "" : a.Employee.EmpCode.ToString(),
                                    //                                Fld2 = a.Employee.EmpName == null ? "" : a.Employee.EmpName.FullNameLFM.ToString(),
                                    //                                Fld3 = item.TrainingSchedule == null ? "" : item.TrainingSchedule.TrainingBatchName.ToString(),
                                    //                                Fld4 = prg == null ? "" : prg.ToString(),
                                    //                                Fld5 = item1.SessionDate == null ? "" : item1.SessionDate.Value.ToShortDateString(),
                                    //                                Fld6 = item1.SessionType == null ? "" : item1.SessionType.LookupVal.ToString(),
                                    //                                Fld7 = item1.StartTime == null ? "" : item1.StartTime.ToString(),
                                    //                                Fld8 = item1.EndTime == null ? "" : item1.EndTime.ToString(),
                                    //                                Fld9 = item2.TrainingFeedback == null ? "" : item2.TrainingFeedback.ToString(),
                                    //                                Fld10 = item2.TrainingRating == null ? "" : item2.TrainingRating.ToString(),
                                    //                                Fld11 = item2.FacultyFeedback == null ? "" : item2.FacultyFeedback.ToString(),
                                    //                                Fld12 = item2.FaultyRating == null ? "" : item2.FaultyRating.ToString(),
                                    //                            };
                                    //                            if (comp)
                                    //                            {
                                    //                                OGenericObjStatement.Fld99 = GeoDataInd.Company_Name;
                                    //                            }
                                    //                            if (div)
                                    //                            {
                                    //                                OGenericObjStatement.Fld98 = GeoDataInd.Division_Name;
                                    //                            }
                                    //                            if (loca)
                                    //                            {
                                    //                                OGenericObjStatement.Fld97 = GeoDataInd.LocDesc;
                                    //                            }
                                    //                            if (dept)
                                    //                            {
                                    //                                OGenericObjStatement.Fld96 = GeoDataInd.DeptDesc;
                                    //                            }
                                    //                            if (grp)
                                    //                            {
                                    //                                OGenericObjStatement.Fld95 = GeoDataInd.Group_Name;
                                    //                            }
                                    //                            if (unit)
                                    //                            {
                                    //                                OGenericObjStatement.Fld94 = GeoDataInd.Unit_Name;
                                    //                            }
                                    //                            if (grade)
                                    //                            {
                                    //                                OGenericObjStatement.Fld93 = PaydataInd.Grade_Name;
                                    //                            }
                                    //                            if (lvl)
                                    //                            {
                                    //                                OGenericObjStatement.Fld92 = PaydataInd.Level_Name;
                                    //                            }
                                    //                            if (jobstat)
                                    //                            {
                                    //                                OGenericObjStatement.Fld91 = GeoDataInd.JobStatus_Id.ToString();
                                    //                            }
                                    //                            if (job)
                                    //                            {
                                    //                                OGenericObjStatement.Fld90 = FuncdataInd.Job_Name;
                                    //                            }
                                    //                            if (jobpos)
                                    //                            {
                                    //                                OGenericObjStatement.Fld89 = FuncdataInd.JobPositionDesc;
                                    //                            }
                                    //                            if (emp)
                                    //                            {
                                    //                                OGenericObjStatement.Fld88 = a.Employee.ToString();
                                    //                            }
                                    //                            OGenericPayrollStatement.Add(OGenericObjStatement);
                                    //                        }
                                    //                    }
                                    //                }
                                    //            }
                                    //        }
                                    //    }
                                    //}
                                    //}
                                    //    }
                                    //}
                                    //}
                                    //else
                                    //{
                                    //    foreach (var item1 in trsch.TrainingSession)
                                    //    {
                                    //        if (item1.TrainingProgramCalendar.StartDate >= pFromDate && item1.TrainingProgramCalendar.EndDate <= pToDate)
                                    //        {
                                    //            string prg = item1.TrainingProgramCalendar.ProgramList.SubjectDetails.ToString();

                                    //            foreach (var item2 in item.TrainigDetailSessionInfo)
                                    //            {
                                    //                // string prg = item1.TrainingCalendar.ProgramList.SubjectDetails.ToString();
                                    //                if (a.Employee != null && item2.IsPresent == true)
                                    //                {
                                    //                    GenericField100 OGenericObjStatement = new GenericField100
                                    //                    {
                                    //                        Fld1 = a.Employee.EmpCode == null ? "" : a.Employee.EmpCode.ToString(),
                                    //                        Fld2 = a.Employee.EmpName == null ? "" : a.Employee.EmpName.FullNameLFM.ToString(),
                                    //                        Fld3 = item.TrainingSchedule == null ? "" : item.TrainingSchedule.TrainingBatchName.ToString(),
                                    //                        Fld4 = prg == null ? "" : prg.ToString(),
                                    //                        Fld5 = item1.SessionDate == null ? "" : item1.SessionDate.Value.ToShortDateString(),
                                    //                        Fld6 = item1.SessionType == null ? "" : item1.SessionType.LookupVal.ToString(),
                                    //                        Fld7 = item1.StartTime == null ? "" : item1.StartTime.ToString(),
                                    //                        Fld8 = item1.EndTime == null ? "" : item1.EndTime.ToString(),
                                    //                        Fld9 = item2.TrainingFeedback == null ? "" : item2.TrainingFeedback.ToString(),
                                    //                        Fld10 = item2.TrainingRating == null ? "" : item2.TrainingRating.ToString(),
                                    //                        Fld11 = item2.FacultyFeedback == null ? "" : item2.FacultyFeedback.ToString(),
                                    //                        Fld12 = item2.FaultyRating == null ? "" : item2.FaultyRating.ToString(),
                                    //                    };
                                    //                    if (comp)
                                    //                    {
                                    //                        OGenericObjStatement.Fld99 = GeoDataInd.Company_Name;
                                    //                    }
                                    //                    if (div)
                                    //                    {
                                    //                        OGenericObjStatement.Fld98 = GeoDataInd.Division_Name;
                                    //                    }
                                    //                    if (loca)
                                    //                    {
                                    //                        OGenericObjStatement.Fld97 = GeoDataInd.LocDesc;
                                    //                    }
                                    //                    if (dept)
                                    //                    {
                                    //                        OGenericObjStatement.Fld96 = GeoDataInd.DeptDesc;
                                    //                    }
                                    //                    if (grp)
                                    //                    {
                                    //                        OGenericObjStatement.Fld95 = GeoDataInd.Group_Name;
                                    //                    }
                                    //                    if (unit)
                                    //                    {
                                    //                        OGenericObjStatement.Fld94 = GeoDataInd.Unit_Name;
                                    //                    }
                                    //                    if (grade)
                                    //                    {
                                    //                        OGenericObjStatement.Fld93 = PaydataInd.Grade_Name;
                                    //                    }
                                    //                    if (lvl)
                                    //                    {
                                    //                        OGenericObjStatement.Fld92 = PaydataInd.Level_Name;
                                    //                    }
                                    //                    if (jobstat)
                                    //                    {
                                    //                        OGenericObjStatement.Fld91 = GeoDataInd.JobStatus_Id.ToString();
                                    //                    }
                                    //                    if (job)
                                    //                    {
                                    //                        OGenericObjStatement.Fld90 = FuncdataInd.Job_Name;
                                    //                    }
                                    //                    if (jobpos)
                                    //                    {
                                    //                        OGenericObjStatement.Fld89 = FuncdataInd.JobPositionDesc;
                                    //                    }
                                    //                    if (emp)
                                    //                    {
                                    //                        OGenericObjStatement.Fld88 = a.Employee.ToString();
                                    //                    }
                                    //                    OGenericPayrollStatement.Add(OGenericObjStatement);
                                    //                }
                                    //            }
                                    //        }
                                    //    }
                                    //}
                                    //}
                                    //}
                                }
                            }
                            return OGenericPayrollStatement;
                        }

                        break;
                    case "NOTASSIGNTRAINING":
                        var OTrnEvnatrNot = new List<EmployeeTraining>();
                        foreach (var item in EmpPayrollIdList)
                        {

                            var OTrnEvna122 = db.EmployeeTraining
                                .Include(e => e.TrainingDetails)
                                .Include(e => e.Employee)
                                .Include(e => e.Employee.GeoStruct)
                                .Include(e => e.Employee.PayStruct)
                                .Include(e => e.Employee.FuncStruct)
                                .Include(e => e.Employee.EmpName)

                              .Where(e => e.Employee.Id == item)
                               .FirstOrDefault();

                            if (OTrnEvna122 != null)
                            {
                                OTrnEvnatrNot.Add(OTrnEvna122);
                            }

                        }
                        if (OTrnEvnatrNot == null || OTrnEvnatrNot.Count() == 0)
                        {
                            return null;
                        }
                        else
                        {
                            var emp = false;
                            var dept = false;
                            var loca = false;
                            var comp = false;
                            var grp = false;
                            var unit = false;
                            var div = false;
                            var regn = false;
                            var grade = false;
                            var lvl = false;
                            var jobstat = false;
                            var job = false;
                            var jobpos = false;
                            var vc = db.LookupValue.Where(a => forithead.Contains(a.Id.ToString())).ToList();

                            foreach (var item in vc)
                            {
                                //if (item.LookupVal.ToUpper() == "MONTH")
                                //{
                                //    month = true;
                                //}
                                if (item.LookupVal.ToUpper() == "LOCATION")
                                {

                                    loca = true;
                                }
                                if (item.LookupVal.ToUpper() == "EMPLOYEE")
                                {
                                    emp = true;
                                }
                                if (item.LookupVal.ToUpper() == "DEPARTMENT")
                                {
                                    dept = true;
                                }
                                if (item.LookupVal.ToUpper() == "COMPANY")
                                {
                                    comp = true;
                                }
                                if (item.LookupVal.ToUpper() == "GROUP")
                                {
                                    grp = true;
                                }
                                if (item.LookupVal.ToUpper() == "UNIT")
                                {
                                    unit = true;
                                }
                                if (item.LookupVal.ToUpper() == "DIVISION")
                                {
                                    div = true;
                                }
                                if (item.LookupVal.ToUpper() == "REGION")
                                {
                                    regn = true;
                                }
                                if (item.LookupVal.ToUpper() == "GRADE")
                                {
                                    grade = true;
                                }
                                if (item.LookupVal.ToUpper() == "LEVEL")
                                {
                                    lvl = true;
                                }
                                if (item.LookupVal.ToUpper() == "JOBSTATUS")
                                {
                                    jobstat = true;
                                }

                                if (item.LookupVal.ToUpper() == "JOB")
                                {
                                    job = true;
                                }
                                if (item.LookupVal.ToUpper() == "JOBPOSITION")
                                {
                                    jobpos = true;
                                }
                            }

                            List<Utility.ReportClass> GeoData = new List<Utility.ReportClass>();
                            List<Utility.ReportClass> Paydata = new List<Utility.ReportClass>();
                            List<Utility.ReportClass> Funcdata = new List<Utility.ReportClass>();

                            Utility.ReportClass GeoDataInd = new Utility.ReportClass();
                            Utility.ReportClass PaydataInd = new Utility.ReportClass();
                            Utility.ReportClass FuncdataInd = new Utility.ReportClass();

                            GeoData = GetViewData(0);
                            Paydata = GetViewData(1);
                            Funcdata = GetViewData(2);

                            foreach (var a in OTrnEvnatrNot)
                            {


                                int geoid = a.Employee.GeoStruct.Id;

                                int payid = a.Employee.PayStruct.Id;

                                int funid = a.Employee.FuncStruct.Id;

                                GeoDataInd = GetViewDataIndiv(geoid, payid, funid, GeoData, 0);
                                PaydataInd = GetViewDataIndiv(geoid, payid, funid, Paydata, 1);
                                FuncdataInd = GetViewDataIndiv(geoid, payid, funid, Funcdata, 2);

                                //foreach (var item1 in a.TrainingDetails)
                                //{
                                if (a.TrainingDetails.Count() == 0)
                                {

                                    GenericField100 OGenericObjStatement = new GenericField100
                                    {
                                        Fld1 = a.Employee.EmpCode == null ? "" : a.Employee.EmpCode.ToString(),
                                        Fld2 = a.Employee.EmpName == null ? "" : a.Employee.EmpName.FullNameLFM.ToString(),
                                        Fld3 = GeoDataInd == null ? "" : GeoDataInd.LocDesc,
                                        Fld4 = GeoDataInd == null ? "" : GeoDataInd.DeptDesc,
                                        Fld5 = FuncdataInd == null ? "" : FuncdataInd.JobPositionDesc,

                                    };
                                    if (comp)
                                    {
                                        OGenericObjStatement.Fld99 = GeoDataInd.Company_Name;
                                    }
                                    if (div)
                                    {
                                        OGenericObjStatement.Fld98 = GeoDataInd.Division_Name;
                                    }
                                    if (loca)
                                    {
                                        OGenericObjStatement.Fld97 = GeoDataInd.LocDesc;
                                    }
                                    if (dept)
                                    {
                                        OGenericObjStatement.Fld96 = GeoDataInd.DeptDesc;
                                    }
                                    if (grp)
                                    {
                                        OGenericObjStatement.Fld95 = GeoDataInd.Group_Name;
                                    }
                                    if (unit)
                                    {
                                        OGenericObjStatement.Fld94 = GeoDataInd.Unit_Name;
                                    }
                                    if (grade)
                                    {
                                        OGenericObjStatement.Fld93 = PaydataInd.Grade_Name;
                                    }
                                    if (lvl)
                                    {
                                        OGenericObjStatement.Fld92 = PaydataInd.Level_Name;
                                    }
                                    if (jobstat)
                                    {
                                        OGenericObjStatement.Fld91 = GeoDataInd.JobStatus_Id.ToString();
                                    }
                                    if (job)
                                    {
                                        OGenericObjStatement.Fld90 = FuncdataInd.Job_Name;
                                    }
                                    if (jobpos)
                                    {
                                        OGenericObjStatement.Fld89 = FuncdataInd.JobPositionDesc;
                                    }
                                    if (emp)
                                    {
                                        OGenericObjStatement.Fld88 = a.Employee.ToString();
                                    }
                                    OGenericPayrollStatement.Add(OGenericObjStatement);
                                }

                                // }
                            }
                            return OGenericPayrollStatement;
                        }
                        break;
                    //case "FACULTYWISETRAININGCALENDAR":
                    //    var OFTrnCal = db.TrainingSchedule
                    //          .Include(a => a.City)
                    //          .Include(a => a.Expenses)
                    //          .Include(a => a.Session)
                    //          .Include(a => a.Session.Select(e => e.Faculty.FacultyType))
                    //          .Include(a => a.Session.Select(e => e.Faculty.EmpID))
                    //          .Include(a => a.Session.Select(e => e.Faculty.EmpID.EmpName))
                    //          .Include(a => a.TrainingCalendar)
                    //          .Include(a => a.TrainingCalendar.ProgramList)
                    //          .Include(a => a.TrainingCalendar.ProgramList.TrainingType)
                    //          .Include(a => a.TrainingCalendar.ProgramList.Budget)
                    //          .Include(a => a.Venue).ToList();
                    //    if (OFTrnCal == null || OFTrnCal.Count() == 0)
                    //    {
                    //        return null;
                    //    }
                    //    else
                    //    {
                    //        foreach (var val in OFTrnCal)
                    //        {
                    //            if (val.TrainingCalendar != null && val.Session.Count > 0)
                    //            {
                    //                foreach (var aa in val.Session)
                    //                {
                    //                    if (aa.Faculty != null)
                    //                    {
                    //                        if (aa.Faculty.FacultyType.LookupVal != "EXTERNAL")
                    //                        {
                    //                            Employee a = aa.Faculty.EmpID;

                    //                            if (a != null)
                    //                            {
                    //                                var cat = val.TrainingCalendar.ProgramList.TrainingType.LookupVal.ToString();
                    //                                //foreach (var b in cat)
                    //                                //{
                    //                                var pname = val.TrainingCalendar.ProgramList.SubjectDetails.ToString();

                    //                                GenericField100 OGenericObjStatement = new GenericField100()
                    //                                {
                    //                                    Fld1 = a.EmpCode == null ? "" : a.EmpCode.ToString(), //Employee code
                    //                                    Fld2 = a.EmpName == null ? "" : a.EmpName.FullNameFML.ToString(),  //Employee Name
                    //                                    Fld3 = val.City == null ? "" : val.City.Name == null ? "" : val.City.Name.ToString(), //Institute
                    //                                    Fld4 = val.TrainingCalendar.StartDate == null ? "" : val.TrainingCalendar.StartDate.Value.ToShortDateString(), // StartDate
                    //                                    Fld5 = val.TrainingCalendar.EndDate == null ? "" : val.TrainingCalendar.EndDate.Value.ToShortDateString(), //EndDate
                    //                                    Fld6 = cat == null ? "" : cat.ToString(), //Category
                    //                                    Fld7 = pname == null ? "" : pname.ToString() //ProgramName

                    //                                };
                    //                                OGenericPayrollStatement.Add(OGenericObjStatement);
                    //                            }
                    //                        }
                    //                        else
                    //                        {
                    //                            //  Employee a = aa.Faculty.EmpID;

                    //                            //  if (a != null)
                    //                            //  {
                    //                            var cat = val.TrainingCalendar.ProgramList.TrainingType.LookupVal.ToString();
                    //                            //foreach (var b in cat)
                    //                            //{
                    //                            var pname = val.TrainingCalendar.ProgramList.SubjectDetails.ToString();

                    //                            GenericField100 OGenericObjStatement = new GenericField100()
                    //                            {
                    //                                Fld1 = aa.Faculty.Code, //Employee code
                    //                                Fld2 = aa.Faculty.Name,  //Employee Name
                    //                                Fld3 = val.City == null ? "" : val.City.Name == null ? "" : val.City.Name.ToString(), //Institute
                    //                                Fld4 = val.TrainingCalendar.StartDate == null ? "" : val.TrainingCalendar.StartDate.Value.ToShortDateString(), // StartDate
                    //                                Fld5 = val.TrainingCalendar.EndDate == null ? "" : val.TrainingCalendar.EndDate.Value.ToShortDateString(), //EndDate
                    //                                Fld6 = cat == null ? "" : cat.ToString(), //Category
                    //                                Fld7 = pname == null ? "" : pname.ToString() //ProgramName

                    //                            };
                    //                            OGenericPayrollStatement.Add(OGenericObjStatement);
                    //                            // }
                    //                        }
                    //                    }
                    //                }
                    //            }

                    //        }
                    //        return OGenericPayrollStatement;
                    //    }
                    //    break;

                    //case "PROGRAMWISETRAININGCALENDAR":
                    //    var OPrTranCal = db.Category
                    //        .Include(a => a.SubCategory)
                    //        .Include(a => a.SubCategory.Select(e => e.ProgramList))
                    //        .Where(a => a.Id != null).ToList();

                    //    if (OPrTranCal == null || OPrTranCal.Count() == 0)
                    //    {
                    //        return null;
                    //    }
                    //    else
                    //    {

                    //        foreach (var tcal in OPrTranCal)
                    //        {
                    //            foreach (var sub in tcal.SubCategory)
                    //            {
                    //                if (sub != null)
                    //                {
                    //                    foreach (var prgl in sub.ProgramList)
                    //                    {
                    //                        var ypa = db.TrainingSchedule
                    //                            .Include(a => a.TrainingCalendar.ProgramList)
                    //                            .Include(a => a.Expenses)
                    //                            .Include(a => a.City)
                    //                            .Include(a => a.Venue)
                    //                            .Include(a => a.TrainingCalendar)
                    //                            .Include(a => a.TrainingCalendar.ProgramList.TrainingType)
                    //                            .Where(a => a.TrainingCalendar.ProgramList.Id == prgl.Id)
                    //                            .ToList();

                    //                        if (ypa.Count > 0)
                    //                        {
                    //                            foreach (var y in ypa)
                    //                            {
                    //                                if (y.TrainingCalendar != null)
                    //                                {
                    //                                    var cat = tcal.Details == null ? "" : tcal.Details.ToString();
                    //                                    var sd1 = y.TrainingCalendar.StartDate.Value.ToShortDateString();
                    //                                    var ed1 = y.TrainingCalendar.EndDate.Value.ToShortDateString();
                    //                                    var venue = y.Venue == null ? "" : y.Venue.Name.ToString();
                    //                                    var place = y.City == null ? "" : y.City.Name.ToString();
                    //                                    var ff = y.Expenses == null ? "" : y.Expenses.FoodFees.ToString();
                    //                                    var mf = y.Expenses == null ? "" : y.Expenses.MiscFees.ToString();
                    //                                    var sf = y.Expenses == null ? "" : y.Expenses.StayFees.ToString();
                    //                                    var trnf = y.Expenses == null ? "" : y.Expenses.TrainingFees.ToString();
                    //                                    var tf = y.Expenses == null ? "" : y.Expenses.TravelFees.ToString();
                    //                                    var pn = y.TrainingCalendar.ProgramList.SubjectDetails.ToString();
                    //                                    var su = y.TrainingCalendar.ProgramList.Subject.ToString();
                    //                                    var tt = y.TrainingCalendar.ProgramList.TrainingType.LookupVal.ToString();

                    //                                    GenericField100 OGenericObjStatement = new GenericField100()
                    //                                    {
                    //                                        Fld1 = sd1.ToString(), //startdate
                    //                                        Fld2 = ed1.ToString(), //enddaate
                    //                                        Fld3 = cat.ToString(), //category
                    //                                        Fld4 = venue.ToString(), //venue
                    //                                        Fld5 = place.ToString(), //place
                    //                                        Fld6 = ff.ToString(), //food fees
                    //                                        Fld7 = mf.ToString(), //misc fees
                    //                                        Fld8 = sf.ToString(), // stay fees
                    //                                        Fld9 = trnf.ToString(), //training fees
                    //                                        Fld10 = tf.ToString(), //travel fees
                    //                                        Fld11 = pn.ToString(), //program name
                    //                                        Fld12 = su.ToString(), //Subject 
                    //                                        Fld13 = tt.ToString(), //Training Type

                    //                                    };
                    //                                    OGenericPayrollStatement.Add(OGenericObjStatement);
                    //                                }
                    //                            }
                    //                        }
                    //                    }
                    //                }
                    //            }

                    //        }
                    //        return OGenericPayrollStatement;
                    //    }

                    //    break;

                    case "EMPSTATUS":
                        var OEmpstatus = db.EmployeePayroll
                            .Include(e => e.Employee)

                            .Include(e => e.Employee.EmpName)
                            .Include(e => e.Employee.PayStruct.JobStatus)
                              .Include(e => e.Employee.PayStruct.JobStatus.EmpStatus)
                            .Where(e => EmpPayrollIdList.Contains(e.Id)).ToList();
                        if (OEmpstatus == null || OEmpstatus.Count == 0)
                        {
                            return null;
                        }
                        else
                        {
                            foreach (var ca in OEmpstatus)
                            {
                                GenericField100 OGenericObjStatement = new GenericField100
                                {
                                    Fld2 = ca.Employee.EmpCode,
                                    Fld3 = ca.Employee.EmpName.FullNameFML,
                                    Fld4 = ca.Employee != null && ca.Employee.PayStruct != null && ca.Employee.PayStruct.JobStatus != null ? ca.Employee.PayStruct.JobStatus.EmpStatus.LookupVal : null,
                                    // Fld37 = ca.Employee.PayStruct != null && ca.Employee.PayStruct.Grade != null ? ca.Employee.PayStruct.Grade.Name : null,
                                };
                                OGenericPayrollStatement.Add(OGenericObjStatement);
                            }
                            return OGenericPayrollStatement;
                        }

                        break;

                    case "JOBSTATUS":
                        var OGeoJobStatusData = db.Company
                        .Include(e => e.Address)
                        .Include(e => e.ContactDetails)
                        .Include(e => e.JobStatus)
                        .Include(e => e.JobStatus.Select(r => r.EmpActingStatus))
                         .Include(e => e.JobStatus.Select(r => r.EmpStatus)).AsNoTracking()
                        .Where(d => d.Id == CompanyId).AsParallel().SingleOrDefault();

                        if (OGeoJobStatusData == null)
                        {
                            return null;
                        }
                        else
                        {
                            foreach (var ca in OGeoJobStatusData.JobStatus)
                            {
                                GenericField100 OGenericGeoObjStatement = new GenericField100()
                                {
                                    Fld1 = ca.Id.ToString(),
                                    Fld2 = ca.EmpActingStatus != null ? ca.EmpActingStatus.LookupVal.ToString() : null,
                                    Fld3 = ca.EmpStatus != null ? ca.EmpStatus.LookupVal.ToString() : null

                                };
                                //write data to generic class
                                OGenericPayrollStatement.Add(OGenericGeoObjStatement);
                            }
                            return OGenericPayrollStatement;
                        }

                        break;

                    case "LEVEL":
                        var rptleveldata = db.Company
                        .Include(e => e.Level)
                        .Where(d => d.Id == CompanyId).SingleOrDefault();

                        if (rptleveldata == null)
                        {
                            return null;
                        }
                        else
                        {
                            foreach (var ca in rptleveldata.Level)
                            {
                                GenericField100 OGenericGeoObjStatement = new GenericField100()
                                {
                                    Fld1 = ca.Id.ToString(),
                                    Fld2 = ca.Code,
                                    Fld3 = ca.Name
                                };
                                //write data to generic class
                                OGenericPayrollStatement.Add(OGenericGeoObjStatement);
                            }
                            return OGenericPayrollStatement;
                        }
                        break;

                    //case "HANDICAP":
                    //    var OEmpHandi = db.EmployeePayroll
                    //        .Include(e => e.Employee)

                    //        .Include(e => e.Employee.EmpName)
                    //        .Include(e => e.Employee.EmpOffInfo)
                    //        .Where(e => EmpPayrollIdList.Contains(e.Id)).ToList();
                    //    if (OEmpHandi == null || OEmpHandi.Count == 0)
                    //    {
                    //        return null;
                    //    }
                    //    else
                    //    {
                    //        foreach (var ca in OEmpHandi)
                    //        {
                    //            GenericField100 OGenericObjStatement = new GenericField100
                    //            {
                    //                Fld2 = ca.Employee.EmpCode,
                    //                Fld3 = ca.Employee.EmpName.FullNameFML,
                    //                Fld4 = ca.Employee != null && ca.Employee.EmpOffInfo != null && ca.Employee.EmpOffInfo.SelfHandicap != null ? ca.Employee.EmpOffInfo.SelfHandicap.ToString() : null,
                    //            };
                    //            OGenericPayrollStatement.Add(OGenericObjStatement);
                    //        }
                    //        return OGenericPayrollStatement;


                    //    }
                    //    break;

                    //case "TRAININGBUDGET":
                    //    var OEmpReligion = db.OrgTraining
                    //        .Include(e => e.TrainingCalendar)

                    //        .Include(e => e.Employee.EmpName)
                    //        .Include(e => e.Employee.EmpSocialInfo)
                    //        .Include(e => e.Employee.EmpSocialInfo.Religion)
                    //       .Include(e => e.Employee.EmpSocialInfo.Caste)
                    //       .Include(e => e.Employee.EmpSocialInfo.SubCaste)
                    //       .Include(e => e.Employee.EmpSocialInfo.Category)
                    //        .Where(e => EmpPayrollIdList.Contains(e.Id)).ToList();
                    //    if (OEmpReligion == null || OEmpReligion.Count == 0)
                    //    {
                    //        return null;
                    //    }
                    //    else
                    //    {
                    //        foreach (var ca in OEmpReligion)
                    //        {
                    //            GenericField100 OGenericObjStatement = new GenericField100
                    //            {
                    //                Fld2 = ca.Employee.EmpCode,
                    //                Fld3 = ca.Employee.EmpName.FullNameFML,
                    //                Fld4 = ca.Employee != null && ca.Employee.EmpSocialInfo != null && ca.Employee.EmpSocialInfo.Religion != null ? ca.Employee.EmpSocialInfo.Religion.LookupVal.ToString() : null,
                    //                Fld5 = ca.Employee != null && ca.Employee.EmpSocialInfo != null && ca.Employee.EmpSocialInfo.Category != null ? ca.Employee.EmpSocialInfo.Category.LookupVal.ToString() : null,
                    //                Fld6 = ca.Employee != null && ca.Employee.EmpSocialInfo != null && ca.Employee.EmpSocialInfo.Caste != null ? ca.Employee.EmpSocialInfo.Caste.LookupVal.ToString() : null,
                    //                Fld7 = ca.Employee != null && ca.Employee.EmpSocialInfo != null && ca.Employee.EmpSocialInfo.SubCaste != null ? ca.Employee.EmpSocialInfo.SubCaste.LookupVal.ToString() : null,
                    //            };
                    //            OGenericPayrollStatement.Add(OGenericObjStatement);
                    //        }
                    //        return OGenericPayrollStatement;
                    //    }
                    //    break;

                    //case "TRAININGBUDGET":
                    //    var OApptraBud = db.YearlyProgramAssignment.Include(a => a.ProgramList).Include(a => a.ProgramList.Budget).Include(a => a.ProgramList.TrainingType).ToList();

                    //    if (OApptraBud == null || OApptraBud.Count() == 0)
                    //    {
                    //        return null;
                    //    }
                    //    else
                    //    {
                    //        foreach (var item in OApptraBud)
                    //        {
                    //            foreach (var ca in item.ProgramList.Budget)
                    //            {
                    //                var sd1 = item.StartDate == null ? "" : item.StartDate.Value.ToShortDateString();
                    //                var ed1 = item.EndDate == null ? "" : item.EndDate.Value.ToShortDateString();
                    //                var pn = item.ProgramList.SubjectDetails.ToString();
                    //                var su = item.ProgramList.Subject.ToString();
                    //                var tt = item.ProgramList.TrainingType.LookupVal.ToString();
                    //                var amt = ca.BudgetCredit == null ? "" : ca.BudgetCredit.ToString();

                    //                GenericField100 OGenericObjStatement = new GenericField100()
                    //                {
                    //                    Fld2 = sd1.ToString(),//start date    
                    //                    Fld3 = ed1.ToString(),//end date
                    //                    Fld4 = pn.ToString(),// programme name
                    //                    Fld5 = su.ToString(),// subject
                    //                    Fld6 = tt.ToString(),//type
                    //                    Fld7 = amt.ToString(),//Amount
                    //                };
                    //                OGenericPayrollStatement.Add(OGenericObjStatement);
                    //            }
                    //        }
                    //        return OGenericPayrollStatement;
                    //    }
                    //    break;

                    case "RELIGION":
                        var OEmpReligion = db.EmployeePayroll
                            .Include(e => e.Employee)

                            .Include(e => e.Employee.EmpName)
                            .Include(e => e.Employee.EmpSocialInfo)
                            .Include(e => e.Employee.EmpSocialInfo.Religion)
                           .Include(e => e.Employee.EmpSocialInfo.Caste)
                           .Include(e => e.Employee.EmpSocialInfo.SubCaste)
                           .Include(e => e.Employee.EmpSocialInfo.Category)
                            .Where(e => EmpPayrollIdList.Contains(e.Id)).ToList();
                        if (OEmpReligion == null || OEmpReligion.Count == 0)
                        {
                            return null;
                        }
                        else
                        {
                            foreach (var ca in OEmpReligion)
                            {
                                GenericField100 OGenericObjStatement = new GenericField100
                                {
                                    Fld2 = ca.Employee.EmpCode,
                                    Fld3 = ca.Employee.EmpName.FullNameFML,
                                    Fld4 = ca.Employee != null && ca.Employee.EmpSocialInfo != null && ca.Employee.EmpSocialInfo.Religion != null ? ca.Employee.EmpSocialInfo.Religion.LookupVal.ToString() : null,
                                    Fld5 = ca.Employee != null && ca.Employee.EmpSocialInfo != null && ca.Employee.EmpSocialInfo.Category != null ? ca.Employee.EmpSocialInfo.Category.LookupVal.ToString() : null,
                                    Fld6 = ca.Employee != null && ca.Employee.EmpSocialInfo != null && ca.Employee.EmpSocialInfo.Caste != null ? ca.Employee.EmpSocialInfo.Caste.LookupVal.ToString() : null,
                                    Fld7 = ca.Employee != null && ca.Employee.EmpSocialInfo != null && ca.Employee.EmpSocialInfo.SubCaste != null ? ca.Employee.EmpSocialInfo.SubCaste.LookupVal.ToString() : null,
                                };
                                OGenericPayrollStatement.Add(OGenericObjStatement);
                            }
                            return OGenericPayrollStatement;
                        }
                        break;
                    //case "EMAIL":
                    //    var OEmpEmail = db.EmployeePayroll
                    //        .Include(e => e.Employee)

                    //        .Include(e => e.Employee.EmpName)
                    //        .Include(e => e.Employee.ResContact)
                    //        .Where(e => EmpPayrollIdList.Contains(e.Id)).ToList();
                    //    if (OEmpEmail == null || OEmpEmail.Count == 0)
                    //    {
                    //        return null;
                    //    }
                    //    else
                    //    {
                    //        foreach (var ca in OEmpEmail)
                    //        {
                    //            GenericField100 OGenericObjStatement = new GenericField100
                    //            {
                    //                Fld2 = ca.Employee.EmpCode,
                    //                Fld3 = ca.Employee.EmpName.FullNameFML,
                    //                Fld4 = ca.Employee != null && ca.Employee.ResContact != null && ca.Employee.ResContact != null ? ca.Employee.ResContact.EmailId : null,
                    //            };
                    //            OGenericPayrollStatement.Add(OGenericObjStatement);
                    //        }
                    //        return OGenericPayrollStatement;
                    //    }
                    //    break;
                    //case "PFAPPLICABLE":
                    //    var OEmpPFAppl = db.EmployeePayroll
                    //        .Include(e => e.Employee)

                    //        .Include(e => e.Employee.EmpName)
                    //        .Include(e => e.Employee.EmpOffInfo.NationalityID)
                    //        .Where(e => EmpPayrollIdList.Contains(e.Id)).ToList();
                    //    if (OEmpPFAppl == null || OEmpPFAppl.Count == 0)
                    //    {
                    //        return null;
                    //    }
                    //    else
                    //    {
                    //        foreach (var ca in OEmpPFAppl)
                    //        {
                    //            GenericField100 OGenericObjStatement = new GenericField100
                    //            {
                    //                Fld2 = ca.Employee.EmpCode,
                    //                Fld3 = ca.Employee.EmpName.FullNameFML,
                    //                Fld4 = ca.Employee != null && ca.Employee.EmpOffInfo != null && ca.Employee.EmpOffInfo.PFAppl != null ? ca.Employee.EmpOffInfo.PFAppl.ToString() : null,
                    //                Fld5 = ca.Employee != null && ca.Employee.EmpOffInfo != null && ca.Employee.EmpOffInfo.NationalityID != null && ca.Employee.EmpOffInfo.NationalityID.PFNo != null ? ca.Employee.EmpOffInfo.NationalityID.PFNo : null,
                    //            };
                    //            OGenericPayrollStatement.Add(OGenericObjStatement);
                    //        }
                    //        return OGenericPayrollStatement;
                    //    }
                    //    break;
                    case "GENDER":
                        var OEmpGender = db.EmployeePayroll
                            .Include(e => e.Employee)

                            .Include(e => e.Employee.EmpName)
                            .Include(e => e.Employee.Gender)
                            .Where(e => EmpPayrollIdList.Contains(e.Id)).ToList();
                        if (OEmpGender == null || OEmpGender.Count == 0)
                        {
                            return null;
                        }
                        else
                        {
                            foreach (var ca in OEmpGender)
                            {
                                GenericField100 OGenericObjStatement = new GenericField100
                                {
                                    Fld2 = ca.Employee.EmpCode,
                                    Fld3 = ca.Employee.EmpName.FullNameFML,
                                    Fld4 = ca.Employee != null && ca.Employee.Gender != null ? ca.Employee.Gender.LookupVal.ToString() : null,
                                };
                                OGenericPayrollStatement.Add(OGenericObjStatement);
                            }
                            return OGenericPayrollStatement;
                        }
                        break;
                    case "MARITIALSTATUS":
                        var OEmpMaritial = db.EmployeePayroll
                            .Include(e => e.Employee)

                            .Include(e => e.Employee.EmpName)
                            .Include(e => e.Employee.MaritalStatus).AsNoTracking()
                            .Where(e => EmpPayrollIdList.Contains(e.Id)).AsParallel().ToList();
                        if (OEmpMaritial == null || OEmpMaritial.Count == 0)
                        {
                            return null;
                        }
                        else
                        {
                            foreach (var ca in OEmpMaritial)
                            {
                                GenericField100 OGenericObjStatement = new GenericField100
                                {
                                    Fld2 = ca.Employee.EmpCode,
                                    Fld3 = ca.Employee.EmpName.FullNameFML,
                                    Fld4 = ca.Employee != null && ca.Employee.MaritalStatus != null ? ca.Employee.MaritalStatus.LookupVal.ToString() : null,
                                };
                                OGenericPayrollStatement.Add(OGenericObjStatement);
                            }
                            return OGenericPayrollStatement;
                        }
                        break;
                    //case "HOBBIES":
                    //    var OEmpHobbies = db.EmployeePayroll
                    //        .Include(e => e.Employee)

                    //        .Include(e => e.Employee.EmpName)
                    //        .Include(e => e.Employee.EmpAcademicInfo.Hobby)
                    //        .Where(e => EmpPayrollIdList.Contains(e.Id) && e.Employee.EmpAcademicInfo != null && e.Employee.EmpAcademicInfo.Hobby.Count > 0).ToList();
                    //    if (OEmpHobbies == null || OEmpHobbies.Count == 0)
                    //    {
                    //        return null;
                    //    }
                    //    else
                    //    {
                    //        foreach (var ca in OEmpHobbies)
                    //        {
                    //            if (ca.Employee.EmpAcademicInfo != null)
                    //            {


                    //                var v2 = ca.Employee.EmpAcademicInfo.Hobby.ToList();
                    //                foreach (var item in v2)
                    //                {
                    //                    GenericField100 OGenericObjStatement = new GenericField100
                    //                    {
                    //                        Fld2 = ca.Employee.EmpCode,
                    //                        Fld3 = ca.Employee.EmpName.FullNameFML,
                    //                        Fld4 = item.HobbyName.ToString()
                    //                        //ca.Employee != null && ca.Employee.EmpAcademicInfo != null && ca.Employee.EmpAcademicInfo.Hobby != null ? ca.Employee.EmpAcademicInfo.Hobby.ToString() : null,
                    //                    };
                    //                    OGenericPayrollStatement.Add(OGenericObjStatement);
                    //                }
                    //            }
                    //        }
                    //        return OGenericPayrollStatement;
                    //    }
                    //    break;
                    //case "SKILL":
                    //    var OEmpSkills = db.EmployeePayroll
                    //        .Include(e => e.Employee)

                    //        .Include(e => e.Employee.EmpName)
                    //        .Include(e => e.Employee.EmpAcademicInfo.Skill)
                    //        .Where(e => EmpPayrollIdList.Contains(e.Id)).ToList();
                    //    if (OEmpSkills == null || OEmpSkills.Count == 0)
                    //    {
                    //        return null;
                    //    }
                    //    else
                    //    {
                    //        foreach (var ca in OEmpSkills)
                    //        {
                    //            if (ca.Employee.EmpAcademicInfo != null)
                    //            {


                    //                var v2 = ca.Employee.EmpAcademicInfo.Skill.Select(a => a.Name).FirstOrDefault();


                    //                GenericField100 OGenericObjStatement = new GenericField100
                    //                {
                    //                    Fld2 = ca.Employee.EmpCode,
                    //                    Fld3 = ca.Employee.EmpName.FullNameFML,
                    //                    Fld4 = v2
                    //                };
                    //                OGenericPayrollStatement.Add(OGenericObjStatement);
                    //            }
                    //        }
                    //        return OGenericPayrollStatement;
                    //    }
                    //    break;
                    //case "LANGUAGE":
                    //    var OEmpLanguage = db.EmployeePayroll
                    //        .Include(e => e.Employee)

                    //        .Include(e => e.Employee.EmpName)
                    //        .Include(e => e.Employee.EmpAcademicInfo.LanguageSkill.Select(t => t.Language))

                    //        .Where(e => EmpPayrollIdList.Contains(e.Id) && e.Employee != null && e.Employee.EmpAcademicInfo != null && e.Employee.EmpAcademicInfo.LanguageSkill.Count > 0).ToList();
                    //    if (OEmpLanguage == null || OEmpLanguage.Count == 0)
                    //    {
                    //        return null;
                    //    }
                    //    else
                    //    {
                    //        foreach (var ca in OEmpLanguage)
                    //        {
                    //            if (ca.Employee.EmpAcademicInfo != null)
                    //            {


                    //                var v2 = ca.Employee.EmpAcademicInfo.LanguageSkill.Select(a => a.Language).FirstOrDefault();

                    //                foreach (var item in v2)
                    //                {


                    //                    GenericField100 OGenericObjStatement = new GenericField100
                    //                    {
                    //                        Fld2 = ca.Employee.EmpCode,
                    //                        Fld3 = ca.Employee.EmpName == null ? "" : ca.Employee.EmpName.FullNameFML,
                    //                        Fld4 = item.LanguageName.ToString()
                    //                    };
                    //                    OGenericPayrollStatement.Add(OGenericObjStatement);
                    //                }
                    //            }
                    //        }
                    //        return OGenericPayrollStatement;
                    //    }
                    //    break;
                    case "AGE":
                        var OEmpAge = db.EmployeePayroll
                            .Include(e => e.Employee)
                            .Include(e => e.Employee.EmpName)
                            .Include(e => e.Employee.ServiceBookDates)
                            .Where(e => EmpPayrollIdList.Contains(e.Id)).ToList();
                        if (OEmpAge == null || OEmpAge.Count == 0)
                        {
                            return null;
                        }
                        else
                        {
                            foreach (var ca in OEmpAge)
                            {
                                var dob = ca.Employee != null && ca.Employee.ServiceBookDates != null && ca.Employee.ServiceBookDates.BirthDate != null ? ca.Employee.ServiceBookDates.BirthDate : null;

                                int age = 0;
                                age = DateTime.Now.Year - dob.Value.Year;
                                if (DateTime.Now.DayOfYear < dob.Value.DayOfYear)
                                    age = age - 1;
                                var Age = age;

                                GenericField100 OGenericObjStatement = new GenericField100
                                {
                                    Fld2 = ca.Employee.EmpCode,
                                    Fld3 = ca.Employee.EmpName.FullNameFML,
                                    Fld4 = ca.Employee != null && ca.Employee.ServiceBookDates != null && ca.Employee.ServiceBookDates.BirthDate != null ? ca.Employee.ServiceBookDates.BirthDate.Value.ToShortDateString() : null,
                                    Fld5 = Age.ToString()
                                };
                                OGenericPayrollStatement.Add(OGenericObjStatement);
                            }
                            return OGenericPayrollStatement;
                        }
                        break;
                    case "VISAINFO":
                        var OEmpVisa = db.EmployeePayroll
                            .Include(e => e.Employee)
                            .Include(e => e.Employee.EmpName)
                            .Include(e => e.Employee.VisaDetails.Select(t => t.VisaType))
                              .Include(e => e.Employee.VisaDetails.Select(t => t.Country))
                             .Include(e => e.Employee).AsNoTracking()

                            .Where(e => EmpPayrollIdList.Contains(e.Id)).AsParallel().ToList();
                        if (OEmpVisa == null || OEmpVisa.Count == 0)
                        {
                            return null;
                        }
                        else
                        {
                            foreach (var ca in OEmpVisa)
                            {
                                if (ca.Employee.VisaDetails != null)
                                {



                                    //var v2 = ca.Employee.VisaDetails.ToList();
                                    foreach (var item in ca.Employee.VisaDetails)
                                    {
                                        GenericField100 OGenericObjStatement = new GenericField100
                                        {
                                            Fld2 = ca.Employee.EmpCode,
                                            Fld3 = ca.Employee.EmpName.FullNameFML,
                                            Fld4 = item.VisaType == null ? "" : item.VisaType.LookupVal.ToString(),
                                            Fld5 = item.Country == null ? "" : item.Country.Name.ToString(),
                                            Fld6 = item.IssueDate == null ? "" : item.IssueDate.Value.ToShortDateString(),
                                            Fld7 = item.ValidDate == null ? "" : item.ValidDate.Value.ToShortDateString(),
                                            Fld8 = item.IssueAt == null ? "" : item.IssueAt.ToString(),
                                        };
                                        OGenericPayrollStatement.Add(OGenericObjStatement);
                                    }
                                }
                            }
                            return OGenericPayrollStatement;
                        }
                        break;
                    //case "PASSPORTINFO":
                    //    var OEmpPassport = db.EmployeePayroll
                    //        .Include(e => e.Employee)

                    //        .Include(e => e.Employee.EmpName)
                    //        .Include(e => e.Employee.PassportDetails)
                    //        .Where(e => EmpPayrollIdList.Contains(e.Id)).ToList();
                    //    if (OEmpPassport == null || OEmpPassport.Count == 0)
                    //    {
                    //        return null;
                    //    }
                    //    else
                    //    {
                    //        foreach (var ca in OEmpPassport)
                    //        {
                    //            if (ca.Employee.PassportDetails != null)
                    //            {



                    //                foreach (var item in ca.Employee.PassportDetails)
                    //                {
                    //                    GenericField100 OGenericObjStatement = new GenericField100
                    //                    {
                    //                        Fld2 = ca.Employee.EmpCode,
                    //                        Fld3 = ca.Employee.EmpName.FullNameFML,
                    //                        Fld4 = item.PassportNo == null ? "" : item.PassportNo,
                    //                        Fld5 = item.IssuePlace == null ? "" : item.IssuePlace,
                    //                        Fld6 = item.IssueDate == null ? "" : item.IssueDate.Value.ToShortDateString(),
                    //                        Fld7 = item.ExpiryDate == null ? "" : item.ExpiryDate.Value.ToShortDateString(),
                    //                    };
                    //                    OGenericPayrollStatement.Add(OGenericObjStatement);
                    //                }
                    //            }
                    //        }
                    //        return OGenericPayrollStatement;
                    //    }
                    //    break;
                    //case "YRSOFSERVICE":
                    //    var OEmpService = db.EmployeePayroll
                    //        .Include(e => e.Employee)

                    //        .Include(e => e.Employee.EmpName)
                    //        .Include(e => e.Employee.ServiceBookDates)
                    //        .Where(e => EmpPayrollIdList.Contains(e.Id)).ToList();
                    //    if (OEmpService == null || OEmpService.Count == 0)
                    //    {
                    //        return null;
                    //    }
                    //    else
                    //    {
                    //        foreach (var ca in OEmpService)
                    //        {
                    //            var doj = ca.Employee != null && ca.Employee.ServiceBookDates != null && ca.Employee.ServiceBookDates.JoiningDate != null ? ca.Employee.ServiceBookDates.JoiningDate : null;

                    //            int age = 0;
                    //            age = DateTime.Now.Year - doj.Value.Year;
                    //            if (DateTime.Now.DayOfYear < doj.Value.DayOfYear)
                    //                age = age - 1;
                    //            var Age = age;

                    //            GenericField100 OGenericObjStatement = new GenericField100
                    //            {
                    //                Fld2 = ca.Employee.EmpCode,
                    //                Fld3 = ca.Employee.EmpName.FullNameFML,
                    //                Fld4 = ca.Employee != null && ca.Employee.ServiceBookDates != null && ca.Employee.ServiceBookDates.BirthDate != null ? ca.Employee.ServiceBookDates.BirthDate.Value.ToShortDateString() : null,
                    //                Fld5 = Age.ToString()
                    //            };
                    //            OGenericPayrollStatement.Add(OGenericObjStatement);
                    //        }
                    //        return OGenericPayrollStatement;
                    //    }
                    //    break;
                    case "BLOODGROUP":
                        var OEmpBloodGrp = db.EmployeePayroll
                            .Include(e => e.Employee)

                            .Include(e => e.Employee.EmpName)
                            .Include(e => e.Employee.EmpmedicalInfo.BloodGroup).AsNoTracking()
                            .Where(e => EmpPayrollIdList.Contains(e.Id)).AsParallel().ToList();
                        if (OEmpBloodGrp == null || OEmpBloodGrp.Count == 0)
                        {
                            return null;
                        }
                        else
                        {
                            foreach (var ca in OEmpBloodGrp)
                            {
                                if (ca.Employee.EmpmedicalInfo != null)
                                {

                                    GenericField100 OGenericObjStatement = new GenericField100
                                    {
                                        Fld2 = ca.Employee.EmpCode,
                                        Fld3 = ca.Employee.EmpName.FullNameFML,
                                        Fld4 = ca.Employee != null && ca.Employee.EmpmedicalInfo != null && ca.Employee.EmpmedicalInfo.BloodGroup != null ? ca.Employee.EmpmedicalInfo.BloodGroup.LookupVal.ToString() : null,
                                    };
                                    OGenericPayrollStatement.Add(OGenericObjStatement);

                                }
                            }
                            return OGenericPayrollStatement;
                        }
                        break;
                    case "EXEMPLOYEE":
                        var OEmpExEmp = db.EmployeePayroll
                            .Include(e => e.Employee)

                            .Include(e => e.Employee.EmpName)
                            .Include(e => e.Employee.ServiceBookDates)
                            .Where(e => EmpPayrollIdList.Contains(e.Id) && e.Employee.ServiceBookDates.ServiceLastDate != null).ToList();
                        if (OEmpExEmp == null || OEmpExEmp.Count == 0)
                        {
                            return null;
                        }
                        else
                        {
                            foreach (var ca in OEmpExEmp)
                            {

                                GenericField100 OGenericObjStatement = new GenericField100
                                {
                                    Fld2 = ca.Employee.EmpCode,
                                    Fld3 = ca.Employee.EmpName.FullNameFML,
                                    Fld4 = ca.Employee != null && ca.Employee.ServiceBookDates != null && ca.Employee.ServiceBookDates.ServiceLastDate != null ? ca.Employee.ServiceBookDates.ServiceLastDate.Value.ToShortDateString() : null,
                                };
                                OGenericPayrollStatement.Add(OGenericObjStatement);

                            }
                            return OGenericPayrollStatement;
                        }
                        break;
                    //case "BANKACCOUNT":
                    //    var OEmpAccountNo = db.EmployeePayroll
                    //        .Include(e => e.Employee)

                    //        .Include(e => e.Employee.EmpName)
                    //        .Include(e => e.Employee.EmpOffInfo)
                    //        .Include(e => e.Employee.EmpOffInfo.Bank.Branches)
                    //        .Where(e => EmpPayrollIdList.Contains(e.Id)).ToList();
                    //    if (OEmpAccountNo == null || OEmpAccountNo.Count == 0)
                    //    {
                    //        return null;
                    //    }
                    //    else
                    //    {
                    //        foreach (var ca in OEmpAccountNo)
                    //        {

                    //            GenericField100 OGenericObjStatement = new GenericField100
                    //            {
                    //                Fld2 = ca.Employee.EmpCode,
                    //                Fld3 = ca.Employee.EmpName.FullNameFML,
                    //                Fld4 = ca.Employee != null && ca.Employee.EmpOffInfo != null && ca.Employee.EmpOffInfo.Bank != null && ca.Employee.EmpOffInfo.Bank.Name != null ? ca.Employee.EmpOffInfo.Bank.Name.ToString() : null,
                    //                //Fld5 = ca.,
                    //                //Fld6 = ca.Name,
                    //                Fld7 = ca.Employee != null && ca.Employee.EmpOffInfo != null && ca.Employee.EmpOffInfo.AccountType != null ? ca.Employee.EmpOffInfo.AccountType.ToString() : null,
                    //                Fld8 = ca.Employee != null && ca.Employee.EmpOffInfo != null && ca.Employee.EmpOffInfo.AccountNo != null ? ca.Employee.EmpOffInfo.AccountNo : null,

                    //            };
                    //            OGenericPayrollStatement.Add(OGenericObjStatement);

                    //        }
                    //        return OGenericPayrollStatement;
                    //    }
                    //    break;
                    //case "FAMILYINFO":
                    //var OEmpFamily = db.EmployeePayroll
                    //    .Include(e => e.Employee)

                    //    .Include(e => e.Employee.EmpName)
                    //    .Include(e => e.Employee.FamilyDetails)
                    //    .Include(e => e.Employee.FamilyDetails.Select(t => t.Relation)).AsNoTracking()
                    //    .Where(e => EmpPayrollIdList.Contains(e.Id)).AsParallel().ToList();
                    //if (OEmpFamily == null || OEmpFamily.Count == 0)
                    //{
                    //    return null;
                    //}
                    //else
                    //{
                    //    foreach (var ca in OEmpFamily)
                    //    {
                    //        var v2 = ca.Employee.FamilyDetails.ToList();
                    //        foreach (var item in v2)
                    //        {
                    //            GenericField100 OGenericObjStatement = new GenericField100
                    //            {
                    //                Fld2 = ca.Employee.EmpCode,
                    //                Fld3 = ca.Employee.EmpName.FullNameFML,
                    //                Fld4 = item.MemberName.ToString(),
                    //                Fld5 = item.Relation.LookupVal.ToString(),
                    //                Fld6 = item.DateofBirth.Value.ToShortDateString(),
                    //                Fld7 = item.Profession.ToString(),
                    //            };
                    //            OGenericPayrollStatement.Add(OGenericObjStatement);
                    //        }
                    //    }
                    //    return OGenericPayrollStatement;
                    //}
                    //break;
                    case "FAMILYINFO":
                        var OEmpFamily = db.EmployeePayroll
                            .Include(e => e.Employee)

                            .Include(e => e.Employee.EmpName)
                            .Include(e => e.Employee.Nominees.Select(a => a.BenefitList))
                                .Include(e => e.Employee.Nominees.Select(a => a.BenefitList.Select(b => b.BenefitType)))
                               .Include(e => e.Employee.Nominees.Select(a => a.NomineeName))
                                    .Include(e => e.Employee.Nominees.Select(a => a.Relation))
                                    .Include(e => e.Employee.Nominees.Select(a => a.Address))
                                    .Include(e => e.Employee.Nominees.Select(a => a.ContactDetails)).AsNoTracking()
                            .Where(e => EmpPayrollIdList.Contains(e.Id)).AsParallel().ToList();
                        if (OEmpFamily == null || OEmpFamily.Count == 0)
                        {
                            return null;
                        }
                        else
                        {
                            foreach (var ca in OEmpFamily)
                            {
                                foreach (var ca1 in ca.Employee.Nominees)
                                {
                                    if (ca1.BenefitList != null)
                                    {

                                        foreach (var item in ca1.BenefitList)
                                        {



                                            GenericField100 OGenericObjStatement = new GenericField100
                                            {
                                                Fld2 = ca.Employee.EmpCode,
                                                Fld3 = ca.Employee.EmpName.FullNameFML,
                                                Fld4 = ca.Employee != null && ca1 != null && ca1.NomineeName != null ? ca1.NomineeName.FullNameFML.ToString() : null,
                                                Fld6 = ca.Employee != null && ca1 != null && ca1.DateofBirth.Value.ToShortDateString() != null ? ca1.DateofBirth.Value.ToShortDateString() : null,
                                                Fld5 = ca.Employee != null && ca1 != null && ca1.Relation != null ? ca1.Relation.LookupVal.ToString() : null,
                                                //Fld7 = ca.Employee != null && ca1 != null && ca1.BenefitList != null ? ca1.BenefitList.ToString() : null,
                                                //Fld8 = item.BenefitType == null ? "" : item.BenefitType.LookupVal.ToString(),
                                                //Fld9 = item.BenefitPerc == null ? "" : item.BenefitPerc.ToString()
                                            };
                                            OGenericPayrollStatement.Add(OGenericObjStatement);
                                        }
                                    }
                                }
                            }
                            return OGenericPayrollStatement;
                        }
                        break;





                    //case "GUARANTORNFO":
                    //    var OEmpGuarantor = db.EmployeePayroll
                    //        .Include(e => e.Employee)

                    //        .Include(e => e.Employee.EmpName)
                    //        .Include(e => e.Employee.GuarantorDetails)
                    //        .Include(e => e.Employee.GuarantorDetails.Select(t => t.GuarantorName))
                    //        .Where(e => EmpPayrollIdList.Contains(e.Id) && e.Employee != null && e.Employee.GuarantorDetails.Count > 0).ToList();
                    //    if (OEmpGuarantor == null || OEmpGuarantor.Count == 0)
                    //    {
                    //        return null;
                    //    }
                    //    else
                    //    {
                    //        foreach (var ca in OEmpGuarantor)
                    //        {
                    //            var v2 = ca.Employee.GuarantorDetails.ToList();
                    //            foreach (var item in v2)
                    //            {
                    //                GenericField100 OGenericObjStatement = new GenericField100
                    //                {
                    //                    Fld2 = ca.Employee.EmpCode,
                    //                    Fld3 = ca.Employee.EmpName.FullNameFML,
                    //                    Fld4 = item.GuarantorName != null ? item.GuarantorName.FullNameFML.ToString() : null,
                    //                    Fld5 = item.GuarantorType != null ? item.GuarantorType.LookupVal.ToString() : null,
                    //                    Fld6 = item.LoanType.ToString(),
                    //                    Fld7 = item.LoanDesc.ToString(),
                    //                    Fld8 = item.Amount.ToString(),
                    //                    Fld9 = item.LoanBank.ToString(),
                    //                    Fld10 = item.LoanBranch.ToString(),
                    //                    Fld11 = item.Outstanding.ToString(),
                    //                    Fld12 = item.Installment.ToString(),
                    //                    Fld13 = item.DueDate != null ? item.DueDate.Value.ToShortDateString() : null,
                    //                };
                    //                OGenericPayrollStatement.Add(OGenericObjStatement);
                    //            }
                    //        }
                    //        return OGenericPayrollStatement;
                    //    }
                    //    break;
                    //case "QUALIFICATION":
                    //    var OEmpQuali = db.EmployeePayroll
                    //        .Include(e => e.Employee)

                    //        .Include(e => e.Employee.EmpName)
                    //        .Include(e => e.Employee.EmpAcademicInfo.QualificationDetails)
                    //        .Include(e => e.Employee.EmpAcademicInfo.QualificationDetails.Select(t => t.Qualification))
                    //        .Where(e => EmpPayrollIdList.Contains(e.Id)).ToList();
                    //    if (OEmpQuali == null || OEmpQuali.Count == 0)
                    //    {
                    //        return null;
                    //    }
                    //    else
                    //    {
                    //        foreach (var ca in OEmpQuali)
                    //        {
                    //            if (ca.Employee.EmpAcademicInfo != null)
                    //            {


                    //                var v2 = ca.Employee.EmpAcademicInfo.QualificationDetails.ToList();
                    //                foreach (var item in v2)
                    //                {
                    //                    GenericField100 OGenericObjStatement = new GenericField100
                    //                    {
                    //                        Fld2 = ca.Employee.EmpCode,
                    //                        Fld3 = ca.Employee.EmpName.FullNameFML,
                    //                        Fld4 = item.Qualification.ToString(),
                    //                        Fld5 = item.SpecilisedBranch.ToString(),
                    //                        Fld6 = item.Institute.ToString(),
                    //                        Fld7 = item.University.ToString(),
                    //                        Fld8 = item.ResultPercentage.ToString(),
                    //                        Fld9 = item.ResultGradation.ToString(),
                    //                        Fld10 = item.PasingYear.ToString(),
                    //                        Fld11 = item.ResultSubmissionDate.Value.ToShortDateString(),
                    //                        Fld12 = item.SpecialFeature.ToString(),
                    //                    };
                    //                    OGenericPayrollStatement.Add(OGenericObjStatement);
                    //                }
                    //            }
                    //        }
                    //        return OGenericPayrollStatement;
                    //    }
                    //    break;
                    //case "MEDICALINFO":
                    //    var OEmpMedi = db.EmployeePayroll
                    //        .Include(e => e.Employee)

                    //        .Include(e => e.Employee.EmpName)
                    //        .Include(e => e.Employee.EmpmedicalInfo.BloodGroup)
                    //        .Include(e => e.Employee.EmpmedicalInfo.Allergy.Select(t => t.AllergyMedicine))
                    //        .Include(e => e.Employee.EmpmedicalInfo.Disease.Select(t => t.DiseaseMedicine))
                    //        .Include(e => e.Employee.EmpmedicalInfo.Doctor.Select(t => t.Name))
                    //        .Where(e => EmpPayrollIdList.Contains(e.Id) && e.Employee.EmpmedicalInfo != null).ToList();
                    //    if (OEmpMedi == null || OEmpMedi.Count == 0)
                    //    {
                    //        return null;
                    //    }
                    //    else
                    //    {
                    //        foreach (var ca in OEmpMedi)
                    //        {
                    //            if (ca.Employee.EmpmedicalInfo != null)
                    //            {


                    //                var v2 = ca.Employee.EmpmedicalInfo.Allergy.ToList();
                    //                foreach (var item in v2)
                    //                {
                    //                    var v1 = ca.Employee.EmpmedicalInfo.Disease.ToList();
                    //                    foreach (var item1 in v1)
                    //                    {
                    //                        var v3 = ca.Employee.EmpmedicalInfo.Doctor.ToList();
                    //                        foreach (var item2 in v3)
                    //                        {
                    //                            GenericField100 OGenericObjStatement = new GenericField100
                    //                            {
                    //                                Fld2 = ca.Employee.EmpCode,
                    //                                Fld3 = ca.Employee.EmpName.FullNameFML,
                    //                                Fld4 = ca.Employee != null && ca.Employee.EmpmedicalInfo != null && ca.Employee.EmpmedicalInfo.BloodGroup != null ? ca.Employee.EmpmedicalInfo.BloodGroup.LookupVal : null,
                    //                                Fld5 = ca.Employee != null && ca.Employee.EmpmedicalInfo != null && ca.Employee.EmpmedicalInfo.Height != null ? ca.Employee.EmpmedicalInfo.Height.ToString() : null,
                    //                                Fld6 = ca.Employee != null && ca.Employee.EmpmedicalInfo != null && ca.Employee.EmpmedicalInfo.Weight != null ? ca.Employee.EmpmedicalInfo.Weight.ToString() : null,
                    //                                Fld7 = item.Name,
                    //                                Fld8 = item1.Name,
                    //                                Fld9 = item2.Name.FullNameFML.ToString(),
                    //                                Fld10 = ca.Employee != null && ca.Employee.EmpmedicalInfo != null && ca.Employee.EmpmedicalInfo.PreferredHospital != null ? ca.Employee.EmpmedicalInfo.PreferredHospital : null,

                    //                            };
                    //                            OGenericPayrollStatement.Add(OGenericObjStatement);
                    //                        }
                    //                    }
                    //                }
                    //            }
                    //        }
                    //        return OGenericPayrollStatement;
                    //    }
                    //    break;
                    case "FOREIGNTRIP":
                        var OEmpForeign = db.EmployeePayroll
                            .Include(e => e.Employee)

                            .Include(e => e.Employee.EmpName)
                            .Include(e => e.Employee.ForeignTrips)
                            .Include(e => e.Employee.ForeignTrips.Select(t => t.Country))
                            .Where(e => EmpPayrollIdList.Contains(e.Id)).ToList();
                        if (OEmpForeign == null || OEmpForeign.Count == 0)
                        {
                            return null;
                        }
                        else
                        {
                            foreach (var ca in OEmpForeign)
                            {
                                var v2 = ca.Employee.ForeignTrips.ToList();
                                foreach (var item in v2)
                                {
                                    GenericField100 OGenericObjStatement = new GenericField100
                                    {
                                        Fld2 = ca.Employee.EmpCode,
                                        Fld3 = ca.Employee.EmpName.FullNameFML,
                                        Fld4 = item.TripType.LookupVal,
                                        Fld5 = item.FromDate.Value.ToShortDateString(),
                                        Fld6 = item.ToDate.Value.ToShortDateString(),
                                        Fld7 = item.Purpose.ToString(),
                                        Fld8 = item.Country.ToString(),
                                        Fld9 = item.State.ToString(),
                                        Fld10 = item.City.ToString(),

                                    };
                                    OGenericPayrollStatement.Add(OGenericObjStatement);
                                }
                            }
                            return OGenericPayrollStatement;
                        }
                        break;
                    //case "NOMINEESINFO":
                    //    var OEmpNominee = db.EmployeePayroll
                    //        .Include(e => e.Employee)

                    //        .Include(e => e.Employee.EmpName)
                    //        .Include(e => e.Employee.Nominees)
                    //        .Where(e => EmpPayrollIdList.Contains(e.Id)).ToList();
                    //    if (OEmpNominee == null || OEmpNominee.Count == 0)
                    //    {
                    //        return null;
                    //    }
                    //    else
                    //    {
                    //        foreach (var ca in OEmpNominee)
                    //        {

                    //            GenericField100 OGenericObjStatement = new GenericField100
                    //            {
                    //                Fld2 = ca.Employee.EmpCode,
                    //                Fld3 = ca.Employee.EmpName.FullNameFML,
                    //                //Fld4 = ca.Employee != null && ca.Employee.Nominees != null && ca.Employee.Nominees.NomineeName != null ? ca.Employee.Nominees.NomineeName.ToString() : null,
                    //                //Fld5 = ca.Employee != null && ca.Employee.Nominees != null && ca.Employee.Nominees.DateofBirth.Value.ToShortDateString() != null ? ca.Employee.Nominees.DateofBirth.Value.ToShortDateString() : null,
                    //                //Fld6 = ca.Employee != null && ca.Employee.Nominees != null && ca.Employee.Nominees.Relation != null ? ca.Employee.Nominees.Relation.ToString() : null,
                    //                //Fld7 = ca.Employee != null && ca.Employee.Nominees != null && ca.Employee.Nominees.BenefitList != null ? ca.Employee.Nominees.BenefitList.ToString() : null,
                    //            };
                    //            OGenericPayrollStatement.Add(OGenericObjStatement);

                    //        }
                    //        return OGenericPayrollStatement;
                    //    }
                    //    break;
                    //case "SOCIALINFO":
                    //    var OEmpSocial = db.EmployeePayroll
                    //        .Include(e => e.Employee)

                    //        .Include(e => e.Employee.EmpName)
                    //        .Include(e => e.Employee.EmpSocialInfo.Religion)
                    //       .Include(e => e.Employee.EmpSocialInfo.Caste)
                    //       .Include(e => e.Employee.EmpSocialInfo.SubCaste)
                    //       .Include(e => e.Employee.EmpSocialInfo.Category)
                    //        .Include(e => e.Employee.EmpSocialInfo.SocialActivities)
                    //        .Where(e => EmpPayrollIdList.Contains(e.Id) && e.Employee.EmpSocialInfo != null && e.Employee.EmpSocialInfo.SocialActivities.Count > 0).ToList();
                    //    if (OEmpSocial == null || OEmpSocial.Count == 0)
                    //    {
                    //        return null;
                    //    }
                    //    else
                    //    {
                    //        foreach (var ca in OEmpSocial)
                    //        {
                    //            var v2 = ca.Employee.EmpSocialInfo.SocialActivities.ToList();
                    //            foreach (var item in v2)
                    //            {

                    //                GenericField100 OGenericObjStatement = new GenericField100
                    //                {
                    //                    Fld2 = ca.Employee.EmpCode,
                    //                    Fld3 = ca.Employee.EmpName.FullNameFML,
                    //                    Fld4 = ca.Employee != null && ca.Employee.EmpSocialInfo != null && ca.Employee.EmpSocialInfo.Religion != null ? ca.Employee.EmpSocialInfo.Religion.LookupVal : null,
                    //                    Fld5 = ca.Employee != null && ca.Employee.EmpSocialInfo != null && ca.Employee.EmpSocialInfo.Category != null ? ca.Employee.EmpSocialInfo.Category.LookupVal : null,
                    //                    Fld6 = ca.Employee != null && ca.Employee.EmpSocialInfo != null && ca.Employee.EmpSocialInfo.Caste != null ? ca.Employee.EmpSocialInfo.Caste.LookupVal : null,
                    //                    Fld7 = ca.Employee != null && ca.Employee.EmpSocialInfo != null && ca.Employee.EmpSocialInfo.SubCaste != null ? ca.Employee.EmpSocialInfo.SubCaste.LookupVal : null,
                    //                    Fld8 = item.InstituteName,
                    //                    Fld9 = item.PostHeld,
                    //                    Fld10 = item.FromPeriod.Value.ToShortDateString(),
                    //                    Fld11 = item.ToPeriod.Value.ToShortDateString(),
                    //                };
                    //                OGenericPayrollStatement.Add(OGenericObjStatement);
                    //            }
                    //        }
                    //        return OGenericPayrollStatement;
                    //    }
                    //    break;
                    case "PRECOMPANYEXP":
                        var OEmpPrevComp = db.EmployeePayroll
                            .Include(e => e.Employee)

                            .Include(e => e.Employee.EmpName)
                            .Include(e => e.Employee.PreCompExp.Select(d => d.CompAddress))
                            .Where(e => EmpPayrollIdList.Contains(e.Id)).ToList();
                        if (OEmpPrevComp == null || OEmpPrevComp.Count == 0)
                        {
                            return null;
                        }
                        else
                        {
                            foreach (var ca in OEmpPrevComp)
                            {
                                foreach (var item in ca.Employee.PreCompExp)
                                {

                                    GenericField100 OGenericObjStatement = new GenericField100
                                    {
                                        Fld2 = ca.Employee.EmpCode,
                                        Fld3 = ca.Employee.EmpName.FullNameFML,
                                        Fld4 = item.CompName == null ? "" : item.CompName.ToString(),
                                        Fld5 = item.CompAddress == null ? "" : item.CompAddress.FullAddress.ToString(),
                                        Fld6 = item.FromDate == null ? "" : item.FromDate.Value.ToShortDateString(),
                                        Fld7 = item.YrOfService == null ? "" : item.YrOfService.ToString(),
                                        Fld8 = item.JoiningJobPosition == null ? "" : item.JoiningJobPosition.ToString(),
                                        Fld9 = item.LeaveingJobPosition == null ? "" : item.LeaveingJobPosition.ToString(),
                                        Fld10 = item.LastDrawnSalary == null ? "" : item.LastDrawnSalary.ToString(),
                                        Fld11 = item.SpecialAchievements == null ? "" : item.SpecialAchievements.ToString(),
                                        Fld12 = item.ToDate == null ? "" : item.ToDate.Value.ToShortDateString(),
                                        Fld13 = item.Reason == null ? "" : item.Reason.ToString(),
                                    };
                                    OGenericPayrollStatement.Add(OGenericObjStatement);
                                }
                            }
                            return OGenericPayrollStatement;
                        }
                        break;


                    //Training

                    //case "TRAININGSESSION":
                    //    var OAppCatMasterReportData = db.TrainingSession
                    //        .Include(e => e.SessionType)
                    //         .Include(e => e.Faculty)
                    //         .Include(q => q.Faculty).Include(q => q.Faculty.FacultyType).ToList();


                    //    if (OAppCatMasterReportData == null || OAppCatMasterReportData.Count() == 0)
                    //    {
                    //        return null;
                    //    }
                    //    else
                    //    {
                    //        foreach (var ca in OAppCatMasterReportData)
                    //        {
                    //            var v = ca.Faculty.FacultyType.LookupVal.ToString();
                    //            GenericField100 OGeneticApprStatement = new GenericField100()
                    //            {
                    //                Fld1 = ca.StartTime.ToString(),
                    //                Fld2 = ca.EndTime.ToString(),
                    //                Fld3 = ca.TotalHours.ToString(),
                    //                Fld4 = ca.SessionType.LookupVal.ToString(),
                    //                Fld5 = v
                    //            };
                    //            OGenericPayrollStatement.Add(OGeneticApprStatement);
                    //        }
                    //    }
                    //    return OGenericPayrollStatement;
                    //    break;




                    case "TRAININGINSTITUTE":
                        var OAppinstReportData = db.TrainingInstitute
                            .Include(e => e.ContactDetails)
                             .Include(e => e.InstituteType)
                            .ToList();


                        if (OAppinstReportData == null || OAppinstReportData.Count() == 0)
                        {
                            return null;
                        }
                        else
                        {
                            foreach (var ca in OAppinstReportData)
                            {
                                var v = ca.InstituteType.LookupVal.ToString();
                                GenericField100 OGeneticApprStatement = new GenericField100()
                                {
                                    Fld1 = ca.Code.ToString(),
                                    Fld2 = ca.Name.ToString(),
                                    Fld3 = ca.ContactDetails.ToString(),

                                    Fld5 = v
                                };
                                OGenericPayrollStatement.Add(OGeneticApprStatement);
                            }
                        }
                        return OGenericPayrollStatement;
                        break;


                    case "BUDGET":
                        var ObudgetReportData = db.Budget

                            .ToList();


                        if (ObudgetReportData == null || ObudgetReportData.Count() == 0)
                        {
                            return null;
                        }
                        else
                        {
                            foreach (var ca in ObudgetReportData)
                            {

                                GenericField100 OGeneticApprStatement = new GenericField100()
                                {
                                    Fld1 = ca.BudgetCredit.ToString(),
                                    Fld2 = ca.BudgetDebit.ToString(),

                                };
                                OGenericPayrollStatement.Add(OGeneticApprStatement);
                            }
                        }
                        return OGenericPayrollStatement;
                        break;


                    case "BUDGETPARAMETERS":
                        var ObudgetparaReportData = db.BudgetParameters

                            .ToList();
                        if (ObudgetparaReportData == null || ObudgetparaReportData.Count() == 0)
                        {
                            return null;
                        }
                        else
                        {
                            foreach (var ca in ObudgetparaReportData)
                            {

                                GenericField100 OGeneticApprStatement = new GenericField100()
                                {
                                    Fld1 = ca.IsBudgetAppl.ToString(),
                                    Fld2 = ca.IsCategory.ToString(),
                                    Fld3 = ca.IsFuncStruct.ToString(),
                                    Fld4 = ca.IsGeoStruct.ToString(),
                                    Fld5 = ca.IsPayStruct.ToString(),
                                    Fld6 = ca.IsProgram.ToString(),

                                };
                                OGenericPayrollStatement.Add(OGeneticApprStatement);
                            }
                        }
                        return OGenericPayrollStatement;
                        break;

                    #region Appraisal Assignment Report
                    case "APPRAISALASSIGNMENT":

                        //List<EmployeeAppraisal> empdata = new List<EmployeeAppraisal>();
                        //var OAppcatReportDataass = db.AppAssignment
                        //    .Include(x => x.GeoStruct)
                        //    .Include(x => x.GeoStruct.Location.LocationObj)
                        //    .Include(x => x.FuncStruct)
                        //    .Include(x => x.FuncStruct.JobPosition)
                        //    .Include(x => x.PayStruct)
                        //     .Include(x => x.PayStruct.Grade)
                        //    .Include(x => x.AppCategory)
                        //    .Include(x => x.AppSubCategory)
                        //    .Include(x => x.AppraisalCalendar)
                        //   .Include(x => x.AppRatingObjective)
                        //   .Include(x => x.AppRatingObjective.Select(y => y.ObjectiveWordings))
                        //   .Where(e => e.AppraisalCalendar.FromDate >= pFromDate && e.AppraisalCalendar.ToDate <= pToDate)
                        //   .ToList();

                        var getEmpAppraisalData = db.EmployeeAppraisal.Select(a => new
                        {
                            aEmpGeoId = a.Employee.GeoStruct_Id.ToString(),
                            aEmpPayId = a.Employee.PayStruct_Id.ToString(),
                            aEmpFuncId = a.Employee.FuncStruct_Id.ToString(),
                            aEmpServiceLastDate = a.Employee.ServiceBookDates.ServiceLastDate,

                            aEmpCode = a.Employee.EmpCode,
                            aEmpName = a.Employee.EmpName.FullNameFML,

                        }).Where(e => e.aEmpServiceLastDate == null).ToList();

                        var getAppAssignData = db.AppAssignment.Select(b => new
                        {
                            bAppCalFromDate = b.AppraisalCalendar.FromDate,
                            bAppCalToDate = b.AppraisalCalendar.ToDate,
                            bAppCode = b.AppCategory.Code,
                            bAppName = b.AppCategory.Name,
                            bAppsubCode = b.AppSubCategory.Code,
                            bAppsubName = b.AppSubCategory.Name,
                            bAppassignGeo = b.GeoStruct.Id.ToString(),
                            bAppassignPay = b.PayStruct.Id.ToString(),
                            bAppassignFun = b.FuncStruct.Id.ToString(),
                            bMaxRatingPoints = b.MaxRatingPoints.ToString(),

                            bJobPositionDesc = b.FuncStruct.JobPosition.JobPositionDesc,
                            bGradeName = b.PayStruct.Grade.Name,
                            bLocDesc = b.GeoStruct.Location.LocationObj.LocDesc,

                            //bAppRateObjList = b.AppRatingObjective.Select(c => new
                            //{
                            //    cObjectiveWordings = c.ObjectiveWordings.LookupVal,
                            //    cRatingObjectName = c.RatingObjectName,
                            //    cRatingPoints = c.RatingPoints.ToString(),

                            //}).ToList(),

                        }).Where(e => e.bAppCalFromDate >= pFromDate && e.bAppCalToDate <= pToDate).ToList();


                        if (getAppAssignData.Count() == 0 && getEmpAppraisalData.Count() == 0)
                        {
                            return null;
                        }
                        else
                        {
                            var All_AppAssignData = getAppAssignData.ToList();
                            foreach (var itemEmpAppraisal in getEmpAppraisalData)
                            {

                                var getAppAssignDataPer = All_AppAssignData.Where(e => e.bAppassignGeo == itemEmpAppraisal.aEmpGeoId || e.bAppassignFun == itemEmpAppraisal.aEmpFuncId || e.bAppassignPay == itemEmpAppraisal.aEmpPayId).ToList();
                                if (getAppAssignData.Count() > 0)
                                {
                                    foreach (var itemAppAssignment in getAppAssignDataPer)
                                    {
                                        //foreach (var item in itemAppAssignment.bAppRateObjList)
                                        //{

                                        GenericField100 OGeneticApprStatement = new GenericField100()
                                        {
                                            Fld5 = itemEmpAppraisal.aEmpCode != null ? itemEmpAppraisal.aEmpCode.ToString() : "",
                                            Fld10 = itemEmpAppraisal.aEmpName != null ? itemEmpAppraisal.aEmpName.ToString() : "",
                                            Fld1 = itemAppAssignment.bAppCode != null ? itemAppAssignment.bAppCode.ToString() : "",
                                            Fld2 = itemAppAssignment.bAppName != null ? itemAppAssignment.bAppName.ToString() : "",
                                            Fld3 = itemAppAssignment.bAppsubCode != null ? itemAppAssignment.bAppsubCode.ToString() : "",
                                            Fld4 = itemAppAssignment.bAppsubName != null ? itemAppAssignment.bAppsubName.ToString() : "",
                                            //Fld6 = item.cRatingObjectName != null ? item.cRatingObjectName.ToString() : "",
                                            //Fld7 = item.cObjectiveWordings != null ? item.cObjectiveWordings.ToString() : "",
                                            //Fld8 = item.cRatingPoints != null ? item.cRatingPoints.ToString() : "",
                                            Fld9 = itemAppAssignment.bMaxRatingPoints != null ? itemAppAssignment.bMaxRatingPoints.ToString() : "",
                                            Fld89 = itemAppAssignment.bJobPositionDesc != null ? itemAppAssignment.bJobPositionDesc.ToString() : "",
                                            Fld93 = itemAppAssignment.bGradeName != null ? itemAppAssignment.bGradeName.ToString() : "",
                                            Fld97 = itemAppAssignment.bLocDesc != null ? itemAppAssignment.bLocDesc.ToString() : "",
                                        };


                                        OGenericPayrollStatement.Add(OGeneticApprStatement);

                                        // }

                                    }

                                }
                            }
                        }


                        return OGenericPayrollStatement;
                        break;
                    #endregion Appraisal Assignment Report


                    case "APPRAISALRATINGCONCLUSION":

                        //var OAppcatReportDataratingcon = db.EmployeeAppraisal
                        //.Include(e => e.EmpAppEvaluation)
                        //.Include(x => x.EmpAppEvaluation.Select(e => e.AppraisalPeriodCalendar))
                        //.Include(x => x.EmpAppEvaluation.Select(e => e.AppraisalSchedule))
                        //.Include(x => x.EmpAppEvaluation.Select(e => e.AppraisalSchedule.AppraisalPublish))
                        //.Include(e => e.EmpAppEvaluation.Select(r => r.EmpAppRatingConclusion))
                        //.Include(e => e.EmpAppEvaluation.Select(r => r.EmpAppRatingConclusion.Select(t => t.AppraisalAssistance)))
                        //.Include(e => e.EmpAppEvaluation.Select(r => r.EmpAppRatingConclusion.Select(t => t.EmpAppRating)))
                        // .Include(e => e.EmpAppEvaluation.Select(r => r.EmpAppRatingConclusion.Select(t => t.EmpAppRating.Select(y => y.AppAssignment))))
                        // .Include(e => e.EmpAppEvaluation.Select(r => r.EmpAppRatingConclusion.Select(t => t.EmpAppRating.Select(y => y.AppAssignment.AppCategory))))
                        // .Include(e => e.EmpAppEvaluation.Select(r => r.EmpAppRatingConclusion.Select(t => t.EmpAppRating.Select(y => y.AppAssignment.AppSubCategory))))
                        // .Include(x => x.Employee)
                        //     .Include(x => x.Employee.EmpName)
                        //     .Include(x => x.Employee.FuncStruct)
                        //      .Include(x => x.Employee.PayStruct)
                        //       .Include(x => x.Employee.GeoStruct)
                        //     .Where(e => EmpPayrollIdList.Contains(e.Employee.Id)).ToList();

                        var OEmpAprraisalData = db.EmployeeAppraisal.Select(d => new
                        {

                            OEmployeeId = d.Employee.Id,
                            OEmpCode = d.Employee.EmpCode,
                            OEmpName = d.Employee.EmpName.FullNameFML,
                            OGeoStructId = d.Employee.GeoStruct.Id,
                            OPayStructId = d.Employee.PayStruct.Id,
                            OFuncStructId = d.Employee.FuncStruct.Id,
                            OJobName = d.Employee.FuncStruct.Job.Name,
                            ODeptDesc = d.Employee.GeoStruct.Department.DepartmentObj.DeptDesc,
                            ODivisionName = d.Employee.GeoStruct.Division.Name,
                            OGradeName = d.Employee.PayStruct.Grade.Name,
                            OEmpAppEvaluation = d.EmpAppEvaluation.Select(p => new
                            {
                                OAppraisalPeriodCalendarFromDate = p.AppraisalPeriodCalendar.FromDate,
                                OAppraisalPeriodCalendarToDate = p.AppraisalPeriodCalendar.ToDate,
                                OAppraisalScheduleBatchCode = p.AppraisalSchedule.BatchCode,
                                OAppraisalScheduleBatchName = p.AppraisalSchedule.BatchName,
                                OEmpAppRatingConclusion = p.EmpAppRatingConclusion.Select(z => new
                                {
                                    OAppraisalAssistanceLookupVal = z.AppraisalAssistance.LookupVal,
                                    OEmpAppRating = z.EmpAppRating.Select(w => new
                                    {
                                        ORatingPoints = w.RatingPoints
                                    }).ToList()
                                }).ToList()
                            }).ToList()

                        }).Where(e => EmpPayrollIdList.Contains(e.OEmployeeId)).ToList();

                        if (OEmpAprraisalData == null || OEmpAprraisalData.Count() == 0)
                        {
                            return null;
                        }
                        else
                        {
                            var emp = false;
                            var dept = false;
                            var loca = false;
                            var comp = false;
                            var grp = false;
                            var unit = false;
                            var div = false;
                            var regn = false;
                            var grade = false;
                            var lvl = false;
                            var jobstat = false;
                            var job = false;
                            var jobpos = false;
                            var vc = db.LookupValue.Where(a => forithead.Contains(a.Id.ToString())).ToList();


                            foreach (var item in vc)
                            {
                                if (item.LookupVal.ToUpper() == "LOCATION")
                                {

                                    loca = true;
                                }
                                if (item.LookupVal.ToUpper() == "EMPLOYEE")
                                {
                                    emp = true;
                                }
                                if (item.LookupVal.ToUpper() == "DEPARTMENT")
                                {
                                    dept = true;
                                }
                                if (item.LookupVal.ToUpper() == "COMPANY")
                                {
                                    comp = true;
                                }
                                if (item.LookupVal.ToUpper() == "GROUP")
                                {
                                    grp = true;
                                }
                                if (item.LookupVal.ToUpper() == "UNIT")
                                {
                                    unit = true;
                                }
                                if (item.LookupVal.ToUpper() == "DIVISION")
                                {
                                    div = true;
                                }
                                if (item.LookupVal.ToUpper() == "REGION")
                                {
                                    regn = true;
                                }
                                if (item.LookupVal.ToUpper() == "GRADE")
                                {
                                    grade = true;
                                }
                                if (item.LookupVal.ToUpper() == "LEVEL")
                                {
                                    lvl = true;
                                }
                                if (item.LookupVal.ToUpper() == "JOBSTATUS")
                                {
                                    jobstat = true;
                                }

                                if (item.LookupVal.ToUpper() == "JOB")
                                {
                                    job = true;
                                }
                                if (item.LookupVal.ToUpper() == "JOBPOSITION")
                                {
                                    jobpos = true;
                                }
                            }

                            Utility.GetOrganizationDataClass GeoDataInd = new Utility.GetOrganizationDataClass();

                            foreach (var ca in OEmpAprraisalData)
                            {
                                int? geoid = ca.OGeoStructId;

                                int? payid = ca.OPayStructId;

                                int? funid = ca.OFuncStructId;

                                GeoStruct geostruct = db.GeoStruct.Find(geoid);

                                PayStruct paystruct = db.PayStruct.Find(payid);

                                FuncStruct funstruct = db.FuncStruct.Find(funid);

                                GeoDataInd = ReportRDLCObjectClass.GetOrganizationDataInd(geostruct, paystruct, funstruct, 0);

                                if (salheadlist.Count() > 0)
                                {
                                    foreach (var item in ca.OEmpAppEvaluation.Where(e => (e.OAppraisalPeriodCalendarFromDate >= pFromDate && e.OAppraisalPeriodCalendarToDate <= pToDate) && salheadlist.Contains(e.OAppraisalScheduleBatchCode)))
                                    {
                                        if (salheadlistLevel1.Count() > 0)
                                        {
                                            foreach (var item2 in item.OEmpAppRatingConclusion.Where(e => salheadlistLevel1.Contains(e.OAppraisalAssistanceLookupVal)))
                                            {
                                                foreach (var item3 in item2.OEmpAppRating)
                                                {
                                                    GenericField100 OGeneticApprStatement = new GenericField100()
                                                    {
                                                        Fld8 = !string.IsNullOrEmpty(ca.OEmpCode) ? ca.OEmpCode : "",
                                                        Fld9 = !string.IsNullOrEmpty(ca.OEmpName) ? ca.OEmpName : "",
                                                        Fld3 = !string.IsNullOrEmpty(item2.OAppraisalAssistanceLookupVal) ? item2.OAppraisalAssistanceLookupVal : "",
                                                        Fld11 = !string.IsNullOrEmpty(item3.ORatingPoints.ToString()) ? item3.ORatingPoints.ToString() : "",
                                                        Fld13 = !string.IsNullOrEmpty(ca.OJobName) ? ca.OJobName : "",
                                                        Fld14 = !string.IsNullOrEmpty(ca.ODeptDesc) ? ca.ODeptDesc : "",
                                                        Fld15 = !string.IsNullOrEmpty(ca.ODivisionName) ? ca.ODivisionName : "",
                                                        Fld16 = !string.IsNullOrEmpty(ca.OGradeName) ? ca.OGradeName : "",
                                                    };
                                                    if (comp)
                                                    {
                                                        OGeneticApprStatement.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                    }
                                                    if (div)
                                                    {
                                                        OGeneticApprStatement.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                    }
                                                    if (loca)
                                                    {
                                                        OGeneticApprStatement.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                    }
                                                    if (dept)
                                                    {
                                                        OGeneticApprStatement.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                    }
                                                    if (grp)
                                                    {
                                                        OGeneticApprStatement.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                    }
                                                    if (unit)
                                                    {
                                                        OGeneticApprStatement.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                    }
                                                    if (grade)
                                                    {
                                                        OGeneticApprStatement.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                    }
                                                    if (lvl)
                                                    {
                                                        OGeneticApprStatement.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                    }
                                                    if (jobstat)
                                                    {
                                                        OGeneticApprStatement.Fld91 = GeoDataInd.FuncStruct_Job_Id;
                                                    }
                                                    if (job)
                                                    {
                                                        OGeneticApprStatement.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                    }
                                                    if (jobpos)
                                                    {
                                                        OGeneticApprStatement.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                    }
                                                    if (emp)
                                                    {
                                                        OGeneticApprStatement.Fld88 = ca.OEmployeeId.ToString();
                                                    }

                                                    OGenericPayrollStatement.Add(OGeneticApprStatement);

                                                }

                                            }
                                        }

                                        else
                                        {
                                            foreach (var item2 in item.OEmpAppRatingConclusion)
                                            {
                                                foreach (var item3 in item2.OEmpAppRating)
                                                {
                                                    GenericField100 OGeneticApprStatement = new GenericField100()
                                                    {
                                                        Fld8 = !string.IsNullOrEmpty(ca.OEmpCode) ? ca.OEmpCode : "",
                                                        Fld9 = !string.IsNullOrEmpty(ca.OEmpName) ? ca.OEmpName : "",
                                                        Fld3 = !string.IsNullOrEmpty(item2.OAppraisalAssistanceLookupVal) ? item2.OAppraisalAssistanceLookupVal : "",
                                                        Fld11 = !string.IsNullOrEmpty(item3.ORatingPoints.ToString()) ? item3.ORatingPoints.ToString() : "",
                                                        Fld13 = !string.IsNullOrEmpty(ca.OJobName) ? ca.OJobName : "",
                                                        Fld14 = !string.IsNullOrEmpty(ca.ODeptDesc) ? ca.ODeptDesc : "",
                                                        Fld15 = !string.IsNullOrEmpty(ca.ODivisionName) ? ca.ODivisionName : "",
                                                        Fld16 = !string.IsNullOrEmpty(ca.OGradeName) ? ca.OGradeName : "",
                                                    };
                                                    if (comp)
                                                    {
                                                        OGeneticApprStatement.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                    }
                                                    if (div)
                                                    {
                                                        OGeneticApprStatement.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                    }
                                                    if (loca)
                                                    {
                                                        OGeneticApprStatement.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                    }
                                                    if (dept)
                                                    {
                                                        OGeneticApprStatement.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                    }
                                                    if (grp)
                                                    {
                                                        OGeneticApprStatement.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                    }
                                                    if (unit)
                                                    {
                                                        OGeneticApprStatement.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                    }
                                                    if (grade)
                                                    {
                                                        OGeneticApprStatement.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                    }
                                                    if (lvl)
                                                    {
                                                        OGeneticApprStatement.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                    }
                                                    if (jobstat)
                                                    {
                                                        OGeneticApprStatement.Fld91 = GeoDataInd.FuncStruct_Job_Id;
                                                    }
                                                    if (job)
                                                    {
                                                        OGeneticApprStatement.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                    }
                                                    if (jobpos)
                                                    {
                                                        OGeneticApprStatement.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                    }
                                                    if (emp)
                                                    {
                                                        OGeneticApprStatement.Fld88 = ca.OEmployeeId.ToString();
                                                    }

                                                    OGenericPayrollStatement.Add(OGeneticApprStatement);

                                                }
                                            }
                                        }
                                    }
                                }

                                else
                                {
                                    if (ca.OEmpAppEvaluation.Count() > 0)
                                    {
                                        foreach (var item in ca.OEmpAppEvaluation.Where(e => e.OAppraisalPeriodCalendarFromDate >= pFromDate && e.OAppraisalPeriodCalendarToDate <= pToDate))
                                        {
                                            if (item.OEmpAppRatingConclusion.Count() > 0)
                                            {
                                                foreach (var item2 in item.OEmpAppRatingConclusion)
                                                {
                                                    if (item2.OEmpAppRating.Count() > 0)
                                                    {
                                                        foreach (var item3 in item2.OEmpAppRating)
                                                        {
                                                            GenericField100 OGeneticApprStatement = new GenericField100()
                                                            {
                                                                Fld8 = !string.IsNullOrEmpty(ca.OEmpCode) ? ca.OEmpCode : "",
                                                                Fld9 = !string.IsNullOrEmpty(ca.OEmpName) ? ca.OEmpName : "",
                                                                Fld3 = !string.IsNullOrEmpty(item2.OAppraisalAssistanceLookupVal) ? item2.OAppraisalAssistanceLookupVal : "",
                                                                Fld11 = !string.IsNullOrEmpty(item3.ORatingPoints.ToString()) ? item3.ORatingPoints.ToString() : "",
                                                                Fld13 = !string.IsNullOrEmpty(ca.OJobName) ? ca.OJobName : "",
                                                                Fld14 = !string.IsNullOrEmpty(ca.ODeptDesc) ? ca.ODeptDesc : "",
                                                                Fld15 = !string.IsNullOrEmpty(ca.ODivisionName) ? ca.ODivisionName : "",
                                                                Fld16 = !string.IsNullOrEmpty(ca.OGradeName) ? ca.OGradeName : "",
                                                            };
                                                            if (comp)
                                                            {
                                                                OGeneticApprStatement.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                            }
                                                            if (div)
                                                            {
                                                                OGeneticApprStatement.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                            }
                                                            if (loca)
                                                            {
                                                                OGeneticApprStatement.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                            }
                                                            if (dept)
                                                            {
                                                                OGeneticApprStatement.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                            }
                                                            if (grp)
                                                            {
                                                                OGeneticApprStatement.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                            }
                                                            if (unit)
                                                            {
                                                                OGeneticApprStatement.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                            }
                                                            if (grade)
                                                            {
                                                                OGeneticApprStatement.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                            }
                                                            if (lvl)
                                                            {
                                                                OGeneticApprStatement.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                            }
                                                            if (jobstat)
                                                            {
                                                                OGeneticApprStatement.Fld91 = GeoDataInd.FuncStruct_Job_Id;
                                                            }
                                                            if (job)
                                                            {
                                                                OGeneticApprStatement.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                            }
                                                            if (jobpos)
                                                            {
                                                                OGeneticApprStatement.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                            }
                                                            if (emp)
                                                            {
                                                                OGeneticApprStatement.Fld88 = ca.OEmployeeId.ToString();
                                                            }

                                                            OGenericPayrollStatement.Add(OGeneticApprStatement);

                                                        }
                                                    }
                                                    else
                                                    {
                                                        GenericField100 OGeneticApprStatement = new GenericField100()
                                                        {
                                                            Fld8 = !string.IsNullOrEmpty(ca.OEmpCode) ? ca.OEmpCode : "",
                                                            Fld9 = !string.IsNullOrEmpty(ca.OEmpName) ? ca.OEmpName : "",
                                                            Fld3 = "",
                                                            Fld11 = "0",
                                                            Fld13 = !string.IsNullOrEmpty(ca.OJobName) ? ca.OJobName : "",
                                                            Fld14 = !string.IsNullOrEmpty(ca.ODeptDesc) ? ca.ODeptDesc : "",
                                                            Fld15 = !string.IsNullOrEmpty(ca.ODivisionName) ? ca.ODivisionName : "",
                                                            Fld16 = !string.IsNullOrEmpty(ca.OGradeName) ? ca.OGradeName : "",
                                                        };
                                                        if (comp)
                                                        {
                                                            OGeneticApprStatement.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                        }
                                                        if (div)
                                                        {
                                                            OGeneticApprStatement.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                        }
                                                        if (loca)
                                                        {
                                                            OGeneticApprStatement.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                        }
                                                        if (dept)
                                                        {
                                                            OGeneticApprStatement.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                        }
                                                        if (grp)
                                                        {
                                                            OGeneticApprStatement.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                        }
                                                        if (unit)
                                                        {
                                                            OGeneticApprStatement.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                        }
                                                        if (grade)
                                                        {
                                                            OGeneticApprStatement.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                        }
                                                        if (lvl)
                                                        {
                                                            OGeneticApprStatement.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                        }
                                                        if (jobstat)
                                                        {
                                                            OGeneticApprStatement.Fld91 = GeoDataInd.FuncStruct_Job_Id;
                                                        }
                                                        if (job)
                                                        {
                                                            OGeneticApprStatement.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                        }
                                                        if (jobpos)
                                                        {
                                                            OGeneticApprStatement.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                        }
                                                        if (emp)
                                                        {
                                                            OGeneticApprStatement.Fld88 = ca.OEmployeeId.ToString();
                                                        }

                                                        OGenericPayrollStatement.Add(OGeneticApprStatement);
                                                    }
                                                }
                                            }
                                            else
                                            {
                                                GenericField100 OGeneticApprStatement = new GenericField100()
                                                {
                                                    Fld8 = !string.IsNullOrEmpty(ca.OEmpCode) ? ca.OEmpCode : "",
                                                    Fld9 = !string.IsNullOrEmpty(ca.OEmpName) ? ca.OEmpName : "",
                                                    Fld3 = "",
                                                    Fld11 = "0",
                                                    Fld13 = !string.IsNullOrEmpty(ca.OJobName) ? ca.OJobName : "",
                                                    Fld14 = !string.IsNullOrEmpty(ca.ODeptDesc) ? ca.ODeptDesc : "",
                                                    Fld15 = !string.IsNullOrEmpty(ca.ODivisionName) ? ca.ODivisionName : "",
                                                    Fld16 = !string.IsNullOrEmpty(ca.OGradeName) ? ca.OGradeName : "",
                                                };
                                                if (comp)
                                                {
                                                    OGeneticApprStatement.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                }
                                                if (div)
                                                {
                                                    OGeneticApprStatement.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                }
                                                if (loca)
                                                {
                                                    OGeneticApprStatement.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                }
                                                if (dept)
                                                {
                                                    OGeneticApprStatement.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                }
                                                if (grp)
                                                {
                                                    OGeneticApprStatement.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                }
                                                if (unit)
                                                {
                                                    OGeneticApprStatement.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                }
                                                if (grade)
                                                {
                                                    OGeneticApprStatement.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                }
                                                if (lvl)
                                                {
                                                    OGeneticApprStatement.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                }
                                                if (jobstat)
                                                {
                                                    OGeneticApprStatement.Fld91 = GeoDataInd.FuncStruct_Job_Id;
                                                }
                                                if (job)
                                                {
                                                    OGeneticApprStatement.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                }
                                                if (jobpos)
                                                {
                                                    OGeneticApprStatement.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                }
                                                if (emp)
                                                {
                                                    OGeneticApprStatement.Fld88 = ca.OEmployeeId.ToString();
                                                }

                                                OGenericPayrollStatement.Add(OGeneticApprStatement);
                                            }
                                        }
                                    }
                                    else
                                    {
                                        GenericField100 OGeneticApprStatement = new GenericField100()
                                         {
                                             Fld8 = !string.IsNullOrEmpty(ca.OEmpCode) ? ca.OEmpCode : "",
                                             Fld9 = !string.IsNullOrEmpty(ca.OEmpName) ? ca.OEmpName : "",
                                             Fld3 = "",
                                             Fld11 = "0",
                                             Fld13 = !string.IsNullOrEmpty(ca.OJobName) ? ca.OJobName : "",
                                             Fld14 = !string.IsNullOrEmpty(ca.ODeptDesc) ? ca.ODeptDesc : "",
                                             Fld15 = !string.IsNullOrEmpty(ca.ODivisionName) ? ca.ODivisionName : "",
                                             Fld16 = !string.IsNullOrEmpty(ca.OGradeName) ? ca.OGradeName : "",
                                         };
                                        if (comp)
                                        {
                                            OGeneticApprStatement.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                        }
                                        if (div)
                                        {
                                            OGeneticApprStatement.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                        }
                                        if (loca)
                                        {
                                            OGeneticApprStatement.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                        }
                                        if (dept)
                                        {
                                            OGeneticApprStatement.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                        }
                                        if (grp)
                                        {
                                            OGeneticApprStatement.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                        }
                                        if (unit)
                                        {
                                            OGeneticApprStatement.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                        }
                                        if (grade)
                                        {
                                            OGeneticApprStatement.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                        }
                                        if (lvl)
                                        {
                                            OGeneticApprStatement.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                        }
                                        if (jobstat)
                                        {
                                            OGeneticApprStatement.Fld91 = GeoDataInd.FuncStruct_Job_Id;
                                        }
                                        if (job)
                                        {
                                            OGeneticApprStatement.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                        }
                                        if (jobpos)
                                        {
                                            OGeneticApprStatement.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                        }
                                        if (emp)
                                        {
                                            OGeneticApprStatement.Fld88 = ca.OEmployeeId.ToString();
                                        }

                                        OGenericPayrollStatement.Add(OGeneticApprStatement);
                                    }

                                }


                            }
                        }
                        return OGenericPayrollStatement;
                        break;
                    case "APPRAISALPUBLISH":

                        var OAppcatReportDatapub = db.EmployeeAppraisal
                           .Include(x => x.EmpAppEvaluation)
                           .Include(x => x.EmpAppEvaluation.Select(e => e.AppraisalPeriodCalendar))
                           .Include(x => x.EmpAppEvaluation.Select(e => e.AppraisalSchedule))
                           .Include(x => x.EmpAppEvaluation.Select(e => e.AppraisalSchedule.AppraisalPublish))
                           .Include(x => x.Employee)
                           .Include(x => x.Employee.EmpName)
                           .Include(x => x.Employee.FuncStruct)
                            .Include(x => x.Employee.PayStruct)
                             .Include(x => x.Employee.GeoStruct)
                           .Where(e => EmpPayrollIdList.Contains(e.Employee.Id)).ToList();

                        if (OAppcatReportDatapub == null || OAppcatReportDatapub.Count() == 0)
                        {
                            return null;
                        }
                        else
                        {
                            var emp = false;
                            var dept = false;
                            var loca = false;
                            var comp = false;
                            var grp = false;
                            var unit = false;
                            var div = false;
                            var regn = false;
                            var grade = false;
                            var lvl = false;
                            var jobstat = false;
                            var job = false;
                            var jobpos = false;
                            var vc = db.LookupValue.Where(a => forithead.Contains(a.Id.ToString())).ToList();


                            foreach (var item in vc)
                            {
                                //if (item.LookupVal.ToUpper() == "MONTH")
                                //{
                                //    month = true;
                                //}
                                if (item.LookupVal.ToUpper() == "LOCATION")
                                {

                                    loca = true;
                                }
                                if (item.LookupVal.ToUpper() == "EMPLOYEE")
                                {
                                    emp = true;
                                }
                                if (item.LookupVal.ToUpper() == "DEPARTMENT")
                                {
                                    dept = true;
                                }
                                if (item.LookupVal.ToUpper() == "COMPANY")
                                {
                                    comp = true;
                                }
                                if (item.LookupVal.ToUpper() == "GROUP")
                                {
                                    grp = true;
                                }
                                if (item.LookupVal.ToUpper() == "UNIT")
                                {
                                    unit = true;
                                }
                                if (item.LookupVal.ToUpper() == "DIVISION")
                                {
                                    div = true;
                                }
                                if (item.LookupVal.ToUpper() == "REGION")
                                {
                                    regn = true;
                                }
                                if (item.LookupVal.ToUpper() == "GRADE")
                                {
                                    grade = true;
                                }
                                if (item.LookupVal.ToUpper() == "LEVEL")
                                {
                                    lvl = true;
                                }
                                if (item.LookupVal.ToUpper() == "JOBSTATUS")
                                {
                                    jobstat = true;
                                }

                                if (item.LookupVal.ToUpper() == "JOB")
                                {
                                    job = true;
                                }
                                if (item.LookupVal.ToUpper() == "JOBPOSITION")
                                {
                                    jobpos = true;
                                }
                            }

                            List<Utility.ReportClass> GeoData = new List<Utility.ReportClass>();
                            List<Utility.ReportClass> Paydata = new List<Utility.ReportClass>();
                            List<Utility.ReportClass> Funcdata = new List<Utility.ReportClass>();

                            Utility.ReportClass GeoDataInd = new Utility.ReportClass();
                            Utility.ReportClass PaydataInd = new Utility.ReportClass();
                            Utility.ReportClass FuncdataInd = new Utility.ReportClass();

                            GeoData = GetViewData(0);
                            Paydata = GetViewData(1);
                            Funcdata = GetViewData(2);


                            foreach (var ca in OAppcatReportDatapub)
                            {


                                var cat = ca.EmpAppEvaluation.ToList();
                                foreach (var item in cat)
                                {
                                    if (item.AppraisalPeriodCalendar != null && item.AppraisalPeriodCalendar.FromDate >= pFromDate && item.AppraisalPeriodCalendar.ToDate <= pToDate)
                                    {

                                        var pub = item.AppraisalSchedule.AppraisalPublish.ToList();
                                        int geoid = ca.Employee.GeoStruct.Id;

                                        int payid = ca.Employee.PayStruct.Id;

                                        int funid = ca.Employee.FuncStruct.Id;

                                        GeoDataInd = GetViewDataIndiv(geoid, payid, funid, GeoData, 0);
                                        PaydataInd = GetViewDataIndiv(geoid, payid, funid, Paydata, 1);
                                        FuncdataInd = GetViewDataIndiv(geoid, payid, funid, Funcdata, 2);
                                        if (salheadlist.Count() > 0)
                                        {
                                            foreach (var batch in salheadlist)
                                            {

                                                if (batch.ToUpper() == item.AppraisalSchedule.BatchName.ToUpper())
                                                {
                                                    if (GeoDataInd != null && PaydataInd != null && FuncdataInd != null)
                                                    {
                                                        foreach (var item1 in pub)
                                                        {


                                                            GenericField100 OGeneticApprStatement = new GenericField100()
                                                            {
                                                                Fld5 = item.AppraisalPeriodCalendar == null ? "" : item.AppraisalPeriodCalendar.FullDetails.ToString(),
                                                                Fld1 = item.AppraisalSchedule == null ? "" : item.AppraisalSchedule.BatchCode.ToString(),
                                                                Fld2 = item.AppraisalSchedule == null ? "" : item.AppraisalSchedule.BatchName.ToString(),
                                                                Fld3 = item1.PublishDate == null ? "" : item1.PublishDate.Value.ToShortDateString(),
                                                                Fld4 = item1.SpanPeriod == null ? "" : item1.SpanPeriod.ToString(),
                                                                Fld6 = item1.Extension == null ? "" : item1.Extension.ToString(),
                                                                Fld7 = item1.IsTrClose == null ? "" : item1.IsTrClose.ToString(),
                                                                Fld8 = ca.Employee == null ? "" : ca.Employee.EmpCode.ToString(),
                                                                Fld9 = ca.Employee == null ? "" : ca.Employee.EmpName.FullNameFML.ToString(),
                                                            };
                                                            if (comp)
                                                            {
                                                                OGeneticApprStatement.Fld99 = GeoDataInd.Company_Name;
                                                            }
                                                            if (div)
                                                            {
                                                                OGeneticApprStatement.Fld98 = GeoDataInd.Division_Name;
                                                            }
                                                            if (loca)
                                                            {
                                                                OGeneticApprStatement.Fld97 = GeoDataInd.LocDesc;
                                                            }
                                                            if (dept)
                                                            {
                                                                OGeneticApprStatement.Fld96 = GeoDataInd.DeptDesc;
                                                            }
                                                            if (grp)
                                                            {
                                                                OGeneticApprStatement.Fld95 = GeoDataInd.Group_Name;
                                                            }
                                                            if (unit)
                                                            {
                                                                OGeneticApprStatement.Fld94 = GeoDataInd.Unit_Name;
                                                            }
                                                            if (grade)
                                                            {
                                                                OGeneticApprStatement.Fld93 = PaydataInd.Grade_Name;
                                                            }
                                                            if (lvl)
                                                            {
                                                                OGeneticApprStatement.Fld92 = PaydataInd.Level_Name;
                                                            }
                                                            if (jobstat)
                                                            {
                                                                OGeneticApprStatement.Fld91 = GeoDataInd.JobStatus_Id.ToString();
                                                            }
                                                            if (job)
                                                            {
                                                                OGeneticApprStatement.Fld90 = FuncdataInd.Job_Name;
                                                            }
                                                            if (jobpos)
                                                            {
                                                                OGeneticApprStatement.Fld89 = FuncdataInd.JobPositionDesc;
                                                            }
                                                            if (emp)
                                                            {
                                                                OGeneticApprStatement.Fld88 = ca.Employee.ToString();
                                                            }

                                                            OGenericPayrollStatement.Add(OGeneticApprStatement);
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                        else
                                        {
                                            if (GeoDataInd != null && PaydataInd != null && FuncdataInd != null)
                                            {
                                                foreach (var item1 in pub)
                                                {


                                                    GenericField100 OGeneticApprStatement = new GenericField100()
                                                    {
                                                        Fld5 = item.AppraisalPeriodCalendar == null ? "" : item.AppraisalPeriodCalendar.FullDetails.ToString(),
                                                        Fld1 = item.AppraisalSchedule == null ? "" : item.AppraisalSchedule.BatchCode.ToString(),
                                                        Fld2 = item.AppraisalSchedule == null ? "" : item.AppraisalSchedule.BatchName.ToString(),
                                                        Fld3 = item1.PublishDate == null ? "" : item1.PublishDate.Value.ToShortDateString(),
                                                        Fld4 = item1.SpanPeriod == null ? "" : item1.SpanPeriod.ToString(),
                                                        Fld6 = item1.Extension == null ? "" : item1.Extension.ToString(),
                                                        Fld7 = item1.IsTrClose == null ? "" : item1.IsTrClose.ToString(),
                                                        Fld8 = ca.Employee == null ? "" : ca.Employee.EmpCode.ToString(),
                                                        Fld9 = ca.Employee == null ? "" : ca.Employee.EmpName.FullNameFML.ToString(),
                                                    };
                                                    if (comp)
                                                    {
                                                        OGeneticApprStatement.Fld99 = GeoDataInd.Company_Name;
                                                    }
                                                    if (div)
                                                    {
                                                        OGeneticApprStatement.Fld98 = GeoDataInd.Division_Name;
                                                    }
                                                    if (loca)
                                                    {
                                                        OGeneticApprStatement.Fld97 = GeoDataInd.LocDesc;
                                                    }
                                                    if (dept)
                                                    {
                                                        OGeneticApprStatement.Fld96 = GeoDataInd.DeptDesc;
                                                    }
                                                    if (grp)
                                                    {
                                                        OGeneticApprStatement.Fld95 = GeoDataInd.Group_Name;
                                                    }
                                                    if (unit)
                                                    {
                                                        OGeneticApprStatement.Fld94 = GeoDataInd.Unit_Name;
                                                    }
                                                    if (grade)
                                                    {
                                                        OGeneticApprStatement.Fld93 = PaydataInd.Grade_Name;
                                                    }
                                                    if (lvl)
                                                    {
                                                        OGeneticApprStatement.Fld92 = PaydataInd.Level_Name;
                                                    }
                                                    if (jobstat)
                                                    {
                                                        OGeneticApprStatement.Fld91 = GeoDataInd.JobStatus_Id.ToString();
                                                    }
                                                    if (job)
                                                    {
                                                        OGeneticApprStatement.Fld90 = FuncdataInd.Job_Name;
                                                    }
                                                    if (jobpos)
                                                    {
                                                        OGeneticApprStatement.Fld89 = FuncdataInd.JobPositionDesc;
                                                    }
                                                    if (emp)
                                                    {
                                                        OGeneticApprStatement.Fld88 = ca.Employee.ToString();
                                                    }

                                                    OGenericPayrollStatement.Add(OGeneticApprStatement);
                                                }
                                            }
                                        }

                                    }
                                }
                            }
                        }
                        return OGenericPayrollStatement;
                        break;

                    #region Appraisal Rating Analysis Report



                    case "APPRAISALRATINGANALYSIS":

                        var OEmployeeAppraisalrt = db.EmployeeAppraisal.Include(x => x.EmpAppEvaluation)
                        .Include(x => x.EmpAppEvaluation.Select(e => e.AppraisalPeriodCalendar))
                        .Include(a => a.EmpAppEvaluation.Select(b => b.EmpAppRatingConclusion.Select(c => c.AppraisalAssistance)))
                        .Include(e => e.EmpAppEvaluation.Select(b => b.AppraisalSchedule))
                        .Include(e => e.EmpAppEvaluation.Select(b => b.AppraisalSchedule.AppraisalPublish))
                        .Include(e => e.EmpAppEvaluation.Select(b => b.EmpAppRatingConclusion.Select(d => d.EmpAppRating.Select(r => r.AppAssignment))))
                        .Include(a => a.EmpAppEvaluation.Select(b => b.EmpAppRatingConclusion.Select(c => c.EmpAppRating.Select(d => d.ObjectiveWordings))))
                        .Include(e => e.EmpAppEvaluation.Select(b => b.EmpAppRatingConclusion.Select(d => d.EmpAppRating.Select(r => r.AppAssignment.AppCategory))))
                        .Include(e => e.EmpAppEvaluation.Select(b => b.EmpAppRatingConclusion.Select(d => d.EmpAppRating.Select(r => r.AppAssignment.AppSubCategory))))

                        .Include(x => x.Employee)
                        .Include(x => x.Employee.EmpName)
                        .Include(x => x.Employee.FuncStruct)
                        .Include(x => x.Employee.PayStruct)
                        .Include(x => x.Employee.GeoStruct).Where(e => EmpPayrollIdList.Contains(e.Employee.Id)).ToList();



                        if (OEmployeeAppraisalrt == null || OEmployeeAppraisalrt.Count() == 0)
                        {
                            return null;
                        }
                        else
                        {
                            var emp = false;
                            var dept = false;
                            var loca = false;
                            var comp = false;
                            var grp = false;
                            var unit = false;
                            var div = false;
                            var regn = false;
                            var grade = false;
                            var lvl = false;
                            var jobstat = false;
                            var job = false;
                            var jobpos = false;
                            var vc = db.LookupValue.Where(a => forithead.Contains(a.Id.ToString())).ToList();


                            foreach (var item in vc)
                            {
                                //if (item.LookupVal.ToUpper() == "MONTH")
                                //{
                                //    month = true;
                                //}
                                if (item.LookupVal.ToUpper() == "LOCATION")
                                {

                                    loca = true;
                                }
                                if (item.LookupVal.ToUpper() == "EMPLOYEE")
                                {
                                    emp = true;
                                }
                                if (item.LookupVal.ToUpper() == "DEPARTMENT")
                                {
                                    dept = true;
                                }
                                if (item.LookupVal.ToUpper() == "COMPANY")
                                {
                                    comp = true;
                                }
                                if (item.LookupVal.ToUpper() == "GROUP")
                                {
                                    grp = true;
                                }
                                if (item.LookupVal.ToUpper() == "UNIT")
                                {
                                    unit = true;
                                }
                                if (item.LookupVal.ToUpper() == "DIVISION")
                                {
                                    div = true;
                                }
                                if (item.LookupVal.ToUpper() == "REGION")
                                {
                                    regn = true;
                                }
                                if (item.LookupVal.ToUpper() == "GRADE")
                                {
                                    grade = true;
                                }
                                if (item.LookupVal.ToUpper() == "LEVEL")
                                {
                                    lvl = true;
                                }
                                if (item.LookupVal.ToUpper() == "JOBSTATUS")
                                {
                                    jobstat = true;
                                }

                                if (item.LookupVal.ToUpper() == "JOB")
                                {
                                    job = true;
                                }
                                if (item.LookupVal.ToUpper() == "JOBPOSITION")
                                {
                                    jobpos = true;
                                }
                            }



                            Utility.GetOrganizationDataClass GeoDataInd = new Utility.GetOrganizationDataClass();


                            foreach (var ca in OEmployeeAppraisalrt)
                            {
                                double TotalMaxPoints = 0;
                                double TotalRatingPNTS = 0;
                                double getCount = 0;
                                var cat = ca.EmpAppEvaluation.ToList();

                                var EMPAPPEVALL = cat.Select(eav => new
                                {
                                    AppCalendar = eav.AppraisalPeriodCalendar,
                                    AppPublish = eav.AppraisalSchedule.AppraisalPublish,
                                    batchName = eav.AppraisalSchedule.BatchName,
                                    EmpAppRateCon = eav.EmpAppRatingConclusion.Select(earc => new
                                    {
                                        earc.AppraisalAssistance,
                                        earc.AssistanceOverallComments,
                                        GetEmpAppRating = earc.EmpAppRating.Select(eap => new
                                        {
                                            AppCatName = eap.AppAssignment.AppCategory.Name,
                                            AppSubCatName = eap.AppAssignment.AppSubCategory.Name,
                                            MAXPNT = eap.AppAssignment.MaxRatingPoints,
                                            RATEPNTS = eap.RatingPoints,
                                        }).ToList(),


                                    }).ToList(),

                                }).ToList();

                                var getEMPAppCon = ca.EmpAppEvaluation.Select(s => s.EmpAppRatingConclusion).ToList();
                                var TEmp = getEMPAppCon.Select(a => new
                                {

                                    GetEmpAppConclusion = a.Select(b => new
                                    {
                                        GetEmpAppRATE = b.EmpAppRating.Select(c => new
                                        {
                                            GetRatingPNT = c.RatingPoints,
                                            AppASSIGNMENT = c.AppAssignment,
                                        }).ToList(),

                                    }).ToList(),

                                }).ToList();



                                if (TEmp.Count() > 0)
                                {
                                    foreach (var item in TEmp)
                                    {
                                        getCount = item.GetEmpAppConclusion.Select(z => z.GetEmpAppRATE).Count();
                                        foreach (var itemEAPC in item.GetEmpAppConclusion)
                                        {

                                            foreach (var itemEAR in itemEAPC.GetEmpAppRATE)
                                            {
                                                TotalRatingPNTS += itemEAR.GetRatingPNT;
                                                TotalMaxPoints += itemEAR.AppASSIGNMENT.MaxRatingPoints;
                                            }
                                        }
                                    }
                                }

                                double Percentage = 0;
                                if (TotalRatingPNTS != 0 && TotalMaxPoints != 0)
                                {
                                    TotalRatingPNTS = TotalRatingPNTS / getCount;
                                    TotalMaxPoints = TotalMaxPoints / getCount;

                                    TotalRatingPNTS = Math.Round(TotalRatingPNTS + 0.01, 0);
                                    TotalMaxPoints = Math.Round(TotalMaxPoints + 0.01, 0);

                                    Percentage = (TotalRatingPNTS / TotalMaxPoints) * 100;
                                    Percentage = Math.Round(Percentage, 2);
                                }


                                foreach (var item in EMPAPPEVALL)
                                {
                                    if (item.AppCalendar != null && item.AppCalendar.FromDate >= pFromDate && item.AppCalendar.ToDate <= pToDate)
                                    {

                                        //var pub = item.AppraisalSchedule.AppraisalPublish.ToList();
                                        var pub = item.AppPublish.ToList();

                                        int? geoid = ca.Employee.GeoStruct_Id;

                                        int? payid = ca.Employee.PayStruct_Id;

                                        int? funid = ca.Employee.FuncStruct_Id;

                                        GeoStruct geostruct = db.GeoStruct.Find(geoid);

                                        PayStruct paystruct = db.PayStruct.Find(payid);

                                        FuncStruct funstruct = db.FuncStruct.Find(funid);

                                        GeoDataInd = ReportRDLCObjectClass.GetOrganizationDataInd(geostruct, paystruct, funstruct, 0);



                                        if (salheadlist.Count() > 0)
                                        {
                                            foreach (var batch in salheadlist)
                                            {

                                                if (batch.ToUpper() == item.batchName.ToUpper())
                                                {

                                                    foreach (var item1 in pub)
                                                    {
                                                        foreach (var itemEARC in item.EmpAppRateCon)
                                                        {
                                                            foreach (var itemEAP in itemEARC.GetEmpAppRating)
                                                            {

                                                                GenericField100 OGenericObjStatement = new GenericField100()
                                                                {
                                                                    Fld5 = item.AppCalendar == null ? "" : item.AppCalendar.FullDetails.ToString(),
                                                                    Fld2 = item.batchName == null ? "" : item.batchName.ToString(),
                                                                    Fld4 = itemEAP.AppCatName == null ? "" : itemEAP.AppCatName.ToString(),
                                                                    Fld6 = itemEAP.AppSubCatName == null ? "" : itemEAP.AppSubCatName.ToString(),
                                                                    Fld10 = itemEAP.MAXPNT == 0 ? "0" : itemEAP.MAXPNT.ToString(),
                                                                    Fld11 = itemEAP.RATEPNTS == 0 ? "0" : itemEAP.RATEPNTS.ToString(),
                                                                    Fld12 = itemEARC.AssistanceOverallComments == null ? "" : itemEARC.AssistanceOverallComments.ToString(),

                                                                    Fld3 = itemEARC.AppraisalAssistance == null ? "" : itemEARC.AppraisalAssistance.LookupVal.ToString(),
                                                                    Fld13 = TotalMaxPoints == 0 ? "0" : TotalMaxPoints.ToString(),
                                                                    Fld14 = TotalRatingPNTS == 0 ? "0" : TotalRatingPNTS.ToString(),
                                                                    Fld15 = Percentage == 0 ? "0" : Percentage.ToString(),
                                                                    Fld8 = ca.Employee == null ? "" : ca.Employee.EmpCode.ToString(),
                                                                    Fld9 = ca.Employee == null ? "" : ca.Employee.EmpName.FullNameFML.ToString(),
                                                                };
                                                                if (comp)
                                                                {
                                                                    OGenericObjStatement.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                                }
                                                                if (div)
                                                                {
                                                                    OGenericObjStatement.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                                }
                                                                if (loca)
                                                                {
                                                                    OGenericObjStatement.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                                }
                                                                if (dept)
                                                                {
                                                                    OGenericObjStatement.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                                }
                                                                if (grp)
                                                                {
                                                                    OGenericObjStatement.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                                }
                                                                if (unit)
                                                                {
                                                                    OGenericObjStatement.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                                }
                                                                if (grade)
                                                                {
                                                                    OGenericObjStatement.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                                }
                                                                if (lvl)
                                                                {
                                                                    OGenericObjStatement.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                                }
                                                                if (jobstat)
                                                                {
                                                                    OGenericObjStatement.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                                }
                                                                if (job)
                                                                {
                                                                    OGenericObjStatement.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                                }
                                                                if (jobpos)
                                                                {
                                                                    OGenericObjStatement.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                                }
                                                                if (emp)
                                                                {
                                                                    OGenericObjStatement.Fld88 = ca.Employee.EmpName.FullNameFML;
                                                                }

                                                                OGenericPayrollStatement.Add(OGenericObjStatement);
                                                            }

                                                        }


                                                    }

                                                }
                                            }
                                        }
                                        else
                                        {

                                            foreach (var item1 in pub)
                                            {

                                                foreach (var itemEARC in item.EmpAppRateCon)
                                                {
                                                    foreach (var itemEAP in itemEARC.GetEmpAppRating)
                                                    {
                                                        GenericField100 OGenericObjStatement = new GenericField100()
                                                        {
                                                            Fld5 = item.AppCalendar == null ? "" : item.AppCalendar.FullDetails.ToString(),
                                                            Fld2 = item.batchName == null ? "" : item.batchName.ToString(),
                                                            Fld4 = itemEAP.AppCatName == null ? "" : itemEAP.AppCatName.ToString(),
                                                            Fld6 = itemEAP.AppSubCatName == null ? "" : itemEAP.AppSubCatName.ToString(),
                                                            Fld10 = itemEAP.MAXPNT == 0 ? "0" : itemEAP.MAXPNT.ToString(),
                                                            Fld11 = itemEAP.RATEPNTS == 0 ? "0" : itemEAP.RATEPNTS.ToString(),
                                                            Fld12 = itemEARC.AssistanceOverallComments == null ? "" : itemEARC.AssistanceOverallComments.ToString(),

                                                            Fld3 = itemEARC.AppraisalAssistance == null ? "" : itemEARC.AppraisalAssistance.LookupVal.ToString(),
                                                            Fld13 = TotalMaxPoints == 0 ? "0" : TotalMaxPoints.ToString(),
                                                            Fld14 = TotalRatingPNTS == 0 ? "0" : TotalRatingPNTS.ToString(),
                                                            Fld15 = Percentage == 0 ? "0" : Percentage.ToString(),
                                                            Fld8 = ca.Employee == null ? "" : ca.Employee.EmpCode.ToString(),
                                                            Fld9 = ca.Employee == null ? "" : ca.Employee.EmpName.FullNameFML.ToString(),
                                                        };
                                                        if (comp)
                                                        {
                                                            OGenericObjStatement.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                        }
                                                        if (div)
                                                        {
                                                            OGenericObjStatement.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                        }
                                                        if (loca)
                                                        {
                                                            OGenericObjStatement.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                        }
                                                        if (dept)
                                                        {
                                                            OGenericObjStatement.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                        }
                                                        if (grp)
                                                        {
                                                            OGenericObjStatement.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                        }
                                                        if (unit)
                                                        {
                                                            OGenericObjStatement.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                        }
                                                        if (grade)
                                                        {
                                                            OGenericObjStatement.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                        }
                                                        if (lvl)
                                                        {
                                                            OGenericObjStatement.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                        }
                                                        if (jobstat)
                                                        {
                                                            OGenericObjStatement.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                        }
                                                        if (job)
                                                        {
                                                            OGenericObjStatement.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                        }
                                                        if (jobpos)
                                                        {
                                                            OGenericObjStatement.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                        }
                                                        if (emp)
                                                        {
                                                            OGenericObjStatement.Fld88 = ca.Employee.EmpName.FullNameFML;
                                                        }

                                                        OGenericPayrollStatement.Add(OGenericObjStatement);

                                                    }
                                                }
                                            }
                                        }

                                    }
                                }
                            }
                        }
                        return OGenericPayrollStatement;
                        break;
                    #endregion

                    #region Employee Appraisal Rating Conclusion Summary Report
                    case "APPRAISALRATINGCONCLUSIONSUMMARY":

                        //var OEmployeAppraisalsum = db.EmployeeAppraisal.Include(x => x.EmpAppEvaluation)
                        //.Include(x => x.EmpAppEvaluation.Select(e => e.AppraisalPeriodCalendar))
                        //.Include(a => a.EmpAppEvaluation.Select(b => b.EmpAppRatingConclusion.Select(c => c.AppraisalAssistance)))
                        //.Include(e => e.EmpAppEvaluation.Select(b => b.AppraisalSchedule))
                        //.Include(e => e.EmpAppEvaluation.Select(b => b.AppraisalSchedule.AppraisalPublish))
                        //.Include(e => e.EmpAppEvaluation.Select(b => b.EmpAppRatingConclusion.Select(d => d.EmpAppRating.Select(r => r.AppAssignment))))
                        //.Include(a => a.EmpAppEvaluation.Select(b => b.EmpAppRatingConclusion.Select(c => c.EmpAppRating.Select(d => d.ObjectiveWordings))))
                        //.Include(e => e.EmpAppEvaluation.Select(b => b.EmpAppRatingConclusion.Select(d => d.EmpAppRating.Select(r => r.AppAssignment.AppCategory))))
                        //.Include(e => e.EmpAppEvaluation.Select(b => b.EmpAppRatingConclusion.Select(d => d.EmpAppRating.Select(r => r.AppAssignment.AppSubCategory))))

                        //.Include(x => x.Employee)
                        //.Include(x => x.Employee.EmpName)
                        //.Include(x => x.Employee.FuncStruct)
                        //.Include(x => x.Employee.PayStruct)
                        //.Include(x => x.Employee.GeoStruct).Where(e => EmpPayrollIdList.Contains(e.Employee.Id)).ToList();

                        var OEmployeAppraisalsum = db.EmployeeAppraisal.Select(a => new
                        {
                            EmployeeId = a.Employee.Id,
                            EmpName = a.Employee.EmpName.FullNameFML,
                            EmpCode = a.Employee.EmpCode,
                            GeoStructId = a.Employee.GeoStruct.Id,
                            PayStructId = a.Employee.PayStruct.Id,
                            FuncStructId = a.Employee.FuncStruct.Id,

                            //EmpAppEvaluation = a.EmpAppEvaluation.ToList(),
                            EmpAppEvaluation = a.EmpAppEvaluation.Select(b => new
                            {
                                //AppraisalSchedule = b.AppraisalSchedule,
                                //AppraisalPeriodCalendar = b.AppraisalPeriodCalendar,
                                //EmpAppRatingConclusion = b.EmpAppRatingConclusion.ToList(),
                                FromDate = b.AppraisalPeriodCalendar.FromDate,
                                ToDate = b.AppraisalPeriodCalendar.ToDate,
                                AppraisalPeriodCalendarFullDetails = b.AppraisalPeriodCalendar.FullDetails,
                                BatchCode = b.AppraisalSchedule.BatchCode,
                                BatchName = b.AppraisalSchedule.BatchName,
                                EmpAppRatingConclusion = b.EmpAppRatingConclusion.Select(c => new
                                {
                                    AppraisalAssistanceLookupVal = c.AppraisalAssistance.LookupVal,
                                    //EmpAppRating = c.EmpAppRating,
                                    EmpAppRating = c.EmpAppRating.Select(d => new
                                    {
                                        iRatingPoints = d.RatingPoints,
                                        iMaxRatingPoints = d.AppAssignment.MaxRatingPoints,
                                        //ObjectiveWordings = d.ObjectiveWordings,
                                        AppCategoryCode = d.AppAssignment.AppCategory.Code,
                                        AppSubCategoryCode = d.AppAssignment.AppSubCategory.Code,

                                    }).ToList(),
                                }).ToList(),

                                // AppraisalPublish = b.AppraisalSchedule.AppraisalPublish.ToList(),
                            }).Where(y => (y.FromDate >= pFromDate && y.ToDate <= pToDate) && salheadlist.Any() ? salheadlist.Contains(y.BatchName) : true).ToList(),
                        }).Where(e => EmpPayrollIdList.Contains(e.EmployeeId)).ToList();

                        if (OEmployeAppraisalsum == null || OEmployeAppraisalsum.Count() == 0)
                        {
                            return null;
                        }
                        else
                        {
                            var emp = false;
                            var dept = false;
                            var loca = false;
                            var comp = false;
                            var grp = false;
                            var unit = false;
                            var div = false;
                            var regn = false;
                            var grade = false;
                            var lvl = false;
                            var jobstat = false;
                            var job = false;
                            var jobpos = false;
                            var vc = db.LookupValue.Where(a => forithead.Contains(a.Id.ToString())).ToList();


                            foreach (var item in vc)
                            {
                                //if (item.LookupVal.ToUpper() == "MONTH")
                                //{
                                //    month = true;
                                //}
                                if (item.LookupVal.ToUpper() == "LOCATION")
                                {

                                    loca = true;
                                }
                                if (item.LookupVal.ToUpper() == "EMPLOYEE")
                                {
                                    emp = true;
                                }
                                if (item.LookupVal.ToUpper() == "DEPARTMENT")
                                {
                                    dept = true;
                                }
                                if (item.LookupVal.ToUpper() == "COMPANY")
                                {
                                    comp = true;
                                }
                                if (item.LookupVal.ToUpper() == "GROUP")
                                {
                                    grp = true;
                                }
                                if (item.LookupVal.ToUpper() == "UNIT")
                                {
                                    unit = true;
                                }
                                if (item.LookupVal.ToUpper() == "DIVISION")
                                {
                                    div = true;
                                }
                                if (item.LookupVal.ToUpper() == "REGION")
                                {
                                    regn = true;
                                }
                                if (item.LookupVal.ToUpper() == "GRADE")
                                {
                                    grade = true;
                                }
                                if (item.LookupVal.ToUpper() == "LEVEL")
                                {
                                    lvl = true;
                                }
                                if (item.LookupVal.ToUpper() == "JOBSTATUS")
                                {
                                    jobstat = true;
                                }

                                if (item.LookupVal.ToUpper() == "JOB")
                                {
                                    job = true;
                                }
                                if (item.LookupVal.ToUpper() == "JOBPOSITION")
                                {
                                    jobpos = true;
                                }
                            }
                            Utility.GetOrganizationDataClass GeoDataInd = new Utility.GetOrganizationDataClass();

                            foreach (var ca in OEmployeAppraisalsum)
                            {
                                double TotalMaxPoints = 0;
                                double TotalRatingPNTS = 0;
                                double getCount = 0;
                                //var cat = ca.EmpAppEvaluation.ToList();

                                //var EMPAPPEVALL = cat.Select(eav => new
                                //{
                                //    AppCalendar = eav.AppraisalPeriodCalendar,
                                //    //AppPublish = eav.AppraisalSchedule.AppraisalPublish,
                                //    batchName = eav.AppraisalSchedule.BatchName,
                                //    EmpAppRateCon = eav.EmpAppRatingConclusion.Select(earc => new
                                //    {
                                //        earc.AppraisalAssistance,
                                //        earc.AssistanceOverallComments,
                                //        GetEmpAppRating = earc.EmpAppRating.Select(eap => new
                                //        {
                                //            AppCatName = eap.AppAssignment.AppCategory.Name,
                                //            AppSubCatName = eap.AppAssignment.AppSubCategory.Name,
                                //            MAXPNT = eap.AppAssignment.MaxRatingPoints,
                                //            RATEPNTS = eap.RatingPoints,
                                //        }).ToList(),


                                //    }).ToList(),

                                //}).ToList();

                                //var getEMPAppCon = ca.EmpAppEvaluation.Select(s => s.EmpAppRatingConclusion).ToList();
                                //var TEmp = getEMPAppCon.Select(a => new
                                //{

                                //    GetEmpAppConclusion = a.Select(b => new
                                //    {
                                //        GetEmpAppRATE = b.EmpAppRating.Select(c => new
                                //        {
                                //            GetRatingPNT = c.RatingPoints,
                                //            AppASSIGNMENT = c.AppAssignment,
                                //        }).ToList(),

                                //    }).ToList(),

                                //}).ToList();



                                //if (TEmp.Count() > 0)
                                //{
                                //    foreach (var item in TEmp)
                                //    {
                                //        getCount = item.GetEmpAppConclusion.Select(z => z.GetEmpAppRATE).Count();
                                //        foreach (var itemEAPC in item.GetEmpAppConclusion)
                                //        {

                                //            foreach (var itemEAR in itemEAPC.GetEmpAppRATE)
                                //            {
                                //                TotalRatingPNTS += itemEAR.GetRatingPNT;
                                //                TotalMaxPoints += itemEAR.AppASSIGNMENT.MaxRatingPoints;
                                //            }
                                //        }
                                //    }
                                //}

                                foreach (var A11 in ca.EmpAppEvaluation)
                                {
                                    foreach (var A12 in A11.EmpAppRatingConclusion)
                                    {
                                        foreach (var A13 in A12.EmpAppRating)
                                        {
                                            TotalRatingPNTS += A13.iRatingPoints;
                                            TotalMaxPoints += A13.iMaxRatingPoints;
                                        }
                                    }
                                }

                                double Percentage = 0;

                                if (TotalRatingPNTS != 0 && TotalMaxPoints != 0)
                                {
                                    TotalRatingPNTS = TotalRatingPNTS / getCount;
                                    TotalMaxPoints = TotalMaxPoints / getCount;

                                    TotalRatingPNTS = Math.Round(TotalRatingPNTS + 0.01, 0);
                                    TotalMaxPoints = Math.Round(TotalMaxPoints + 0.01, 0);

                                    Percentage = (TotalRatingPNTS / TotalMaxPoints) * 100;
                                    Percentage = Math.Round(Percentage, 2);
                                }


                                foreach (var item in ca.EmpAppEvaluation)
                                {
                                    //if (item.AppCalendar != null && item.AppCalendar.FromDate >= pFromDate && item.AppCalendar.ToDate <= pToDate)
                                    //{

                                    //var pub = item.AppraisalSchedule.AppraisalPublish.ToList();
                                    // var pub = item.AppPublish.ToList();

                                    int? geoid = ca.GeoStructId;

                                    int? payid = ca.PayStructId;

                                    int? funid = ca.FuncStructId;

                                    GeoStruct geostruct = db.GeoStruct.Find(geoid);

                                    PayStruct paystruct = db.PayStruct.Find(payid);

                                    FuncStruct funstruct = db.FuncStruct.Find(funid);

                                    GeoDataInd = ReportRDLCObjectClass.GetOrganizationDataInd(geostruct, paystruct, funstruct, 0);
                                    double Assigntotal = 0;

                                    var AppAssignAppCateg = db.AppAssignment.Include(e => e.AppCategory).Where(e => e.GeoStruct.Id == geostruct.Id || e.FuncStruct.Id == funstruct.Id || e.PayStruct.Id == paystruct.Id).ToList().Select(a => a.MaxRatingPoints);
                                    Assigntotal = AppAssignAppCateg.Sum();

                                    //if (salheadlist.Count() > 0)
                                    //{
                                    //foreach (var batch in salheadlist)
                                    //{

                                    //if (batch.ToUpper() == item.batchName.ToUpper())
                                    //{

                                    //foreach (var item1 in pub)
                                    //{
                                    foreach (var item1 in item.EmpAppRatingConclusion)
                                    {

                                        foreach (var item2 in item1.EmpAppRating)
                                        {

                                            GenericField100 OGenericObjStatement = new GenericField100()
                                            {
                                                Fld5 = item.AppraisalPeriodCalendarFullDetails == null ? "" : item.AppraisalPeriodCalendarFullDetails,
                                                Fld2 = item.BatchName == null ? "" : item.BatchName,
                                                Fld4 = item2.AppCategoryCode == null ? "" : item2.AppCategoryCode,
                                                Fld6 = item2.AppSubCategoryCode == null ? "" : item2.AppSubCategoryCode,
                                                Fld10 = item2.iMaxRatingPoints == 0 ? "0" : item2.iMaxRatingPoints.ToString(),
                                                Fld15 = Assigntotal != 0 ? Assigntotal.ToString() : "",
                                                Fld11 = item2.iRatingPoints == 0 ? "0" : item2.iRatingPoints.ToString(),
                                                // Fld12 = itemEARC.AssistanceOverallComments == null ? "" : itemEARC.AssistanceOverallComments.ToString(),

                                                Fld3 = item1.AppraisalAssistanceLookupVal == null ? "" : item1.AppraisalAssistanceLookupVal,
                                                //Fld13 = TotalMaxPoints == 0 ? "0" : TotalMaxPoints.ToString(),
                                                //Fld14 = TotalRatingPNTS == 0 ? "0" : TotalRatingPNTS.ToString(),
                                                //Fld15 = Percentage == 0 ? "0" : Percentage.ToString(),
                                                Fld8 = ca.EmpCode == null ? "" : ca.EmpCode,
                                                Fld9 = ca.EmpName == null ? "" : ca.EmpName,

                                            };
                                            if (comp)
                                            {
                                                OGenericObjStatement.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                            }
                                            if (div)
                                            {
                                                OGenericObjStatement.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                            }
                                            if (loca)
                                            {
                                                OGenericObjStatement.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                            }
                                            if (dept)
                                            {
                                                OGenericObjStatement.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                            }
                                            if (grp)
                                            {
                                                OGenericObjStatement.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                            }
                                            if (unit)
                                            {
                                                OGenericObjStatement.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                            }
                                            if (grade)
                                            {
                                                OGenericObjStatement.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                            }
                                            if (lvl)
                                            {
                                                OGenericObjStatement.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                            }
                                            if (jobstat)
                                            {
                                                OGenericObjStatement.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                            }
                                            if (job)
                                            {
                                                OGenericObjStatement.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                            }
                                            if (jobpos)
                                            {
                                                OGenericObjStatement.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                            }
                                            if (emp)
                                            {
                                                OGenericObjStatement.Fld88 = ca.EmpName;
                                            }

                                            OGenericPayrollStatement.Add(OGenericObjStatement);
                                        }

                                    }


                                    // }

                                    //}
                                    //}
                                    //}
                                    //else
                                    //{

                                    //    //foreach (var item1 in pub)
                                    //    //{

                                    //    foreach (var itemEARC in item.EmpAppRateCon)
                                    //    {

                                    //        foreach (var itemEAP in itemEARC.GetEmpAppRating)
                                    //        {


                                    //            GenericField100 OGenericObjStatement = new GenericField100()
                                    //            {
                                    //                Fld5 = item.AppCalendar == null ? "" : item.AppCalendar.FullDetails.ToString(),
                                    //                Fld2 = item.batchName == null ? "" : item.batchName.ToString(),
                                    //                Fld4 = itemEAP.AppCatName == null ? "" : itemEAP.AppCatName.ToString(),
                                    //                Fld6 = itemEAP.AppSubCatName == null ? "" : itemEAP.AppSubCatName.ToString(),
                                    //                Fld10 = itemEAP.MAXPNT == 0 ? "0" : itemEAP.MAXPNT.ToString(),
                                    //                Fld15 = Assigntotal != 0 ? Assigntotal.ToString() : "",
                                    //                Fld11 = itemEAP.RATEPNTS == 0 ? "0" : itemEAP.RATEPNTS.ToString(),
                                    //                //Fld12 = itemEARC.AssistanceOverallComments == null ? "" : itemEARC.AssistanceOverallComments.ToString(),

                                    //                Fld3 = itemEARC.AppraisalAssistance == null ? "" : itemEARC.AppraisalAssistance.LookupVal.ToString(),
                                    //                //Fld13 = TotalMaxPoints == 0 ? "0" : TotalMaxPoints.ToString(),
                                    //                //Fld14 = TotalRatingPNTS == 0 ? "0" : TotalRatingPNTS.ToString(),
                                    //                //Fld15 = Percentage == 0 ? "0" : Percentage.ToString(),
                                    //                Fld8 = ca.Employee == null ? "" : ca.Employee.EmpCode.ToString(),
                                    //                Fld9 = ca.Employee == null ? "" : ca.Employee.EmpName.FullNameFML.ToString(),
                                    //            };
                                    //            if (comp)
                                    //            {
                                    //                OGenericObjStatement.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                    //            }
                                    //            if (div)
                                    //            {
                                    //                OGenericObjStatement.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                    //            }
                                    //            if (loca)
                                    //            {
                                    //                OGenericObjStatement.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                    //            }
                                    //            if (dept)
                                    //            {
                                    //                OGenericObjStatement.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                    //            }
                                    //            if (grp)
                                    //            {
                                    //                OGenericObjStatement.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                    //            }
                                    //            if (unit)
                                    //            {
                                    //                OGenericObjStatement.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                    //            }
                                    //            if (grade)
                                    //            {
                                    //                OGenericObjStatement.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                    //            }
                                    //            if (lvl)
                                    //            {
                                    //                OGenericObjStatement.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                    //            }
                                    //            if (jobstat)
                                    //            {
                                    //                OGenericObjStatement.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                    //            }
                                    //            if (job)
                                    //            {
                                    //                OGenericObjStatement.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                    //            }
                                    //            if (jobpos)
                                    //            {
                                    //                OGenericObjStatement.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                    //            }
                                    //            if (emp)
                                    //            {
                                    //                OGenericObjStatement.Fld88 = ca.Employee.EmpName.FullNameFML;
                                    //            }

                                    //            OGenericPayrollStatement.Add(OGenericObjStatement);

                                    //        }
                                    //    }
                                    //}
                                    //}

                                    //}
                                }
                            }
                        }
                        return OGenericPayrollStatement;
                        break;
                    #endregion

                    #region Appraisal Rating Analysis Locationwise Report
                    case "APPRAISALRATINGANALYSISLOCATION":

                        var OEmployeeAppraisalLoct = db.EmployeeAppraisal.Include(x => x.EmpAppEvaluation)
                        .Include(x => x.EmpAppEvaluation.Select(e => e.AppraisalPeriodCalendar))
                        .Include(a => a.EmpAppEvaluation.Select(b => b.EmpAppRatingConclusion.Select(c => c.AppraisalAssistance)))
                        .Include(e => e.EmpAppEvaluation.Select(b => b.AppraisalSchedule))
                        .Include(e => e.EmpAppEvaluation.Select(b => b.AppraisalSchedule.AppraisalPublish))
                        .Include(e => e.EmpAppEvaluation.Select(b => b.EmpAppRatingConclusion.Select(d => d.EmpAppRating.Select(r => r.AppAssignment))))
                        .Include(a => a.EmpAppEvaluation.Select(b => b.EmpAppRatingConclusion.Select(c => c.EmpAppRating.Select(d => d.ObjectiveWordings))))
                        .Include(e => e.EmpAppEvaluation.Select(b => b.EmpAppRatingConclusion.Select(d => d.EmpAppRating.Select(r => r.AppAssignment.AppCategory))))
                        .Include(e => e.EmpAppEvaluation.Select(b => b.EmpAppRatingConclusion.Select(d => d.EmpAppRating.Select(r => r.AppAssignment.AppSubCategory))))

                        .Include(x => x.Employee)
                        .Include(x => x.Employee.EmpName)
                        .Include(x => x.Employee.FuncStruct)
                        .Include(x => x.Employee.PayStruct)
                        .Include(x => x.Employee.GeoStruct).Where(e => EmpPayrollIdList.Contains(e.Employee.Id)).ToList();



                        if (OEmployeeAppraisalLoct == null || OEmployeeAppraisalLoct.Count() == 0)
                        {
                            return null;
                        }
                        else
                        {
                            var emp = false;
                            var dept = false;
                            var loca = false;
                            var comp = false;
                            var grp = false;
                            var unit = false;
                            var div = false;
                            var regn = false;
                            var grade = false;
                            var lvl = false;
                            var jobstat = false;
                            var job = false;
                            var jobpos = false;
                            var vc = db.LookupValue.Where(a => forithead.Contains(a.Id.ToString())).ToList();


                            foreach (var item in vc)
                            {
                                //if (item.LookupVal.ToUpper() == "MONTH")
                                //{
                                //    month = true;
                                //}
                                if (item.LookupVal.ToUpper() == "LOCATION")
                                {

                                    loca = true;
                                }
                                if (item.LookupVal.ToUpper() == "EMPLOYEE")
                                {
                                    emp = true;
                                }
                                if (item.LookupVal.ToUpper() == "DEPARTMENT")
                                {
                                    dept = true;
                                }
                                if (item.LookupVal.ToUpper() == "COMPANY")
                                {
                                    comp = true;
                                }
                                if (item.LookupVal.ToUpper() == "GROUP")
                                {
                                    grp = true;
                                }
                                if (item.LookupVal.ToUpper() == "UNIT")
                                {
                                    unit = true;
                                }
                                if (item.LookupVal.ToUpper() == "DIVISION")
                                {
                                    div = true;
                                }
                                if (item.LookupVal.ToUpper() == "REGION")
                                {
                                    regn = true;
                                }
                                if (item.LookupVal.ToUpper() == "GRADE")
                                {
                                    grade = true;
                                }
                                if (item.LookupVal.ToUpper() == "LEVEL")
                                {
                                    lvl = true;
                                }
                                if (item.LookupVal.ToUpper() == "JOBSTATUS")
                                {
                                    jobstat = true;
                                }

                                if (item.LookupVal.ToUpper() == "JOB")
                                {
                                    job = true;
                                }
                                if (item.LookupVal.ToUpper() == "JOBPOSITION")
                                {
                                    jobpos = true;
                                }
                            }



                            Utility.GetOrganizationDataClass GeoDataInd = new Utility.GetOrganizationDataClass();


                            foreach (var ca in OEmployeeAppraisalLoct)
                            {
                                double TotalMaxPoints = 0;
                                double TotalRatingPNTS = 0;
                                double getCount = 0;
                                var cat = ca.EmpAppEvaluation.ToList();

                                var EMPAPPEVALL = cat.Select(eav => new
                                {
                                    AppCalendar = eav.AppraisalPeriodCalendar,
                                    AppPublish = eav.AppraisalSchedule.AppraisalPublish,
                                    batchName = eav.AppraisalSchedule.BatchName,
                                    EmpAppRateCon = eav.EmpAppRatingConclusion.Select(earc => new
                                    {
                                        earc.AppraisalAssistance,
                                        earc.AssistanceOverallComments,
                                        GetEmpAppRating = earc.EmpAppRating.Select(eap => new
                                        {
                                            AppCatName = eap.AppAssignment.AppCategory.Name,
                                            AppSubCatName = eap.AppAssignment.AppSubCategory.Name,
                                            MAXPNT = eap.AppAssignment.MaxRatingPoints,
                                            RATEPNTS = eap.RatingPoints,
                                        }).ToList(),


                                    }).ToList(),

                                }).ToList();

                                var getEMPAppCon = ca.EmpAppEvaluation.Select(s => s.EmpAppRatingConclusion).ToList();
                                var TEmp = getEMPAppCon.Select(a => new
                                {

                                    GetEmpAppConclusion = a.Select(b => new
                                    {
                                        GetEmpAppRATE = b.EmpAppRating.Select(c => new
                                        {
                                            GetRatingPNT = c.RatingPoints,
                                            AppASSIGNMENT = c.AppAssignment,
                                        }).ToList(),

                                    }).ToList(),

                                }).ToList();



                                if (TEmp.Count() > 0)
                                {
                                    foreach (var item in TEmp)
                                    {
                                        getCount = item.GetEmpAppConclusion.Select(z => z.GetEmpAppRATE).Count();
                                        foreach (var itemEAPC in item.GetEmpAppConclusion)
                                        {

                                            foreach (var itemEAR in itemEAPC.GetEmpAppRATE)
                                            {
                                                TotalRatingPNTS += itemEAR.GetRatingPNT;
                                                TotalMaxPoints += itemEAR.AppASSIGNMENT.MaxRatingPoints;
                                            }
                                        }
                                    }
                                }

                                double Percentage = 0;
                                if (TotalRatingPNTS != 0 && TotalMaxPoints != 0)
                                {
                                    TotalRatingPNTS = TotalRatingPNTS / getCount;
                                    TotalMaxPoints = TotalMaxPoints / getCount;

                                    TotalRatingPNTS = Math.Round(TotalRatingPNTS + 0.01, 0);
                                    TotalMaxPoints = Math.Round(TotalMaxPoints + 0.01, 0);

                                    Percentage = (TotalRatingPNTS / TotalMaxPoints) * 100;
                                    Percentage = Math.Round(Percentage, 2);
                                }


                                foreach (var item in EMPAPPEVALL)
                                {
                                    if (item.AppCalendar != null && item.AppCalendar.FromDate >= pFromDate && item.AppCalendar.ToDate <= pToDate)
                                    {

                                        var pub = item.AppPublish.ToList();

                                        int? geoid = ca.Employee.GeoStruct_Id;

                                        int? payid = ca.Employee.PayStruct_Id;

                                        int? funid = ca.Employee.FuncStruct_Id;

                                        GeoStruct geostruct = db.GeoStruct.Find(geoid);

                                        PayStruct paystruct = db.PayStruct.Find(payid);

                                        FuncStruct funstruct = db.FuncStruct.Find(funid);

                                        GeoDataInd = ReportRDLCObjectClass.GetOrganizationDataInd(geostruct, paystruct, funstruct, 0);



                                        if (salheadlist.Count() > 0)
                                        {
                                            foreach (var batch in salheadlist)
                                            {

                                                if (batch.ToUpper() == item.batchName.ToUpper())
                                                {
                                                    foreach (var item1 in pub)
                                                    {
                                                        GenericField100 OGenericObjStatement = new GenericField100()
                                                        {
                                                            Fld5 = item.AppCalendar == null ? "" : item.AppCalendar.FullDetails.ToString(),
                                                            Fld2 = item.batchName == null ? "" : item.batchName.ToString(),

                                                            Fld13 = TotalMaxPoints == 0 ? "0" : TotalMaxPoints.ToString(),
                                                            Fld14 = TotalRatingPNTS == 0 ? "0" : TotalRatingPNTS.ToString(),
                                                            Fld15 = Percentage == 0 ? "0" : Percentage.ToString(),
                                                            Fld8 = ca.Employee == null ? "" : ca.Employee.EmpCode.ToString(),
                                                            Fld9 = ca.Employee == null ? "" : ca.Employee.EmpName.FullNameFML.ToString(),

                                                            Fld17 = GeoDataInd.GeoStruct_Location_Name != null ? GeoDataInd.GeoStruct_Location_Name.ToString() : "",
                                                            Fld18 = GeoDataInd.FuncStruct_Job_Name != null ? GeoDataInd.FuncStruct_Job_Name.ToString() : "",
                                                        };
                                                        if (comp)
                                                        {
                                                            OGenericObjStatement.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                        }
                                                        if (div)
                                                        {
                                                            OGenericObjStatement.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                        }
                                                        if (loca)
                                                        {
                                                            OGenericObjStatement.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                        }
                                                        if (dept)
                                                        {
                                                            OGenericObjStatement.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                        }
                                                        if (grp)
                                                        {
                                                            OGenericObjStatement.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                        }
                                                        if (unit)
                                                        {
                                                            OGenericObjStatement.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                        }
                                                        if (grade)
                                                        {
                                                            OGenericObjStatement.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                        }
                                                        if (lvl)
                                                        {
                                                            OGenericObjStatement.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                        }
                                                        if (jobstat)
                                                        {
                                                            OGenericObjStatement.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                        }
                                                        if (job)
                                                        {
                                                            OGenericObjStatement.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                        }
                                                        if (jobpos)
                                                        {
                                                            OGenericObjStatement.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                        }
                                                        if (emp)
                                                        {
                                                            OGenericObjStatement.Fld88 = ca.Employee.EmpName.FullNameFML;
                                                        }

                                                        OGenericPayrollStatement.Add(OGenericObjStatement);



                                                    }

                                                }
                                            }
                                        }
                                        else
                                        {

                                            foreach (var item1 in pub)
                                            {
                                                GenericField100 OGenericObjStatement = new GenericField100()
                                                {
                                                    Fld5 = item.AppCalendar == null ? "" : item.AppCalendar.FullDetails.ToString(),
                                                    Fld2 = item.batchName == null ? "" : item.batchName.ToString(),

                                                    Fld13 = TotalMaxPoints == 0 ? "0" : TotalMaxPoints.ToString(),
                                                    Fld14 = TotalRatingPNTS == 0 ? "0" : TotalRatingPNTS.ToString(),
                                                    Fld15 = Percentage == 0 ? "0" : Percentage.ToString(),
                                                    Fld8 = ca.Employee == null ? "" : ca.Employee.EmpCode.ToString(),
                                                    Fld9 = ca.Employee == null ? "" : ca.Employee.EmpName.FullNameFML.ToString(),

                                                    Fld17 = GeoDataInd.GeoStruct_Location_Name != null ? GeoDataInd.GeoStruct_Location_Name.ToString() : "",
                                                    Fld18 = GeoDataInd.FuncStruct_Job_Name != null ? GeoDataInd.FuncStruct_Job_Name.ToString() : "",
                                                };
                                                if (comp)
                                                {
                                                    OGenericObjStatement.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                }
                                                if (div)
                                                {
                                                    OGenericObjStatement.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                }
                                                if (loca)
                                                {
                                                    OGenericObjStatement.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                }
                                                if (dept)
                                                {
                                                    OGenericObjStatement.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                }
                                                if (grp)
                                                {
                                                    OGenericObjStatement.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                }
                                                if (unit)
                                                {
                                                    OGenericObjStatement.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                }
                                                if (grade)
                                                {
                                                    OGenericObjStatement.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                }
                                                if (lvl)
                                                {
                                                    OGenericObjStatement.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                }
                                                if (jobstat)
                                                {
                                                    OGenericObjStatement.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                }
                                                if (job)
                                                {
                                                    OGenericObjStatement.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                }
                                                if (jobpos)
                                                {
                                                    OGenericObjStatement.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                }
                                                if (emp)
                                                {
                                                    OGenericObjStatement.Fld88 = ca.Employee.EmpName.FullNameFML;
                                                }

                                                OGenericPayrollStatement.Add(OGenericObjStatement);


                                            }
                                        }

                                    }
                                }
                            }
                        }
                        return OGenericPayrollStatement;
                        break;
                    #endregion

                    #region Appraisal Rating Analysis Confidential Report
                    case "APPRAISALRATINGANALYSISCONFIDENTIAL":

                        //var OEmployeeAppraisalLoctConfi = db.EmployeeAppraisal.Include(x => x.EmpAppEvaluation)
                        //.Include(x => x.EmpAppEvaluation.Select(e => e.AppraisalPeriodCalendar))
                        //.Include(a => a.EmpAppEvaluation.Select(b => b.EmpAppRatingConclusion.Select(c => c.AppraisalAssistance)))
                        //.Include(e => e.EmpAppEvaluation.Select(b => b.AppraisalSchedule))
                        //.Include(e => e.EmpAppEvaluation.Select(b => b.AppraisalSchedule.AppraisalPublish))
                        //.Include(e => e.EmpAppEvaluation.Select(b => b.EmpAppRatingConclusion.Select(d => d.EmpAppRating.Select(r => r.AppAssignment))))
                        //.Include(a => a.EmpAppEvaluation.Select(b => b.EmpAppRatingConclusion.Select(c => c.EmpAppRating.Select(d => d.ObjectiveWordings))))
                        //.Include(e => e.EmpAppEvaluation.Select(b => b.EmpAppRatingConclusion.Select(d => d.EmpAppRating.Select(r => r.AppAssignment.AppCategory))))
                        //.Include(e => e.EmpAppEvaluation.Select(b => b.EmpAppRatingConclusion.Select(d => d.EmpAppRating.Select(r => r.AppAssignment.AppSubCategory))))

                        //.Include(x => x.Employee)
                        //.Include(x => x.Employee.EmpName)
                        //.Include(x => x.Employee.FuncStruct)
                        //.Include(x => x.Employee.PayStruct)
                        //.Include(x => x.Employee.GeoStruct).Where(e => EmpPayrollIdList.Contains(e.Employee.Id)).ToList();

                        string ModuleName = "EAMS";
                        var getEmpAppraisalDataCon = db.EmployeeAppraisal.Select(a => new
                        {
                            aEmpGeoId = a.Employee.GeoStruct_Id.ToString(),
                            aEmpPayId = a.Employee.PayStruct_Id.ToString(),
                            aEmpFuncId = a.Employee.FuncStruct_Id.ToString(),
                            aEmpServiceLastDate = a.Employee.ServiceBookDates.ServiceLastDate,

                            aEmpCode = a.Employee.EmpCode,
                            aEmpID = a.Employee.Id,
                            aEmpName = a.Employee.EmpName.FullNameFML,

                            aReportingStructRights = a.Employee.ReportingStructRights.Select(r => new
                            {
                                rAccessRights = db.AccessRights.Where(e => e.Id == r.AccessRights_Id && e.IsClose == true).FirstOrDefault().ActionName.LookupVal,
                                rFuncModules = db.LookupValue.Where(e => e.Id == r.FuncModules_Id).FirstOrDefault().LookupVal,
                                rGeographicalAppl = r.ReportingStruct.GeographicalAppl,
                                rGeoGraphList = r.ReportingStruct.GeoGraphList.LookupVal.ToUpper(),
                                rFunctionalAppl = r.ReportingStruct.FunctionalAppl,
                                rGeoFuncList = r.ReportingStruct.GeoFuncList.LookupVal.ToUpper(),
                                rRoleBasedAppl = r.ReportingStruct.RoleBasedAppl,
                                rfunstructid = r.ReportingStruct.FuncStruct.Id.ToString(),


                            }).Where(e => e.rFuncModules == ModuleName).ToList(),

                            aEmpAppEval = a.EmpAppEvaluation.Select(b => new
                            {
                                bAppCalFromDate = b.AppraisalPeriodCalendar.FromDate,
                                bAppCalToDate = b.AppraisalPeriodCalendar.ToDate,
                                batchName = b.AppraisalSchedule.BatchName,
                                GetCntGetEmpAppRating = b.EmpAppRatingConclusion.Count(),
                                aEmpAppCon = b.EmpAppRatingConclusion.Select(c => new
                                {
                                    cAppAssistanceName = c.AppraisalAssistance.LookupVal,
                                    //c.AssistanceOverallComments,

                                    GetEmpAppRating = c.EmpAppRating.Select(eap => new
                                    {
                                        AppCatName = eap.AppAssignment.AppCategory.Name,
                                        AppSubCatName = eap.AppAssignment.AppSubCategory.Name,
                                        MAXPNT = eap.AppAssignment.MaxRatingPoints,
                                        RATEPNTS = eap.RatingPoints,

                                        oObjectiveWording = eap.ObjectiveWordings.LookupVal.ToString(),

                                    }).ToList(),

                                }).ToList(),

                            }).Where(e => e.bAppCalFromDate >= pFromDate && e.bAppCalToDate <= pToDate).ToList(),

                        }).Where(e => e.aEmpServiceLastDate == null && EmpPayrollIdList.Contains(e.aEmpID)).ToList();




                        if (getEmpAppraisalDataCon == null || getEmpAppraisalDataCon.Count() == 0)
                        {
                            return null;
                        }
                        else
                        {
                            var emp = false;
                            var dept = false;
                            var loca = false;
                            var comp = false;
                            var grp = false;
                            var unit = false;
                            var div = false;
                            var regn = false;
                            var grade = false;
                            var lvl = false;
                            var jobstat = false;
                            var job = false;
                            var jobpos = false;
                            var vc = db.LookupValue.Where(a => forithead.Contains(a.Id.ToString())).ToList();


                            foreach (var item in vc)
                            {
                                //if (item.LookupVal.ToUpper() == "MONTH")
                                //{
                                //    month = true;
                                //}
                                if (item.LookupVal.ToUpper() == "LOCATION")
                                {

                                    loca = true;
                                }
                                if (item.LookupVal.ToUpper() == "EMPLOYEE")
                                {
                                    emp = true;
                                }
                                if (item.LookupVal.ToUpper() == "DEPARTMENT")
                                {
                                    dept = true;
                                }
                                if (item.LookupVal.ToUpper() == "COMPANY")
                                {
                                    comp = true;
                                }
                                if (item.LookupVal.ToUpper() == "GROUP")
                                {
                                    grp = true;
                                }
                                if (item.LookupVal.ToUpper() == "UNIT")
                                {
                                    unit = true;
                                }
                                if (item.LookupVal.ToUpper() == "DIVISION")
                                {
                                    div = true;
                                }
                                if (item.LookupVal.ToUpper() == "REGION")
                                {
                                    regn = true;
                                }
                                if (item.LookupVal.ToUpper() == "GRADE")
                                {
                                    grade = true;
                                }
                                if (item.LookupVal.ToUpper() == "LEVEL")
                                {
                                    lvl = true;
                                }
                                if (item.LookupVal.ToUpper() == "JOBSTATUS")
                                {
                                    jobstat = true;
                                }

                                if (item.LookupVal.ToUpper() == "JOB")
                                {
                                    job = true;
                                }
                                if (item.LookupVal.ToUpper() == "JOBPOSITION")
                                {
                                    jobpos = true;
                                }
                            }



                            Utility.GetOrganizationDataClass GeoDataInd = new Utility.GetOrganizationDataClass();

                            string SanctionerName = string.Empty;
                            string SanctionerEmpCode = string.Empty;
                            string SanctionerDesignation = string.Empty;

                            foreach (var ca in getEmpAppraisalDataCon)
                            {
                                double TotalMaxPoints = 0;
                                double TotalRatingPNTS = 0;
                                double getCount = 0;

                                if (ca.aEmpAppEval != null)
                                {
                                    foreach (var item in ca.aEmpAppEval)
                                    {
                                        getCount = item.GetCntGetEmpAppRating;
                                        foreach (var itemEAPC in item.aEmpAppCon)
                                        {
                                            foreach (var itemEAR in itemEAPC.GetEmpAppRating)
                                            {
                                                TotalRatingPNTS += itemEAR.RATEPNTS;
                                                TotalMaxPoints += itemEAR.MAXPNT;
                                            }
                                        }
                                    }
                                }

                                double Percentage = 0;
                                if (TotalRatingPNTS != 0 && TotalMaxPoints != 0)
                                {
                                    TotalRatingPNTS = TotalRatingPNTS / getCount;
                                    TotalMaxPoints = TotalMaxPoints / getCount;

                                    TotalRatingPNTS = Math.Round(TotalRatingPNTS + 0.01, 0);
                                    TotalMaxPoints = Math.Round(TotalMaxPoints + 0.01, 0);

                                    Percentage = (TotalRatingPNTS / TotalMaxPoints) * 100;
                                    Percentage = Math.Round(Percentage, 2);
                                }

                                //GeoStruct objGeoForIncharge = null;
                                int empGeo = Convert.ToInt32(ca.aEmpGeoId);
                                if (ca.aReportingStructRights.Count() > 0)
                                {
                                    foreach (var itemRights in ca.aReportingStructRights)
                                    {

                                        SanctionerName = string.Empty;      // For Reassiging the value
                                        SanctionerEmpCode = string.Empty;
                                        SanctionerDesignation = string.Empty;

                                        #region AccessRight Sanction
                                        if (itemRights.rAccessRights == "Sanction")
                                        {
                                            if (itemRights.rGeographicalAppl == true)
                                            {
                                                switch (itemRights.rGeoGraphList)
                                                {
                                                    case "LOCATION":
                                                        var objGeoForInchargeLoc = db.GeoStruct.Select(g => new { gGeoId = g.Id, gInchargeCode = g.Location.Incharge.EmpCode, gInchargename = g.Location.Incharge.EmpName.FullNameFML, gInchargeDesignation = g.Location.Incharge.FuncStruct.Job.Name, }).Where(q => q.gGeoId == empGeo).AsNoTracking().SingleOrDefault();
                                                        if (objGeoForInchargeLoc != null && objGeoForInchargeLoc.gInchargename != null)
                                                        {
                                                            SanctionerEmpCode = objGeoForInchargeLoc.gInchargeCode;
                                                            SanctionerName = objGeoForInchargeLoc.gInchargename;
                                                            SanctionerDesignation = objGeoForInchargeLoc.gInchargeDesignation;
                                                        }
                                                        else
                                                        {
                                                            SanctionerEmpCode = "";
                                                            SanctionerName = "";
                                                            SanctionerDesignation = "";
                                                        }

                                                        break;

                                                    case "DIVISION":
                                                        var objGeoForInchargeDiv = db.GeoStruct.Select(g => new { gGeoId = g.Id, gInchargeCode = g.Division.Incharge.EmpCode, gInchargename = g.Division.Incharge.EmpName.FullNameFML, gInchargeDesignation = g.Division.Incharge.FuncStruct.Job.Name, }).Where(q => q.gGeoId == empGeo).AsNoTracking().SingleOrDefault();
                                                        if (objGeoForInchargeDiv != null && objGeoForInchargeDiv.gInchargename != null)
                                                        {
                                                            SanctionerEmpCode = objGeoForInchargeDiv.gInchargeCode;
                                                            SanctionerName = objGeoForInchargeDiv.gInchargename;
                                                            SanctionerDesignation = objGeoForInchargeDiv.gInchargeDesignation;
                                                        }
                                                        else
                                                        {
                                                            SanctionerEmpCode = "";
                                                            SanctionerName = "";
                                                            SanctionerDesignation = "";
                                                        }

                                                        break;

                                                    case "GROUP":
                                                        var objGeoForInchargeGrp = db.GeoStruct.Select(g => new { gGeoId = g.Id, gInchargeCode = g.Group.Incharge.EmpCode, gInchargename = g.Group.Incharge.EmpName.FullNameFML, gInchargeDesignation = g.Group.Incharge.FuncStruct.Job.Name, }).Where(q => q.gGeoId == empGeo).AsNoTracking().SingleOrDefault();
                                                        if (objGeoForInchargeGrp != null && objGeoForInchargeGrp.gInchargename != null)
                                                        {
                                                            SanctionerEmpCode = objGeoForInchargeGrp.gInchargeCode;
                                                            SanctionerName = objGeoForInchargeGrp.gInchargename;
                                                            SanctionerDesignation = objGeoForInchargeGrp.gInchargeDesignation;
                                                        }
                                                        else
                                                        {
                                                            SanctionerEmpCode = "";
                                                            SanctionerName = "";
                                                            SanctionerDesignation = "";
                                                        }

                                                        break;

                                                    case "UNIT":
                                                        var objGeoForInchargeUnit = db.GeoStruct.Select(g => new { gGeoId = g.Id, gInchargeCode = g.Unit.Incharge.EmpCode, gInchargename = g.Unit.Incharge.EmpName.FullNameFML, gInchargeDesignation = g.Unit.Incharge.FuncStruct.Job.Name, }).Where(q => q.gGeoId == empGeo).AsNoTracking().SingleOrDefault();
                                                        if (objGeoForInchargeUnit != null && objGeoForInchargeUnit.gInchargename != null)
                                                        {
                                                            SanctionerEmpCode = objGeoForInchargeUnit.gInchargeCode;
                                                            SanctionerName = objGeoForInchargeUnit.gInchargename;
                                                            SanctionerDesignation = objGeoForInchargeUnit.gInchargeDesignation;
                                                        }
                                                        else
                                                        {
                                                            SanctionerEmpCode = "";
                                                            SanctionerName = "";
                                                            SanctionerDesignation = "";
                                                        }
                                                        break;
                                                }
                                            }
                                            else if (itemRights.rFunctionalAppl == true)
                                            {
                                                switch (itemRights.rGeoFuncList)
                                                {
                                                    case "DEPARTMENT":
                                                        var objGeoForInchargeDept = db.GeoStruct.Select(g => new { gGeoId = g.Id, gInchargeCode = g.Department.Incharge.EmpCode, gInchargename = g.Department.Incharge.EmpName.FullNameFML, gInchargeDesignation = g.Department.Incharge.FuncStruct.Job.Name, }).Where(q => q.gGeoId == empGeo).AsNoTracking().SingleOrDefault();
                                                        if (objGeoForInchargeDept != null && objGeoForInchargeDept.gInchargename != null)
                                                        {
                                                            SanctionerEmpCode = objGeoForInchargeDept.gInchargeCode;
                                                            SanctionerName = objGeoForInchargeDept.gInchargename;
                                                            SanctionerDesignation = objGeoForInchargeDept.gInchargeDesignation;
                                                        }
                                                        else
                                                        {
                                                            SanctionerEmpCode = "";
                                                            SanctionerName = "";
                                                            SanctionerDesignation = "";
                                                        }
                                                        break;
                                                }
                                            }
                                            else if (itemRights.rRoleBasedAppl == true)
                                            {
                                                if (itemRights.rfunstructid != null)
                                                {
                                                    int rightFuncId = Convert.ToInt32(itemRights.rfunstructid);
                                                    var funrolebaseid = db.FuncStruct.Where(q => q.Id == rightFuncId).Select(q => q.Id).SingleOrDefault();
                                                    var loc = db.Employee.Include(q => q.EmpName).Include(q => q.ServiceBookDates).Include(q => q.FuncStruct.Job).Where(q => q.FuncStruct.Id == funrolebaseid && q.ServiceBookDates.ServiceLastDate == null).AsNoTracking().FirstOrDefault();
                                                    if (loc != null)
                                                    {
                                                        SanctionerName = loc.EmpName.FullNameFML;
                                                        SanctionerEmpCode = loc.EmpCode;
                                                        SanctionerDesignation = loc.FuncStruct.Job.Name;

                                                    }
                                                    else
                                                    {
                                                        SanctionerEmpCode = "";
                                                        SanctionerName = "";
                                                        SanctionerDesignation = "";
                                                    }
                                                }
                                            }
                                        }
                                        #endregion

                                        #region AccessRight Approval
                                        if (itemRights.rAccessRights == "Approval")
                                        {
                                            if (itemRights.rGeographicalAppl == true)
                                            {
                                                switch (itemRights.rGeoGraphList)
                                                {
                                                    case "LOCATION":
                                                        var objGeoForInchargeLoc = db.GeoStruct.Select(g => new { gGeoId = g.Id, gInchargeCode = g.Location.Incharge.EmpCode, gInchargename = g.Location.Incharge.EmpName.FullNameFML, gInchargeDesignation = g.Location.Incharge.FuncStruct.Job.Name, }).Where(q => q.gGeoId == empGeo).AsNoTracking().SingleOrDefault();
                                                        if (objGeoForInchargeLoc != null && objGeoForInchargeLoc.gInchargename != null)
                                                        {
                                                            SanctionerEmpCode = objGeoForInchargeLoc.gInchargeCode;
                                                            SanctionerName = objGeoForInchargeLoc.gInchargename;
                                                            SanctionerDesignation = objGeoForInchargeLoc.gInchargeDesignation;
                                                        }
                                                        else
                                                        {
                                                            SanctionerEmpCode = "";
                                                            SanctionerName = "";
                                                            SanctionerDesignation = "";
                                                        }

                                                        break;

                                                    case "DIVISION":
                                                        var objGeoForInchargeDiv = db.GeoStruct.Select(g => new { gGeoId = g.Id, gInchargeCode = g.Division.Incharge.EmpCode, gInchargename = g.Division.Incharge.EmpName.FullNameFML, gInchargeDesignation = g.Division.Incharge.FuncStruct.Job.Name, }).Where(q => q.gGeoId == empGeo).AsNoTracking().SingleOrDefault();
                                                        if (objGeoForInchargeDiv != null && objGeoForInchargeDiv.gInchargename != null)
                                                        {
                                                            SanctionerEmpCode = objGeoForInchargeDiv.gInchargeCode;
                                                            SanctionerName = objGeoForInchargeDiv.gInchargename;
                                                            SanctionerDesignation = objGeoForInchargeDiv.gInchargeDesignation;
                                                        }
                                                        else
                                                        {
                                                            SanctionerEmpCode = "";
                                                            SanctionerName = "";
                                                            SanctionerDesignation = "";
                                                        }

                                                        break;

                                                    case "GROUP":
                                                        var objGeoForInchargeGrp = db.GeoStruct.Select(g => new { gGeoId = g.Id, gInchargeCode = g.Group.Incharge.EmpCode, gInchargename = g.Group.Incharge.EmpName.FullNameFML, gInchargeDesignation = g.Group.Incharge.FuncStruct.Job.Name, }).Where(q => q.gGeoId == empGeo).AsNoTracking().SingleOrDefault();
                                                        if (objGeoForInchargeGrp != null && objGeoForInchargeGrp.gInchargename != null)
                                                        {
                                                            SanctionerEmpCode = objGeoForInchargeGrp.gInchargeCode;
                                                            SanctionerName = objGeoForInchargeGrp.gInchargename;
                                                            SanctionerDesignation = objGeoForInchargeGrp.gInchargeDesignation;
                                                        }
                                                        else
                                                        {
                                                            SanctionerEmpCode = "";
                                                            SanctionerName = "";
                                                            SanctionerDesignation = "";
                                                        }

                                                        break;

                                                    case "UNIT":
                                                        var objGeoForInchargeUnit = db.GeoStruct.Select(g => new { gGeoId = g.Id, gInchargeCode = g.Unit.Incharge.EmpCode, gInchargename = g.Unit.Incharge.EmpName.FullNameFML, gInchargeDesignation = g.Unit.Incharge.FuncStruct.Job.Name, }).Where(q => q.gGeoId == empGeo).AsNoTracking().SingleOrDefault();
                                                        if (objGeoForInchargeUnit != null && objGeoForInchargeUnit.gInchargename != null)
                                                        {
                                                            SanctionerEmpCode = objGeoForInchargeUnit.gInchargeCode;
                                                            SanctionerName = objGeoForInchargeUnit.gInchargename;
                                                            SanctionerDesignation = objGeoForInchargeUnit.gInchargeDesignation;
                                                        }
                                                        else
                                                        {
                                                            SanctionerEmpCode = "";
                                                            SanctionerName = "";
                                                            SanctionerDesignation = "";
                                                        }
                                                        break;
                                                }
                                            }
                                            else if (itemRights.rFunctionalAppl == true)
                                            {
                                                switch (itemRights.rGeoFuncList)
                                                {
                                                    case "DEPARTMENT":
                                                        var objGeoForInchargeDept = db.GeoStruct.Select(g => new { gGeoId = g.Id, gInchargeCode = g.Department.Incharge.EmpCode, gInchargename = g.Department.Incharge.EmpName.FullNameFML, gInchargeDesignation = g.Department.Incharge.FuncStruct.Job.Name, }).Where(q => q.gGeoId == empGeo).AsNoTracking().SingleOrDefault();
                                                        if (objGeoForInchargeDept != null && objGeoForInchargeDept.gInchargename != null)
                                                        {
                                                            SanctionerEmpCode = objGeoForInchargeDept.gInchargeCode;
                                                            SanctionerName = objGeoForInchargeDept.gInchargename;
                                                            SanctionerDesignation = objGeoForInchargeDept.gInchargeDesignation;
                                                        }
                                                        else
                                                        {
                                                            SanctionerEmpCode = "";
                                                            SanctionerName = "";
                                                            SanctionerDesignation = "";
                                                        }
                                                        break;
                                                }
                                            }
                                            else if (itemRights.rRoleBasedAppl == true)
                                            {
                                                if (itemRights.rfunstructid != null)
                                                {
                                                    int rightFuncId = Convert.ToInt32(itemRights.rfunstructid);
                                                    var funrolebaseid = db.FuncStruct.Where(q => q.Id == rightFuncId).Select(q => q.Id).SingleOrDefault();
                                                    var loc = db.Employee.Include(q => q.EmpName).Include(q => q.ServiceBookDates).Include(q => q.FuncStruct.Job).Where(q => q.FuncStruct.Id == funrolebaseid && q.ServiceBookDates.ServiceLastDate == null).AsNoTracking().FirstOrDefault();
                                                    if (loc != null)
                                                    {
                                                        SanctionerName = loc.EmpName.FullNameFML;
                                                        SanctionerEmpCode = loc.EmpCode;
                                                        SanctionerDesignation = loc.FuncStruct.Job.Name;

                                                    }
                                                    else
                                                    {
                                                        SanctionerEmpCode = "";
                                                        SanctionerName = "";
                                                        SanctionerDesignation = "";
                                                    }
                                                }
                                            }
                                        }
                                        #endregion

                                    }
                                }




                                foreach (var item in ca.aEmpAppEval)
                                {
                                    //if (item.AppCalendar != null && item.AppCalendar.FromDate >= pFromDate && item.AppCalendar.ToDate <= pToDate)
                                    //{

                                    // var pub = item.AppPublish.ToList();
                                    //int? geoid = ca.Employee.GeoStruct_Id;

                                    //int? payid = ca.Employee.PayStruct_Id;

                                    //int? funid = ca.Employee.FuncStruct_Id;
                                    int? geoid = Convert.ToInt32(ca.aEmpGeoId);

                                    int? payid = Convert.ToInt32(ca.aEmpPayId);

                                    int? funid = Convert.ToInt32(ca.aEmpFuncId);

                                    GeoStruct geostruct = db.GeoStruct.Find(geoid);

                                    PayStruct paystruct = db.PayStruct.Find(payid);

                                    FuncStruct funstruct = db.FuncStruct.Find(funid);

                                    GeoDataInd = ReportRDLCObjectClass.GetOrganizationDataInd(geostruct, paystruct, funstruct, 0);

                                    string chkAssistance = string.Empty;
                                    string getRatePointAsPerAssistace = string.Empty;

                                    if (salheadlist.Count() > 0)
                                    {
                                        foreach (var batch in salheadlist)
                                        {

                                            if (batch.ToUpper() == item.batchName.ToUpper())
                                            {
                                                foreach (var itemEARC in item.aEmpAppCon)
                                                {

                                                    if (itemEARC.cAppAssistanceName.ToUpper() == "APPRAISEE")
                                                    {
                                                        chkAssistance = itemEARC.cAppAssistanceName.ToUpper();
                                                        chkAssistance = chkAssistance.Replace("APPRAISEE", "Self Rating Points");
                                                    }
                                                    if (itemEARC.cAppAssistanceName.ToUpper() == "APPRAISERSANCTION")
                                                    {
                                                        chkAssistance = itemEARC.cAppAssistanceName.ToUpper();
                                                        chkAssistance = chkAssistance.Replace("APPRAISERSANCTION", "Branch Manager Rating Points");
                                                    }
                                                    foreach (var itemEAP in itemEARC.GetEmpAppRating)
                                                    {
                                                        GenericField100 OGenericObjStatement = new GenericField100()
                                                        {
                                                            //Fld5 = item..AppCalendar == null ? "" : item.AppCalendar.FullDetails.ToString(),
                                                            Fld2 = item.batchName == null ? "" : item.batchName.ToString(),
                                                            Fld3 = chkAssistance == null ? "" : chkAssistance.ToString(),

                                                            Fld4 = itemEAP.AppCatName == null ? "" : itemEAP.AppCatName.ToString(),
                                                            Fld6 = itemEAP.AppSubCatName == null ? "" : itemEAP.AppSubCatName.ToString(),
                                                            Fld10 = itemEAP.MAXPNT == 0 ? "0" : itemEAP.MAXPNT.ToString(),

                                                            Fld11 = itemEAP.RATEPNTS != 0 ? itemEAP.RATEPNTS.ToString() : "",

                                                            Fld13 = TotalMaxPoints == 0 ? "0" : TotalMaxPoints.ToString(),
                                                            Fld14 = TotalRatingPNTS == 0 ? "0" : TotalRatingPNTS.ToString(),
                                                            Fld15 = Percentage == 0 ? "0" : Percentage.ToString(),
                                                            Fld8 = ca.aEmpCode == null ? "" : ca.aEmpCode.ToString(),
                                                            Fld9 = ca.aEmpName == null ? "" : ca.aEmpName.ToString(),

                                                            Fld17 = GeoDataInd.GeoStruct_Location_Name != null ? GeoDataInd.GeoStruct_Location_Name.ToString() : "",
                                                            Fld18 = GeoDataInd.FuncStruct_Job_Name != null ? GeoDataInd.FuncStruct_Job_Name.ToString() : "",
                                                            Fld19 = itemEAP.oObjectiveWording != null ? itemEAP.oObjectiveWording.ToString() : "",

                                                            Fld20 = SanctionerEmpCode != null ? SanctionerEmpCode : "",
                                                            Fld21 = SanctionerName != null ? SanctionerName : "",
                                                            Fld22 = SanctionerDesignation != null ? SanctionerDesignation : "",
                                                        };
                                                        if (comp)
                                                        {
                                                            OGenericObjStatement.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                        }
                                                        if (div)
                                                        {
                                                            OGenericObjStatement.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                        }
                                                        if (loca)
                                                        {
                                                            OGenericObjStatement.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                        }
                                                        if (dept)
                                                        {
                                                            OGenericObjStatement.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                        }
                                                        if (grp)
                                                        {
                                                            OGenericObjStatement.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                        }
                                                        if (unit)
                                                        {
                                                            OGenericObjStatement.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                        }
                                                        if (grade)
                                                        {
                                                            OGenericObjStatement.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                        }
                                                        if (lvl)
                                                        {
                                                            OGenericObjStatement.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                        }
                                                        if (jobstat)
                                                        {
                                                            OGenericObjStatement.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                        }
                                                        if (job)
                                                        {
                                                            OGenericObjStatement.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                        }
                                                        if (jobpos)
                                                        {
                                                            OGenericObjStatement.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                        }
                                                        if (emp)
                                                        {
                                                            OGenericObjStatement.Fld88 = ca.aEmpName;
                                                        }

                                                        OGenericPayrollStatement.Add(OGenericObjStatement);


                                                    }
                                                }

                                            }
                                        }
                                    }
                                    else
                                    {


                                        foreach (var itemEARC in item.aEmpAppCon.OrderBy(o => o.cAppAssistanceName))
                                        {
                                            if (itemEARC.cAppAssistanceName.ToUpper() == "APPRAISEE")
                                            {
                                                chkAssistance = itemEARC.cAppAssistanceName.ToUpper();
                                                chkAssistance = chkAssistance.Replace("APPRAISEE", "Self Rating Points");
                                            }
                                            if (itemEARC.cAppAssistanceName.ToUpper() == "APPRAISERSANCTION")
                                            {
                                                chkAssistance = itemEARC.cAppAssistanceName.ToUpper();
                                                chkAssistance = chkAssistance.Replace("APPRAISERSANCTION", "Branch Manager Rating Points");
                                            }

                                            foreach (var itemEAP in itemEARC.GetEmpAppRating)
                                            {
                                                GenericField100 OGenericObjStatement = new GenericField100()
                                                {
                                                    // Fld5 = item.AppCalendar == null ? "" : item.AppCalendar.FullDetails.ToString(),
                                                    Fld2 = item.batchName == null ? "" : item.batchName.ToString(),
                                                    Fld3 = chkAssistance == null ? "" : chkAssistance.ToString(),

                                                    Fld4 = itemEAP.AppCatName == null ? "" : itemEAP.AppCatName.ToString(),
                                                    Fld6 = itemEAP.AppSubCatName == null ? "" : itemEAP.AppSubCatName.ToString(),
                                                    Fld10 = itemEAP.MAXPNT == 0 ? "0" : itemEAP.MAXPNT.ToString(),

                                                    Fld11 = itemEAP.RATEPNTS != 0 ? itemEAP.RATEPNTS.ToString() : "",

                                                    Fld13 = TotalMaxPoints == 0 ? "0" : TotalMaxPoints.ToString(),
                                                    Fld14 = TotalRatingPNTS == 0 ? "0" : TotalRatingPNTS.ToString(),
                                                    Fld15 = Percentage == 0 ? "0" : Percentage.ToString(),
                                                    Fld8 = ca.aEmpCode == null ? "" : ca.aEmpCode.ToString(),
                                                    Fld9 = ca.aEmpName == null ? "" : ca.aEmpName.ToString(),

                                                    Fld17 = GeoDataInd.GeoStruct_Location_Name != null ? GeoDataInd.GeoStruct_Location_Name.ToString() : "",
                                                    Fld18 = GeoDataInd.FuncStruct_Job_Name != null ? GeoDataInd.FuncStruct_Job_Name.ToString() : "",
                                                    Fld19 = itemEAP.oObjectiveWording != null ? itemEAP.oObjectiveWording.ToString() : "",

                                                    Fld20 = SanctionerEmpCode != null ? SanctionerEmpCode : "",
                                                    Fld21 = SanctionerName != null ? SanctionerName : "",
                                                    Fld22 = SanctionerDesignation != null ? SanctionerDesignation : "",
                                                };
                                                if (comp)
                                                {
                                                    OGenericObjStatement.Fld99 = GeoDataInd.GeoStruct_Company_Name;
                                                }
                                                if (div)
                                                {
                                                    OGenericObjStatement.Fld98 = GeoDataInd.GeoStruct_Division_Name;
                                                }
                                                if (loca)
                                                {
                                                    OGenericObjStatement.Fld97 = GeoDataInd.GeoStruct_Location_Name;
                                                }
                                                if (dept)
                                                {
                                                    OGenericObjStatement.Fld96 = GeoDataInd.GeoStruct_Department_Name;
                                                }
                                                if (grp)
                                                {
                                                    OGenericObjStatement.Fld95 = GeoDataInd.GeoStruct_Group_Name;
                                                }
                                                if (unit)
                                                {
                                                    OGenericObjStatement.Fld94 = GeoDataInd.GeoStruct_Unit_Name;
                                                }
                                                if (grade)
                                                {
                                                    OGenericObjStatement.Fld93 = GeoDataInd.PayStruct_Grade_Name;
                                                }
                                                if (lvl)
                                                {
                                                    OGenericObjStatement.Fld92 = GeoDataInd.PayStruct_Level_Name;
                                                }
                                                if (jobstat)
                                                {
                                                    OGenericObjStatement.Fld91 = GeoDataInd.PayStruct_JobStatus_Id.ToString();
                                                }
                                                if (job)
                                                {
                                                    OGenericObjStatement.Fld90 = GeoDataInd.FuncStruct_Job_Name;
                                                }
                                                if (jobpos)
                                                {
                                                    OGenericObjStatement.Fld89 = GeoDataInd.FuncStruct_JobPosition_Name;
                                                }
                                                if (emp)
                                                {
                                                    OGenericObjStatement.Fld88 = ca.aEmpName;
                                                }

                                                OGenericPayrollStatement.Add(OGenericObjStatement);

                                            }
                                        }
                                    }

                                    // }
                                }
                            }
                        }
                        return OGenericPayrollStatement;
                        break;
                    #endregion

                    case "APPRAISALSCHEDULE":
                        List<EmployeeAppraisal> empdatasch = new List<EmployeeAppraisal>();
                        var OAppcatReportDatasch = db.AppraisalSchedule
                            .Include(x => x.GeoStruct)
                            .Include(x => x.GeoStruct.Location.LocationObj)
                            .Include(x => x.FuncStruct)
                            .Include(x => x.FuncStruct.JobPosition)
                            .Include(x => x.PayStruct)
                             .Include(x => x.PayStruct.Grade)
                            .Include(x => x.AppraisalPeriodCalendar)
                           .Include(x => x.AppraisalPublish)
                           .Where(e => e.AppraisalPeriodCalendar.FromDate >= pFromDate && e.AppraisalPeriodCalendar.ToDate <= pToDate)
                           .ToList();
                        if (OAppcatReportDatasch == null || OAppcatReportDatasch.Count() == 0)
                        {
                            return null;
                        }
                        else
                        {

                            foreach (var ca in OAppcatReportDatasch)
                            {
                                if (ca.GeoStruct != null && ca.FuncStruct == null && ca.PayStruct == null)
                                {
                                    var empdata1 = db.EmployeeAppraisal.Include(e => e.Employee).Include(e => e.Employee.EmpName)
                                           .Include(e => e.Employee.GeoStruct)
                                           .Include(e => e.Employee.PayStruct)
                                           .Include(e => e.Employee.FuncStruct)
                                            .Include(e => e.Employee.ServiceBookDates)
                                           .Where(e => e.Employee.ServiceBookDates.ServiceLastDate == null && e.Employee.GeoStruct.Id == ca.GeoStruct.Id)
                                           .AsNoTracking().AsParallel().ToList();
                                    if (empdata1.Count() > 0)
                                    {
                                        empdatasch.AddRange(empdata1);
                                    }
                                }
                                else if (ca.PayStruct != null && ca.FuncStruct == null && ca.GeoStruct == null)
                                {
                                    var empdata2 = db.EmployeeAppraisal.Include(e => e.Employee).Include(e => e.Employee.EmpName)
                                       .Include(e => e.Employee.GeoStruct)
                                       .Include(e => e.Employee.PayStruct)
                                       .Include(e => e.Employee.FuncStruct)
                                        .Include(e => e.Employee.ServiceBookDates)
                                       .Where(e => e.Employee.ServiceBookDates.ServiceLastDate == null && e.Employee.PayStruct.Id == ca.PayStruct.Id)
                                     .AsNoTracking().AsParallel().ToList();
                                    if (empdata2.Count() > 0)
                                    {
                                        empdatasch.AddRange(empdata2);
                                    }
                                }
                                else if (ca.FuncStruct != null && ca.GeoStruct == null && ca.PayStruct == null)
                                {
                                    var empdata3 = db.EmployeeAppraisal.Include(e => e.Employee).Include(e => e.Employee.EmpName)
                                       .Include(e => e.Employee.GeoStruct)
                                       .Include(e => e.Employee.PayStruct)
                                       .Include(e => e.Employee.FuncStruct)
                                        .Include(e => e.Employee.ServiceBookDates)
                                       .Where(e => e.Employee.ServiceBookDates.ServiceLastDate == null && e.Employee.FuncStruct.Id == ca.FuncStruct.Id)
                                     .AsNoTracking().AsParallel().ToList();
                                    if (empdata3.Count() > 0)
                                    {
                                        empdatasch.AddRange(empdata3);
                                    }
                                }
                                foreach (var emp in empdatasch)
                                {



                                    if (salheadlist.Count() > 0)
                                    {

                                        foreach (var batch in salheadlist)
                                        {

                                            if (batch.ToUpper() == ca.BatchName.ToUpper())
                                            {

                                                var cat = ca.AppraisalPublish.ToList();
                                                foreach (var item in cat)
                                                {
                                                    GenericField100 OGeneticApprStatement = new GenericField100()
                                                    {
                                                        Fld5 = ca.AppraisalPeriodCalendar == null ? "" : ca.AppraisalPeriodCalendar.FullDetails.ToString(),
                                                        Fld1 = ca.BatchCode == null ? "" : ca.BatchCode.ToString(),
                                                        Fld2 = ca.BatchName == null ? "" : ca.BatchName.ToString(),
                                                        Fld3 = item.PublishDate == null ? "" : item.PublishDate.Value.ToShortDateString(),
                                                        Fld4 = item.SpanPeriod == null ? "" : item.SpanPeriod.ToString(),
                                                        Fld6 = item.Extension == null ? "" : item.Extension.ToString(),
                                                        Fld7 = item.IsTrClose == null ? "" : item.IsTrClose.ToString(),
                                                        Fld89 = ca.FuncStruct == null ? "" : ca.FuncStruct.JobPosition == null ? "" : ca.FuncStruct.JobPosition.JobPositionDesc.ToString(),
                                                        Fld93 = ca.PayStruct == null ? "" : ca.PayStruct.Grade == null ? "" : ca.PayStruct.Grade.Name.ToString(),
                                                        Fld97 = ca.GeoStruct == null ? "" : ca.GeoStruct.Location == null ? "" : ca.GeoStruct.Location.LocationObj == null ? "" : ca.GeoStruct.Location.LocationObj.LocDesc.ToString(),
                                                        Fld8 = emp.Employee == null ? "" : emp.Employee.EmpCode.ToString(),
                                                        Fld9 = emp.Employee == null ? "" : emp.Employee.EmpName.FullNameFML.ToString()
                                                    };


                                                    OGenericPayrollStatement.Add(OGeneticApprStatement);

                                                }
                                            }
                                        }
                                    }
                                    else
                                    {
                                        var cat = ca.AppraisalPublish.ToList();
                                        foreach (var item in cat)
                                        {
                                            GenericField100 OGeneticApprStatement = new GenericField100()
                                            {
                                                Fld5 = ca.AppraisalPeriodCalendar == null ? "" : ca.AppraisalPeriodCalendar.FullDetails.ToString(),
                                                Fld1 = ca.BatchCode == null ? "" : ca.BatchCode.ToString(),
                                                Fld2 = ca.BatchName == null ? "" : ca.BatchName.ToString(),
                                                Fld3 = item.PublishDate == null ? "" : item.PublishDate.Value.ToShortDateString(),
                                                Fld4 = item.SpanPeriod == null ? "" : item.SpanPeriod.ToString(),
                                                Fld6 = item.Extension == null ? "" : item.Extension.ToString(),
                                                Fld7 = item.IsTrClose == null ? "" : item.IsTrClose.ToString(),
                                                Fld89 = ca.FuncStruct == null ? "" : ca.FuncStruct.JobPosition == null ? "" : ca.FuncStruct.JobPosition.JobPositionDesc.ToString(),
                                                Fld93 = ca.PayStruct == null ? "" : ca.PayStruct.Grade == null ? "" : ca.PayStruct.Grade.Name.ToString(),
                                                Fld97 = ca.GeoStruct == null ? "" : ca.GeoStruct.Location == null ? "" : ca.GeoStruct.Location.LocationObj == null ? "" : ca.GeoStruct.Location.LocationObj.LocDesc.ToString(),
                                                Fld8 = emp.Employee == null ? "" : emp.Employee.EmpCode.ToString(),
                                                Fld9 = emp.Employee == null ? "" : emp.Employee.EmpName.FullNameFML.ToString()
                                            };


                                            OGenericPayrollStatement.Add(OGeneticApprStatement);

                                        }
                                    }
                                }
                            }
                        }
                        return OGenericPayrollStatement;
                        break;
                    case "APPRAISALCATEGORY":
                        var OAppcatReportData = db.CompanyAppraisal
                            .Include(x => x.AppCategory)
                             .Include(x => x.AppCategory.Select(c => c.AppMode))
                            .Include(x => x.AppCategory.Select(z => z.AppSubCategory))
                            .ToList();
                        if (OAppcatReportData == null || OAppcatReportData.Count() == 0)
                        {
                            return null;
                        }
                        else
                        {
                            foreach (var ca in OAppcatReportData)
                            {
                                var cat = ca.AppCategory.ToList();
                                foreach (var item in cat)
                                {

                                    var subcat = item.AppSubCategory.ToList();

                                    foreach (var item1 in subcat)
                                    {
                                        GenericField100 OGeneticApprStatement = new GenericField100()
                                        {
                                            Fld1 = item.Code.ToString(),
                                            Fld2 = item.Name.ToString(),
                                            Fld3 = item1.Code == null ? "" : item1.Code.ToString(),
                                            Fld4 = item1.Name == null ? "" : item1.Name.ToString(),
                                            Fld5 = item.AppMode == null ? "" : item.AppMode.LookupVal.ToString()


                                        };
                                        OGenericPayrollStatement.Add(OGeneticApprStatement);
                                    }
                                }
                            }
                        }
                        return OGenericPayrollStatement;
                        break;
                    case "APPRAISALCATEGORYRATING":
                        var OAppcatReportDatarat = db.AppCategoryRating
                            .Include(x => x.AppRatingObjective)
                             .Include(x => x.AppRatingObjective.Select(y => y.ObjectiveWordings))
                            .Include(x => x.AppCategory)

                             .ToList();
                        if (OAppcatReportDatarat == null || OAppcatReportDatarat.Count() == 0)
                        {
                            return null;
                        }
                        else
                        {
                            foreach (var ca in OAppcatReportDatarat)
                            {
                                var cat = ca.AppRatingObjective.ToList();
                                foreach (var item in cat)
                                {

                                    GenericField100 OGeneticApprStatement = new GenericField100()
                                    {
                                        Fld1 = ca.AppCategory == null ? "" : ca.AppCategory.Code.ToString(),
                                        Fld2 = ca.AppCategory == null ? "" : ca.AppCategory.Name.ToString(),
                                        Fld3 = item.RatingObjectName == null ? "" : item.RatingObjectName.ToString(),
                                        Fld4 = item.ObjectiveWordings == null ? "" : item.ObjectiveWordings.LookupVal.ToString(),
                                        Fld5 = item.RatingPoints == null ? "" : item.RatingPoints.ToString(),
                                        Fld6 = ca.MaxRatingPoints == null ? "" : ca.MaxRatingPoints.ToString()


                                    };
                                    OGenericPayrollStatement.Add(OGeneticApprStatement);

                                }
                            }
                        }
                        return OGenericPayrollStatement;
                        break;
                    case "APPRAISALSUBCATEGORYRATING":
                        var OAppcatReportDataratsub = db.AppSubCategoryRating
                            .Include(x => x.AppRatingObjective)
                             .Include(x => x.AppRatingObjective.Select(y => y.ObjectiveWordings))
                            .Include(x => x.AppSubCategory)

                             .ToList();
                        if (OAppcatReportDataratsub == null || OAppcatReportDataratsub.Count() == 0)
                        {
                            return null;
                        }
                        else
                        {
                            foreach (var ca in OAppcatReportDataratsub)
                            {
                                var cat = ca.AppRatingObjective.ToList();
                                foreach (var item in cat)
                                {

                                    GenericField100 OGeneticApprStatement = new GenericField100()
                                    {
                                        Fld1 = ca.AppSubCategory == null ? "" : ca.AppSubCategory.Code.ToString(),
                                        Fld2 = ca.AppSubCategory == null ? "" : ca.AppSubCategory.Name.ToString(),
                                        Fld3 = item.RatingObjectName == null ? "" : item.RatingObjectName.ToString(),
                                        Fld4 = item.ObjectiveWordings == null ? "" : item.ObjectiveWordings.LookupVal.ToString(),
                                        Fld5 = item.RatingPoints == null ? "" : item.RatingPoints.ToString(),
                                        Fld6 = ca.MaxPoints == null ? "" : ca.MaxPoints.ToString()


                                    };
                                    OGenericPayrollStatement.Add(OGeneticApprStatement);

                                }
                            }
                        }
                        return OGenericPayrollStatement;
                        break;
                    //case "CATEGORY":
                    //    var OcatReportData = db.Category.Include(a => a.SubCategory)
                    //        .Include(a => a.SubCategory.Select(e => e.Budget))
                    //        .Include(a => a.SubCategory.Select(e => e.ProgramList))
                    //        .ToList();
                    //    if (OcatReportData == null || OcatReportData.Count() == 0)
                    //    {
                    //        return null;
                    //    }
                    //    else
                    //    {
                    //        foreach (var ca in OcatReportData)
                    //        {
                    //            foreach (var item in ca.SubCategory)
                    //            {


                    //                GenericField100 OGeneticApprStatement = new GenericField100()
                    //                {
                    //                    Fld1 = ca.Code.ToString(),
                    //                    Fld2 = ca.Details.ToString(),
                    //                    Fld3 = item.FullDetails.ToString()
                    //                    //Fld2 = ca.IsGeoStruct.ToString(),
                    //                    //Fld2 = ca.IsPayStruct.ToString(),
                    //                    //Fld2 = ca.IsProgram.ToString(),



                    //                };
                    //                OGenericPayrollStatement.Add(OGeneticApprStatement);
                    //            }
                    //        }
                    //    }
                    //    return OGenericPayrollStatement;
                    //    break;


                    //case "FACULTYEXTERNAL":
                    //    var OFacuReportData = db.FacultyExternal.Include(a => a.FacultySpecialization)
                    //        .Include(a => a.TrainingInstitue).Include(a => a.TrainingInstitue.InstituteType)
                    //        .ToList();
                    //    if (OFacuReportData == null || OFacuReportData.Count() == 0)
                    //    {
                    //        return null;
                    //    }
                    //    else
                    //    {
                    //        foreach (var ca in OFacuReportData)
                    //        {
                    //            foreach (var item in ca.FacultySpecialization)
                    //            {


                    //                GenericField100 OGeneticApprStatement = new GenericField100()
                    //                {
                    //                    Fld1 = ca.Code.ToString(),
                    //                    //   Fld2 = ca.FacultyType == null ? "" : ca.FacultyType.LookupVal.ToString(),
                    //                    Fld3 = ca.TrainingInstitue == null ? "" : ca.TrainingInstitue.InstituteType == null ? "" : ca.TrainingInstitue.InstituteType.ToString(),
                    //                    Fld4 = item.SpecArea.ToString(),
                    //                    Fld5 = item.SpecType.ToString(),
                    //                    //Fld2 = ca.IsProgram.ToString(),



                    //                };
                    //                OGenericPayrollStatement.Add(OGeneticApprStatement);
                    //            }
                    //        }
                    //    }
                    //    return OGenericPayrollStatement;
                    //    break;

                    //case "FACULTYINTERNAL":
                    //    var OFacintReportData = db.FacultyInternal.Include(a => a.EmpID)

                    //        .ToList();
                    //    if (OFacintReportData == null || OFacintReportData.Count() == 0)
                    //    {
                    //        return null;
                    //    }
                    //    else
                    //    {
                    //        foreach (var ca in OFacintReportData)
                    //        {

                    //            GenericField100 OGeneticApprStatement = new GenericField100()
                    //            {
                    //                Fld1 = ca.Code.ToString(),
                    //                // Fld2 = ca.FacultyType == null ? "" : ca.FacultyType.LookupVal.ToString(),
                    //                Fld3 = ca.EmpID == null ? "" : ca.EmpID.EmpCode == null ? "" : ca.EmpID.EmpCode.ToString(),


                    //            };
                    //            OGenericPayrollStatement.Add(OGeneticApprStatement);

                    //        }
                    //    }

                    //    return OGenericPayrollStatement;
                    //    break;

                    //case "FACULTYSPECIALIZATION":
                    //    var OFacspecReportData = db.FacultySpecialization.Include(a => a.FacultyExternal)

                    //        .ToList();
                    //    if (OFacspecReportData == null || OFacspecReportData.Count() == 0)
                    //    {
                    //        return null;
                    //    }
                    //    else
                    //    {
                    //        foreach (var ca in OFacspecReportData)
                    //        {
                    //            foreach (var item in ca.FacultyExternal)
                    //            {

                    //                GenericField100 OGeneticApprStatement = new GenericField100()
                    //                {
                    //                    Fld1 = ca.SpecArea.ToString(),
                    //                    Fld2 = ca.SpecType == null ? "" : ca.SpecType.ToString(),

                    //                    //  Fld4 = item.FacultyType == null ? "" : item.FacultyType.LookupVal.ToString()

                    //                };
                    //                OGenericPayrollStatement.Add(OGeneticApprStatement);
                    //            }
                    //        }
                    //    }

                    //    return OGenericPayrollStatement;
                    //    break;


                    //case "PROGRAMLIST":
                    //    var OproReportData = db.ProgramList.Include(a => a.Budget).Include(a => a.TrainingType)

                    //        .ToList();
                    //    if (OproReportData == null || OproReportData.Count() == 0)
                    //    {
                    //        return null;
                    //    }
                    //    else
                    //    {
                    //        foreach (var ca in OproReportData)
                    //        {
                    //            foreach (var item in ca.Budget)
                    //            {

                    //                GenericField100 OGeneticApprStatement = new GenericField100()
                    //                {
                    //                    Fld1 = ca.Subject.ToString(),
                    //                    Fld2 = ca.TrainingType == null ? "" : ca.TrainingType.LookupVal.ToString(),

                    //                    Fld4 = item.BudgetCredit == null ? "" : item.BudgetCredit.ToString(),
                    //                    Fld5 = item.BudgetDebit == null ? "" : item.BudgetDebit.ToString()
                    //                };
                    //                OGenericPayrollStatement.Add(OGeneticApprStatement);
                    //            }
                    //        }
                    //    }

                    //    return OGenericPayrollStatement;
                    //    break;

                    //case "TRAININGMASTER":
                    //    var OtrmReportData = db.TrainingMaster.Include(a => a.ProgramList).Include(a => a.ProgramList.TrainingType)

                    //        .ToList();
                    //    if (OtrmReportData == null || OtrmReportData.Count() == 0)
                    //    {
                    //        return null;
                    //    }
                    //    else
                    //    {
                    //        foreach (var ca in OtrmReportData)
                    //        {


                    //            GenericField100 OGeneticApprStatement = new GenericField100()
                    //            {
                    //                Fld1 = ca.StartDate.Value.ToShortDateString(),
                    //                Fld2 = ca.EndDate.Value.ToShortDateString(),
                    //                Fld4 = ca.ProgramList.TrainingType == null ? "" : ca.ProgramList.TrainingType.LookupVal.ToString(),
                    //                Fld3 = ca.ProgramList.Subject
                    //            };
                    //            OGenericPayrollStatement.Add(OGeneticApprStatement);
                    //        }

                    //    }

                    //    return OGenericPayrollStatement;
                    //    break;



                    case "TRAININGCALENDAR":
                        //var OtrcalReportData = db.YearlyTrainingCalendar.Include(a => a.ProgramList).Include(a => a.ProgramList.TrainingType).ToList();

                        var OtrcalReportData = db.Calendar.Include(e => e.Name).Where(a => a.Name.LookupVal.ToUpper() == "TRAININGCALENDAR").ToList();

                        if (OtrcalReportData == null || OtrcalReportData.Count() == 0)
                        {
                            return null;
                        }
                        else
                        {
                            foreach (var ca in OtrcalReportData)
                            {
                                //if (ca.ProgramList != null)
                                //{
                                GenericField100 OGeneticApprStatement = new GenericField100()
                                {
                                    Fld1 = ca.FromDate != null ? ca.FromDate.Value.ToShortDateString() : "",
                                    Fld2 = ca.ToDate != null ? ca.ToDate.Value.ToShortDateString() : "",
                                    Fld3 = ca.Name != null ? ca.Name.LookupVal.ToString() : "",
                                    Fld4 = ca.Default != null ? ca.Default.ToString() : ""

                                    //Fld1 = ca.StartDate != null ? ca.StartDate.Value.ToShortDateString() : "",
                                    //Fld2 = ca.EndDate != null ? ca.EndDate.Value.ToShortDateString() : "",
                                    //Fld3 = ca.ProgramList.TrainingType == null ? "" : ca.ProgramList.TrainingType.LookupVal.ToString(),
                                    //Fld4 = ca.ProgramList.Subject.ToString(),
                                    //Fld5 = ca.ProgramList.SubjectDetails.ToString(),
                                };
                                OGenericPayrollStatement.Add(OGeneticApprStatement);
                                //}

                            }
                        }

                        return OGenericPayrollStatement;
                        break;

                    case "TRAININGEXPENSES":
                        var OtrcexpReportData = db.TrainingExpenses
                            .ToList();
                        if (OtrcexpReportData == null || OtrcexpReportData.Count() == 0)
                        {
                            return null;
                        }
                        else
                        {
                            foreach (var ca in OtrcexpReportData)
                            {


                                GenericField100 OGeneticApprStatement = new GenericField100()
                                {
                                    Fld1 = ca.FoodFees.ToString(),
                                    Fld2 = ca.MiscFees.ToString(),
                                    Fld3 = ca.StayFees.ToString(),
                                    Fld4 = ca.TrainingFees.ToString(),
                                    Fld5 = ca.TravelFees.ToString()


                                };
                                OGenericPayrollStatement.Add(OGeneticApprStatement);

                            }
                        }

                        return OGenericPayrollStatement;
                        break;


                    //case "ORGTRAINING":
                    //    var OORGReportData = db.OrgTraining.Include(a => a.Budget)
                    //        .Include(a => a.Category)
                    //        .Include(a => a.FacultyInternalExternal).Include(a => a.TrainingSchedule)

                    //        .ToList();
                    //    if (OORGReportData == null || OORGReportData.Count() == 0)
                    //    {
                    //        return null;
                    //    }
                    //    else
                    //    {
                    //        foreach (var ca in OORGReportData)
                    //        {
                    //            foreach (var item in ca.Budget)
                    //            {
                    //                foreach (var item1 in ca.Category)
                    //                {
                    //                    foreach (var item2 in ca.FacultyInternalExternal)
                    //                    {
                    //                        GenericField100 OGeneticApprStatement = new GenericField100()
                    //                        {
                    //                            Fld1 = item.BudgetCredit.ToString(),
                    //                            Fld2 = item.BudgetDebit.ToString(),
                    //                            Fld3 = item1.Code.ToString(),
                    //                            //Fld4 = item2.FacultyType == null ? null : item2.FacultyType.LookupVal.ToString(),
                    //                            Fld5 = item2.TrainingInstitue == null ? null : item2.TrainingInstitue.InstituteType.LookupVal.ToString()
                    //                        };
                    //                        OGenericPayrollStatement.Add(OGeneticApprStatement);

                    //                    }
                    //                }

                    //            }
                    //        }
                    //    }

                    //    return OGenericPayrollStatement;
                    //    break;

                    //Appriasal
                    case "APPRCATEGORYMASTER":
                        var OAppCaMasterReportData = db.AppCategory
                            .Include(e => e.AppSubCategory)
                           .ToList();


                        if (OAppCaMasterReportData == null || OAppCaMasterReportData.Count() == 0)
                        {
                            return null;
                        }
                        else
                        {
                            foreach (var ca in OAppCaMasterReportData)
                            {

                                foreach (var ca1 in ca.AppSubCategory)
                                {
                                    GenericField100 OGeneticApprStatement = new GenericField100()
                                    {
                                        Fld1 = ca.Code.ToString(),
                                        Fld2 = ca.Name.ToString(),
                                        Fld3 = ca.IsDescriptive.ToString(),
                                        Fld4 = ca.IsRatingObjective.ToString(),
                                        Fld5 = ca1.Code.ToString(),
                                        Fld6 = ca1.Name.ToString()

                                    };

                                    OGenericPayrollStatement.Add(OGeneticApprStatement);


                                }

                            }
                        }
                        return OGenericPayrollStatement;

                    //case "CANDIDATEMASTER":
                    //    // recurt 
                    //    var oCompanyAppraisal = db.Candidate
                    //        .Include(e => e.BeforeMarriageName)
                    //        // .Include(e => e.CanAcademicInfo)
                    //        //   .Include(e => e.CanMedicalInfo)
                    //        .Include(e => e.CanName)

                    //        .Include(e => e.CorAddr)
                    //        .Include(e => e.PerAddr)
                    //        .Include(e => e.ResAddr)
                    //        .Include(e => e.FatherName)
                    //        .Include(e => e.HusbandName)
                    //        .Include(e => e.MotherName)
                    //        //.Include(e => e.JobStatus)
                    //        //  .Include(e => e.MaritalStatus)
                    //        .Include(e => e.CorContact)
                    //        .Include(e => e.PerContact)
                    //        .Include(e => e.ResContact)
                    //        // .Include(e => e.Gender)

                    //        //.Include(e => e.CanFamilyDetails)
                    //        //.Include(e => e.CanForeignTrips)
                    //        //.Include(e => e.CanGuarantorDetails)
                    //        //.Include(e => e.CanPassportDetails)
                    //        //.Include(e => e.InsuranceDetails)
                    //        //.Include(e => e.CanPreCompExp)
                    //        //.Include(e => e.CanVisaDetails)
                    //        //.Include(e => e.CanWorkExp)
                    //      .ToList();


                    //    if (oCompanyAppraisal == null)
                    //    {
                    //        return null;
                    //    }
                    //    else
                    //    {
                    //        foreach (var ca in oCompanyAppraisal)
                    //        {
                    //            GenericField100 OGeneticApprStatement = new GenericField100()
                    //            {
                    //                Fld1 = ca.CanCode,
                    //                //  Fld2 = ca.BirthPlace,

                    //                Fld4 = ca.CanName != null ? ca.CanName.FullNameFML : null,
                    //                Fld5 = ca.FatherName != null ? ca.FatherName.FullNameFML : null,
                    //                Fld6 = ca.HusbandName != null ? ca.HusbandName.FullNameFML : null,
                    //                Fld7 = ca.MotherName != null ? ca.MotherName.FullNameFML : null,
                    //                Fld8 = ca.BeforeMarriageName != null ? ca.BeforeMarriageName.FullNameFML : null,

                    //                //   Fld9 = ca.Gender != null ? ca.Gender.LookupVal : null,
                    //                //  Fld10 = ca.MaritalStatus != null ? ca.MaritalStatus.LookupVal : null,

                    //                Fld11 = ca.ResAddr != null ? ca.ResAddr.FullAddress : null,
                    //                Fld12 = ca.PerAddr != null ? ca.PerAddr.FullAddress : null,
                    //                Fld13 = ca.CorAddr != null ? ca.CorAddr.FullAddress : null,

                    //                Fld14 = ca.CorContact != null ? ca.CorContact.FullContactDetails : null,
                    //                Fld15 = ca.PerContact != null ? ca.PerContact.FullContactDetails : null,
                    //                Fld16 = ca.ResContact != null ? ca.ResContact.FullContactDetails : null,

                    //            };
                    //            OGenericPayrollStatement.Add(OGeneticApprStatement);
                    //        }
                    //    }
                    //    return OGenericPayrollStatement;
                    //    break;
                    //case "MANPOWERBUDGET":
                    //    var OCompanyBudget = db.ManPowerBudget
                    //        .Include(e => e.FuncStruct)
                    //        .Include(e => e.FuncStruct.Company)
                    //        .Include(e => e.FuncStruct.Job)
                    //        .Include(e => e.FuncStruct.JobPosition)
                    //        .Include(e => e.GeoStruct)
                    //        .Include(e => e.GeoStruct.Company)
                    //        .Include(e => e.GeoStruct.Location)
                    //        .Include(e => e.GeoStruct.Department)
                    //        .Include(e => e.RecruitmentCalendar)
                    //        .Include(e => e.RecruitmentCalendar.Name)
                    //        .Include(e => e.PayStruct)
                    //        .Include(e => e.PayStruct.Company)
                    //        .Include(e => e.PayStruct.Grade)
                    //        .Include(e => e.PayStruct.JobStatus)
                    //        .Include(e => e.PayStruct.Level)
                    //        .ToList();
                    //    if (OCompanyBudget == null)
                    //    {
                    //        return null;
                    //    }
                    //    else
                    //    {
                    //        foreach (var ca in OCompanyBudget)
                    //        {
                    //            GenericField100 OGeneticApprStatement = new GenericField100()
                    //            {
                    //                Fld1 = ca.RecruitmentCalendar != null ? ca.RecruitmentCalendar.FullDetails : null,
                    //                Fld2 = ca.GeoStruct != null ? ca.GeoStruct.FullDetails : null,
                    //                Fld3 = ca.PayStruct != null ? ca.PayStruct.FullDetails : null,//grade
                    //                Fld4 = ca.FuncStruct != null ? ca.FuncStruct.FullDetails : null,//job
                    //                Fld5 = ca.BudgetAmount.ToString(),
                    //                Fld6 = ca.SanctionedPosts.ToString()
                    //            };
                    //            OGenericPayrollStatement.Add(OGeneticApprStatement);
                    //        }
                    //    }
                    //    return OGenericPayrollStatement;

                    //case "CANDIDATESCHEDULING":
                    //    //   var cand = db.RecruitBatchInitiator.Include(e => e.ResumeCollection.Select(q => q.Candidate.Id)).ToList();
                    //    var Oschedule = db.RecruitInitiator
                    //        .Include(e => e.RecruitBatchInitiator)
                    //                .Include(e => e.RecruitBatchInitiator.Select(q => q.PostDetails))
                    //                .Include(e => e.RecruitBatchInitiator.Select(q => q.PostDetails.FuncStruct))
                    //                .Include(e => e.RecruitBatchInitiator.Select(q => q.PostDetails.FuncStruct.JobPosition))
                    //                .Include(e => e.RecruitBatchInitiator.Select(q => q.PostDetails.Qualification))
                    //                .Include(e => e.RecruitBatchInitiator.Select(q => q.ResumeCollection))
                    //                .Include(e => e.RecruitBatchInitiator.Select(q => q.ResumeCollection.Select(t => t.Candidate)))
                    //                .Include(e => e.RecruitBatchInitiator.Select(q => q.ResumeCollection.Select(y => y.Candidate.CanName)))
                    //        //      .Where(e=>e.ResumeCollection.Select(q => q.Candidate.Id!=null))
                    //                 .ToList();
                    //    if (Oschedule == null)
                    //    {
                    //        return null;
                    //    }
                    //    else
                    //    {
                    //        foreach (var ca1 in Oschedule)
                    //        {
                    //            foreach (var ca in ca1.RecruitBatchInitiator)
                    //            {


                    //                var qual = ca.PostDetails.Qualification.Select(r => r.QualificationDesc).FirstOrDefault();
                    //                var exp = ca.ResumeCollection.Select(r => r.YrsofExperience).FirstOrDefault();
                    //                var canname = ca.ResumeCollection.Select(e => e.Candidate.CanName.FullNameFML).FirstOrDefault();
                    //                var intvdate = ca.ResumeCollection.Select(q => q.InterviewDate.Value.ToShortDateString()).FirstOrDefault();
                    //                GenericField100 OGeneticApprStatement = new GenericField100()
                    //                {
                    //                    Fld1 = ca.ReferenceNo != null ? ca.ReferenceNo : "",//ref no
                    //                    //Fld2=ca. //reqi no
                    //                    Fld3 = ca.PostDetails.FuncStruct.JobPosition.JobPositionDesc != null ? ca.PostDetails.FuncStruct.JobPosition.JobPositionDesc : "",//post for
                    //                    Fld4 = qual != null ? qual : "",//qual
                    //                    Fld5 = exp != null ? exp.ToString() : "", //exp
                    //                    Fld6 = ca1.AdvertiseReferenceNo != null ? ca1.AdvertiseReferenceNo : "",    //appln no
                    //                    Fld7 = canname != null ? canname : "",//candidate name
                    //                    Fld8 = intvdate != null ? intvdate : "",

                    //                };
                    //                OGenericPayrollStatement.Add(OGeneticApprStatement);
                    //            }
                    //        }
                    //    }
                    //    return OGenericPayrollStatement;
                    //    break;

                    //case "MANPOWERREQUISITION":

                    //    var manpowerreq = db.PostDetails
                    //        .Include(e => e.FuncStruct)
                    //        .Include(e => e.FuncStruct.JobPosition)
                    //        .Include(e => e.Qualification).ToList();

                    //    if (manpowerreq == null)
                    //    {
                    //        return null;
                    //    }
                    //    else
                    //    {
                    //        //int cnt = manpowerreq.Count();
                    //        //  int noofpost = 0;
                    //        //  int add =0;
                    //        foreach (var ca in manpowerreq)
                    //        {
                    //            foreach (var ca1 in ca.Qualification)
                    //            {
                    //                string exp = ca.ExpYearFrom + "-" + ca.ExpYearTo;

                    //                // noofpost+= ca.NoOfVacancies;
                    //                //if (manpowerreq)
                    //                //{
                    //                //    add = noofpost;
                    //                //}
                    //                GenericField100 OGeneticApprStatement = new GenericField100()
                    //                       {
                    //                           //Fld1=ca. //reqi no
                    //                           Fld2 = ca.FuncStruct.JobPosition.JobPositionDesc != null ? ca.FuncStruct.JobPosition.JobPositionDesc : "",//post for
                    //                           Fld7 = ca.NoOfVacancies != null ? ca.NoOfVacancies.ToString() : "",
                    //                           Fld5 = ca1.QualificationDesc != null ? ca1.QualificationDesc.ToString() : "",
                    //                           Fld8 = exp != null ? exp : "",
                    //                           //    Fld9=add.ToString(),
                    //                       };
                    //                OGenericPayrollStatement.Add(OGeneticApprStatement);
                    //            }
                    //        }
                    //    }
                    //    return OGenericPayrollStatement;
                    //    break;

                    //case "INTERVIEWDETAILS":
                    //    //   var cand = db.RecruitBatchInitiator.Include(e => e.ResumeCollection.Select(q => q.Candidate.Id)).ToList();
                    //    var Oschedule1 = db.RecruitInitiator
                    //        .Include(e => e.RecruitBatchInitiator)
                    //                .Include(e => e.RecruitBatchInitiator.Select(q => q.PostDetails))
                    //                .Include(e => e.RecruitBatchInitiator.Select(q => q.PostDetails.FuncStruct))
                    //                .Include(e => e.RecruitBatchInitiator.Select(q => q.PostDetails.FuncStruct.JobPosition))
                    //                .Include(e => e.RecruitBatchInitiator.Select(q => q.PostDetails.Qualification))
                    //                .Include(e => e.RecruitBatchInitiator.Select(q => q.ResumeCollection))
                    //                .Include(e => e.RecruitBatchInitiator.Select(q => q.ResumeCollection.Select(t => t.RecruitJoinParaProcessResult)))
                    //                .Include(e => e.RecruitBatchInitiator.Select(q => q.ResumeCollection.Select(t => t.Candidate)))
                    //                .Include(e => e.RecruitBatchInitiator.Select(q => q.ResumeCollection.Select(y => y.Candidate.CanName)))
                    //        //      .Where(e=>e.ResumeCollection.Select(q => q.Candidate.Id!=null))
                    //                 .ToList();
                    //    if (Oschedule1 == null)
                    //    {
                    //        return null;
                    //    }
                    //    else
                    //    {
                    //        foreach (var ca1 in Oschedule1)
                    //        {
                    //            foreach (var ca in ca1.RecruitBatchInitiator)
                    //            {
                    //                foreach (var ca2 in ca.ResumeCollection)
                    //                {
                    //                    foreach (var ca3 in ca2.RecruitJoinParaProcessResult)
                    //                    {

                    //                        var qual = ca.PostDetails.Qualification.Select(r => r.QualificationDesc).FirstOrDefault();
                    //                        var exp = ca2.YrsofExperience;
                    //                        var intvdate = ca2.InterviewDate != null ? ca2.InterviewDate.Value.ToShortDateString() : "";
                    //                        var canname = ca.ResumeCollection.Select(e => e.Candidate.CanName.FullNameFML).FirstOrDefault();
                    //                        var ActivityLetterIssue = ca3.ActivityLetterIssue;
                    //                        var Selected = ca3.ActivityAccepted;
                    //                        var ActivityAcceptedDate = ca3.ActivityAcceptedDate.Value.ToShortDateString();
                    //                        GenericField100 OGeneticApprStatement = new GenericField100()
                    //                        {
                    //                            Fld1 = ca.ReferenceNo != null ? ca.ReferenceNo : "",//ref no
                    //                            //Fld2=ca. //reqi no
                    //                            Fld3 = ca.PostDetails.FuncStruct.JobPosition.JobPositionDesc != null ? ca.PostDetails.FuncStruct.JobPosition.JobPositionDesc : "",//post for
                    //                            Fld4 = qual != null ? qual : "",//qual
                    //                            Fld5 = exp != null ? exp.ToString() : "", //exp
                    //                            Fld6 = ca1.AdvertiseReferenceNo != null ? ca1.AdvertiseReferenceNo : "",    //appln no
                    //                            Fld7 = canname != null ? canname : "",//candidate name
                    //                            Fld8 = intvdate != null ? intvdate : "",//Interview Date
                    //                            //  Fld9=//   Is Interview Taken 
                    //                            Fld10 = Selected != null ? Selected.ToString() : "",// Is Selected
                    //                            Fld11 = ActivityLetterIssue != null ? ActivityLetterIssue.ToString() : "",// Offer Letter Give
                    //                            Fld12 = Selected != null ? Selected.ToString() : "",//Accepted
                    //                            Fld13 = ActivityAcceptedDate != null ? ActivityAcceptedDate.ToString() : ""// Praposed Join Date 

                    //                        };
                    //                        OGenericPayrollStatement.Add(OGeneticApprStatement);
                    //                    }
                    //                }
                    //            }
                    //        }
                    //    }
                    //    return OGenericPayrollStatement;
                    //    break;


                    //case "CANDIDATESHORTLIST":
                    //    //   var cand = db.RecruitBatchInitiator.Include(e => e.ResumeCollection.Select(q => q.Candidate.Id)).ToList();
                    //    var Oschedule12 = db.RecruitInitiator
                    //        .Include(e => e.RecruitBatchInitiator)
                    //                .Include(e => e.RecruitBatchInitiator.Select(q => q.PostDetails))
                    //                .Include(e => e.RecruitBatchInitiator.Select(q => q.PostDetails.FuncStruct))
                    //                .Include(e => e.RecruitBatchInitiator.Select(q => q.PostDetails.FuncStruct.JobPosition))
                    //                .Include(e => e.RecruitBatchInitiator.Select(q => q.PostDetails.Qualification))
                    //                .Include(e => e.RecruitBatchInitiator.Select(q => q.ResumeCollection))
                    //                .Include(e => e.RecruitBatchInitiator.Select(q => q.ResumeCollection.Select(t => t.Candidate)))
                    //                .Include(e => e.RecruitBatchInitiator.Select(q => q.ResumeCollection.Select(y => y.Candidate.CanName)))
                    //        //      .Where(e=>e.ResumeCollection.Select(q => q.Candidate.Id!=null))
                    //                 .ToList();
                    //    if (Oschedule12 == null)
                    //    {
                    //        return null;
                    //    }
                    //    else
                    //    {
                    //        foreach (var ca1 in Oschedule12)
                    //        {
                    //            foreach (var ca in ca1.RecruitBatchInitiator)
                    //            {


                    //                var qual = ca.PostDetails.Qualification.Select(r => r.QualificationDesc).FirstOrDefault();
                    //                var exp = ca.ResumeCollection.Select(r => r.YrsofExperience).FirstOrDefault();
                    //                var canname = ca.ResumeCollection.Select(e => e.Candidate.CanName.FullNameFML).FirstOrDefault();
                    //                GenericField100 OGeneticApprStatement = new GenericField100()
                    //                {
                    //                    Fld1 = ca.ReferenceNo != null ? ca.ReferenceNo : "",//ref no
                    //                    //Fld2=ca. //reqi no
                    //                    Fld3 = ca.PostDetails.FuncStruct.JobPosition.JobPositionDesc != null ? ca.PostDetails.FuncStruct.JobPosition.JobPositionDesc : "",//post for
                    //                    Fld4 = qual != null ? qual : "",//qual
                    //                    Fld5 = exp != null ? exp.ToString() : "", //exp
                    //                    Fld6 = ca1.AdvertiseReferenceNo != null ? ca1.AdvertiseReferenceNo : "",    //appln no
                    //                    Fld7 = canname != null ? canname : "",//candidate name
                    //                };
                    //                OGenericPayrollStatement.Add(OGeneticApprStatement);
                    //            }
                    //        }
                    //    }
                    //    return OGenericPayrollStatement;
                    //    break;


                    //case "CANDIDATEMEDICAL":
                    //    // recurt 
                    //    var oCanMedicalInfo = db.Candidate

                    //           .Include(e => e.CanMedicalInfo)
                    //           .Include(e => e.CanMedicalInfo.Allergy)
                    //           .Include(e => e.CanMedicalInfo.BloodGroup)
                    //           .Include(e => e.CanMedicalInfo.Disease)
                    //           .Include(e => e.CanMedicalInfo.Doctor)
                    //           .Include(e => e.CanMedicalInfo.EmergencyContact)
                    //           .Include(e => e.CanMedicalInfo.HospitalAddress)
                    //           .Include(e => e.CanMedicalInfo.HospitalContactDetails)
                    //           .Include(e => e.CanMedicalInfo.Doctor.Select(a => a.Name))
                    //        .Include(e => e.CanName)

                    //        .Where(a => a.CanMedicalInfo != null)
                    //      .ToList();


                    //    if (oCanMedicalInfo == null)
                    //    {
                    //        return null;
                    //    }
                    //    else
                    //    {
                    //        foreach (var ca in oCanMedicalInfo)
                    //        {

                    //            GenericField100 OGeneticApprStatement = new GenericField100()
                    //            {
                    //                Fld2 = ca.CanCode,

                    //                Fld3 = ca.CanName != null ? ca.CanName.FullNameFML : null,

                    //                Fld4 = ca.CanMedicalInfo.BloodGroup != null ? ca.CanMedicalInfo.BloodGroup.LookupVal : null,
                    //                Fld5 = ca.CanMedicalInfo.Height != 0 ? ca.CanMedicalInfo.Height.ToString() : null,
                    //                Fld6 = ca.CanMedicalInfo.Weight != 0 ? ca.CanMedicalInfo.Weight.ToString() : null,

                    //                //Fld6 = ca.HospitalAddress != null ? ca.HospitalAddress.FullAddress : null,
                    //                //Fld7 = ca.HospitalContactDetails != null ? ca.HospitalContactDetails.FullContactDetails : null,

                    //                //Fld10 = ca.IDMark != null ? ca.IDMark : null,

                    //                Fld7 = ca.CanMedicalInfo.Allergy != null ? string.Join(",", ca.CanMedicalInfo.Allergy.Select(a => a.Name).ToArray()) : null,
                    //                Fld8 = ca.CanMedicalInfo.Disease != null ? string.Join(",", ca.CanMedicalInfo.Disease.Select(a => a.Name).ToArray()) : null,
                    //                Fld9 = ca.CanMedicalInfo.Doctor != null ? string.Join(",", ca.CanMedicalInfo.Doctor.Select(a => a.Name != null ? a.Name.FullNameFML : null).ToArray()) : null


                    //            };
                    //            OGenericPayrollStatement.Add(OGeneticApprStatement);
                    //        }
                    //    }
                    //    return OGenericPayrollStatement;
                    //    break;
                    //case "CANDIDATESOCIALINFO":
                    //    var OCandidateSocial = db.Candidate
                    //        .Include(a => a.CanSocialInfo)
                    //        .Include(e => e.CanName)
                    //        .Include(e => e.CanSocialInfo.Religion)
                    //       .Include(e => e.CanSocialInfo.Caste)
                    //       .Include(e => e.CanSocialInfo.SubCaste)
                    //       .Include(e => e.CanSocialInfo.Category)
                    //        .Include(e => e.CanSocialInfo.SocialActivities)
                    //        .Where(e => e.CanSocialInfo != null && e.CanSocialInfo.SocialActivities.Count > 0).ToList();
                    //    if (OCandidateSocial == null || OCandidateSocial.Count == 0)
                    //    {
                    //        return null;
                    //    }
                    //    else
                    //    {
                    //        foreach (var ca in OCandidateSocial)
                    //        {
                    //            var v2 = ca.CanSocialInfo.SocialActivities.ToList();
                    //            foreach (var item in v2)
                    //            {

                    //                GenericField100 OGenericObjStatement = new GenericField100
                    //                {
                    //                    Fld2 = ca.CanCode,
                    //                    Fld3 = ca.CanName != null ? ca.CanName.FullNameFML : null,
                    //                    Fld4 = ca.CanSocialInfo != null && ca.CanSocialInfo.Religion != null ? ca.CanSocialInfo.Religion.LookupVal : null,
                    //                    Fld5 = ca.CanSocialInfo != null && ca.CanSocialInfo.Category != null ? ca.CanSocialInfo.Category.LookupVal : null,
                    //                    Fld6 = ca.CanSocialInfo != null && ca.CanSocialInfo.Caste != null ? ca.CanSocialInfo.Caste.LookupVal : null,
                    //                    Fld7 = ca.CanSocialInfo != null && ca.CanSocialInfo.SubCaste != null ? ca.CanSocialInfo.SubCaste.LookupVal : null,
                    //                    Fld8 = item.InstituteName,
                    //                    Fld9 = item.PostHeld,
                    //                    Fld10 = item.FromPeriod != null ? item.FromPeriod.Value.ToShortDateString() : null,
                    //                    Fld11 = item.ToPeriod != null ? item.ToPeriod.Value.ToShortDateString() : null,
                    //                };
                    //                OGenericPayrollStatement.Add(OGenericObjStatement);
                    //            }
                    //        }
                    //        return OGenericPayrollStatement;
                    //    }
                    //    break;
                    //case "CANDIDATEQUALIFICATION":
                    //    var OCandidateQuali = db.Candidate
                    //          .Include(a => a.CanAcademicInfo)
                    //        .Include(e => e.CanName)
                    //        .Include(e => e.CanAcademicInfo.QualificationDetails)
                    //        .Include(e => e.CanAcademicInfo.QualificationDetails.Select(t => t.Qualification))
                    //        .Where(e => e.CanAcademicInfo != null && e.CanAcademicInfo.QualificationDetails.Count > 0).ToList();
                    //    if (OCandidateQuali == null || OCandidateQuali.Count == 0)
                    //    {
                    //        return null;
                    //    }
                    //    else
                    //    {
                    //        foreach (var ca in OCandidateQuali)
                    //        {
                    //            if (ca.CanAcademicInfo != null)
                    //            {
                    //                var v2 = ca.CanAcademicInfo.QualificationDetails.ToList();
                    //                foreach (var item in v2)
                    //                {
                    //                    GenericField100 OGenericObjStatement = new GenericField100
                    //                    {
                    //                        Fld2 = ca.CanCode,
                    //                        Fld3 = ca.CanName != null ? ca.CanName.FullNameFML : null,
                    //                        //  Fld4 = item.Qualification.ToString(),
                    //                        Fld5 = item.SpecilisedBranch.ToString(),
                    //                        Fld6 = item.Institute.ToString(),
                    //                        Fld7 = item.University.ToString(),
                    //                        Fld8 = item.ResultPercentage.ToString(),
                    //                        Fld9 = item.ResultGradation.ToString(),
                    //                        Fld10 = item.PasingYear.ToString(),
                    //                        Fld11 = item.ResultSubmissionDate.Value.ToShortDateString(),
                    //                        Fld12 = item.SpecialFeature.ToString(),
                    //                    };
                    //                    OGenericPayrollStatement.Add(OGenericObjStatement);
                    //                }
                    //            }
                    //        }
                    //        return OGenericPayrollStatement;
                    //    }
                    //    break;
                    default:
                        return OGenericPayrollStatement;

                        break;

                }
            }
        }
        public static List<Utility.ReportClass> GetViewData(int Flag)
        {
            using (DataBaseContext db = new DataBaseContext())
            {
                if (Flag == 0)
                {
                    List<Utility.ReportClass> GeoData = new List<Utility.ReportClass>();
                    var query1 = "select * from VGeoStructD ";
                    if (query1 != "")
                    {
                        GeoData = db.Database.SqlQuery<Utility.ReportClass>(query1).ToList<Utility.ReportClass>();
                    }

                    return GeoData;
                }
                //}
                //if (chkpaystruct == 1)
                //{
                if (Flag == 1)
                {
                    List<Utility.ReportClass> PayData = new List<Utility.ReportClass>();

                    var query2 = "select * from VPayStructD ";
                    if (query2 != "")
                    {
                        PayData = db.Database.SqlQuery<Utility.ReportClass>(query2).ToList<Utility.ReportClass>();
                    }
                    return PayData;
                }

                // }

                //if (chkfunstruct == 1)
                //{
                if (Flag == 2)
                {
                    List<Utility.ReportClass> FuncData = new List<Utility.ReportClass>();
                    var query3 = "select * from VFuncStructD ";
                    if (query3 != "")
                    {
                        FuncData = db.Database.SqlQuery<Utility.ReportClass>(query3).ToList<Utility.ReportClass>();
                    }
                    return FuncData;
                }

                return null;

            }
        }

        public static Utility.ReportClass GetViewDataIndiv(int geoid, int payid, int funid, List<Utility.ReportClass> GrpInfoPass, int Flag)
        {

            Utility.ReportClass GrpInfo = new Utility.ReportClass();
            if (Flag == 0)
            {
                GrpInfo = GrpInfoPass.Where(e => e.Geo_Struct_Id == geoid).SingleOrDefault();
                return GrpInfo;
            }


            if (Flag == 1)
            {
                GrpInfo = GrpInfoPass.Where(e => e.PayStruct_Id == payid).SingleOrDefault();
                return GrpInfo;
            }


            if (Flag == 2)
            {
                GrpInfo = GrpInfoPass.Where(e => e.FuncStruct_Id == funid).SingleOrDefault();
                return GrpInfo;
            }


            return null;
        }

        public static GenericField100 GetFilterData(List<string> forithead, GenericField100 OGenericObjStatement, string paymonth, string employee, Utility.ReportClass GeodataInd, Utility.ReportClass PaydataInd, Utility.ReportClass FuncdataInd)
        {
            var month = false;
            var emp = false;
            var dept = false;
            var loca = false;
            var comp = false;
            var grp = false;
            var unit = false;
            var div = false;
            var regn = false;
            var grade = false;
            var lvl = false;
            var jobstat = false;
            var job = false;
            var jobpos = false;

            using (DataBaseContext db = new DataBaseContext())
            {

                var vc = db.LookupValue.Where(a => forithead.Contains(a.Id.ToString())).ToList();

                foreach (var item in vc)
                {
                    if (item.LookupVal.ToUpper() == "MONTH")
                    {
                        month = true;
                    }
                    if (item.LookupVal.ToUpper() == "LOCATION")
                    {

                        loca = true;
                    }
                    if (item.LookupVal.ToUpper() == "EMPLOYEE")
                    {
                        emp = true;
                    }
                    if (item.LookupVal.ToUpper() == "DEPARTMENT")
                    {
                        dept = true;
                    }
                    if (item.LookupVal.ToUpper() == "COMPANY")
                    {
                        comp = true;
                    }
                    if (item.LookupVal.ToUpper() == "GROUP")
                    {
                        grp = true;
                    }
                    if (item.LookupVal.ToUpper() == "UNIT")
                    {
                        unit = true;
                    }
                    if (item.LookupVal.ToUpper() == "DIVISION")
                    {
                        div = true;
                    }
                    if (item.LookupVal.ToUpper() == "REGION")
                    {
                        regn = true;
                    }
                    if (item.LookupVal.ToUpper() == "GRADE")
                    {
                        grade = true;
                    }
                    if (item.LookupVal.ToUpper() == "LEVEL")
                    {
                        lvl = true;
                    }
                    if (item.LookupVal.ToUpper() == "JOBSTATUS")
                    {
                        jobstat = true;
                    }

                    if (item.LookupVal.ToUpper() == "JOB")
                    {
                        job = true;
                    }
                    if (item.LookupVal.ToUpper() == "JOBPOSITION")
                    {
                        jobpos = true;
                    }
                }


                if (month)
                {
                    OGenericObjStatement.Fld100 = paymonth;
                }
                if (comp)
                {
                    OGenericObjStatement.Fld99 = GeodataInd.Company_Name;
                }
                if (div)
                {
                    OGenericObjStatement.Fld98 = GeodataInd.Division_Name;
                }
                if (loca)
                {
                    OGenericObjStatement.Fld97 = GeodataInd.LocDesc;
                }
                if (dept)
                {
                    OGenericObjStatement.Fld96 = GeodataInd.DeptDesc;
                }
                if (grp)
                {
                    OGenericObjStatement.Fld95 = GeodataInd.Group_Name;
                }
                if (unit)
                {
                    OGenericObjStatement.Fld94 = GeodataInd.Unit_Name;
                }
                if (grade)
                {
                    OGenericObjStatement.Fld93 = PaydataInd.Grade_Name;
                }
                if (lvl)
                {
                    OGenericObjStatement.Fld92 = PaydataInd.Level_Name;
                }
                if (jobstat)
                {
                    OGenericObjStatement.Fld91 = GeodataInd.JobStatus_Id.ToString();
                }
                if (job)
                {
                    OGenericObjStatement.Fld90 = FuncdataInd.Job_Name;
                }
                if (jobpos)
                {
                    OGenericObjStatement.Fld89 = FuncdataInd.JobPositionDesc;
                }
                if (emp)
                {
                    OGenericObjStatement.Fld88 = employee;
                }

                return OGenericObjStatement;
            }
        }

        public static List<Utility.GetSalaryDataClass> GetSalaryData(SalaryT OSalaryT, Employee OEmp, int? EmployeePayrollId)
        {
            using (DataBaseContext db = new DataBaseContext())
            {

                List<Utility.GetSalaryDataClass> OsalDataList = new List<Models.Utility.GetSalaryDataClass>();

                foreach (var item in OSalaryT.SalEarnDedT.Where(e => e.Amount != 0))
                {
                    if (item.SalaryHead.InPayslip == true)
                    {
                        Utility.GetSalaryDataClass SalData = new Utility.GetSalaryDataClass();
                        SalData.Company_Code = OSalaryT.Geostruct.Company.Code;
                        SalData.Company_Name = OSalaryT.Geostruct.Company.Name;
                        SalData.DeptCode = OSalaryT.Geostruct != null && OSalaryT.Geostruct.Department != null && OSalaryT.Geostruct.Department.DepartmentObj != null ? OSalaryT.Geostruct.Department.DepartmentObj.DeptCode : "";
                        SalData.DeptDesc = OSalaryT.Geostruct != null && OSalaryT.Geostruct.Department != null && OSalaryT.Geostruct.Department.DepartmentObj != null ? OSalaryT.Geostruct.Department.DepartmentObj.DeptDesc : "";
                        SalData.Division_Code = OSalaryT.Geostruct.Division != null ? OSalaryT.Geostruct.Division.Code : "";
                        SalData.Division_Name = OSalaryT.Geostruct.Division != null ? OSalaryT.Geostruct.Division.Name : "";
                        SalData.EarnAmount = item.Amount.ToString();
                        SalData.EarnCode = item.SalaryHead.Code;
                        SalData.EarnHead = item.SalaryHead.Name;
                        SalData.EmpCode = OEmp.EmpCode;
                        SalData.Employee_Id = OEmp.Id.ToString();
                        SalData.EmployeePayroll_Id = EmployeePayrollId.ToString();
                        SalData.EmpName = OEmp.EmpName.FullNameFML;
                        SalData.EmpName_Id = OEmp.EmpName_Id.ToString();
                        SalData.EPS_Share = OSalaryT.PFECRR != null ? OSalaryT.PFECRR.EPS_Share.ToString() : "";
                        SalData.ER_Share = OSalaryT.PFECRR != null ? OSalaryT.PFECRR.ER_Share.ToString() : "";
                        SalData.GeoStruct_Id = OSalaryT.Geostruct_Id.ToString();
                        SalData.Grade_Code = OSalaryT.PayStruct != null ? OSalaryT.PayStruct.Grade.Code : "";
                        SalData.Grade_Name = OSalaryT.PayStruct != null ? OSalaryT.PayStruct.Grade.Name : "";
                        SalData.InPayslip = item.SalaryHead.InPayslip == false ? "False" : "True";
                        SalData.Job_Code = OSalaryT.FuncStruct != null && OSalaryT.FuncStruct.Job != null ? OSalaryT.FuncStruct.Job.Code : "";
                        SalData.Job_Name = OSalaryT.FuncStruct != null && OSalaryT.FuncStruct.Job != null ? OSalaryT.FuncStruct.Job.Name : "";
                        SalData.JobPositionCode = OSalaryT.FuncStruct != null && OSalaryT.FuncStruct.Job != null && OSalaryT.FuncStruct.JobPosition != null ? OSalaryT.FuncStruct.JobPosition.JobPositionCode : "";
                        SalData.JobPositionDesc = OSalaryT.FuncStruct != null && OSalaryT.FuncStruct.Job != null && OSalaryT.FuncStruct.JobPosition != null ? OSalaryT.FuncStruct.JobPosition.JobPositionDesc : "";
                        SalData.LocCode = OSalaryT.Geostruct != null && OSalaryT.Geostruct.Location != null && OSalaryT.Geostruct.Location.LocationObj != null ? OSalaryT.Geostruct.Location.LocationObj.LocCode : "";
                        SalData.LocDesc = OSalaryT.Geostruct != null && OSalaryT.Geostruct.Location != null && OSalaryT.Geostruct.Location.LocationObj != null ? OSalaryT.Geostruct.Location.LocationObj.LocDesc : "";
                        SalData.LookupVal = item.SalaryHead.Type != null ? item.SalaryHead.Type.LookupVal.ToString() : "";
                        SalData.PayMonth = OSalaryT.PayMonth;
                        SalData.PayStruct_Id = OSalaryT.PayStruct_Id.ToString();
                        SalData.ProcessDate = OSalaryT.ProcessDate.Value.ToString("dd/MM/yyyy");
                        SalData.ReleaseDate = OSalaryT.ReleaseDate != null ? OSalaryT.ReleaseDate.Value.ToString("dd/MM/yyyy") : "";
                        SalData.SalaryHead_Id = item.SalaryHead_Id.ToString();
                        SalData.SalHead_FullDetails = item.SalaryHead != null ? item.SalaryHead.FullDetails : "";
                        SalData.SalHead_SeqNo = item.SalaryHead.SeqNo.ToString();
                        SalData.StdAmount = item.StdAmount.ToString();
                        SalData.TotalDeduction = OSalaryT.TotalDeduction.ToString();
                        SalData.TotalEarning = OSalaryT.TotalEarning.ToString();
                        SalData.TotalNet = OSalaryT.TotalNet.ToString();

                        OsalDataList.Add(SalData);
                    }
                }




                return OsalDataList;

            }
        }

        public static Utility.GetOrganizationDataClass GetOrganizationDataInd(GeoStruct GeoStruct, PayStruct PayStruct, FuncStruct FuncStruct, int StructType)
        {
            using (DataBaseContext db = new DataBaseContext())
            {
                var OrgData = new Utility.GetOrganizationDataClass();

                if (StructType == 0 || StructType == 1)
                {
                    var Corporate = db.Corporate.Where(e => e.Id == GeoStruct.Corporate_Id).Select(e => new { e.Id, e.Code, e.Name }).FirstOrDefault();
                    if (Corporate != null)
                    {
                        OrgData.GeoStruct_Corporate_Id = Corporate.Id.ToString();
                        OrgData.GeoStruct_Corporate_Code = Corporate.Code;
                        OrgData.GeoStruct_Corporate_Name = Corporate.Name;
                    }
                    var Region = db.Region.Where(e => e.Id == GeoStruct.Region_Id).OrderBy(e => e.Id).Select(e => new { e.Id, e.Code, e.Name }).FirstOrDefault();
                    if (Region != null)
                    {
                        OrgData.GeoStruct_Region_Id = Region.Id.ToString();
                        OrgData.GeoStruct_Region_Code = Region.Code;
                        OrgData.GeoStruct_Region_Name = Region.Name;
                    }
                    var Company = db.Company.Where(e => e.Id == GeoStruct.Company_Id).OrderBy(e => e.Id).Select(e => new { e.Id, e.Code, e.Name }).FirstOrDefault();
                    if (Company != null)
                    {
                        OrgData.GeoStruct_Company_Id = Company.Id.ToString();
                        OrgData.GeoStruct_Company_Code = Company.Code;
                        OrgData.GeoStruct_Company_Name = Company.Name;
                    }
                    var Division = db.Division.Where(e => e.Id == GeoStruct.Division_Id).OrderBy(e => e.Id).Select(e => new { e.Id, e.Code, e.Name }).FirstOrDefault();
                    if (Division != null)
                    {
                        OrgData.GeoStruct_Division_Id = Division.Id.ToString();
                        OrgData.GeoStruct_Division_Code = Division.Code;
                        OrgData.GeoStruct_Division_Name = Division.Name;
                    }
                    var Location = db.Location.Where(e => e.Id == GeoStruct.Location_Id).FirstOrDefault();
                    if (Location != null)
                    {
                        var LocationObj = db.LocationObj.Where(e => e.Id == Location.LocationObj_Id).Select(e => new { Code = e.LocCode, Name = e.LocDesc }).FirstOrDefault();
                        if (Location.Address_Id != null)
                        {
                            var State = db.Address.Where(e => e.Id == Location.Address_Id).Select(e => e.State).SingleOrDefault();
                            if (State != null)
                            {
                                OrgData.GeoStruct_Location_State_Id = State.Id.ToString();
                                OrgData.GeoStruct_Location_State_Name = State.Name;
                            }
                        }
                        OrgData.GeoStruct_Location_Id = Location.Id.ToString();
                        OrgData.GeoStruct_Location_Code = LocationObj.Code;
                        OrgData.GeoStruct_Location_Name = LocationObj.Name;
                    }
                    //var LocationObj = Location != null ? db.LocationObj.Where(e => e.Id == Location.LocationObj_Id).Select(e => new { e.Id, Code = e.Code, Name = e.Name }).FirstOrDefault() : null;
                    var Department = db.Department.Where(e => e.Id == GeoStruct.Department_Id).FirstOrDefault();
                    if (Department != null)
                    {
                        var DepartmentObj = db.DepartmentObj.Where(e => e.Id == Department.DepartmentObj_Id).Select(e => new { Code = e.DeptCode, Name = e.DeptDesc }).FirstOrDefault();

                        OrgData.GeoStruct_Department_Id = Department.Id.ToString();
                        OrgData.GeoStruct_Department_Code = DepartmentObj.Code;
                        OrgData.GeoStruct_Department_Name = DepartmentObj.Name;
                    }
                    var Unit = db.Unit.Where(e => e.Id == GeoStruct.Unit_Id).Select(e => new { e.Id, e.Code, e.Name }).FirstOrDefault();
                    if (Unit != null)
                    {
                        OrgData.GeoStruct_Unit_Id = Unit.Id.ToString();
                        OrgData.GeoStruct_Unit_Code = Unit.Code;
                        OrgData.GeoStruct_Unit_Name = Unit.Name;
                    }
                    var Group = db.Group.Where(e => e.Id == GeoStruct.Group_Id).Select(e => new { e.Id, e.Code, e.Name }).FirstOrDefault();
                    if (Group != null)
                    {
                        OrgData.GeoStruct_Group_Id = Group.Id.ToString();
                        OrgData.GeoStruct_Group_Code = Group.Code;
                        OrgData.GeoStruct_Group_Name = Group.Name;
                    }
                }
                if (StructType == 0 || StructType == 2)
                {
                    var Grade = db.Grade.Where(e => e.Id == PayStruct.Grade_Id).Select(e => new { e.Id, e.Code, e.Name }).FirstOrDefault();
                    if (Grade != null)
                    {
                        OrgData.PayStruct_Grade_Id = Grade.Id.ToString();
                        OrgData.PayStruct_Grade_Code = Grade.Code;
                        OrgData.PayStruct_Grade_Name = Grade.Name;
                    }

                    var Level = db.Level.Where(e => e.Id == PayStruct.Level_Id).Select(e => new { e.Id, e.Code, e.Name }).FirstOrDefault();
                    if (Level != null)
                    {
                        OrgData.PayStruct_Level_Id = Level.Id.ToString();
                        OrgData.PayStruct_Level_Code = Level.Code;
                        OrgData.PayStruct_Level_Name = Level.Name;
                    }

                    var JobStatus = db.JobStatus.Where(e => e.Id == PayStruct.JobStatus_Id).FirstOrDefault();
                    if (JobStatus != null)
                    {
                        OrgData.PayStruct_JobStatus_Id = JobStatus.Id.ToString();
                        OrgData.PayStruct_JobStatus_EmpStatus = db.LookupValue.Find(JobStatus.EmpStatus_Id).LookupVal;
                        OrgData.PayStruct_JobStatus_EmpActingStatus = db.LookupValue.Find(JobStatus.EmpActingStatus_Id).LookupVal;
                    }
                }
                if (StructType == 0 || StructType == 3)
                {

                    var Job = db.Job.Where(e => e.Id == FuncStruct.Job_Id).OrderBy(e => e.Id).AsNoTracking().AsParallel().Select(e => new { e.Id, e.Code, e.Name }).FirstOrDefault();
                    if (Job != null)
                    {
                        OrgData.FuncStruct_Job_Id = Job.Id.ToString();
                        OrgData.FuncStruct_Job_Code = Job.Code;
                        OrgData.FuncStruct_Job_Name = Job.Name;
                    }
                    var JobPosition = db.JobPosition.Where(e => e.Id == FuncStruct.JobPosition_Id).OrderBy(e => e.Id).AsNoTracking().AsParallel().Select(e => new { e.Id, Code = e.JobPositionCode, Name = e.JobPositionDesc }).FirstOrDefault();
                    if (JobPosition != null)
                    {
                        OrgData.FuncStruct_JobPosition_Id = JobPosition.Id.ToString();
                        OrgData.FuncStruct_JobPosition_Code = JobPosition.Code;
                        OrgData.FuncStruct_JobPosition_Name = JobPosition.Name;
                    }
                }
                return OrgData;

            }
        }

        public static List<Utility.GetOrganizationDataClass> GetOrganizationData(int StructType)
        {
            using (DataBaseContext db = new DataBaseContext())
            {
                var OrgData = new Utility.GetOrganizationDataClass();

                List<Utility.GetOrganizationDataClass> OrgDataGeo = new List<Utility.GetOrganizationDataClass>();

                if (StructType == 0 || StructType == 1)
                {

                    var Company = db.Company.Select(e => new { e.Id, e.Code, e.Name }).ToList();
                    if (Company != null && Company.Count() > 0)
                    {
                        foreach (var C in Company)
                        {
                            OrgData.GeoStruct_Company_Id = C.Id.ToString();
                            OrgData.GeoStruct_Company_Code = C.Code;
                            OrgData.GeoStruct_Company_Name = C.Name;

                            var Division = db.Company.Where(e => e.Id == C.Id).FirstOrDefault().Divisions;
                            if (Division != null && Division.Count() > 0)
                            {
                                foreach (var D in Division)
                                {
                                    OrgData.GeoStruct_Division_Id = D.Id.ToString();
                                    OrgData.GeoStruct_Division_Code = D.Code;
                                    OrgData.GeoStruct_Division_Name = D.Name;

                                    var LocationDiv = db.Division.Where(e => e.Id == D.Id).FirstOrDefault().Locations;
                                    if (LocationDiv != null && LocationDiv.Count() > 0)
                                    {
                                        foreach (var LD in LocationDiv)
                                        {
                                            var Add = db.Location.Where(e => e.Id == LD.Id).FirstOrDefault().Address;
                                            LD.Address = db.Address.Where(e => e.Id == Add.Id).SingleOrDefault();
                                            var LocationObj = db.Location.Where(e => e.Id == LD.Id).FirstOrDefault().LocationObj;
                                            if (LocationObj != null)
                                            {

                                                var State = db.Address.Where(e => e.Id == LD.Address.Id).Select(e => e.State).SingleOrDefault();
                                                if (State != null)
                                                {
                                                    OrgData.GeoStruct_Location_State_Id = State.Id.ToString();
                                                    OrgData.GeoStruct_Location_State_Name = State.Name;
                                                }

                                                OrgData.GeoStruct_Location_Id = LD.Id.ToString();
                                                OrgData.GeoStruct_Location_Code = LocationObj.LocCode;
                                                OrgData.GeoStruct_Location_Name = LocationObj.LocDesc;
                                            }

                                            var Department = db.Location.Where(e => e.Id == LD.Id).FirstOrDefault().Department;
                                            if (Department != null && Department.Count() > 0)
                                            {
                                                foreach (var Dep in Department)
                                                {
                                                    var DepartmentObj = db.Department.Where(e => e.Id == Dep.Id).FirstOrDefault().DepartmentObj;
                                                    //var DepartmentObj = db.DepartmentObj.Where(e => e.Id == Department.DepartmentObj_Id).Select(e => new { Code = e.DeptCode, Name = e.DeptDesc }).FirstOrDefault();

                                                    OrgData.GeoStruct_Department_Id = Dep.Id.ToString();
                                                    OrgData.GeoStruct_Department_Code = DepartmentObj.DeptCode;
                                                    OrgData.GeoStruct_Department_Name = DepartmentObj.DeptDesc;

                                                    var Group = db.Department.Where(e => e.Id == Dep.Id).FirstOrDefault().Groups;
                                                    if (Group != null && Group.Count() > 0)
                                                    {
                                                        foreach (var G in Group)
                                                        {
                                                            OrgData.GeoStruct_Group_Id = G.Id.ToString();
                                                            OrgData.GeoStruct_Group_Code = G.Code;
                                                            OrgData.GeoStruct_Group_Name = G.Name;

                                                            var Unit = db.Group.Where(e => e.Id == G.Id).FirstOrDefault().Units;
                                                            if (Unit != null && Unit.Count() > 0)
                                                            {
                                                                foreach (var U in Unit)
                                                                {
                                                                    OrgData.GeoStruct_Unit_Id = U.Id.ToString();
                                                                    OrgData.GeoStruct_Unit_Code = U.Code;
                                                                    OrgData.GeoStruct_Unit_Name = U.Name;

                                                                    OrgDataGeo.Add(OrgData);
                                                                }

                                                            }

                                                        }

                                                    }


                                                }

                                            }
                                        }

                                    }
                                }


                            }
                            else
                            {
                                var Location = db.Company.Where(e => e.Id == C.Id).FirstOrDefault().Location;
                                if (Location != null && Location.Count() > 0)
                                {
                                    foreach (var LD in Location)
                                    {
                                        var Add = db.Location.Where(e => e.Id == LD.Id).FirstOrDefault().Address;
                                        LD.Address = db.Address.Where(e => e.Id == Add.Id).SingleOrDefault();
                                        var LocationObj = db.Location.Where(e => e.Id == LD.Id).FirstOrDefault().LocationObj;
                                        if (LocationObj != null)
                                        {

                                            var State = db.Address.Where(e => e.Id == LD.Address.Id).Select(e => e.State).SingleOrDefault();
                                            if (State != null)
                                            {
                                                OrgData.GeoStruct_Location_State_Id = State.Id.ToString();
                                                OrgData.GeoStruct_Location_State_Name = State.Name;
                                            }

                                            OrgData.GeoStruct_Location_Id = LD.Id.ToString();
                                            OrgData.GeoStruct_Location_Code = LocationObj.LocCode;
                                            OrgData.GeoStruct_Location_Name = LocationObj.LocDesc;
                                        }

                                        var Department = db.Location.Where(e => e.Id == LD.Id).FirstOrDefault().Department;
                                        if (Department != null && Department.Count() > 0)
                                        {
                                            foreach (var Dep in Department)
                                            {
                                                var DepartmentObj = db.Department.Where(e => e.Id == Dep.Id).FirstOrDefault().DepartmentObj;
                                                //var DepartmentObj = db.DepartmentObj.Where(e => e.Id == Department.DepartmentObj_Id).Select(e => new { Code = e.DeptCode, Name = e.DeptDesc }).FirstOrDefault();

                                                OrgData.GeoStruct_Department_Id = Dep.Id.ToString();
                                                OrgData.GeoStruct_Department_Code = DepartmentObj.DeptCode;
                                                OrgData.GeoStruct_Department_Name = DepartmentObj.DeptDesc;

                                                var Group = db.Department.Where(e => e.Id == Dep.Id).FirstOrDefault().Groups;
                                                if (Group != null && Group.Count() > 0)
                                                {
                                                    foreach (var G in Group)
                                                    {
                                                        OrgData.GeoStruct_Group_Id = G.Id.ToString();
                                                        OrgData.GeoStruct_Group_Code = G.Code;
                                                        OrgData.GeoStruct_Group_Name = G.Name;

                                                        var Unit = db.Group.Where(e => e.Id == G.Id).FirstOrDefault().Units;
                                                        if (Unit != null && Unit.Count() > 0)
                                                        {
                                                            foreach (var U in Unit)
                                                            {
                                                                OrgData.GeoStruct_Unit_Id = U.Id.ToString();
                                                                OrgData.GeoStruct_Unit_Code = U.Code;
                                                                OrgData.GeoStruct_Unit_Name = U.Name;

                                                                OrgDataGeo.Add(OrgData);
                                                            }

                                                        }

                                                    }

                                                }


                                            }

                                        }
                                    }

                                }
                            }




                        }

                    }

                }

                return OrgDataGeo;

            }
        }
        public static List<Utility.GetJobPosBrSummaryClass> GetJobPosBranchSumDataJob(int? OLocation_Id, string PayMonth, int? JobPos_Id)
        {
            using (DataBaseContext db = new DataBaseContext())
            {

                List<Utility.GetJobPosBrSummaryClass> OsalDataList = new List<Models.Utility.GetJobPosBrSummaryClass>();
                double LocTotalEarning = 0, LocTotalDeduction = 0, LocTotalNet = 0, LocTotalEmployee = 0;
                double JobPosTotalEarning = 0, JobPosTotalDeduction = 0, JobPosTotalNet = 0, JobPosTotalEmployee = 0;

                List<SalaryT> OSalList = new List<SalaryT>();
                //if (OLocation_Id != 0)
                //{
                OSalList = db.SalaryT.Include(e => e.FuncStruct).Where(e => e.FuncStruct.JobPosition_Id == JobPos_Id && e.PayMonth == PayMonth).AsNoTracking().ToList();
                List<Int32> OOSalList = db.SalaryT.Include(e => e.FuncStruct).Where(e => e.FuncStruct.JobPosition_Id == JobPos_Id && e.PayMonth == PayMonth).AsNoTracking().Select(e => e.Id).ToList();

                var Totbranch = OSalList.GroupBy(x => new { x.PayMonth }).Select(g => new
                {
                    g.Key.PayMonth,
                    TotalEarning = g.Sum(x => x.TotalEarning),
                    TotalDeduction = g.Sum(x => x.TotalDeduction),
                    TotalNet = g.Sum(x => x.TotalNet),
                    //TotalEmployee = g.Count(y => y.EmployeePayroll.Id),

                }).FirstOrDefault();
                if (Totbranch != null)
                {
                    JobPosTotalEarning = Totbranch.TotalEarning;
                    JobPosTotalDeduction = Totbranch.TotalDeduction;
                    JobPosTotalNet = Totbranch.TotalNet;
                }

                JobPosTotalEmployee = OOSalList.Count();


                // LocTotalEmployee = TotEmp;

                //LocTotalEarning = db.SalaryT.Include(e => e.Geostruct).Where(e => e.Geostruct.Location_Id == OLocation_Id && e.PayMonth == PayMonth).AsNoTracking().AsParallel().Sum(e => e.TotalEarning);
                //LocTotalDeduction = db.SalaryT.Include(e => e.Geostruct).Where(e => e.Geostruct.Location_Id == OLocation_Id && e.PayMonth == PayMonth).AsNoTracking().AsParallel().Sum(e => e.TotalDeduction);
                //LocTotalNet = db.SalaryT.Include(e => e.Geostruct).Where(e => e.Geostruct.Location_Id == OLocation_Id && e.PayMonth == PayMonth).AsNoTracking().AsParallel().Sum(e => e.TotalNet);
                // LocTotalEmployee = db.SalaryT.Include(e => e.Geostruct).Where(e => e.Geostruct.Location_Id == OLocation_Id && e.PayMonth == PayMonth).AsNoTracking().Count();
                //  }
                //if (JobPos_Id != 0)
                //{
                //    OSalList = db.SalaryT.Where(e => e.FuncStruct_Id == JobPos_Id && e.PayMonth == PayMonth).OrderBy(e => e.Id).AsNoTracking().AsParallel().ToList();
                //    JobPosTotalEarning = db.SalaryT.Where(e => e.FuncStruct_Id == JobPos_Id && e.PayMonth == PayMonth).OrderBy(e => e.Id).AsNoTracking().AsParallel().Sum(e => e.TotalEarning);
                //    JobPosTotalDeduction = db.SalaryT.Where(e => e.FuncStruct_Id == JobPos_Id && e.PayMonth == PayMonth).OrderBy(e => e.Id).AsNoTracking().AsParallel().Sum(e => e.TotalDeduction);
                //    JobPosTotalNet = db.SalaryT.Where(e => e.FuncStruct_Id == JobPos_Id && e.PayMonth == PayMonth).OrderBy(e => e.Id).AsNoTracking().AsParallel().Sum(e => e.TotalNet);
                //    JobPosTotalEmployee = db.SalaryT.Where(e => e.FuncStruct_Id == JobPos_Id && e.PayMonth == PayMonth).OrderBy(e => e.Id).AsNoTracking().AsParallel().Count();
                //}

                List<SalEarnDedT> OSSalEarnDedT = new List<SalEarnDedT>();
                OSSalEarnDedT = db.SalEarnDedT.Where(e => e.Amount != 0 && OOSalList.Contains(e.SalaryT.Id)).AsNoTracking().ToList();
                var Totcomp = OSSalEarnDedT.GroupBy(x => new { x.SalaryHead_Id }).Select(g => new
                {
                    g.Key.SalaryHead_Id,
                    total = g.Sum(x => x.Amount)
                }).ToList();



                //foreach (var item in OSalList)
                //{

                //item.SalEarnDedT = db.SalEarnDedT.Where(e => e.SalaryT_Id == item.Id && e.Amount != 0).OrderBy(e => e.Id).AsNoTracking().AsParallel().ToList();

                //item.Geostruct.Company = item.Geostruct.Company_Id != null ? db.Company.Find(item.Geostruct.Company_Id) : null;
                //item.Geostruct.Location = db.Location.Find(item.Geostruct.Location_Id);
                //if (item.Geostruct.Location != null)
                //{
                //    item.Geostruct.Location.LocationObj = db.LocationObj.Find(item.Geostruct.Location.LocationObj_Id);
                //}
                var JobPosition = db.FuncStruct.Include(e => e.Company)
                    .Include(e => e.JobPosition)

                   .Where(x => x.Company != null && x.JobPosition.Id == JobPos_Id).AsNoTracking().Select(e => e.Id).Distinct().ToList();

                foreach (var item1 in Totcomp)
                {
                    //  List<GeoStruct> GeoLoc = new List<GeoStruct>();





                    Utility.GetJobPosBrSummaryClass SalData = new Utility.GetJobPosBrSummaryClass();
                    //var salcode = db.SalaryHead.Include(e=>e.InPayslip==true).Find(item1.SalaryHead_Id);
                    var salcode = db.SalaryHead.Find(item1.SalaryHead_Id);
                    if (salcode.InPayslip == true)
                    {
                        int? typeid = db.SalaryHead.Where(e => e.Id == item1.SalaryHead_Id).FirstOrDefault().Type_Id;

                        var type = db.LookupValue.Where(e => e.Id == typeid).FirstOrDefault().LookupVal;


                        //  Utility.GetJobPosBrSummaryClass SalData = new Utility.GetJobPosBrSummaryClass();
                        if (JobPosition != null && JobPosition.Count != 0)
                        {

                            foreach (var ca in JobPosition)
                            {
                                var comp = db.FuncStruct.Include(x => x.Company).Include(x => x.JobPosition)

                                   .Where(x => x.Id == ca).FirstOrDefault();


                                SalData.Company_Code = comp.Company != null ? comp.Company.Code : "";
                                SalData.Company_Name = comp.Company != null ? comp.Company.Name : "";
                                SalData.FuncStruct_Id = ca.ToString();
                                SalData.JobPositionCode = comp.JobPosition != null ? comp.JobPosition.JobPositionCode : "";
                                SalData.JobPositionDesc = comp.JobPosition != null ? comp.JobPosition.JobPositionDesc : "";

                                break;
                            }

                        }


                        //SalData.Company_Code = item.Geostruct.Company != null ? item.Geostruct.Company.Code : "";
                        //SalData.Company_Name = item.Geostruct.Company != null ? item.Geostruct.Company.Name : "";

                        SalData.EarnAmount = item1.total.ToString();
                        SalData.SalHeadCode = salcode.Code;
                        SalData.EarnHead = salcode.Name;

                        //SalData.Geostruct_Id = item.Geostruct_Id.ToString();

                        SalData.InPayslip = salcode.InPayslip == false ? "False" : "True";

                        //SalData.LocCode = item.Geostruct != null && item.Geostruct.Location != null && item.Geostruct.Location.LocationObj != null ? item.Geostruct.Location.LocationObj.LocCode : "";
                        //SalData.LocDesc = item.Geostruct != null && item.Geostruct.Location != null && item.Geostruct.Location.LocationObj != null ? item.Geostruct.Location.LocationObj.LocDesc : "";
                        //SalData.LookupVal = item1.SalaryHead.Type != null ? item1.SalaryHead.Type.LookupVal.ToString() : "";
                        SalData.PayMonth = PayMonth.ToString();
                        SalData.LookupVal = type;
                        SalData.SalHead_FullDetails = salcode.FullDetails.ToString();
                        SalData.StdAmount = "";
                        SalData.JobPosTotalDeduction = "";
                        SalData.JobPosTotalEarning = "";
                        SalData.JobPosTotalNet = "";
                        SalData.JobPosTotalEmployee = "";

                        //SalData.StdAmount = item1.StdAmount.ToString();
                        SalData.JobPosTotalDeduction = JobPosTotalDeduction.ToString();
                        SalData.JobPosTotalEarning = JobPosTotalEarning.ToString();
                        SalData.JobPosTotalNet = JobPosTotalNet.ToString();
                        SalData.JobPosTotalEmployee = JobPosTotalEmployee.ToString();
                        //SalData.LocTotalDeduction = LocTotalDeduction.ToString();
                        //SalData.LocTotalEarning = LocTotalEarning.ToString();
                        //SalData.LocTotalNet = LocTotalNet.ToString();
                        //SalData.LocTotalEmployee = LocTotalEmployee.ToString();
                        OsalDataList.Add(SalData);
                    }
                }

                //}




                return OsalDataList;

            }
        }
        public static List<Utility.GetJobPosBrSummaryClass> GetJobPosBranchSumDataJobbranch(int? OLocation_Id, string PayMonth, int? JobPos_Id)
        {
            using (DataBaseContext db = new DataBaseContext())
            {

                List<Utility.GetJobPosBrSummaryClass> OsalDataList = new List<Models.Utility.GetJobPosBrSummaryClass>();
                double LocTotalEarning = 0, LocTotalDeduction = 0, LocTotalNet = 0, LocTotalEmployee = 0;
                double JobPosTotalEarning = 0, JobPosTotalDeduction = 0, JobPosTotalNet = 0, JobPosTotalEmployee = 0;

                List<SalaryT> OSalList = new List<SalaryT>();
                //if (OLocation_Id != 0)
                //{
                OSalList = db.SalaryT.Include(e => e.Geostruct).Include(e => e.FuncStruct).Where(e => e.FuncStruct.JobPosition_Id == JobPos_Id && e.Geostruct.Location_Id == OLocation_Id && e.PayMonth == PayMonth).AsNoTracking().ToList();
                List<Int32> OOSalList = db.SalaryT.Include(e => e.Geostruct).Include(e => e.FuncStruct).Where(e => e.FuncStruct.JobPosition_Id == JobPos_Id && e.Geostruct.Location_Id == OLocation_Id && e.PayMonth == PayMonth).AsNoTracking().Select(e => e.Id).ToList();

                var Totbranch = OSalList.GroupBy(x => new { x.PayMonth }).Select(g => new
                {
                    g.Key.PayMonth,
                    TotalEarning = g.Sum(x => x.TotalEarning),
                    TotalDeduction = g.Sum(x => x.TotalDeduction),
                    TotalNet = g.Sum(x => x.TotalNet),
                    //TotalEmployee = g.Count(y => y.EmployeePayroll.Id),

                }).FirstOrDefault();
                if (Totbranch != null)
                {
                    JobPosTotalEarning = Totbranch.TotalEarning;
                    JobPosTotalDeduction = Totbranch.TotalDeduction;
                    JobPosTotalNet = Totbranch.TotalNet;
                }

                JobPosTotalEmployee = OOSalList.Count();


                // LocTotalEmployee = TotEmp;

                //LocTotalEarning = db.SalaryT.Include(e => e.Geostruct).Where(e => e.Geostruct.Location_Id == OLocation_Id && e.PayMonth == PayMonth).AsNoTracking().AsParallel().Sum(e => e.TotalEarning);
                //LocTotalDeduction = db.SalaryT.Include(e => e.Geostruct).Where(e => e.Geostruct.Location_Id == OLocation_Id && e.PayMonth == PayMonth).AsNoTracking().AsParallel().Sum(e => e.TotalDeduction);
                //LocTotalNet = db.SalaryT.Include(e => e.Geostruct).Where(e => e.Geostruct.Location_Id == OLocation_Id && e.PayMonth == PayMonth).AsNoTracking().AsParallel().Sum(e => e.TotalNet);
                // LocTotalEmployee = db.SalaryT.Include(e => e.Geostruct).Where(e => e.Geostruct.Location_Id == OLocation_Id && e.PayMonth == PayMonth).AsNoTracking().Count();
                //  }
                //if (JobPos_Id != 0)
                //{
                //    OSalList = db.SalaryT.Where(e => e.FuncStruct_Id == JobPos_Id && e.PayMonth == PayMonth).OrderBy(e => e.Id).AsNoTracking().AsParallel().ToList();
                //    JobPosTotalEarning = db.SalaryT.Where(e => e.FuncStruct_Id == JobPos_Id && e.PayMonth == PayMonth).OrderBy(e => e.Id).AsNoTracking().AsParallel().Sum(e => e.TotalEarning);
                //    JobPosTotalDeduction = db.SalaryT.Where(e => e.FuncStruct_Id == JobPos_Id && e.PayMonth == PayMonth).OrderBy(e => e.Id).AsNoTracking().AsParallel().Sum(e => e.TotalDeduction);
                //    JobPosTotalNet = db.SalaryT.Where(e => e.FuncStruct_Id == JobPos_Id && e.PayMonth == PayMonth).OrderBy(e => e.Id).AsNoTracking().AsParallel().Sum(e => e.TotalNet);
                //    JobPosTotalEmployee = db.SalaryT.Where(e => e.FuncStruct_Id == JobPos_Id && e.PayMonth == PayMonth).OrderBy(e => e.Id).AsNoTracking().AsParallel().Count();
                //}

                List<SalEarnDedT> OSSalEarnDedT = new List<SalEarnDedT>();
                OSSalEarnDedT = db.SalEarnDedT.Where(e => e.Amount != 0 && OOSalList.Contains(e.SalaryT.Id)).AsNoTracking().ToList();
                var Totcomp = OSSalEarnDedT.GroupBy(x => new { x.SalaryHead_Id }).Select(g => new
                {
                    g.Key.SalaryHead_Id,
                    total = g.Sum(x => x.Amount)
                }).ToList();



                //foreach (var item in OSalList)
                //{

                //item.SalEarnDedT = db.SalEarnDedT.Where(e => e.SalaryT_Id == item.Id && e.Amount != 0).OrderBy(e => e.Id).AsNoTracking().AsParallel().ToList();

                //item.Geostruct.Company = item.Geostruct.Company_Id != null ? db.Company.Find(item.Geostruct.Company_Id) : null;
                //item.Geostruct.Location = db.Location.Find(item.Geostruct.Location_Id);
                //if (item.Geostruct.Location != null)
                //{
                //    item.Geostruct.Location.LocationObj = db.LocationObj.Find(item.Geostruct.Location.LocationObj_Id);
                //}
                var Loc = db.GeoStruct.Include(e => e.Company).Include(e => e.Location)
                .Where(x => x.Company != null && x.Location.Id == OLocation_Id).AsNoTracking().Select(e => e.Id).Distinct().ToList();

                var JobPosition = db.FuncStruct.Include(e => e.Company)
                    .Include(e => e.JobPosition)

                   .Where(x => x.Company != null && x.JobPosition.Id == JobPos_Id).AsNoTracking().Select(e => e.Id).Distinct().ToList();

                foreach (var item1 in Totcomp)
                {
                    //  List<GeoStruct> GeoLoc = new List<GeoStruct>();





                    Utility.GetJobPosBrSummaryClass SalData = new Utility.GetJobPosBrSummaryClass();
                    //var salcode = db.SalaryHead.Include(e=>e.InPayslip==true).Find(item1.SalaryHead_Id);
                    var salcode = db.SalaryHead.Find(item1.SalaryHead_Id);
                    if (salcode.InPayslip == true)
                    {
                        int? typeid = db.SalaryHead.Where(e => e.Id == item1.SalaryHead_Id).FirstOrDefault().Type_Id;

                        var type = db.LookupValue.Where(e => e.Id == typeid).FirstOrDefault().LookupVal;



                        if (Loc != null && Loc.Count != 0)
                        {
                            foreach (var ca in Loc)
                            {
                                var comploc = db.GeoStruct.Include(x => x.Company).Include(x => x.Location).Include(x => x.Location.LocationObj)
                                 .Where(x => x.Id == ca).FirstOrDefault();

                                if (JobPosition != null && JobPosition.Count != 0)
                                {

                                    foreach (var ca1 in JobPosition)
                                    {
                                        var comp = db.FuncStruct.Include(x => x.Company).Include(x => x.JobPosition)

                                           .Where(x => x.Id == ca1).FirstOrDefault();


                                        SalData.Company_Code = comp.Company != null ? comp.Company.Code : "";
                                        SalData.Company_Name = comp.Company != null ? comp.Company.Name : "";
                                        SalData.FuncStruct_Id = ca1.ToString();
                                        SalData.JobPositionCode = comp.JobPosition != null ? comp.JobPosition.JobPositionCode : "";
                                        SalData.JobPositionDesc = comp.JobPosition != null ? comp.JobPosition.JobPositionDesc : "";
                                        SalData.Geostruct_Id = ca.ToString();
                                        SalData.LocCode = comploc.Location != null && comploc.Location.LocationObj != null ? comploc.Location.LocationObj.LocCode : "";
                                        SalData.LocDesc = comploc.Location != null && comploc.Location.LocationObj != null ? comploc.Location.LocationObj.LocDesc : "";

                                        break;
                                    }


                                }
                            }
                        }


                        //  Utility.GetJobPosBrSummaryClass SalData = new Utility.GetJobPosBrSummaryClass();



                        //SalData.Company_Code = item.Geostruct.Company != null ? item.Geostruct.Company.Code : "";
                        //SalData.Company_Name = item.Geostruct.Company != null ? item.Geostruct.Company.Name : "";

                        SalData.EarnAmount = item1.total.ToString();
                        SalData.SalHeadCode = salcode.Code;
                        SalData.EarnHead = salcode.Name;

                        //SalData.Geostruct_Id = item.Geostruct_Id.ToString();

                        SalData.InPayslip = salcode.InPayslip == false ? "False" : "True";

                        //SalData.LocCode = item.Geostruct != null && item.Geostruct.Location != null && item.Geostruct.Location.LocationObj != null ? item.Geostruct.Location.LocationObj.LocCode : "";
                        //SalData.LocDesc = item.Geostruct != null && item.Geostruct.Location != null && item.Geostruct.Location.LocationObj != null ? item.Geostruct.Location.LocationObj.LocDesc : "";
                        //SalData.LookupVal = item1.SalaryHead.Type != null ? item1.SalaryHead.Type.LookupVal.ToString() : "";
                        SalData.PayMonth = PayMonth.ToString();
                        SalData.LookupVal = type;
                        SalData.SalHead_FullDetails = salcode.FullDetails.ToString();
                        SalData.StdAmount = "";
                        SalData.JobPosTotalDeduction = "";
                        SalData.JobPosTotalEarning = "";
                        SalData.JobPosTotalNet = "";
                        SalData.JobPosTotalEmployee = "";

                        //SalData.StdAmount = item1.StdAmount.ToString();
                        SalData.JobPosTotalDeduction = JobPosTotalDeduction.ToString();
                        SalData.JobPosTotalEarning = JobPosTotalEarning.ToString();
                        SalData.JobPosTotalNet = JobPosTotalNet.ToString();
                        SalData.JobPosTotalEmployee = JobPosTotalEmployee.ToString();
                        //SalData.LocTotalDeduction = LocTotalDeduction.ToString();
                        //SalData.LocTotalEarning = LocTotalEarning.ToString();
                        //SalData.LocTotalNet = LocTotalNet.ToString();
                        //SalData.LocTotalEmployee = LocTotalEmployee.ToString();
                        OsalDataList.Add(SalData);
                    }
                }

                //}




                return OsalDataList;

            }
        }
        public static List<Utility.GetJobPosBrSummaryClass> GetJobPosBranchSumData(int? OLocation_Id, string PayMonth, int? JobPos_Id)
        {
            using (DataBaseContext db = new DataBaseContext())
            {

                List<Utility.GetJobPosBrSummaryClass> OsalDataList = new List<Models.Utility.GetJobPosBrSummaryClass>();
                double LocTotalEarning = 0, LocTotalDeduction = 0, LocTotalNet = 0, LocTotalEmployee = 0, LocPfBankContribution = 0, LocPfPensionContribution = 0, LocReliefFundBankContri = 0, LocSWFContribution = 0, LocTotalBANKContri = 0;
                double JobPosTotalEarning = 0, JobPosTotalDeduction = 0, JobPosTotalNet = 0, JobPosTotalEmployee = 0;

                List<SalaryT> OSalList = new List<SalaryT>();
                //if (OLocation_Id != 0)
                //{
                OSalList = db.SalaryT.Include(e => e.PFECRR).Include(e => e.Geostruct).Where(e => e.Geostruct.Location_Id == OLocation_Id && e.PayMonth == PayMonth).AsNoTracking().ToList();
                List<Int32> OOSalList = db.SalaryT.Where(e => e.Geostruct.Location_Id == OLocation_Id && e.PayMonth == PayMonth).AsNoTracking().Select(e => e.Id).ToList();

                var Totbranch = OSalList.GroupBy(x => new { x.PayMonth }).Select(g => new
                {
                    g.Key.PayMonth,
                    TotalEarning = g.Sum(x => x.TotalEarning),
                    TotalDeduction = g.Sum(x => x.TotalDeduction),
                    TotalNet = g.Sum(x => x.TotalNet),
                    //TotalEmployee = g.Count(y => y.EmployeePayroll.Id),

                }).FirstOrDefault();
                if (Totbranch != null)
                {
                    LocTotalEarning = Totbranch.TotalEarning;
                    LocTotalDeduction = Totbranch.TotalDeduction;
                    LocTotalNet = Totbranch.TotalNet;
                }

                LocTotalEmployee = OOSalList.Count();

                LocPfBankContribution = OSalList.Where(e => e.PFECRR_Id != null).Sum(e => e.PFECRR.ER_Share);
                LocPfPensionContribution = OSalList.Where(e => e.PFECRR_Id != null).Sum(e => e.PFECRR.EPS_Share);

                List<int?> lWfids = OSalList.Where(e => e.LWFTransT_Id != null).Select(s => s.LWFTransT_Id).ToList();
                if (lWfids.Count() > 0)
                {
                    double LwfTranst = db.LWFTransT.Where(e => lWfids.Contains(e.Id)).Select(a => a.CompAmt).Sum();
                    LocSWFContribution = LwfTranst;
                }

                // LocTotalEmployee = TotEmp;

                //LocTotalEarning = db.SalaryT.Include(e => e.Geostruct).Where(e => e.Geostruct.Location_Id == OLocation_Id && e.PayMonth == PayMonth).AsNoTracking().AsParallel().Sum(e => e.TotalEarning);
                //LocTotalDeduction = db.SalaryT.Include(e => e.Geostruct).Where(e => e.Geostruct.Location_Id == OLocation_Id && e.PayMonth == PayMonth).AsNoTracking().AsParallel().Sum(e => e.TotalDeduction);
                //LocTotalNet = db.SalaryT.Include(e => e.Geostruct).Where(e => e.Geostruct.Location_Id == OLocation_Id && e.PayMonth == PayMonth).AsNoTracking().AsParallel().Sum(e => e.TotalNet);
                // LocTotalEmployee = db.SalaryT.Include(e => e.Geostruct).Where(e => e.Geostruct.Location_Id == OLocation_Id && e.PayMonth == PayMonth).AsNoTracking().Count();
                //  }
                //if (JobPos_Id != 0)
                //{
                //    OSalList = db.SalaryT.Where(e => e.FuncStruct_Id == JobPos_Id && e.PayMonth == PayMonth).OrderBy(e => e.Id).AsNoTracking().AsParallel().ToList();
                //    JobPosTotalEarning = db.SalaryT.Where(e => e.FuncStruct_Id == JobPos_Id && e.PayMonth == PayMonth).OrderBy(e => e.Id).AsNoTracking().AsParallel().Sum(e => e.TotalEarning);
                //    JobPosTotalDeduction = db.SalaryT.Where(e => e.FuncStruct_Id == JobPos_Id && e.PayMonth == PayMonth).OrderBy(e => e.Id).AsNoTracking().AsParallel().Sum(e => e.TotalDeduction);
                //    JobPosTotalNet = db.SalaryT.Where(e => e.FuncStruct_Id == JobPos_Id && e.PayMonth == PayMonth).OrderBy(e => e.Id).AsNoTracking().AsParallel().Sum(e => e.TotalNet);
                //    JobPosTotalEmployee = db.SalaryT.Where(e => e.FuncStruct_Id == JobPos_Id && e.PayMonth == PayMonth).OrderBy(e => e.Id).AsNoTracking().AsParallel().Count();
                //}

                List<SalEarnDedT> OSSalEarnDedT = new List<SalEarnDedT>();
                OSSalEarnDedT = db.SalEarnDedT.Where(e => e.Amount != 0 && OOSalList.Contains(e.SalaryT.Id)).AsNoTracking().ToList();
                var Totcomp = OSSalEarnDedT.GroupBy(x => new { x.SalaryHead_Id }).Select(g => new
                {
                    g.Key.SalaryHead_Id,
                    total = g.Sum(x => x.Amount)
                }).ToList();

                foreach (var RELIEF in Totcomp)
                {
                    //  List<GeoStruct> GeoLoc = new List<GeoStruct>();

                    string Sal_headName = db.SalaryHead.Where(e => e.Id == RELIEF.SalaryHead_Id).FirstOrDefault().Name.ToUpper().ToString();
                    if (Sal_headName == "STAFF RELIEF FUND BANK")
                    {
                        LocReliefFundBankContri = RELIEF.total;

                    }
                }

                //foreach (var item in OSalList)
                //{

                //item.SalEarnDedT = db.SalEarnDedT.Where(e => e.SalaryT_Id == item.Id && e.Amount != 0).OrderBy(e => e.Id).AsNoTracking().AsParallel().ToList();

                //item.Geostruct.Company = item.Geostruct.Company_Id != null ? db.Company.Find(item.Geostruct.Company_Id) : null;
                //item.Geostruct.Location = db.Location.Find(item.Geostruct.Location_Id);
                //if (item.Geostruct.Location != null)
                //{
                //    item.Geostruct.Location.LocationObj = db.LocationObj.Find(item.Geostruct.Location.LocationObj_Id);
                //}
                var GeoLoc = db.GeoStruct.Include(e => e.Company)
                    .Include(e => e.Location)
                 .Include(e => e.Location.LocationObj)
                   .Where(x => x.Company != null && x.Location.Id == OLocation_Id).AsNoTracking().Select(e => e.Id).Distinct().ToList();

                foreach (var item1 in Totcomp)
                {
                    //  List<GeoStruct> GeoLoc = new List<GeoStruct>();

                    //string Sal_headName = db.SalaryHead.Where(e => e.Id == item1.SalaryHead_Id).FirstOrDefault().Name.ToUpper().ToString();
                    //if (Sal_headName == "STAFF RELIEF FUND BANK")
                    //{
                    //    LocReliefFundBankContri = item1.total;

                    //}
                    LocTotalBANKContri = LocPfBankContribution + LocPfPensionContribution + LocSWFContribution + LocReliefFundBankContri + LocTotalEarning;

                    Utility.GetJobPosBrSummaryClass SalData = new Utility.GetJobPosBrSummaryClass();
                    //var salcode = db.SalaryHead.Include(e=>e.InPayslip==true).Find(item1.SalaryHead_Id);
                    var salcode = db.SalaryHead.Find(item1.SalaryHead_Id);
                    if (salcode.InPayslip == true)
                    {
                        int? typeid = db.SalaryHead.Where(e => e.Id == item1.SalaryHead_Id).FirstOrDefault().Type_Id;

                        var type = db.LookupValue.Where(e => e.Id == typeid).FirstOrDefault().LookupVal;


                        //  Utility.GetJobPosBrSummaryClass SalData = new Utility.GetJobPosBrSummaryClass();
                        if (GeoLoc != null && GeoLoc.Count != 0)
                        {

                            foreach (var ca in GeoLoc)
                            {
                                var comp = db.GeoStruct.Include(x => x.Company).Include(x => x.Location)
                                    .Include(x => x.Location.LocationObj).Include(x => x.Location.BusinessCategory)
                                   .Where(x => x.Id == ca).FirstOrDefault();


                                SalData.Company_Code = comp.Company != null ? comp.Company.Code : "";
                                SalData.Company_Name = comp.Company != null ? comp.Company.Name : "";
                                SalData.Geostruct_Id = ca.ToString();
                                SalData.LocCode = comp.Location != null && comp.Location.LocationObj != null ? comp.Location.LocationObj.LocCode : "";
                                SalData.LocDesc = comp.Location != null && comp.Location.LocationObj != null ? comp.Location.LocationObj.LocDesc : "";
                                SalData.BusinessCategory = comp.Location != null && comp.Location.BusinessCategory != null ? comp.Location.BusinessCategory.LookupVal : "";
                                break;
                            }

                        }


                        //SalData.Company_Code = item.Geostruct.Company != null ? item.Geostruct.Company.Code : "";
                        //SalData.Company_Name = item.Geostruct.Company != null ? item.Geostruct.Company.Name : "";

                        SalData.EarnAmount = item1.total.ToString();
                        SalData.SalHeadCode = salcode.Code;
                        SalData.EarnHead = salcode.Name;
                        SalData.SequenceNo = Convert.ToString(salcode.SeqNo);

                        //SalData.Geostruct_Id = item.Geostruct_Id.ToString();

                        SalData.InPayslip = salcode.InPayslip == false ? "False" : "True";

                        //SalData.LocCode = item.Geostruct != null && item.Geostruct.Location != null && item.Geostruct.Location.LocationObj != null ? item.Geostruct.Location.LocationObj.LocCode : "";
                        //SalData.LocDesc = item.Geostruct != null && item.Geostruct.Location != null && item.Geostruct.Location.LocationObj != null ? item.Geostruct.Location.LocationObj.LocDesc : "";
                        //SalData.LookupVal = item1.SalaryHead.Type != null ? item1.SalaryHead.Type.LookupVal.ToString() : "";
                        SalData.PayMonth = PayMonth.ToString();
                        SalData.LookupVal = type;
                        SalData.SalHead_FullDetails = salcode.FullDetails.ToString();
                        SalData.StdAmount = "";
                        SalData.JobPosTotalDeduction = "";
                        SalData.JobPosTotalEarning = "";
                        SalData.JobPosTotalNet = "";
                        SalData.JobPosTotalEmployee = "";

                        //SalData.StdAmount = item1.StdAmount.ToString();
                        //SalData.JobPosTotalDeduction = JobPosTotalDeduction.ToString();
                        //SalData.JobPosTotalEarning = JobPosTotalEarning.ToString();
                        //SalData.JobPosTotalNet = JobPosTotalNet.ToString();
                        //SalData.JobPosTotalEmployee = JobPosTotalEmployee.ToString();
                        SalData.LocTotalDeduction = LocTotalDeduction.ToString();
                        SalData.LocTotalEarning = LocTotalEarning.ToString();
                        SalData.LocTotalNet = LocTotalNet.ToString();
                        SalData.LocTotalEmployee = LocTotalEmployee.ToString();

                        SalData.TotalPFBankContribution = Convert.ToString(LocPfBankContribution);
                        SalData.TotalPfPensionAmount = Convert.ToString(LocPfPensionContribution);
                        SalData.TotalReliefFundBankContribution = Convert.ToString(LocReliefFundBankContri);
                        SalData.TotalSWFBankContribution = Convert.ToString(LocSWFContribution);
                        SalData.TotalBankCONTRIBUTION = Convert.ToString(LocTotalBANKContri);

                        OsalDataList.Add(SalData);
                    }

                    //SalData.TotalPFBankContribution = Convert.ToString(LocPfBankContribution);
                    //SalData.TotalPfPensionAmount = Convert.ToString(LocPfPensionContribution);
                    //SalData.TotalReliefFundBankContribution = Convert.ToString(LocReliefFundBankContri);
                    //SalData.TotalSWFBankContribution = Convert.ToString(LocSWFContribution);
                    //SalData.TotalBankCONTRIBUTION = Convert.ToString(LocTotalBANKContri);

                    //OsalDataList.Add(SalData);

                }

                //}




                return OsalDataList;

            }
        }
        public static List<Utility.GetJobPosBrSummaryClass> GetJobPosBranchSumDatapaybank(int? OLocation_Id, string PayMonth, int? Paybank_id)
        {
            using (DataBaseContext db = new DataBaseContext())
            {

                List<Utility.GetJobPosBrSummaryClass> OsalDataList = new List<Models.Utility.GetJobPosBrSummaryClass>();
                double LocTotalEarning = 0, LocTotalDeduction = 0, LocTotalNet = 0, LocTotalEmployee = 0, LocPfBankContribution = 0, LocPfPensionContribution = 0, LocReliefFundBankContri = 0, LocSWFContribution = 0, LocTotalBANKContri = 0;
                double JobPosTotalEarning = 0, JobPosTotalDeduction = 0, JobPosTotalNet = 0, JobPosTotalEmployee = 0;

                List<SalaryT> OSalList = new List<SalaryT>();
                //if (OLocation_Id != 0)
                //{
                //List<EmployeePayroll> OEmpPayrollIdListP = new List<EmployeePayroll>();
                List<int> ids = null;
                ids = db.EmployeePayroll
                    .Include(e => e.Employee)
                    .Include(e => e.Employee.EmpOffInfo)
                     .Include(e => e.Employee.EmpOffInfo.Bank)
                     .Where(e => e.Employee.EmpOffInfo.Bank_Id == Paybank_id).Select(e => e.Id)
                     .ToList();



                OSalList = db.SalaryT.Include(e => e.PFECRR).Include(e => e.EmployeePayroll).Where(e => e.Geostruct.Location_Id == OLocation_Id && e.PayMonth == PayMonth && ids.Contains(e.EmployeePayroll.Id)).AsNoTracking().ToList();
                List<Int32> OOSalList = db.SalaryT.Where(e => e.Geostruct.Location_Id == OLocation_Id && e.PayMonth == PayMonth && ids.Contains(e.EmployeePayroll.Id)).AsNoTracking().Select(e => e.Id).ToList();

                var Totbranch = OSalList.GroupBy(x => new { x.PayMonth }).Select(g => new
                {
                    g.Key.PayMonth,
                    TotalEarning = g.Sum(x => x.TotalEarning),
                    TotalDeduction = g.Sum(x => x.TotalDeduction),
                    TotalNet = g.Sum(x => x.TotalNet),
                    //TotalEmployee = g.Count(y => y.EmployeePayroll.Id),

                }).FirstOrDefault();
                if (Totbranch != null)
                {
                    LocTotalEarning = Totbranch.TotalEarning;
                    LocTotalDeduction = Totbranch.TotalDeduction;
                    LocTotalNet = Totbranch.TotalNet;
                }

                LocTotalEmployee = OOSalList.Count();


                LocPfBankContribution = OSalList.Where(e => e.PFECRR_Id != null).Sum(e => e.PFECRR.ER_Share);
                LocPfPensionContribution = OSalList.Where(e => e.PFECRR_Id != null).Sum(e => e.PFECRR.EPS_Share);

                List<int?> lWfids = OSalList.Where(e => e.LWFTransT_Id != null).Select(s => s.LWFTransT_Id).ToList();
                if (lWfids.Count() > 0)
                {
                    double LwfTranst = db.LWFTransT.Where(e => lWfids.Contains(e.Id)).Select(a => a.CompAmt).Sum();
                    LocSWFContribution = LwfTranst;
                }
                // LocTotalEmployee = TotEmp;

                //LocTotalEarning = db.SalaryT.Include(e => e.Geostruct).Where(e => e.Geostruct.Location_Id == OLocation_Id && e.PayMonth == PayMonth).AsNoTracking().AsParallel().Sum(e => e.TotalEarning);
                //LocTotalDeduction = db.SalaryT.Include(e => e.Geostruct).Where(e => e.Geostruct.Location_Id == OLocation_Id && e.PayMonth == PayMonth).AsNoTracking().AsParallel().Sum(e => e.TotalDeduction);
                //LocTotalNet = db.SalaryT.Include(e => e.Geostruct).Where(e => e.Geostruct.Location_Id == OLocation_Id && e.PayMonth == PayMonth).AsNoTracking().AsParallel().Sum(e => e.TotalNet);
                // LocTotalEmployee = db.SalaryT.Include(e => e.Geostruct).Where(e => e.Geostruct.Location_Id == OLocation_Id && e.PayMonth == PayMonth).AsNoTracking().Count();
                //  }
                //if (JobPos_Id != 0)
                //{
                //    OSalList = db.SalaryT.Where(e => e.FuncStruct_Id == JobPos_Id && e.PayMonth == PayMonth).OrderBy(e => e.Id).AsNoTracking().AsParallel().ToList();
                //    JobPosTotalEarning = db.SalaryT.Where(e => e.FuncStruct_Id == JobPos_Id && e.PayMonth == PayMonth).OrderBy(e => e.Id).AsNoTracking().AsParallel().Sum(e => e.TotalEarning);
                //    JobPosTotalDeduction = db.SalaryT.Where(e => e.FuncStruct_Id == JobPos_Id && e.PayMonth == PayMonth).OrderBy(e => e.Id).AsNoTracking().AsParallel().Sum(e => e.TotalDeduction);
                //    JobPosTotalNet = db.SalaryT.Where(e => e.FuncStruct_Id == JobPos_Id && e.PayMonth == PayMonth).OrderBy(e => e.Id).AsNoTracking().AsParallel().Sum(e => e.TotalNet);
                //    JobPosTotalEmployee = db.SalaryT.Where(e => e.FuncStruct_Id == JobPos_Id && e.PayMonth == PayMonth).OrderBy(e => e.Id).AsNoTracking().AsParallel().Count();
                //}

                List<SalEarnDedT> OSSalEarnDedT = new List<SalEarnDedT>();
                OSSalEarnDedT = db.SalEarnDedT.Where(e => e.Amount != 0 && OOSalList.Contains(e.SalaryT.Id)).AsNoTracking().ToList();
                var Totcomp = OSSalEarnDedT.GroupBy(x => new { x.SalaryHead_Id }).Select(g => new
                {
                    g.Key.SalaryHead_Id,
                    total = g.Sum(x => x.Amount)
                }).ToList();

                foreach (var RELIEF in Totcomp)
                {
                    //  List<GeoStruct> GeoLoc = new List<GeoStruct>();

                    string Sal_headName = db.SalaryHead.Where(e => e.Id == RELIEF.SalaryHead_Id).FirstOrDefault().Name.ToUpper().ToString();
                    if (Sal_headName == "STAFF RELIEF FUND BANK")
                    {
                        LocReliefFundBankContri = RELIEF.total;

                    }
                }

                //foreach (var item in OSalList)
                //{

                //item.SalEarnDedT = db.SalEarnDedT.Where(e => e.SalaryT_Id == item.Id && e.Amount != 0).OrderBy(e => e.Id).AsNoTracking().AsParallel().ToList();

                //item.Geostruct.Company = item.Geostruct.Company_Id != null ? db.Company.Find(item.Geostruct.Company_Id) : null;
                //item.Geostruct.Location = db.Location.Find(item.Geostruct.Location_Id);
                //if (item.Geostruct.Location != null)
                //{
                //    item.Geostruct.Location.LocationObj = db.LocationObj.Find(item.Geostruct.Location.LocationObj_Id);
                //}
                var GeoLoc = db.GeoStruct.Include(e => e.Company)
                    .Include(e => e.Location)
                 .Include(e => e.Location.LocationObj)
                   .Where(x => x.Company != null && x.Location.Id == OLocation_Id).AsNoTracking().Select(e => e.Id).Distinct().ToList();

                foreach (var item1 in Totcomp)
                {
                    //  List<GeoStruct> GeoLoc = new List<GeoStruct>();

                    //string Sal_headName = db.SalaryHead.Where(e => e.Id == item1.SalaryHead_Id).FirstOrDefault().Name.ToUpper().ToString();
                    //if (Sal_headName == "STAFF RELIEF FUND BANK")
                    //{
                    //    LocReliefFundBankContri = item1.total;

                    //}
                    LocTotalBANKContri = LocPfBankContribution + LocPfPensionContribution + LocSWFContribution + LocReliefFundBankContri + LocTotalEarning;

                    Utility.GetJobPosBrSummaryClass SalData = new Utility.GetJobPosBrSummaryClass();
                    //var salcode = db.SalaryHead.Include(e=>e.InPayslip==true).Find(item1.SalaryHead_Id);
                    var salcode = db.SalaryHead.Find(item1.SalaryHead_Id);
                    if (salcode.InPayslip == true)
                    {
                        int? typeid = db.SalaryHead.Where(e => e.Id == item1.SalaryHead_Id).FirstOrDefault().Type_Id;

                        var type = db.LookupValue.Where(e => e.Id == typeid).FirstOrDefault().LookupVal;


                        //  Utility.GetJobPosBrSummaryClass SalData = new Utility.GetJobPosBrSummaryClass();
                        if (GeoLoc != null && GeoLoc.Count != 0)
                        {

                            foreach (var ca in GeoLoc)
                            {
                                var comp = db.GeoStruct.Include(x => x.Company).Include(x => x.Location)
                                    .Include(x => x.Location.LocationObj).Include(x => x.Location.BusinessCategory)
                                   .Where(x => x.Id == ca).FirstOrDefault();


                                SalData.Company_Code = comp.Company != null ? comp.Company.Code : "";
                                SalData.Company_Name = comp.Company != null ? comp.Company.Name : "";
                                SalData.Geostruct_Id = ca.ToString();
                                SalData.LocCode = comp.Location != null && comp.Location.LocationObj != null ? comp.Location.LocationObj.LocCode : "";
                                SalData.LocDesc = comp.Location != null && comp.Location.LocationObj != null ? comp.Location.LocationObj.LocDesc : "";
                                //   SalData.BusinessCategory = comp.Location != null && comp.Location.BusinessCategory != null ? comp.Location.BusinessCategory.LookupVal : "";
                                SalData.BusinessCategory = db.Bank.Where(e => e.Id == Paybank_id).Select(e => e.Name).FirstOrDefault() != null ? db.Bank.Where(e => e.Id == Paybank_id).Select(e => e.Name).FirstOrDefault() : "";
                                break;
                            }

                        }


                        //SalData.Company_Code = item.Geostruct.Company != null ? item.Geostruct.Company.Code : "";
                        //SalData.Company_Name = item.Geostruct.Company != null ? item.Geostruct.Company.Name : "";

                        SalData.EarnAmount = item1.total.ToString();
                        SalData.SalHeadCode = salcode.Code;
                        SalData.SequenceNo = Convert.ToString(salcode.SeqNo);
                        SalData.EarnHead = salcode.Name;

                        //SalData.Geostruct_Id = item.Geostruct_Id.ToString();

                        SalData.InPayslip = salcode.InPayslip == false ? "False" : "True";

                        //SalData.LocCode = item.Geostruct != null && item.Geostruct.Location != null && item.Geostruct.Location.LocationObj != null ? item.Geostruct.Location.LocationObj.LocCode : "";
                        //SalData.LocDesc = item.Geostruct != null && item.Geostruct.Location != null && item.Geostruct.Location.LocationObj != null ? item.Geostruct.Location.LocationObj.LocDesc : "";
                        //SalData.LookupVal = item1.SalaryHead.Type != null ? item1.SalaryHead.Type.LookupVal.ToString() : "";
                        SalData.PayMonth = PayMonth.ToString();
                        SalData.LookupVal = type;
                        SalData.SalHead_FullDetails = salcode.FullDetails.ToString();
                        SalData.StdAmount = "";
                        SalData.JobPosTotalDeduction = "";
                        SalData.JobPosTotalEarning = "";
                        SalData.JobPosTotalNet = "";
                        SalData.JobPosTotalEmployee = "";

                        //SalData.StdAmount = item1.StdAmount.ToString();
                        //SalData.JobPosTotalDeduction = JobPosTotalDeduction.ToString();
                        //SalData.JobPosTotalEarning = JobPosTotalEarning.ToString();
                        //SalData.JobPosTotalNet = JobPosTotalNet.ToString();
                        //SalData.JobPosTotalEmployee = JobPosTotalEmployee.ToString();
                        SalData.LocTotalDeduction = LocTotalDeduction.ToString();
                        SalData.LocTotalEarning = LocTotalEarning.ToString();
                        SalData.LocTotalNet = LocTotalNet.ToString();
                        SalData.LocTotalEmployee = LocTotalEmployee.ToString();

                        SalData.TotalPFBankContribution = Convert.ToString(LocPfBankContribution);
                        SalData.TotalPfPensionAmount = Convert.ToString(LocPfPensionContribution);
                        SalData.TotalReliefFundBankContribution = Convert.ToString(LocReliefFundBankContri);
                        SalData.TotalSWFBankContribution = Convert.ToString(LocSWFContribution);
                        SalData.TotalBankCONTRIBUTION = Convert.ToString(LocTotalBANKContri);

                        OsalDataList.Add(SalData);
                    }

                    //SalData.TotalPFBankContribution = Convert.ToString(LocPfBankContribution);
                    //SalData.TotalPfPensionAmount = Convert.ToString(LocPfPensionContribution);
                    //SalData.TotalReliefFundBankContribution = Convert.ToString(LocReliefFundBankContri);
                    //SalData.TotalSWFBankContribution = Convert.ToString(LocSWFContribution);
                    //SalData.TotalBankCONTRIBUTION = Convert.ToString(LocTotalBANKContri);

                    //OsalDataList.Add(SalData);
                }

                //}




                return OsalDataList;

            }
        }

        public static List<Utility.GetJobPosBrSummaryClass> GetGrandSumData(string PayMonth, int CompId)
        {
            using (DataBaseContext db = new DataBaseContext())
            {

                List<Utility.GetJobPosBrSummaryClass> OsalDataList = new List<Models.Utility.GetJobPosBrSummaryClass>();
                double LocTotalEarning = 0, LocTotalDeduction = 0, LocTotalNet = 0, LocTotalEmployee = 0, LocPfBankContribution = 0, LocPfPensionContribution = 0, LocReliefFundBankContri = 0, LocSWFContribution = 0, LocTotalBANKContri = 0;
                double JobPosTotalEarning = 0, JobPosTotalDeduction = 0, JobPosTotalNet = 0, JobPosTotalEmployee = 0;

                List<SalaryT> OSalList = new List<SalaryT>();

                OSalList = db.SalaryT.Include(e => e.PFECRR).Where(e => e.PayMonth == PayMonth && e.Geostruct.Company_Id.Value == CompId).OrderBy(e => e.Id).AsNoTracking().AsParallel().ToList();
                List<Int32> OOSalList = db.SalaryT.Where(e => e.PayMonth == PayMonth && e.Geostruct.Company_Id.Value == CompId).AsNoTracking().Select(e => e.Id).ToList();
                LocTotalEarning = OSalList.Sum(e => e.TotalEarning);
                LocTotalDeduction = OSalList.Sum(e => e.TotalDeduction);
                LocTotalNet = OSalList.Sum(e => e.TotalNet);
                LocTotalEmployee = OSalList.Count();

                LocPfBankContribution = OSalList.Where(e => e.PFECRR_Id != null).Sum(e => e.PFECRR.ER_Share);
                LocPfPensionContribution = OSalList.Where(e => e.PFECRR_Id != null).Sum(e => e.PFECRR.EPS_Share);

                List<int?> lWfids = OSalList.Where(e => e.LWFTransT_Id != null).Select(s => s.LWFTransT_Id).ToList();
                if (lWfids.Count() > 0)
                {
                    double LwfTranst = db.LWFTransT.Where(e => lWfids.Contains(e.Id)).Select(a => a.CompAmt).Sum();
                    LocSWFContribution = LwfTranst;
                }



                //foreach (var item in OSalList)
                //{
                List<SalEarnDedT> OSSalEarnDedT = new List<SalEarnDedT>();
                OSSalEarnDedT = db.SalEarnDedT.Where(e => e.Amount != 0 && OOSalList.Contains(e.SalaryT.Id)).AsNoTracking().ToList();
                var Totcomp = OSSalEarnDedT.GroupBy(x => new { x.SalaryHead_Id }).Select(g => new
                {
                    g.Key.SalaryHead_Id,
                    total = g.Sum(x => x.Amount)
                }).ToList();
                foreach (var RELIEF in Totcomp)
                {
                    string Sal_headName = db.SalaryHead.Where(e => e.Id == RELIEF.SalaryHead_Id).FirstOrDefault().Name.ToUpper().ToString();
                    if (Sal_headName == "STAFF RELIEF FUND BANK")
                    {
                        LocReliefFundBankContri = RELIEF.total;

                    }
                }

                foreach (var item in Totcomp)
                {
                    //string Sal_headName = db.SalaryHead.Where(e => e.Id == item.SalaryHead_Id).FirstOrDefault().Name.ToUpper().ToString();
                    //if (Sal_headName == "STAFF RELIEF FUND BANK")
                    //{
                    //    LocReliefFundBankContri = item.total;

                    //}
                    LocTotalBANKContri = LocPfBankContribution + LocPfPensionContribution + LocSWFContribution + LocReliefFundBankContri + LocTotalEarning;
                    Utility.GetJobPosBrSummaryClass SalData = new Utility.GetJobPosBrSummaryClass();
                    //var salcode = db.SalaryHead.Include(e=>e.InPayslip==true).Find(item.SalaryHead_Id);
                    var salcode = db.SalaryHead.Find(item.SalaryHead_Id);
                    if (salcode.InPayslip == true)
                    {
                        int? typeid = db.SalaryHead.Where(e => e.Id == item.SalaryHead_Id).FirstOrDefault().Type_Id;

                        var type = db.LookupValue.Where(e => e.Id == typeid).FirstOrDefault().LookupVal;

                        SalData.Company_Code = "";
                        SalData.Company_Name = "";
                        SalData.SalHeadCode = "";
                        SalData.SalHeadCode = "";
                        SalData.Geostruct_Id = "";
                        SalData.InPayslip = "";
                        SalData.LocCode = "";
                        SalData.LocDesc = "";
                        SalData.SalHead_FullDetails = "";
                        SalData.StdAmount = "";
                        SalData.JobPosTotalDeduction = "";
                        SalData.JobPosTotalEarning = "";
                        SalData.JobPosTotalNet = "";
                        SalData.JobPosTotalEmployee = "";
                        SalData.PayMonth = PayMonth.ToString();
                        SalData.EarnHead = salcode.Name;
                        SalData.SequenceNo = Convert.ToString(salcode.SeqNo);
                        SalData.LookupVal = type;
                        SalData.EarnAmount = item.total.ToString();
                        SalData.LocTotalDeduction = LocTotalDeduction.ToString();
                        SalData.LocTotalEarning = LocTotalEarning.ToString();
                        SalData.LocTotalNet = LocTotalNet.ToString();
                        SalData.LocTotalEmployee = LocTotalEmployee.ToString();

                        SalData.TotalPFBankContribution = Convert.ToString(LocPfBankContribution);
                        SalData.TotalPfPensionAmount = Convert.ToString(LocPfPensionContribution);
                        SalData.TotalReliefFundBankContribution = Convert.ToString(LocReliefFundBankContri);
                        SalData.TotalSWFBankContribution = Convert.ToString(LocSWFContribution);
                        SalData.TotalBankCONTRIBUTION = Convert.ToString(LocTotalBANKContri);

                        OsalDataList.Add(SalData);
                    }

                    //SalData.TotalPFBankContribution = Convert.ToString(LocPfBankContribution);
                    //SalData.TotalPfPensionAmount = Convert.ToString(LocPfPensionContribution);
                    //SalData.TotalReliefFundBankContribution = Convert.ToString(LocReliefFundBankContri);
                    //SalData.TotalSWFBankContribution = Convert.ToString(LocSWFContribution);
                    //SalData.TotalBankCONTRIBUTION = Convert.ToString(LocTotalBANKContri);

                    //OsalDataList.Add(SalData);
                }

                //item.FuncStruct = db.FuncStruct.Find(item.FuncStruct_Id);
                //item.FuncStruct.Job = db.Job.Find(item.FuncStruct.Job_Id);
                //item.FuncStruct.JobPosition = db.JobPosition.Find(item.FuncStruct.JobPosition_Id);
                //item.Geostruct = db.GeoStruct.Find(item.Geostruct_Id);
                //item.Geostruct.Company = item.Geostruct.Company_Id != null ? db.Company.Find(item.Geostruct.Company_Id) : null;
                //item.Geostruct.Location = db.Location.Find(item.Geostruct.Location_Id);
                //if (item.Geostruct.Location != null)
                //{
                //    item.Geostruct.Location.LocationObj = db.LocationObj.Find(item.Geostruct.Location.LocationObj_Id);
                //}

                //foreach (var item1 in Totcomp)
                //{
                //    item1.SalaryHead = db.SalaryHead.Find(item1.SalaryHead_Id);
                //    item1.SalaryHead.Type = db.LookupValue.Find(item1.SalaryHead.Type_Id);
                //    Utility.GetJobPosBrSummaryClass SalData = new Utility.GetJobPosBrSummaryClass();
                //    SalData.Company_Code = item.Geostruct.Company != null ? item.Geostruct.Company.Code : "";
                //    SalData.Company_Name = item.Geostruct.Company != null ? item.Geostruct.Company.Name : "";

                //    SalData.EarnAmount = item1.Amount.ToString();
                //    SalData.SalHeadCode = item1.SalaryHead.Code;
                //    SalData.EarnHead = item1.SalaryHead.Name;

                //    SalData.Geostruct_Id = item.Geostruct_Id.ToString();

                //    SalData.InPayslip = item1.SalaryHead.InPayslip == false ? "False" : "True";
                //    //SalData.Job_Code = item.FuncStruct != null && item.FuncStruct.Job != null ? item.FuncStruct.Job.Code : "";
                //    //SalData.Job_Name = item.FuncStruct != null && item.FuncStruct.Job != null ? item.FuncStruct.Job.Name : "";
                //    //SalData.JobPositionCode = item.FuncStruct != null && item.FuncStruct.Job != null && item.FuncStruct.JobPosition != null ? item.FuncStruct.JobPosition.JobPositionCode : "";
                //    //SalData.JobPositionDesc = item.FuncStruct != null && item.FuncStruct.Job != null && item.FuncStruct.JobPosition != null ? item.FuncStruct.JobPosition.JobPositionDesc : "";
                //    SalData.LocCode = item.Geostruct != null && item.Geostruct.Location != null && item.Geostruct.Location.LocationObj != null ? item.Geostruct.Location.LocationObj.LocCode : "";
                //    SalData.LocDesc = item.Geostruct != null && item.Geostruct.Location != null && item.Geostruct.Location.LocationObj != null ? item.Geostruct.Location.LocationObj.LocDesc : "";
                //    SalData.LookupVal = item1.SalaryHead.Type != null ? item1.SalaryHead.Type.LookupVal.ToString() : "";
                //    SalData.PayMonth = item.PayMonth;

                //    SalData.SalHead_FullDetails = item1.SalaryHead != null ? item1.SalaryHead.FullDetails : "";

                //    SalData.StdAmount = item1.StdAmount.ToString();
                //    SalData.JobPosTotalDeduction = JobPosTotalDeduction.ToString();
                //    SalData.JobPosTotalEarning = JobPosTotalEarning.ToString();
                //    SalData.JobPosTotalNet = JobPosTotalNet.ToString();
                //    SalData.JobPosTotalEmployee = JobPosTotalEmployee.ToString();
                //    SalData.LocTotalDeduction = LocTotalDeduction.ToString();
                //    SalData.LocTotalEarning = LocTotalEarning.ToString();
                //    SalData.LocTotalNet = LocTotalNet.ToString();
                //    SalData.LocTotalEmployee = LocTotalEmployee.ToString();
                //    OsalDataList.Add(SalData);
                //}

                //   }




                return OsalDataList;

            }
        }
        public static List<Utility.GetJobPosBrSummaryClass> GetGrandSumDatacat(string PayMonth, int CatId)
        {
            using (DataBaseContext db = new DataBaseContext())
            {

                List<Utility.GetJobPosBrSummaryClass> OsalDataList = new List<Models.Utility.GetJobPosBrSummaryClass>();
                double LocTotalEarning = 0, LocTotalDeduction = 0, LocTotalNet = 0, LocTotalEmployee = 0, LocPfBankContribution = 0, LocPfPensionContribution = 0, LocReliefFundBankContri = 0, LocSWFContribution = 0, LocTotalBANKContri = 0;
                double JobPosTotalEarning = 0, JobPosTotalDeduction = 0, JobPosTotalNet = 0, JobPosTotalEmployee = 0;

                List<SalaryT> OSalList = new List<SalaryT>();
                List<int> ids = null;
                ids = db.EmployeePayroll
                    .Include(e => e.Employee)
                    .Include(e => e.Employee.EmpOffInfo)
                     .Include(e => e.Employee.EmpOffInfo.Bank)
                     .Where(e => e.Employee.EmpOffInfo.Bank_Id == CatId).Select(e => e.Id)
                     .ToList();

                var payemntbank = db.Bank.Where(e => e.Id == CatId).FirstOrDefault();

                OSalList = db.SalaryT.Include(e => e.PFECRR).Include(e => e.Geostruct).Where(e => e.PayMonth == PayMonth && ids.Contains(e.EmployeePayroll.Id)).OrderBy(e => e.Id).AsNoTracking().AsParallel().ToList();
                List<Int32> OOSalList = db.SalaryT.Include(e => e.Geostruct).Where(e => e.PayMonth == PayMonth && ids.Contains(e.EmployeePayroll.Id)).AsNoTracking().Select(e => e.Id).ToList();
                LocTotalEarning = OSalList.Sum(e => e.TotalEarning);
                LocTotalDeduction = OSalList.Sum(e => e.TotalDeduction);
                LocTotalNet = OSalList.Sum(e => e.TotalNet);
                LocTotalEmployee = OSalList.Count();
                LocPfBankContribution = OSalList.Where(e => e.PFECRR_Id != null).Sum(e => e.PFECRR.ER_Share);
                LocPfPensionContribution = OSalList.Where(e => e.PFECRR_Id != null).Sum(e => e.PFECRR.EPS_Share);

                List<int?> lWfids = OSalList.Where(e => e.LWFTransT_Id != null).Select(s => s.LWFTransT_Id).ToList();
                if (lWfids.Count() > 0)
                {
                    double LwfTranst = db.LWFTransT.Where(e => lWfids.Contains(e.Id)).Select(a => a.CompAmt).Sum();
                    LocSWFContribution = LwfTranst;
                }



                //foreach (var item in OSalList)
                //{
                List<SalEarnDedT> OSSalEarnDedT = new List<SalEarnDedT>();
                OSSalEarnDedT = db.SalEarnDedT.Where(e => e.Amount != 0 && OOSalList.Contains(e.SalaryT.Id)).AsNoTracking().ToList();
                var Totcomp = OSSalEarnDedT.GroupBy(x => new { x.SalaryHead_Id }).Select(g => new
                {
                    g.Key.SalaryHead_Id,
                    total = g.Sum(x => x.Amount)
                }).ToList();

                foreach (var RELIEF in Totcomp)
                {
                    string Sal_headName = db.SalaryHead.Where(e => e.Id == RELIEF.SalaryHead_Id).FirstOrDefault().Name.ToUpper().ToString();
                    if (Sal_headName == "STAFF RELIEF FUND BANK")
                    {
                        LocReliefFundBankContri = RELIEF.total;

                    }
                }

                foreach (var item in Totcomp)
                {
                    //string Sal_headName = db.SalaryHead.Where(e => e.Id == item.SalaryHead_Id).FirstOrDefault().Name.ToUpper().ToString();
                    //if (Sal_headName == "STAFF RELIEF FUND BANK")
                    //{
                    //    LocReliefFundBankContri = item.total;

                    //}
                    LocTotalBANKContri = LocPfBankContribution + LocPfPensionContribution + LocSWFContribution + LocReliefFundBankContri + LocTotalEarning;
                    Utility.GetJobPosBrSummaryClass SalData = new Utility.GetJobPosBrSummaryClass();
                    //var salcode = db.SalaryHead.Where(e => e.InPayslip == true).Find(item.SalaryHead_Id);
                    var salcode = db.SalaryHead.Find(item.SalaryHead_Id);
                    if (salcode.InPayslip == true)
                    {


                        int? typeid = db.SalaryHead.Where(e => e.Id == item.SalaryHead_Id).FirstOrDefault().Type_Id;

                        var type = db.LookupValue.Where(e => e.Id == typeid).FirstOrDefault().LookupVal;

                        SalData.Company_Code = "";
                        SalData.Company_Name = "";
                        SalData.SalHeadCode = "";
                        SalData.SalHeadCode = "";
                        SalData.Geostruct_Id = "";
                        SalData.InPayslip = "";
                        if (payemntbank != null)
                        {
                            SalData.LocDesc = payemntbank.Name.ToString();
                        }
                        else
                        {
                            SalData.LocDesc = "";
                        }
                        SalData.LocCode = "";
                        SalData.SalHead_FullDetails = "";
                        SalData.StdAmount = "";
                        SalData.JobPosTotalDeduction = "";
                        SalData.JobPosTotalEarning = "";
                        SalData.JobPosTotalNet = "";
                        SalData.JobPosTotalEmployee = "";
                        SalData.PayMonth = PayMonth.ToString();
                        SalData.EarnHead = salcode.Name;
                        SalData.SequenceNo = Convert.ToString(salcode.SeqNo);
                        SalData.LookupVal = type;
                        SalData.EarnAmount = item.total.ToString();
                        SalData.LocTotalDeduction = LocTotalDeduction.ToString();
                        SalData.LocTotalEarning = LocTotalEarning.ToString();
                        SalData.LocTotalNet = LocTotalNet.ToString();
                        SalData.LocTotalEmployee = LocTotalEmployee.ToString();

                        SalData.TotalPFBankContribution = Convert.ToString(LocPfBankContribution);
                        SalData.TotalPfPensionAmount = Convert.ToString(LocPfPensionContribution);
                        SalData.TotalReliefFundBankContribution = Convert.ToString(LocReliefFundBankContri);
                        SalData.TotalSWFBankContribution = Convert.ToString(LocSWFContribution);
                        SalData.TotalBankCONTRIBUTION = Convert.ToString(LocTotalBANKContri);


                        OsalDataList.Add(SalData);
                    }
                    //SalData.TotalPFBankContribution = Convert.ToString(LocPfBankContribution);
                    //SalData.TotalPfPensionAmount = Convert.ToString(LocPfPensionContribution);
                    //SalData.TotalReliefFundBankContribution = Convert.ToString(LocReliefFundBankContri);
                    //SalData.TotalSWFBankContribution = Convert.ToString(LocSWFContribution);
                    //SalData.TotalBankCONTRIBUTION = Convert.ToString(LocTotalBANKContri);

                    //OsalDataList.Add(SalData);
                }

                //item.FuncStruct = db.FuncStruct.Find(item.FuncStruct_Id);
                //item.FuncStruct.Job = db.Job.Find(item.FuncStruct.Job_Id);
                //item.FuncStruct.JobPosition = db.JobPosition.Find(item.FuncStruct.JobPosition_Id);
                //item.Geostruct = db.GeoStruct.Find(item.Geostruct_Id);
                //item.Geostruct.Company = item.Geostruct.Company_Id != null ? db.Company.Find(item.Geostruct.Company_Id) : null;
                //item.Geostruct.Location = db.Location.Find(item.Geostruct.Location_Id);
                //if (item.Geostruct.Location != null)
                //{
                //    item.Geostruct.Location.LocationObj = db.LocationObj.Find(item.Geostruct.Location.LocationObj_Id);
                //}

                //foreach (var item1 in Totcomp)
                //{
                //    item1.SalaryHead = db.SalaryHead.Find(item1.SalaryHead_Id);
                //    item1.SalaryHead.Type = db.LookupValue.Find(item1.SalaryHead.Type_Id);
                //    Utility.GetJobPosBrSummaryClass SalData = new Utility.GetJobPosBrSummaryClass();
                //    SalData.Company_Code = item.Geostruct.Company != null ? item.Geostruct.Company.Code : "";
                //    SalData.Company_Name = item.Geostruct.Company != null ? item.Geostruct.Company.Name : "";

                //    SalData.EarnAmount = item1.Amount.ToString();
                //    SalData.SalHeadCode = item1.SalaryHead.Code;
                //    SalData.EarnHead = item1.SalaryHead.Name;

                //    SalData.Geostruct_Id = item.Geostruct_Id.ToString();

                //    SalData.InPayslip = item1.SalaryHead.InPayslip == false ? "False" : "True";
                //    //SalData.Job_Code = item.FuncStruct != null && item.FuncStruct.Job != null ? item.FuncStruct.Job.Code : "";
                //    //SalData.Job_Name = item.FuncStruct != null && item.FuncStruct.Job != null ? item.FuncStruct.Job.Name : "";
                //    //SalData.JobPositionCode = item.FuncStruct != null && item.FuncStruct.Job != null && item.FuncStruct.JobPosition != null ? item.FuncStruct.JobPosition.JobPositionCode : "";
                //    //SalData.JobPositionDesc = item.FuncStruct != null && item.FuncStruct.Job != null && item.FuncStruct.JobPosition != null ? item.FuncStruct.JobPosition.JobPositionDesc : "";
                //    SalData.LocCode = item.Geostruct != null && item.Geostruct.Location != null && item.Geostruct.Location.LocationObj != null ? item.Geostruct.Location.LocationObj.LocCode : "";
                //    SalData.LocDesc = item.Geostruct != null && item.Geostruct.Location != null && item.Geostruct.Location.LocationObj != null ? item.Geostruct.Location.LocationObj.LocDesc : "";
                //    SalData.LookupVal = item1.SalaryHead.Type != null ? item1.SalaryHead.Type.LookupVal.ToString() : "";
                //    SalData.PayMonth = item.PayMonth;

                //    SalData.SalHead_FullDetails = item1.SalaryHead != null ? item1.SalaryHead.FullDetails : "";

                //    SalData.StdAmount = item1.StdAmount.ToString();
                //    SalData.JobPosTotalDeduction = JobPosTotalDeduction.ToString();
                //    SalData.JobPosTotalEarning = JobPosTotalEarning.ToString();
                //    SalData.JobPosTotalNet = JobPosTotalNet.ToString();
                //    SalData.JobPosTotalEmployee = JobPosTotalEmployee.ToString();
                //    SalData.LocTotalDeduction = LocTotalDeduction.ToString();
                //    SalData.LocTotalEarning = LocTotalEarning.ToString();
                //    SalData.LocTotalNet = LocTotalNet.ToString();
                //    SalData.LocTotalEmployee = LocTotalEmployee.ToString();
                //    OsalDataList.Add(SalData);
                //}

                //   }




                return OsalDataList;

            }
        }

    }
}
