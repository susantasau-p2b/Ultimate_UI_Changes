@{
    ViewBag.Title = "FutureOD";
}
@model Attendance.FutureOD

<style>
    #lvdata {
        float: right;
    }

    .icon-row {
        position: relative;
        left: 70px;
        top: -150px;
    }

    #BusinessType-button {
        font-size: 9px;
        padding-top: 1px;
        font-weight: bold;
    }

    .popup-content-label {
        display: block;
        float: left;
        width: 102px;
    }

    .popup-content-textbox {
        margin-bottom: 1px;
        width: 100px;
    }

    .row3 {
        /*! width: 600px; */
    }

    .row4 {
        position: absolute;
        top: 294px;
        width: 400px;
    }

    .popup-content-textbox-long {
        margin-bottom: 1px;
        width: 290px;
    }

    .row5 {
        width: 423px;
/*        display: inline-flex;*/
    }

    .row2 {
        width: 250px;
        display: inline-block;
        /*! margin-left: -89px; */
        position: absolute;
        left: 191px;
        top: 137px;
    }

    .loader {
        width: 299px;
        /*! display: inline-flex; */
        /*! margin-left: -89px; */
    }

    .addwidth {
        width: 453px;
        height: 58px;
    }

    #process {
        top: 29px;
        left: 76px;
    }

    .section_Method {
        border: 1px solid rgba(207, 207, 207, 0.91);
        border-radius: 10px;
        margin-top: 15px;
        margin-bottom: 15px;
    }

    .transactiontablenew {
        border: 1px solid #c5c5c5;
        /*! margin: 0 auto; */
        width: 379px;
        display: block;
        overflow: auto;
        height: 500px;
        border-collapse: collapse;
    }

    .transactiondivnew {
        border: 1px solid #c5c5c5;
        margin: 0 auto;
        /*! width: 507px; */
        border-radius: 5px;
        height: 100%;
    }

        .transactiondivnew > div {
            display: inline-block;
            margin: 0 auto;
            padding: 4px;
        }

            .transactiondivnew > div > input {
                box-sizing: initial;
                display: inline-block;
                margin: 0 auto;
                width: 108px;
            }

    .transactiontablenew th, .transactiontablenew td {
        background: rgba(246, 246, 246, 0.64) none repeat scroll 0 0;
        padding: 5px;
        border-bottom: 1px solid #c5c5c5;
        border-right: 1px solid #c5c5c5;
        text-align: left;
        color: rgba(114, 113, 113, 0.9);
    }

        .transactiontablenew th:nth-child(1) > input, .transactiontablenew td:nth-child(1) > input {
            margin: 0 auto;
        }

        .transactiontablenew th:nth-child(2), .transactiontablenew td:nth-child(2) {
            height: 100%;
            width: 100%;
        }

    .transactiontablenew tr:hover {
        cursor: pointer;
        background: #EEEEEE none repeat scroll 0 0;
    }

    .section1_Leave {
        display: block;
        border: 1.5px solid rgba(207, 207, 207, 0.91);
        height: 554px;
        /*! width: 511px; */
        margin: 4px auto;
        position: absolute;
    }

    .section2_Leave {
        display: block;
        border: 1px solid #ddd;
        height: 502px;
        width: 560px;
        /*! margin: 5px 4px; */
        position: absolute;
        left: 401px;
    }

    .section3_Leave {
        display: block;
        border: 1px solid #ddd;
        /*! height: 502px; */
        width: 217px;
        /*! margin: 5px 4px; */
        /*! position: absolute; */
        /*! left: 842px; */
        /*! top: 91px; */
        float: right;
    }

    .section4_Leave {
        display: block;
        border: 1px solid #ddd;
        height: 402px;
        width: 338px;
        /*! margin: 5px 4px; */
        position: absolute;
        left: 972px;
    }

    #monthTable {
        /*font-family: "Trebuchet MS", Arial, Helvetica, sans-serif;*/
        border-collapse: collapse;
        width: 100%;
    }

        #monthTable td, #monthTable th {
            border: 1px solid #ddd;
            padding: 8px;
        }

    .monthTable-selected {
        color: #8e6d87;
        font-weight: bold;
    }
    /*#monthTable tr:nth-child(even) {
            background-color: #f2f2f2;
        }*/

    #monthTable tr:hover {
        background-color: #ddd;
    }

    #monthTable th {
        padding-top: 12px;
        padding-bottom: 12px;
        text-align: left;
        background-color: #009282;
        color: white;
    }

    .weeklyoffclass {
        background-color: #e8fefa;
    }

    .holidayclass {
        background-color: #e8f3f1;
    }

    #Emppunchhistory td, #Emppunchhistory th {
        border: 1px solid #ddd;
        padding: 8px;
    }

    .Emppunchhistory-selected {
        color: #8e6d87;
        font-weight: bold;
    }
    /*#monthTable tr:nth-child(even) {
            background-color: #f2f2f2;
        }*/

    #Emppunchhistory tr:hover {
        background-color: #ddd;
    }

    #Emppunchhistory th {
        padding-top: 12px;
        padding-bottom: 12px;
        text-align: left;
        background-color: #009282;
        color: white;
    }
</style>
<script>
    $(document).ready(function () {
        $('button').button();
  

        $('#Create_Dialog').P2BCreateDialog();
        $('#Create').on("click", function (event) {
            $('#FormFutureOD').trigger("reset");
            $.LoadEmpByDefaultWOGeoId(false, ''); 
            $('#Create_Dialog').P2BCreateDialog('', '', '', '', 'Create Future OutDoorDuty Request', 'open', '@Url.Action("Create","FutureOD")', '#FormFutureOD', 'Message :', 'Request Falied :', '#JqGrid', 570, 1055, '', "", function (data) { });
            $('#ReqDate').TodayDate();
            $('#ReqDate').attr('readonly', true);
            event.preventDefault();
        });

        $('#Advance-Filter-Symbol').on('click', function () {
            $("<div></div>").FilterDialog({
                width: 1000,
                height: 400,
                title: "Filter",
                htmlurl: "@Url.Action("Advance_partial", "Transcation")",
                returnat: function (data) {
                    console.log(data);
                    var forwarddata = JSON.stringify(data);
                    $('#Employee-Table').P2BTransactionTableDynamic('#Employee-Search', '#Case-Employee', './Transcation/Get_Employelist_h?geo_id=' + forwarddata + '', "");

                },
                renderat: "#FormFilter", hierarchy: true,
            });
            //console.log($('#FormFilter')[0]);
        });

        $('#MyTable').MultiLevelInlineEditGrid({
            url: "@Url.Action("Emp_Grid", "FutureOD")",
            htmurl: "@Url.Action("GridPartial", "FutureOD")",
            columnname: ["Id", "Code", "Name"],
            childheader: ["Id", "ReqDate", "FromDate", "ToDate", "Reason"],
            childurl: "@Url.Action("Get_EmpFutureODData", "FutureOD")",
            tableheader: "Emp Future OutDoor Data"
        });
        $.DataTableChildManipulation = function (init, id, parentid, htmurl, editurl, submiturl) {
            var dt = $('#MyTable').DataTable();
            var htmlcomponant = {
                init: init,
                Id: id,
                idx: parentid,
                htmurl: htmurl,
                editurl: editurl,
                submiturl: submiturl,
            };
            if ($(init).hasClass('ui-icon-newwin')) {
                return false;
                $('<div></div>').PartialCreateDialog({
                    height: 'auto',
                    width: 'auto',
                    form: "#EditGridForm",
                    htmlurl: htmurl,
                    state: "open",
                    mode: "View",
                    editurl: "@Url.Action("GridEditData", "OutDoorDutyReq")",
                    editdata: id,
                    forwarddata: id,
                    returndatafunction: function (data) {
                        $.each(data, function (i, k) {
                            $('#Grid-ReqDate').val(k.ReqDate);
                            $('#Grid-FromDate').val(k.FromDate);
                            $('#Grid-ToDate').val(k.ToDate); 
                            $('#Grid-Reason').val(k.Reason);
                        });
                    },
                    submitfun: function (data) {
                        var row = dt.row(parent_element);
                        if (row.child.isShown()) {
                            parent_element.removeClass('details');
                            row.child.hide();
                        }
                    }
                });
            } else if ($(init).hasClass('ui-icon-pencil')) {
                //  return false;
                $('<div></div>').PartialCreateDialog({
                    height: 'auto',
                    width: 'auto',
                    form: "#EditGridForm",
                    htmlurl: "@Url.Action("GridPartial", "FutureOD")",
                    state: "open",
                    mode: "Edit",
                    editurl: "@Url.Action("GridEditData", "FutureOD")",
                    submiturl: "@Url.Action("GridEditsave", "FutureOD")",
                    editdata: id,
                    forwarddata: id,
                    returndatafunction: function (data) {
                        $.each(data, function (i, k) {
                            //console.log(k.MonthlyInstallmentAmount);
                            $('#Edit-InstallmentPaid').val(k.InstallmentPaid);
                            //$('#Edit-MonthlyPricipalAmount').val(k.MonthlyPricipalAmount);
                        });
                    },
                    submitfun: function (data) {
                        var row = dt.row(parent_element);
                        if (row.child.isShown()) {
                            parent_element.removeClass('details');
                            row.child.hide();
                        }
                    }
                });
            } else if ($(init).hasClass('ui-icon-trash')) {
                //    return false;
                $('<div></div>').PartialCreateDialog({
                    state: "open",
                    mode: "Delete",
                    submiturl: "@Url.Action("GridDelete", "FutureOD")",
                    forwarddata: id,
                    submitfun: function (data) {
                        var row = dt.row(parent_element);
                        if (row.child.isShown()) {
                            parent_element.removeClass('details');
                            row.child.hide();
                        }
                    }
                });
            }
        };


        $('#FromDate').P2BDatePicker();
        $('#ToDate').P2BDatePicker();
        $('#Reasonlist').selectmenu().selectmenu("menuWidget");
        $('#Reason').MaxLength(100);
        $('#Reason').val("");
      
        $('#Reasonlist').P2BSelectMenuAppend("@Url.Action("GetLookupValue", "lookup")", 453, "");
     

        $('#Reasonlist').on('selectmenuchange', function () {
            if ($('#Reasonlist').val() != 0) {
                if ($('#Reasonlist :selected').text().toUpperCase() == 'OTHERS' || $('#Reasonlist :selected').text().toUpperCase() == 'OTHER') {
                    $('#Reason').val('');
                    $('#Reason').removeAttr('Readonly');
                }
                else {
                    $('#Reason').val($('#Reasonlist :selected').text());
                    $('#Reason').attr('Readonly', 'Readonly');
                }
            }
            else {
                alert('Please Select or enter Reason..!');
                $('#Reason').val('');
            }
        });
     
       


        $('#Employee-Table').on('click', 'input:checkbox:gt(0)', function (e) {
            $('input[type="checkbox"]').not(this).prop("checked", false);
            if (this.checked) {
                $('#Emp_id').val($(this).val());
            } else {
                $('#Emp_id').val("");

            }
 
        }); 
    });
</script>

<body>
    <div class="Form_Bg">
        <div class="Form_Input">
            <div class="Button_Container">
                <button class="button" id="Create">Create</button>
                <button class="button" id="View">View</button>
                <button class="button" id="Edit">Edit</button>
                <button class="button" id="Delete">Delete</button>
                <button class="button" id="Autho">Authorized</button>
                <div id="Grid_Form">
                    <div>
                        <table id="JqGrid"></table>
                        <div id="pager2"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="dialog">
        <div title="LookUp Data">
            <div class="LookupDiv"></div>
        </div>
        <div id="PageNavPosition">

        </div>
    </div>
    <div id="Grid_Form">
        <div>
            <div id="Container" class="container">
                <div id="Demo">
                    <table id="MyTable" class="display" width="100%" cellspacing="0">
                        <thead>
                            <tr>
                                <th>DD</th>
                                <th>ID</th>
                                <th>Employee Code</th>
                                <th>Employee Name</th>
                            </tr>
                        </thead>
                        <tfoot>
                            <tr>
                                <th>DD</th>
                                <th>ID</th>
                                <th>Employee Code</th>
                                <th>Employee Name</th>
                            </tr>
                        </tfoot>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <div id="Create_Dialog" title="Create Employee Timing Monthly Roaster">
        <div class="section_Method">
            <div class="heading">Filter View</div>
            <div class="filter-div">
                <label class="advance_filter_label">
                    Advance Filter<span class="advance_filter_sysmbol_class_plus" id="Advance-Filter-Symbol">
                    </span>
                </label>
                <div id="FormFilter"></div>
            </div>
        </div>
        @using (Html.BeginForm(null, null, FormMethod.Post, new { Id = "FormFutureOD", name = "frmFutureODEdit" }))
        {



            <input id="Autho_Action" type="hidden" name="Autho_Action" />
            <input id="Autho_Allow" type="hidden" name="Autho_Allow" />
            <input id="geo_id" class="filter_structure_id" name="geo_id" />
            <input id="pay_id" class="filter_structure_id" name="pay_id" />
            <input id="fun_id" class="filter_structure_id" name="fun_id" />
            <input id="Emp_id" class="filter_structure_id" name="fun_id" />
            <div class="section1_Leave">
                <div class="heading">Employee List</div>
                <div class="employeeselectiondiv">
                    <div class="transactiondivnew dynamic addons" style="float:left">
                        <div>
                            <label>Search:</label>
                            <input type="text" id="Employee-Search" style="width: 317px;" />
                        </div>
                        <table cellspacing="0" cellpadding="1" class="transactiontablenew" id="Employee-Table">
                            <tr>
                                <th><input type="checkbox" id="Case-Employee" /></th>
                                <th>Employee</th>
                            </tr>
                        </table>
                    </div>
                </div>
            </div>
            <div class="section2_Leave">  
                <div class="row5 content_margine">
                    @Html.LabelFor(m => m.ReqDate, "ReqDate:", new { @class = "popup-content-label must" }) 
                    @Html.TextBoxFor(m => m.ReqDate, new { @class = "popup-content-textbox must" }) 
                </div>
                <div class="row5 content_margine">
                    @Html.LabelFor(m => m.FromDate, "FromDate:", new { @class = "popup-content-label must" }) 
                    @Html.TextBoxFor(m => m.FromDate, new { @class = "popup-content-textbox must" }) 
                </div>
                <div class="row5 content_margine">
                    @Html.LabelFor(m => m.ToDate, "ToDate:", new { @class = "popup-content-label must" }) 
                    @Html.TextBoxFor(m => m.ToDate, new { @class = "popup-content-textbox must" }) 
                </div>
                <div class="row5 content_margine">
                    @Html.LabelFor(m => m.Reason, "Reason:", new { @class = "popup-content-label must" })
                    <select class="must" id="Reasonlist" name="Reasonlist" style="width:160px;"><option value="0">-Select-</option></select>
                    @Html.TextBoxFor(m => m.Reason, new { @class = "popup-content-textbox1  must" })
                </div>
                 
               
            </div>
            


        }
        

       

        <div>

        </div>
    </div>
</body>