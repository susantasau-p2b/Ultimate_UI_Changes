@{
    ViewBag.Title = "Timing Monthly Roaster";
}
@model Attendance.TimingMonthlyRoaster

<script>
    $(document).ready(function () {
        $('#RoasterName').ValidateTextBox({ maxlength: 10, name: true, alphanum: true });
    });

</script>
 

<style>
    .icon-row {
        position: relative;
        left: 56px;
        top: -150px;
    }

    #BusinessType-button {
        font-size: 9px;
        padding-top: 1px;
        font-weight: bold;
    }

    .popup-content-label {
        display: block;
        float: left;
        width: 100px;
    }

    .popup-content-textbox {
        margin-bottom: 1px;
        min-width: 150px;
    }

    .row3 {
        width: 402px;
    }

    .row4 {
        position: absolute;
        top: 294px;
        width: 400px;
    }

    .popup-content-textbox-long {
        margin-bottom: 1px;
        width: 290px;
    }


    .row2 {
        width: 402px;
    }
</style>
<script>
    $(document).ready(function (e) {
        var btndisablenames = "#Edit-TimingGroup-MonthlyRoaster,#Remove-TimingGroup-MonthlyRoaster";
        var btndisablenameAll = "#Lookup-TimingGroup-MonthlyRoaster,#Create-TimingGroup-MonthlyRoaster,#Edit-TimingGroup-MonthlyRoaster,#Remove-TimingGroup-MonthlyRoaster";
        var dt;
        $('button').button();
        var ColNames = [];
        var ColModel = [];
        var SortName, Caption, url, width, height;

        ColModel = ['RoasterName', 'Id'];
        ColNames = [ 'RoasterName', 'Id' ];
        SortName = 'Id';
        Caption = 'Timing Monthly Roaster';
        url = '@Url.Action("P2BGrid")';
        width = 1000;
        height = 150;
        $('#JqGrid').P2BGrid(ColNames, ColModel, SortName, Caption, url, width, height);
        $('#RoasterName').ValidateTextBox({ maxlength: 50, name: true });
        function AssignData() {
            dt = $('#JqGrid').P2BGrid.P2BEdDelV('#JqGrid', 'Id');
        }

        $('#Create_Dialog').P2BCreateDialog();
        $('#Create').on("click", function (event) {
            $('#FormTimingMonthlyRoaster').trigger("reset");
            $('#Create_Dialog').P2BCreateDialog('', '', '', '', 'Create Timing Monthly Roaster', 'open', '@Url.Action("Create")', '#FormTimingMonthlyRoaster', 'Message :', 'Request Falied :', '#JqGrid', 350, 520, '#TimingGrouplist', btndisablenames, function (data) { });
            event.preventDefault();
        });

        $('#Lookup-TimingGroup-MonthlyRoaster').button().on('click', function (event) {
            $('.dialog').P2BLookUpModal('@Url.Action("GetTimingGrpDetails", "TimingMonthlyRoaster")', '', 'LookupDiv', 'Lookup Timing Monthly Roaster', '#TimingGrouplist', 'TimingGrouplist', 5, 'TimingGrouplist', '#FormTimingMonthlyRoaster', 'N', btndisablenames, '#Lookup_table', 'PageNavPosition');
            event.preventDefault();
        });

        // PArtial page create
        $('<div></div>').P2BPartialCreateModalDialog();
        $('#Create-TimingGroup-MonthlyRoaster').on("click", function (event) {
            $('<div></div>').P2BPartialCreateModalDialog('@Url.Action("partial", "TimingGroup")', 'Create Dialog', 'open', '@Url.Action("Create", "TimingGroup")', '#FormTimingGroup1', 'Message :', 'Request Falied :', '#JqGrid', 400, 500, '', '', '', '#FormTimingMonthlyRoaster', '', function (data) {
                // to show data which is created in partial page
                $('#TimingGrouplist').P2BLookUpEncapsulate('#TimingGrouplist', 'TimingGrouplist', data[0], data[1], 'TimingGrouplist', btndisablenames, 'N');
            });
            event.preventDefault();
        });

        $('#Edit-TimingGroup-MonthlyRoaster').button().on("click", function (event) {
            var a = [], b;
            a = $('#TimingGrouplist').P2BGetTableDataonSelectedRow('#TimingGrouplist', 0);
            b = a[0];
            console.log(b);

            $('<div></div>').P2BPatialEditModalDialog('@Url.Action("partial", "TimingGroup")', '@Url.Action("edit", "TimingGroup")', b, '@Url.Action("EditSave", "TimingGroup")', 'Edit Timing Group', '#FormTimingGroup1', b, 'Message :', 'Request Falied :', '#JqGrid', 400, 500, '#FormTimingMonthlyRoaster', '#TimingGrouplist', 'TimingGrouplist', 'TimingGrouplist', 'N', '#Remove-TimingGroup-MonthlyRoaster,#Edit-TimingGroup-MonthlyRoaster', function (data) {
                $('#GroupCode').attr('readonly', 'readonly');
                $.each(data[0], function (i, k) {
                    $('#FormTimingGroup1').trigger('reset');
                    $('#GroupName').val(k.GroupName);
                    $('#GroupCode').val(k.GroupCode);
                    $('#ContactPerson').val(k.ContactPerson);
                    $('[name="IsAutoShift"]').val([k.IsAutoShift]).button().button("refresh");
                    $('[name="IsManualRotateShift"]').val([k.IsManualRotateShift]).button().button("refresh");

                });

                $.each(data[1], function (i, k) {

                    $('#TimingPolicylist').P2BLookUpEncapsulate('#TimingPolicylist', 'TimingPolicylist', k.TimingPolicy_Id, k.TimingPolicy_FullDetails, 'TimingPolicylist', '', 'N');
                });

            });
            event.preventDefault();
        });



        $('#Remove-TimingGroup-MonthlyRoaster').button().on('click', function (event) {
            //dt = $('#JqGrid').P2BGrid.P2BEdDelV('#JqGrid', 'Id');
            var a = [], b;
            a = $('#TimingGrouplist').P2BGetTableDataonSelectedRow('#TimingGrouplist', 0);
            b = a[0];
            $('<div></div>').P2BPartialDeleteModalDialog('', b, 0, 'Are you sure want to delete record???', 'Message : ', 'Request failed', '#TimingGrouplist', $('#TimingGrouplist').val(), 200, 200, '#FormTimingMonthlyRoaster', '#TimingGrouplist', '#Edit-TimingGroup-MonthlyRoaster,#Remove-TimingGroup-MonthlyRoaster');
            event.preventDefault();
        });



        $('#Edit').on('click', function (event) {
            AssignData();
            $('#Create_Dialog').P2BEditModalDialog('@Url.Action("Edit")', dt.Id, '@Url.Action("EditSave")', "Edit Timing Monthly Roaster Data", '#FormTimingMonthlyRoaster', dt.Id, 'Message : ', 'Request Falied :', '#JqGrid', 350, 520, '#TimingGrouplist', '', function (data) {
                $('#RoasterName').attr('readonly', 'readonly');
                $.each(data[0], function (i, k) {
                    $('#FormTimingMonthlyRoaster').trigger('reset');
                    $('#RoasterName').val(k.RoasterName);
                });

                $.each(data[1], function (i, k) {
                    $('#TimingGrouplist').P2BLookUpEncapsulate('#TimingGrouplist', 'TimingGrouplist', k.TimingGroup_Id, k.TimingGroup_FullAddress, 'TimingGrouplist', btndisablenames, 'N');
                });


                //alert(data[3]);
                $('#Autho_Allow').val(data[3]); //Compulsory for authorisation
            });
            event.preventDefault();
        });


        //View main page
        $('#View').button().click(function (event) {
            AssignData();
            $('#Create_Dialog').P2BViewModalDialog('@Url.Action("Edit")', dt.Id, 'View Timing Monthly Roaster Data', '#TimingGrouplist', btndisablenameAll, 350, 520, '#Autho', '@Url.Action("AuthSave")', dt.Id, '', '', '', '', '#JqGrid', function (data) {
                $.each(data[0], function (i, k) {
                    $('#Autho_Action').val(k.Action);
                    $('#Id').val(k.Id);
                    $('#RoasterName').val(k.RoasterName);
                });

                $.each(data[1], function (i, k) {
                    $('#TimingGrouplist').P2BLookUpEncapsulate('#TimingGrouplist', 'TimingGrouplist', k.TimingGroup_Id, k.TimingGroup_FullAddress, 'TimingGrouplist', 'view', 'N');
                });

                //To bind old data if authorisation is true
                if ($("#Autho").hasClass('auto_active')) {
                    $('#RoasterName').oldVal(data[2].RoasterName);
                    $('#TimingGrouplist_old').oldVal(data[2].TimingGroup_Val);
                }
            });
        });

        $('#Delete').button().click(function (event) {
            dt = $('#JqGrid').P2BGrid.P2BEdDelV('#JqGrid', 'Id');
            $('#Create_Dialog').P2BDeleteModalDialog('@Url.Action("Delete", "TimingMonthlyRoaster")', dt.Id, 'Are you sure want to remove record???', 'Message : ', 'Request failed', '#JqGrid', 200, 200);
        });


        $('.popup_radio_button').controlgroup();
        $('#Autho').makeDisable('#Create,#Edit,#Delete');
        $('#Autho').onClickGrid('#JqGrid', '@Url.Action("P2BGrid")', '@Url.Action("P2BGrid")');
    });
</script>

<body>
    <div class="Form_Bg">
        <div class="Form_Input">
            <div class="Button_Container">
                <button class="button" id="Create">Create</button>
                <button class="button" id="View">View</button>
                <button class="button" id="Edit">Edit</button>
                <button class="button" id="Delete">Delete</button>
                <button class="button" id="Autho">Authorized</button>
                <div id="Grid_Form">
                    <div>
                        <table id="JqGrid"></table>
                        <div id="pager2"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="dialog">
        <div title="LookUp Data">
            <div class="LookupDiv"></div>
        </div>
        <div id="PageNavPosition">

        </div>
    </div>

    <div id="Create_Dialog" title="Create TimingMonthlyRoaster">

        @using (Html.BeginForm(null, null, FormMethod.Post, new { Id = "FormTimingMonthlyRoaster", name = "FormTimingMonthlyRoaster" }))
        {
            <input id="Autho_Action" type="hidden" name="Autho_Action" />
            <input id="Autho_Allow" type="hidden" name="Autho_Allow" />

            <div class="row3 content_margine">
                @Html.LabelFor(m => m.RoasterName, "Roaster Name:", new { @class = "popup-content-label must" })
                @Html.TextBoxFor(m => m.RoasterName, new { @class = "popup-content-textbox must" })
            </div>


            <div class="row3 content_margine">
                <div id="TimingGrouplist_old"></div>
                @Html.LabelFor(m => m.TimingGroup, "Timing Group :", new { @class = "popup-content-label" })
                <div class="popup-content-table">
                    <table class="lookuptableselected" id="TimingGrouplist">
                        <tr><th>Id</th><th>LookUp Selected Description</th></tr>
                    </table>
                </div>
                <div class="icon-row">
                    <button data-p2btooltip="Select Timing Group" class="  popup-content-icon-lookup" id="Lookup-TimingGroup-MonthlyRoaster"><span class="ui-icon ui-icon-folder-open popup-content-iconmark"></span></button>
                    <button data-p2btooltip="Create Timing Group" class="popup-content-icon-create" id="Create-TimingGroup-MonthlyRoaster"><span class="ui-icon ui-icon-newwin popup-content-iconmark"></span></button>
                    <button data-p2btooltip="Edit Timing Group" class="popup-content-icon-edit" id="Edit-TimingGroup-MonthlyRoaster"><span class="ui-icon ui-icon-pencil popup-content-iconmark"></span></button>
                    <button data-p2btooltip="Remove Timing Group" class="popup-content-icon-remove" id="Remove-TimingGroup-MonthlyRoaster"><span class="ui-icon ui-icon-trash popup-content-iconmark"></span></button>
                </div>
            </div>

        }
    </div>
</body>