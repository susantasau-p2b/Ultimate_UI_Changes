@{
    ViewBag.Title = "Employee Document";
}
@model P2b.Global.EmployeeDMS_Doc
<script>
    $(document).ready(function (e) {
        $('button').button();
        // $("#PayMonth").val($.datepicker.formatDate("mm/yy", new Date()));
        var ColNames = [];
        var ColModel = [];
        var SortName, Caption, url, width, height;
        ColModel = ['FunctionalModule', 'DocumentType', 'DocumentTypeDesc', 'Id'];
        ColNames = ['FunctionalModule', 'DocType', 'DocumentTypeDesc', 'Id'];
        SortName = 'Id';
        Caption = 'Employee Document ';
        url = '@Url.Action("P2BGrid")';
        width = 1000;
        height = 150;
        $('#JqGrid').P2BGrid(ColNames, ColModel, SortName, Caption, url, width, height, '#pager2', { multiple: false, rowNum: 30, selectall: true });

        $('#Load').on('click', function (e) {
            $('#JqGrid').PostGridData({ url: url, filter: $('#TextPayMonth').val() });
        });


        function AssignData() {
            dt = $('#JqGrid').P2BGrid.P2BEdDelV('#JqGrid', 'Id');
        }

        $('#Create_Dialog').P2BCreateDialog();


        $('#LoadEmp').on("click", function (event) {
            var forwarddata = $('#PayProcessGroupList :selected').val();
            $('#Employee-Table').P2BTransactionTableDynamic('#Employee-Search', '#Case-Employee', './Transcation/Get_Employelist_PayBank?geo_id=' + forwarddata + '', "");
        });

        $('#Advance-Filter-Symbol').on('click', function () {
            $("<div></div>").FilterDialog({
                width: 1000,
                height: 400,
                title: "Filter",
                htmlurl: "@Url.Action("Advance_partial", "Transcation")",
                returnat: function (data) {
                    console.log(data);
                    if (data.GeoStruct != null) {
                        $('#geo_id').val(data.GeoStruct);
                    }
                    if (data.PayStruct != null) {
                        $('#pay_id').val(data.PayStruct);
                    }
                    if (data.FunStruct != null) {
                        $('#fun_id').val(data.FunStruct);
                    }
                    var forwarddata = JSON.stringify(data);
                    $('#Employee-Table').P2BTransactionTableDynamic('#Employee-Search', '#Case-Employee', './Transcation/Get_Employelist_h?geo_id=' + forwarddata + '', "");
                },
                renderat: "#FormFilter",
                hierarchy: true,
            });
        });
        function ajaxloaderv2(cameform) {
            $('<a><i class="fa fa-circle-o-notch fa-spin fa-5x fa-fw ajax_loder" style="color: rgba(27, 187, 173, 0.93);z-index:999;" aria-hidden="true"></i></a>').appendTo(cameform);
        };

        $('#Create').on("click", function (event) {
            $('#FormEmployeeDoc').trigger("reset");
            $('#Create_Dialog').P2BCreateDialog('', '', '', '', 'Create Employee Document', 'open', '@Url.Action("Create")', '#FormEmployeeDoc', 'Message :', 'Request Falied :', '#JqGrid', 700, 1020, '#SubDoclist', '', function (data) { });
            $('#FuncModulelist').P2BSelectMenuAppend('@Url.Action("GetLookupValue", "lookup")', 601, ""); // To bind dropdown on page load
            $.LoadEmpByDefaultWOGeoId(true, "");
            event.preventDefault();
        });

        $('#FuncModulelist').P2BSelectMenuOnChange("selectmenuchange", "@Url.Action("PopulateDropDownList", "EmployeeDMS_Doc")", '#DocTypelist', "");

        // Main page edit
        $('#Edit').on('click', function () {
            AssignData();
            $('#Create_Dialog').P2BEditModalDialog('@Url.Action("Edit")', dt.Id, '@Url.Action("EditSave")', "Edit Employee Document Data", '#FormEmployeeDoc', dt.Id, 'Message : ', 'Request Falied :', '#JqGrid', 500, 620, '#SubDoclist', '', function (data) {
                // setTimeout(function () {
                $.each(data[0], function (i, k) {
                    console.log(k.Code);
                    $('#DocumentTypeDesc').val(k.DocumentTypeDesc);
                    //   $('#Code').attr('readonly', 'readonly');
                    $('#Document_Size_Appl').val(k.Document_Size_Appl);
                    $('#FuncModulelist').P2BSelectMenuAppend("@Url.Action("GetLookupValue", "lookup")", 601, k.FunctionalPackage_Id); // Dropdown bind
                    $('#DocTypelist').P2BSelectMenuAppend("@Url.Action("GetLookupValue", "lookup")", 590, k.DocumentType_Id); // Dropdown bind
                });

                //partial page bind
                $.each(data[1], function (i, k) {
                    $('#SubDoclist').P2BLookUpEncapsulate('#SubDoclist', 'SubDoclist', k.Doc_Id, k.DocFullDetails, 'SubDoclist', '#Edit-SubDocument-EmployeeDMSDoc,#Remove-SubDocument-EmployeeDMSDoc', 'A');
                });
                //alert(data[3]);
                $('#Autho_Allow').val(data[3]); //Compulsory for authorisation
                // }, 2000);
            });
        });


        //View main page
        $('#View').button().click(function (event) {
            AssignData();
            $('#Create_Dialog').P2BViewModalDialog('@Url.Action("Edit")', dt.Id, 'View Document Data', '#SubDoclist', '#Lookup-SubDocument-EmployeeDMSDoc,#Create-SubDocument-EmployeeDMSDoc,#Edit-SubDocument-EmployeeDMSDoc,#Remove-SubDocument-EmployeeDMSDoc', 500, 620, '#Autho', '@Url.Action("AuthSave")', dt.Id, '', '', '', '', '#JqGrid', function (data) {
                $.each(data[0], function (i, k) {
                    $('#Autho_Action').val(k.Action);
                   $('#DocumentTypeDesc').val(k.DocumentTypeDesc);
                    $('#Document_Size_Appl').val(k.Document_Size_Appl);
                    $('#FuncModulelist').P2BSelectMenuAppend("@Url.Action("GetLookupValue", "lookup")", 601, k.FunctionalPackage_Id); // Dropdown bind
                    $('#DocTypelist').P2BSelectMenuAppend("@Url.Action("GetLookupValue", "lookup")", 590, k.DocType_Id); // Dropdown bind
                });

                $.each(data[1], function (i, k) {
                    $('#SubDoclist').P2BLookUpEncapsulate('#SubDoclist', 'SubDoclist', k.Doc_Id, k.DocFullDetails, 'SubDoclist', '#Edit-SubDocument-EmployeeDMSDoc,#Remove-SubDocument-EmployeeDMSDoc', 'A');
                });
                
            });
        });

        //delete main page
        $('#Delete').button().click(function (event) {
            dt = $('#JqGrid').P2BGrid.P2BEdDelV('#JqGrid', 'Id');
            $('#Create_Dialog').P2BDeleteModalDialog('@Url.Action("Delete")', dt.Id, 'Are you sure want to remove record???', 'Message : ', 'Request failed', '#JqGrid', 200, 200);
            event.preventDefault();
        });

        $('#Lookup-SubDocument-EmployeeDMSDoc').on('click', function (event) {
            $('.dialog').P2BLookUpModal('@Url.Action("GetSubdocLKDetails", "EmployeeDMS_Doc")', '', 'LookupDiv', 'Subdocument Look Up Data', '#SubDoclist', 'SubDoclist', 5, 'SubDoclist', '#FormEmployeeDoc', 'N', '#Edit-Address-Corporate,#Remove-Address-Corporate', 'Lookup_table', 'PageNavPosition');
            event.preventDefault();
        });

        // PArtial page create
        $('<div></div>').P2BPartialCreateModalDialog();
        $('#Create-SubDocument-EmployeeDMSDoc').on("click", function (event) {
            var FuncModule = $('#FuncModulelist option:selected').val();
            var DocType = $('#DocTypelist option:selected').val();
            if (FuncModule == 0 && DocType == 0) {
                alert('Kindly select Functional Module & Document Type');
                return false;
            }
            $('<div></div>').P2BPartialCreateModalDialog('@Url.Action("partial", "EmployeeDMS_SubDoc")?FuncModule=' + FuncModule + '&DocType=' + DocType, 'Create SubDoc', 'open', '@Url.Action("Create","EmployeeDMS_Subdoc")', '#FormEmployeeSubDoc', 'Message :', 'Request Falied :', '#JqGrid', 400, 500, '', '', '', '#FormEmployeeDoc', '', function (data) {
                // to show data which is created in partial page
                $('#SubDoclist').P2BLookUpEncapsulate('#SubDoclist', 'SubDoclist', data[0], data[1], 'SubDoclist', '#Edit-SubDocument-EmployeeDMSDoc,#Remove-SubDocument-EmployeeDMSDoc', 'N');
            });
            event.preventDefault();
        });

        $('#Edit-SubDocument-EmployeeDMSDoc').button().on("click", function (event) {
            var a = [], b;
            a = $('#SubDoclist').P2BGetTableDataonSelectedRow('#SubDoclist', 0);
            b = a[0];
            console.log(b);
            //url, openurl, opendataforward, editurl, maindialogtitle, forwardserializedata, forwarddata, editmessage, editerrormessage, gridreloadname,                                                                                                                    height, width, classoridoftheonwhichpopupderived, nameidclassofbuttontodisable, nameclassidofinlinelookup, nameofthelist_inlinelookuptable, nameoftable_inlinelookuptable,multiple_allowed_or_not, returndatafunction) {
            $('<div></div>').P2BPatialEditModalDialog('@Url.Action("partial", "EmployeeDMS_SubDoc")', '@Url.Action("EditSubDoc_partial", "EmployeeDMS_Doc")', b, '@Url.Action("EditSave", "EmployeeDMS_Subdoc")', 'Edit Employee SubDocument', '#FormEmployeeSubDoc', b, 'Message :', 'Request Falied :', '#JqGrid', 400, 500, '#FormEmployeeDoc', '#SubDoclist', 'SubDoclist', 'SubDoclist', 'N', '#Remove-SubDocument-EmployeeDMSDoc,#Edit-SubDocument-EmployeeDMSDoc', function (data) {
                // setTimeout(function () {
                $.each(data[0], function (i, k) {
                    $('#FormEmployeeSubDoc').trigger('reset');
                    $('#SubDocumentType').val(k.SubDocumentName);
                    $('#SubDocDesc').val(k.SubDocumentDesc);
                });
                // }, 3000);
            });
            event.preventDefault();
        });

        $('#Remove-SubDocument-EmployeeDMSDoc').button().on('click', function (event) {
            var selectedRows = [];
            var selectedRows = $('#SubDoclist').P2BGetTableDataonSelectedRow('#SubDoclist', 0)
            $('<div></div>').P2BPartialDeleteModalDialog('@Url.Action("DeleteSubDoc","EmployeeDMS_Doc")', selectedRows, 0, 'Are you sure want to delete record???', 'Message : ', 'Request failed', '#SubDoclist', $('#SubDoclist').val(), 200, 200, '#FormEmployeeDoc', '#SubDoclist', '#Edit-SubDocument-EmployeeDMSDoc,#Remove-SubDocument-EmployeeDMSDoc');
            event.preventDefault();
        });

        $('.popup_radio_button').controlgroup();
        $('#FuncModulelist,#DocTypelist').selectmenu().selectmenu("menuWidget");

    });
</script>

<html>

<head>
    <title></title>

    <style>
        .icon-row {
            position: relative;
            left: 115px;
            top: -150px;
        }

        #BusinessType-button {
            font-size: 9px;
            padding-top: 1px;
            font-weight: bold;
        }

        .popup-content-label {
            display: block;
            float: left;
            width: 151px;
        }

        .popup-content-labelT {
            display: block;
            float: left;
            width: 120px;
        }

        .popup-content-textbox {
            margin-bottom: 1px;
            min-width: 150px;
        }

        .row3 {
            width: 627px;
        }

        .row4 {
            position: absolute;
            top: 294px;
            width: 400px;
        }

        .popup-content-textbox-long {
            margin-bottom: 1px;
            width: 290px;
        }


        .row2 {
            width: 402px;
        }

        .date-picker {
            z-index: 999;
        }

        .employeeselectiondiv {
            float: left;
        }

        .addons {
            height: 246px;
        }

        .section_Method {
            border: 1px solid rgba(207, 207, 207, 0.91);
            border-radius: 10px;
            margin-top: 15px;
            margin-bottom: 15px;
        }

        .section_Method1 {
            border: 1px solid rgba(207, 207, 207, 0.91);
            border-radius: 10px;
            margin-top: 15px;
            margin-bottom: 15px;
            height: 150px;
        }

        .section1_Leave {
            display: block;
            border: 1.5px solid rgba(207, 207, 207, 0.91);
            height: 867px;
            width: 534px;
            margin: 4px auto;
            position: absolute;
        }

        .section2_Leave {
            display: block;
            border: 1px solid #ddd;
            height: 859px;
            width: 581px;
            margin: 5px 4px;
            position: absolute;
            left: 546px;
        }

        .transactiontablenew {
            border: 1px solid #c5c5c5;
            margin: 0 auto;
            /*width: 200px;*/
            display: block;
            overflow: auto;
            height: 500px;
            border-collapse: collapse;
        }

        .transactiondivnew {
            border: 1px solid #c5c5c5;
            margin: 0 auto;
            width: 507px;
            border-radius: 5px;
            height: 32px;
        }

            .transactiondivnew > div {
                display: inline-block;
                margin: 0 auto;
                padding: 4px;
            }

                .transactiondivnew > div > input {
                    box-sizing: initial;
                    display: inline-block;
                    margin: 0 auto;
                    width: 108px;
                }

        .transactiontablenew th, .transactiontablenew td {
            background: rgba(246, 246, 246, 0.64) none repeat scroll 0 0;
            padding: 5px;
            border-bottom: 1px solid #c5c5c5;
            border-right: 1px solid #c5c5c5;
            text-align: center;
            color: rgba(114, 113, 113, 0.9);
        }

            .transactiontablenew th:nth-child(1) > input, .transactiontablenew td:nth-child(1) > input {
                margin: 0 auto;
            }

            .transactiontablenew th:nth-child(2), .transactiontablenew td:nth-child(2) {
                height: 100%;
                width: 100%;
            }

        .transactiontablenew tr:hover {
            cursor: pointer;
            background: #EEEEEE none repeat scroll 0 0;
        }
    </style>
</head>

<body>
    <div class="Form_Bg">
        <div class="Form_Input">
            <div class="Button_Container">
                <button class="button" id="Create">Create</button>
                <button class="button" id="View">View</button>
                <button class="button" id="Edit">Edit</button>
                <button class="button" id="Delete">Delete</button>
                <button class="button" id="Autho">Authorised</button>
                <div id="Grid_Form">
                    <div>
                        <table id="JqGrid"></table>
                        <div id="pager2"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="dialog">
        <div title="LookUp Data">
            <div class="LookupDiv"></div>
        </div>
        <div id="PageNavPosition">

        </div>
    </div>

    <div id="Create_Dialog" title="Create Employee Document">

        @using (Html.BeginForm(null, null, FormMethod.Post, new { Id = "FormEmployeeDoc", name = "FormEmployeeDoc" }))
        {
             
        <div class="section1_Leave">
            <div class="row3 content_margine">@Html.LabelFor(m => m.FunctionalPackage, "Functional Package :", new { @class = "popup-content-label must" })<select id="FuncModulelist" name="FuncModulelist" class="must" style="width:161px;"><option></option></select></div>
            <div class="row3 content_margine">@Html.LabelFor(m => m.DocumentType, "Document Type :", new { @class = "popup-content-label must" })<select id="DocTypelist" name="DocTypelist" class="must" style="width:161px;"><option></option></select></div>
            <div class="dropdown_row1 row3 content_margine">@Html.LabelFor(m => m.DocumentTypeDesc, "Document Type Desc :", new { @class = "popup-content-label must" })@Html.TextBoxFor(m => m.DocumentTypeDesc, new { @class = "popup-content-textbox must" })</div>
            <div class="row3 content_margine">
                @Html.LabelFor(m => m.Document_Size_Appl, "Document Size Appl :", new { @class = "popup-content-label must" })@Html.TextBoxFor(m => m.Document_Size_Appl, new { @class = "popup-content-textbox must" })
            </div>
            <div class="row3 content_margine">
                <div id="AddressList_Old"></div>
                @Html.LabelFor(m => m.EmployeeDMS_SubDoc, "Sub Document :", new { @class = "popup-content-label" })
                <div class="popup-content-table">
                    <table class="lookuptableselected" id="SubDoclist">
                        <tr><th>Id</th><th>LookUp Selected Description</th></tr>
                    </table>
                </div>
                <div class="icon-row">
                    <button data-p2btooltip="Lookup SubDocument" class="popup-content-icon-lookup" id="Lookup-SubDocument-EmployeeDMSDoc"><span class="ui-icon ui-icon-folder-open popup-content-iconmark"></span></button>
                    <button data-p2btooltip="Create SubDocument" class="popup-content-icon-create" id="Create-SubDocument-EmployeeDMSDoc"><span class="ui-icon ui-icon-newwin popup-content-iconmark"></span></button>
                    <button data-p2btooltip="Edit SubDocument" class="popup-content-icon-edit" id="Edit-SubDocument-EmployeeDMSDoc"><span class="ui-icon ui-icon-pencil popup-content-iconmark"></span></button>
                    <button data-p2btooltip="Remove SubDocument" class="popup-content-icon-remove" id="Remove-SubDocument-EmployeeDMSDoc"><span class="ui-icon ui-icon-trash popup-content-iconmark"></span></button>
                </div>
            </div>
        </div>
        }
    </div>

</body>
</html>
