<link href="~/Content/popup_form.css" rel="stylesheet" />
@model IR.ChargeSheet
<style>
    .popup-content-label {
        width: 170px;
        display: block;
        float: left;
    }

    .popup-content-textbox {
        width: 120px;
    }

    .row1 {
        width: 320px;
    }

   
    .horizontal_row2, .radio_button_div_2 {
        display: inline-block;
    }

    .row3 {
        width: 477px;
    }

    .row2 {
        width: 402px;
    }

    .icon-row {
        left: 127px;
        position: relative;
        top: -121px;
    }
</style>

<script>
 $(document).ready(function () {
        $('button').button();
        var dt;
        var ColNames = [];
        var ColModel = [];
        var SortName, Caption, url, width, height;

        ColModel = ['CaseNo', 'VictimName', 'ProceedingStage', 'ChargeSheetDate', 'ChargeSheetNo', 'ReplyPeriod', 'ChargeSheetDetails', 'Narration', 'Id'];
        ColNames = ['CaseNo', 'VictimName', 'ProceedingStage', 'ChargeSheetDate', 'ChargeSheetNo', 'ReplyPeriod', 'ChargeSheetDetails', 'Narration', 'Id'];

        SortName = 'Id';
        Caption = 'ChargeSheet';
        url = '@Url.Action("P2BGrid")';
        width = 1000;
        height = 150;
        $('#JqGrid').P2BGrid(ColNames, ColModel, SortName, Caption, url, width, height);
        $('#Create_Dialog').P2BCreateDialog();
        function DateConvert(JsonDate) {
            var date = new Date(parseInt(JsonDate.substr(6)));
            var displayDate = $.datepicker.formatDate("dd/mm/yy", date);
            return displayDate;
        };
     
        $('#Create').button().on("click", function () {
            $('#frmChargeSheet').trigger("reset");
            var temp = localStorage.getItem("getEmpIrIdKey");
            
            var empirid = @Request.QueryString["EmpIr"]
            console.log("empirid :::: " + empirid);
            if (empirid == undefined) {
                empirid = temp.toString();
            }

            $('#Create_Dialog').P2BCreateDialog('', '', '', '', 'Create ChargeSheet', 'open', '@Url.Action("create")?EmpIr=' + empirid, '#frmChargeSheet', 'Message :', 'Request Falied :', '#JqGrid', 600, 600, '', '', function (data) { });
            var a = "@Request.RequestContext.HttpContext.Session["findcase"]";
                      
            $.post("@Url.Action("GetPreminaryEnquiryAction")", { data: a.toString(), data2: ""}, function (data) {
                if (data != null && data != "") {
                                     
                    if (data[0] != "") {
                        $('#PreminaryEnquiryAction').prop("readonly", true);
                        $('#PreminaryEnquiryAction').val(data[0]);
                    }
                    else {
                        $('#PreminaryEnquiryAction').prop("readonly", false);
                        $('#PreminaryEnquiryAction').val("");
                    }
                }
                else {
                    
                    alert("Data Null");
                }
            });

        });
     function AssignData() {
         dt = $('#JqGrid').P2BGrid.P2BEdDelV('#JqGrid', 'Id');
     }
     $('#Edit').on('click', function () {
         AssignData();

             $('#Create_Dialog').P2BEditModalDialog('@Url.Action("Edit")', dt.Id, '@Url.Action("EditSave")', "Edit ChargeSheet", '#frmChargeSheet', dt.Id, 'Message : ', 'Request Falied :', '#JqGrid', 500, 620, '', '', function (data) {
             //Compulsory for authorisation
             var val = null;
             $.each(data[0], function (i, k) {
                 $('#frmChargeSheet').trigger("reset");
                 $('#Narration').val(k.Narration);
                 $('#ChargeSheetNo').val(k.ChargeSheetNo);
                 $('#ReplyPeriod').val(k.ReplyPeriod);

                 
                 $('#ChargeSheetDetails').val(k.ChargeSheetDetails);
                 if (k.ChargeSheetDate != null)
                     $('#ChargeSheetDate').val(DateConvert(k.ChargeSheetDate));
                 else
                     $('#ChargeSheetDate').val();

                 var a = "@Request.RequestContext.HttpContext.Session["findcase"]";
                      
                 $.post("@Url.Action("GetPreminaryEnquiryAction")", { data: a.toString(), data2: ""}, function (data) {
                     if (data != null && data != "") {
                                     
                         if (data[0] != "") {
                             $('#PreminaryEnquiryAction').prop("readonly", true);
                             $('#PreminaryEnquiryAction').val(data[0]);
                         }
                         else {
                             $('#PreminaryEnquiryAction').prop("readonly", false);
                             $('#PreminaryEnquiryAction').val("");
                         }
                     }
                     else {
                    
                         alert("Data Null");
                     }
                 });

             });
             $.each(data[1], function (i, k) {
                 $('#EmployeeDocumentsList').P2BLookUpEncapsulate('#EmployeeDocumentsList', 'EmployeeDocumentsList', k.ChargesheetEmployeedoc_Id, k.ChargesheetEmployeedocFullDetails, 'EmployeeDocumentsList', '#Edit-HOCalendar-Department,#Remove-HOCalendar-Department', 'A');
             });
         });
     });
     $('<div></div>').P2BPartialCreateModalDialog();
     $('#Create-EmployeeDocuments-PreminaryEnquiryAction').on("click", function (event) {

      
         var a = $('#EmpCode').val();

         $('<div></div>').P2BConfidentialModelDialog({
             htmlurl: "@Url.Action("partial", "EmployeeDocuments")",
             submiturl: "@Url.Action("Create", "EmployeeDocuments")?EmpCode=" + a,
         form: '#frmCandidateDocs',
         height: "400",
         type: "FILE",
         width: "500",
         title: "DocumentUpload",
         BeforeSendurl: "true",
         returnfun: function (data) {
             $('#EmployeeDocumentsList').P2BLookUpEncapsulate('#EmployeeDocumentsList', 'EmployeeDocumentsList', data.Id, data.Val, 'EmployeeDocumentsList', '', 'A');
         },
         });
     event.preventDefault();
           
 });
        $('#View').button().on('click', function () {
            AssignData();
            $('#Create_Dialog').P2BViewModalDialog('@Url.Action("Edit")', dt.Id, 'View ChargeSheet', '', '', 500, 620, '#Autho', '@Url.Action("AuthSave")', dt.Id, '', '', '', '', '#JqGrid', function (data) {           
                //Compulsory for authorisation
                var val = null;
                $.each(data[0], function (i, k) {
                    $('#frmChargeSheet').trigger("reset");
                    $('#Narration').val(k.Narration);
                    $('#ChargeSheetNo').val(k.ChargeSheetNo);
                    $('#ReplyPeriod').val(k.ReplyPeriod);
                    $('#ChargeSheetDetails').val(k.ChargeSheetDetails);
                    if (k.ChargeSheetDate != null)
                        $('#ChargeSheetDate').val(DateConvert(k.ChargeSheetDate));
                    else
                        $('#ChargeSheetDate').val();

                    var a = "@Request.RequestContext.HttpContext.Session["findcase"]";
                      
                    $.post("@Url.Action("GetPreminaryEnquiryAction")", { data: a.toString(), data2: ""}, function (data) {
                        if (data != null && data != "") {
                                     
                            if (data[0] != "") {
                                $('#PreminaryEnquiryAction').prop("readonly", true);
                                $('#PreminaryEnquiryAction').val(data[0]);
                            }
                            else {
                                $('#PreminaryEnquiryAction').prop("readonly", false);
                                $('#PreminaryEnquiryAction').val("");
                            }
                        }
                        else {
                    
                            alert("Data Null");
                        }
                    });

                });
                $.each(data[1], function (i, k) {
                    $('#EmployeeDocumentsList').P2BLookUpEncapsulate('#EmployeeDocumentsList', 'EmployeeDocumentsList', k.ChargesheetEmployeedoc_Id, k.ChargesheetEmployeedocFullDetails, 'EmployeeDocumentsList', '#Edit-HOCalendar-Department,#Remove-HOCalendar-Department', 'A');
                })
            });
        });
     $('#Lookup-EmployeeDocuments-PreminaryEnquiryAction').on('click', function (event) {
         $('.dialog').P2BLookUpModal('@Url.Action("GetLookupDetailsEmployeeDoc", "chargesheet")', '', 'LookupDiv', 'ChargeSheetEmployeDoc Look Up Data', '#EmployeeDocumentsList', 'EmployeeDocumentsList', 4, 'EmployeeDocumentsList', '#frmChargeSheet', 'A', 'Lookup_table', 'PageNavPosition');
         event.preventDefault();
     });
     $('#Remove-EmployeeDocuments-PreminaryEnquiryAction').button().on('click', function (event) {

         //a = $('#EmployeeDocumentsList').P2BGetTableDataonSelectedRow('#EmployeeDocumentsList', 0);
         //b = a[0];
         var selectedRows = [];
         selectedRows = $('#EmployeeDocumentsList').P2BGetTableDataonSelectedRow('#EmployeeDocumentsList', 0);
         console.log("Verify...");



         $('<div></div>').P2BPartialDeleteModalDialog('', selectedRows, 0, 'Are you sure want to delete record???', 'Message : ', 'Request failed', '#EmployeeDocumentsList', $('#EmployeeDocumentsList').val(), 200, 200, '#frmChargeSheet', '#EmployeeDocumentsList');
         event.preventDefault();
     });
        //To bind old data if authorisation is true
        $('#Delete').button().click(function () {
            dt = $('#JqGrid').P2BGrid.P2BEdDelV('#JqGrid', 'ID');
            $('#Create_Dialog').P2BDeleteModalDialog('@Url.Action("Delete")', dt.Id, 'Are you sure want to remove record???', 'Message : ', 'Request failed', '#JqGrid', 200, 200);
        });
  

        $('#ChargeSheetDate').P2BDatePicker();
      
    });
</script>

<div class="Form_Bg">
    <div class="Form_Input">
        <div class="Button_Container">
            <button class="button" id="Create">Create</button>
            <button class="button" id="View">View</button>
            <button class="button" id="Edit">Edit</button>
            <button class="button" id="Delete">Delete</button>
            <button class="button" id="Autho">Authorized</button>
            <div id="Grid_Form">
                <div>
                    <table id="JqGrid"></table>
                    <div id="pager2"></div>
                </div>
            </div>
        </div>
    </div>
</div>


<div class="dialog">
    <div title="LookUp Data">
        <div class="LookupDiv"></div>
    </div>
    <div id="PageNavPosition">

    </div>
</div>
<div id="Create_Dialog">
    @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "frmChargeSheet", name = "frmChargeSheetServingStatus" }))
    {
           <div class=" row3 content_margine">
                 <label for="Preminary Enquiry Report" class="popup-content-label ">Preliminary Enquiry Action</label>
               <textarea rows="3" cols="30" name="PreminaryEnquiryAction" id="PreminaryEnquiryAction" class="popup-content-textbox must"></textarea>
                 </div>
        
        <div class="row3 content_margine">
            @Html.LabelFor(m => m.ChargeSheetNo, "ChargeSheetNo :", new { @class = "popup-content-label must" })
            @Html.TextBoxFor(m => m.ChargeSheetNo, new { @class = "popup-content-textbox must" })
        </div>
        <div class="row3 content_margine">
            @Html.LabelFor(m => m.ChargeSheetDate, "ChargeSheetDate :", new { @class = "popup-content-label must" })
            @Html.TextBoxFor(m => m.ChargeSheetDate, new { @class = "popup-content-textbox must" })
        </div>
        <div class="row3 content_margine">
            @Html.LabelFor(m => m.ReplyPeriod, "ReplyPeriod in days :", new { @class = "popup-content-label must" })
            @Html.TextBoxFor(m => m.ReplyPeriod, new { @class = "popup-content-textbox must" })
        </div>
        <div class="row3 content_margine">
            @Html.LabelFor(m => m.ChargeSheetDetails, "ChargeSheetDetails :", new { @class = "popup-content-label must" })
            @Html.TextAreaFor(m => m.ChargeSheetDetails, new { @class = "popup-content-textbox must" })
        </div><br>
        <div class=" row3 content_margine">
            @Html.LabelFor(m => m.EmployeeDocuments, "Employee Documents :", new { @class = "popup-content-label " })
            <div class="popup-content-table">
                <table class="lookuptableselected" id="EmployeeDocumentsList">
                    <tr><th>ID</th><th>LookUp Selected Description</th></tr>
                </table>
            </div>
            <div class="icon-row">
                <button data-p2btooltip="Lookup corresponding EmployeeDocuments" class=" popup-content-icon-lookup" id="Lookup-EmployeeDocuments-PreminaryEnquiryAction"><span class="ui-icon ui-icon-folder-open popup-content-iconmark"></span></button>
                <button data-p2btooltip="Create EmployeeDocuments " class=" popup-content-icon-create" id="Create-EmployeeDocuments-PreminaryEnquiryAction"><span class="ui-icon ui-icon-newwin popup-content-iconmark"></span></button>
                @*<button data-p2btooltip="Edit corresponding Contact Details" class=" popup-content-icon-edit" id="Edit-CorrsContactDetails-Employee"><span class="ui-icon ui-icon-pencil popup-content-iconmark"></span></button>*@
                <button data-p2btooltip="Delete EmployeeDocuments" class=" popup-content-icon-remove" id="Remove-EmployeeDocuments-PreminaryEnquiryAction"><span class="ui-icon ui-icon-trash popup-content-iconmark"></span></button>
            </div>
        </div>
        <br>
        <div class="row3 content_margine">
            @Html.LabelFor(m => m.Narration, " Narration:", new { @class = "popup-content-label must" })
            @Html.TextBoxFor(m => m.Narration, new { @class = "popup-content-textbox must" })
        </div>
    }
</div>
