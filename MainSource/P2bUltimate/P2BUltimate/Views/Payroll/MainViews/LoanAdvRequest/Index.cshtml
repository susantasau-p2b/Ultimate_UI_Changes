@{
    ViewBag.Title = "Loan Advance Request";
}
@model Payroll.LoanAdvRequest
<html>
<head>
    <title></title>
    <style>
        .icon-row {
            position: relative;
            left: 130px;
            top: -150px;
        }

        .popup-content-label {
            display: block;
            float: left;
            width: 170px;
        }

        .popup-content-textbox {
            margin-bottom: 1px;
            min-width: 150px;
        }

        .row3 {
            width: 548px;
        }

        .row2 {
            display: inline-block;
            width: 333px;
        }

        .add-dialog-content {
            float: right;
            right: 0;
            width: 678px;
        }

        .form-of-element {
            display: block;
            border: #DEDEDE solid 0.1px;
            width: auto;
            height: 351px;
            padding: 5px 2px;
            margin-top: 3px;
        }

        .select_div {
        }
    </style>

</head>
<body>
    <div class="Form_Bg">
        <div class="Form_Input">
            <div class="Button_Container">
                <div style="float:left">
                    <label id="lblPayMonth" class="popup-content-label must">PayMonth:</label>
                    <input name="txtPayMonth" type="text" id="txtPayMonth" class="date-picker" />
                </div>
                <button class="button" id="Load">Load</button>
                <button class="button" id="add">Add</button>
                <button class="button" id="Btn-Upload-Data">Upload</button>
                @*<button class="button" id="Delete">Delete</button>*@
                @*<button class="button" id="release">Release</button>*@

            </div>
        </div>
    </div>

    <div id="Grid_Form">
        <div>
            <div id="Container" class="container">
                <div id="Demo">
                    <table id="MyTable" class="display" cellspacing="0" width="100%">
                        <thead>
                            <tr>
                                <th>DD</th>
                                <th>Code</th>
                                <th>Name</th>
                                <th>Location</th>
                                <th>ID</th>
                            </tr>
                        </thead>
                        @*<tfoot>
                                <tr>
                                    <th>DD</th>
                                    <th>ID</th>
                                    <th>EmployeeCode</th>
                                    <th>EmployeeName</th>
                                </tr>
                            </tfoot>*@
                    </table>
                </div>
            </div>
            @*<table id="JqGrid"></table>
                <div id="pager2"></div>*@
        </div>
    </div>

    <div class="dialog">
        <div title="LookUp Data">
            <div class="LookupDiv"></div>
        </div>
        <div id="PageNavPosition">

        </div>
    </div>
    <div id="Create_Dialog">
        @using (Html.BeginForm(null, null, FormMethod.Post, new { Id = "frmLoanAdvRequest", name = "frmLoanAdvRequest" }))
        {
            <input id="Autho_Action" type="hidden" name="Autho_Action" />
            <input id="Autho_Allow" type="hidden" name="Autho_Allow" />
            <input id="geo_id" name="geo_id" class="filter_structure_id" />
            <input id="pay_id" name="pay_id" class="filter_structure_id" />
            <input id="fun_id" name="fun_id" class="filter_structure_id" />
            <div class="filter-div">
                <label class="advance_filter_label">Advance Filter<span class="advance_filter_sysmbol_class_plus" id="Advance-Filter-Symbol"></span></label>
                <div id="FormFilter"></div>
            </div>
            <div class="form-of-element">

                <div class="fileremployee">
                    <div class="employee-transcationdiv" style="float:left">
                        <div><label>Search : </label><input type="text" id="Employee-Search" /></div>
                        <table cellspacing="0" cellpadding="1" class="employee-transcationtable" id="Employee-Table">
                            <tr><th><input type="checkbox" id="Case-Employee" /></th><th>Employee</th></tr>
                        </table>
                    </div>
                </div>

                <div class="add-dialog-content">
                    <div class="row3 content_margine">
                        <div id="LoanAdvanceHeadlist_old"></div>
                        @Html.LabelFor(m => m.LoanAdvanceHead, "Loan Advance Head :", new { @class = "popup-content-label must" })
                        <div class="popup-content-table">
                            <table class="lookuptableselected" id="LoanAdvanceHeadlist">
                                <tr><th>Id</th><th>LookUp Selected Description</th></tr>
                            </table>
                        </div>
                        <div class="icon-row">
                            <button data-p2btooltip="Lookup LoanAdvance Head" class="popup-content-icon-lookup" id="Lookup-LoanAdvanceHead-LoanAdvRequest"><span class="ui-icon ui-icon-folder-open popup-content-iconmark"></span></button>
                            <button data-p2btooltip="Remove LoanAdvance Head" class="popup-content-icon-remove" id="Remove-LoanAdvanceHead-LoanAdvRequest"><span class="ui-icon ui-icon-trash popup-content-iconmark"></span></button>
                        </div>
                    </div>
                    <div class="row3 content_margine">                 
                        @Html.LabelFor(m => m.LoanAccBranch, " Loan Account Branch:", new { @class = "popup-content-label must" })
                        <div class="popup-content-table">
                            <table class="lookuptableselected" id="LoanAccBranchlist">
                                <tr><th>Id</th><th>LookUp Selected Description</th></tr>
                            </table>
                        </div>
                        <div class="icon-row">
                            <button data-p2btooltip="Lookup Loan Account Branch" class="popup-content-icon-lookup" id="Lookup-LoanAccBranch-LoanAdvRequest"><span class="ui-icon ui-icon-folder-open popup-content-iconmark"></span></button>
                            <button data-p2btooltip="Remove Loan Account Branch" class="popup-content-icon-remove" id="Remove-LoanAccBranch-LoanAdvRequest"><span class="ui-icon ui-icon-trash popup-content-iconmark"></span></button>
                        </div>
                    </div>
                   
                    @*<div class="row2 select_div content_margine">@Html.LabelFor(m => m.LoanAccBranch, "Loan Account Branch :", new { @class = "popup-content-label must" })<select id="LoanAccBranchlist" name="LoanAccBranchlist" class="must" style="width:159px;"><option value="0">-Select-</option></select></div>*@
                    <div class="row2 content_margine">@Html.LabelFor(m => m.LoanAccNo, "Loan Account No :", new { @class = "popup-content-label must" })@Html.TextBoxFor(m => m.LoanAccNo, new { @class = "popup-content-textbox must" })</div>
                    <div class="row2 content_margine">@Html.LabelFor(m => m.RequisitionDate, "Requisition Date :", new { @class = "popup-content-label must" })@Html.TextBoxFor(m => m.RequisitionDate, new { @class = "popup-content-textbox must" })</div>
                    <div class="row2 content_margine">@Html.LabelFor(m => m.SanctionedDate, "Sanctioned Date :", new { @class = "popup-content-label must" })@Html.TextBoxFor(m => m.SanctionedDate, new { @class = "popup-content-textbox must" })</div>
                    <div class="row2 content_margine">@Html.LabelFor(m => m.LoanAppliedAmount, "Loan Applied Amount :", new { @class = "popup-content-label must" })@Html.TextBoxFor(m => m.LoanAppliedAmount, new { @class = "popup-content-textbox must" })</div>
                    <div class="row2 content_margine">@Html.LabelFor(m => m.LoanSanctionedAmount, "Loan Sanctioned Amount :", new { @class = "popup-content-label must" })@Html.TextBoxFor(m => m.LoanSanctionedAmount, new { @class = "popup-content-textbox must" })</div>
                    <div class="row2 content_margine">@Html.LabelFor(m => m.MonthlyInstallmentAmount, "Monthly Installment Amount :", new { @class = "popup-content-label must" })@Html.TextBoxFor(m => m.MonthlyInstallmentAmount, new { @class = "popup-content-textbox must" })</div>
                    <div class="row2 content_margine">@Html.LabelFor(m => m.TotalInstall, "Total Install :", new { @class = "popup-content-label must" })@Html.TextBoxFor(m => m.TotalInstall, new { @class = "popup-content-textbox must" })</div>
                    <div class="row2 content_margine">@Html.LabelFor(m => m.MonthlyPricipalAmount, "Monthly Principal Amount :", new { @class = "popup-content-label must" })@Html.TextBoxFor(m => m.MonthlyPricipalAmount, new { @class = "popup-content-textbox must" })</div>
                    <div class="row2 content_margine">@Html.LabelFor(m => m.MonthlyInterest, "Monthly Interest :", new { @class = "popup-content-label must" })@Html.TextBoxFor(m => m.MonthlyInterest, new { @class = "popup-content-textbox must" })</div>

                    <div class="row2 content_margine">@Html.LabelFor(m => m.Narration, "Narration :", new { @class = "popup-content-label must" })@Html.TextBoxFor(m => m.Narration, new { @class = "popup-content-textbox must" })</div>
                    <div class="row2 content_margine">@Html.LabelFor(m => m.EnforcementDate, "Enforcement Date :", new { @class = "popup-content-label must" })@Html.TextBoxFor(m => m.EnforcementDate, new { @class = "popup-content-textbox must" })</div>
                    <div class="row2 content_margine">
                        @Html.LabelFor(m => m.IsActive, "Active :", new { @class = "popup-content-label" })
                        <div class="popup_radio_button radio_button_div_1">
                            <span class="popup_radio_button radio_button_div_1">
                                <input type="radio" id="radio1" name="IsActive" value="true" checked="checked" /> <label class="ui-corner-left" for="radio1">Yes</label>
                                <input type="radio" id="radio2" name="IsActive" value="false" /> <label class="ui-corner-right" for="radio2">No</label>
                            </span>
                        </div>
                    </div>
                    <div class="row2 content_margine" style="visibility:hidden">@Html.LabelFor(m => m.CloserDate, "Closer Date :", new { @class = "popup-content-label" })@Html.TextBoxFor(m => m.CloserDate, new { @class = "popup-content-textbox", disabled = "disabled" })</div>
                </div>
            </div>

        }
    </div>
</body>
</html>
<script>
    $(document).ready(function (e) {
        $('button').button();

        $('input[name="IsActive"]:radio').change(function () {
            if (this.value == "false") { $('#CloserDate').prop("disabled", false); $('#CloserDate').val(""); }
            else { $('#CloserDate').prop("disabled", true); }
        });

        $('#Load').on('click', function (e) {
            //$('#JqGrid').PostGridData({ url: url, filter: $('#txtPayMonth').val() });
        });
        $('#PayMonth,#txtPayMonth').MonthYearPicker();
        // PayMonthObj();
        $('#Load').on('click', function () {

            if ($('#txtPayMonth').val()) {
                $.LocalStorageHelper("LoanAdvRequest_LoadEmp", $('#txtPayMonth').val());
                //  localStorage.setItem("LoanAdvRequest_LoadEmp", $('#txtPayMonth').val());
                //PayMonthObj.SetMonth($('#txtPayMonth').val());
            }
            //paramdataload = PayMonthObj.GetMonth();
            //   console.log(PayMonthObj.GetMonth());
            // localStorage.setItem("LoanAdvRequest_LoadEmp", paramdataload);

        });
        $('#reset').on('click', function () {
            //localStorage.setItem("LoanAdvRequest_LoadEmp", "");
            $.LocalStorageHelper("LoanAdvRequest_LoadEmp", $('#txtPayMonth').val());
            //  PayMonthObj.SetMonth();
            $('#txtPayMonth').val("");
            // console.log(PayMonthObj.GetMonth());
        });
        //var PayMonthObj = {
        //    Month: null,
        //    SetMonth: function (val) {
        //        if (val != null || val != undefined) this.Month = val;
        //        this.Month = null;
        //    },
        //    GetMonth: function () {
        //        return this.Month;
        //    }

        //};
        //$('#loademp').on('click', function () {
        //    if ($('#txtPayMonth').val()) {
        //        PayMonthObj.SetMonth($('#txtPayMonth').val());
        //    }
        //});
        if ($("#txtPayMonth").val() == "") {
            var dt = new Date();
            var month = dt.getMonth() + 1;
            month = month < 10 ? '0' + month : '' + month;
            $("#txtPayMonth").val(month + "/" + dt.getFullYear());
        }


        $('#MyTable').MultiLevelInlineEditGrid({
            url: "@Url.Action("Emp_Grid")",
            editurl: "@Url.Action("EditGridDetails", "LoanAdvRequest")",
            htmurl: "@Url.Action("partial", "LoanAdvRequest")",
            submiturl: "@Url.Action("GridEditSave", "LoanAdvRequest")",
            columnname: ["Code", "Name", "Location", "Id", ],
            childheader: ["LoanAdvHead", "LoanAccNo", "LoanAccBranch", "ReqDate", "EnforcementDate", "LoanAppliedAmt", "LoanSancAmt", "MonthlyInterest", "MonthlyPricipalAmount", "MonthlyInstallAmt", "TotalInstall", "LoanStatus",
                "CloserDate", "Id"],
            //childheader: ["Id", "LoanAdvHead", "RequisitionDate", "EnforcementDate", "LoanAppliedAmt", "LoanSanctionedAmt", "MonthlyInstallmentAmt", "TotalInstallment", "LoanAccBranch", "LoanAccNo"],
            childurl: "@Url.Action("Get_LoanAdvReq", "LoanAdvRequest")",
            tableheader: "Loan Advance Request",
            childurlColumnNo: "4"
        });

        $.DataTableChildManipulation = function (init, id, parentid, htmurl, editurl, submiturl) {
            var parent_element = $(init).parents('td:last').parent().prev();
            console.log(parent_element);
            var dt = $('#MyTable').DataTable();
            var htmlcomponant = {
                init: init,
                Id: id,
                idx: parentid,
                htmurl: htmurl,
                editurl: editurl,
                submiturl: submiturl,
            };
            if ($(init).hasClass('ui-icon-newwin')) {
                $('<div></div>').PartialCreateDialog({
                    height: 'auto',
                    width: '35%',
                    form: "#Edit-loanadvrequest",
                    htmlurl: "@Url.Action("GridPartial", "LoanAdvRequest")",
                    state: "open",
                    mode: "View",
                    editurl: "@Url.Action("GridEditData", "LoanAdvRequest")",
                    submiturl: "@Url.Action("GridEditSave", "LoanAdvRequest")",
                    editdata: id,
                    forwarddata: id,
                    returndatafunction: function (returndata) {
                        $('#Edit-loanadvrequest').trigger('reset');
                        $.each(returndata.returndata, function (i, k) {
                            $('#LoanAdvanceHead-edit').val(k.LoanAdvanceHead);
                            $('#TotalInstallment-edit').val(k.TotalInstallement);
                            $('[name="IsActive"]').val([k.ISActive]).button().button("refresh");
                            $('#CloserDate-edit').val(k.CloserDate);
                            $('#LoanAccNo-edit').val(k.LoanAccNo);
                            $('#Edit-LoanAccBranch').P2BSelectMenuAppend("@Url.Action("LoanAccBranchDrop")", "", k.LoanAccBranch);

                        });
                    },
                });
            } else if ($(init).hasClass('ui-icon-pencil')) {
                // //debugger
                $('<div></div>').PartialCreateDialog({
                    height: 'auto',
                    width: '35%',
                    form: "#Edit-loanadvrequest",
                    htmlurl: "@Url.Action("GridPartial", "LoanAdvRequest")",
                    state: "open",
                    mode: "Edit",
                    editurl: "@Url.Action("GridEditData", "LoanAdvRequest")",
                    submiturl: "@Url.Action("GridEditSave", "LoanAdvRequest")",
                    editdata: id,
                    forwarddata: id,
                    returndatafunction: function (returndata) {
                        $('#Edit-loanadvrequest').trigger('reset');
                        $.each(returndata.returndata, function (i, k) {
                            $('#LoanAdvanceHead-edit').val(k.LoanAdvanceHead);
                            $('#TotalInstallment-edit').val(k.TotalInstallement);
                            $('[name="IsActive"]').val([k.ISActive]).button().button("refresh");
                            $('#CloserDate-edit').val(k.CloserDate);
                            $('#LoanAccNo-edit').val(k.LoanAccNo);
                            $('#Edit-LoanAccBranch').P2BSelectMenuAppend("@Url.Action("LoanAccBranchDrop")", "", k.LoanAccBranch);

                        });
                    },
                    submitfun: function (data) {
                        var row = dt.row(parent_element);
                        if (row.child.isShown()) {
                            parent_element.removeClass('details');
                            row.child.hide();
                        }
                    }
                });
            } else if ($(init).hasClass('ui-icon-trash')) {
                $('<div></div>').PartialCreateDialog({
                    state: "open",
                    mode: "Delete",
                    submiturl: "@Url.Action("Delete")",
                    forwarddata: id,
                    submitfun: function (data) {
                        var row = dt.row(parent_element);
                        if (row.child.isShown()) {
                            parent_element.removeClass('details');
                            row.child.hide();
                        }
                    }
                });
            }
        };

        function AssignData() {
            dt = $('#JqGrid').P2BGrid.P2BEdDelV('#JqGrid', 'Id');
        }

        $('#Advance-Filter-Symbol').on('click', function () {
            $("<div></div>").FilterDialog({
                width: 1000,
                height: 400,
                title: "Filter",
                htmlurl: "@Url.Action("Advance_partial", "Transcation")",
                returnat: function (data) {
                    //console.log(data);
                    var forwarddata = JSON.stringify(data);
                    $('#Employee-Table').P2BTransactionTableDynamic('#Employee-Search', '#Case-Employee', './Transcation/Get_Employelist_h?geo_id=' + forwarddata + '', "");
                },
                renderat: "#FormFilter", hierarchy: true,
            });
        });



        $('#Create_Dialog').P2BCreateDialog();
        $('#CreateRelease_dialog').P2BCreateDialog();
        //Create Function
        $('#add').on("click", function (event) {

            //$('#frmLoanAdvRequest').trigger("reset");
            $.LoadEmpByDefaultWOGeoId(false, $('#txtPayMonth').val());
            $('#Create_Dialog').P2BCreateDialog('', '', '', '', 'Create Loan Advance Request', 'open', '@Url.Action("Create")', '#frmLoanAdvRequest', 'Message :', 'Request Falied :', '#JqGrid', 570, 1055, '#LoanAdvanceHeadlist', '', function (data) { }, { validurl: "@Url.Action("ValidateForm")" });
            $('input[name="IsActive"]:radio').filter('[value=true]').prop('checked', true);
            $('#RequisitionDate').attr('readonly', true);
            $('#SanctionedDate').attr('readonly', true);
            $('#EnforcementDate').attr('readonly', true);
           // $('#LoanAccBranchlist').P2BSelectMenuAppend('@Url.Action("PopulateDropDownLocList", "LoanAdvRequest")', "", ""); // To bind dropdown on page load
            $("#MonthlyInterest").on('focusout', function () {

                var c = $("#MonthlyInstallmentAmount").val();
                var a = $("#MonthlyInterest").val();
                var b = $("#MonthlyPricipalAmount").val();
                var d = parseInt(a) + parseInt(b);

                if (parseInt(c) > parseInt(d)) {
                    $("#MonthlyInterest").val("");
                    alert("Monthly installment amount should not be greater than principal + Interest");
                }

                if (parseInt(c) < parseInt(d)) {
                    $("#MonthlyInterest").val("");
                    alert("Monthly installment amount should not be less than principal + Interest");
                }

            });

            $("#TotalInstall").on('focusout', function () {

                var a = $("#LoanSanctionedAmount").val();
                var b = $("#TotalInstall").val();
                var c = $("#MonthlyInstallmentAmount").val();

                var d = parseInt(b) * parseInt(c);

                if (parseInt(a) < parseInt(d)) {
                    //$("#TotalInstall").val("");
                    ////debugger;
                    var e = confirm("Total no of installments should not be greater than loan sanctioned amount");
                    if (e == true) {
                        $("#TotalInstall").val("");
                    }
                    else {
                        $("#TotalInstall").val(b);
                    };
                }

                if (parseInt(a) > parseInt(d)) {
                    ////debugger;
                    var d = confirm("Total no of installments should not be less than loan sanctioned amount");
                    if (d == true) {
                        $("#TotalInstall").val("");
                    }
                    else {
                        $("#TotalInstall").val(b);
                    };

                }

            });
            event.preventDefault();
        });



        $('#Lookup-LoanAdvanceHead-LoanAdvRequest').button().on('click', function (event) {
            $('.dialog').P2BLookUpModal('@Url.Action("GetLoanAdvHeadLKDetails", "LoanAdvRequest")', '', 'LookupDiv', 'Look Up Data', '#LoanAdvanceHeadlist', 'LoanAdvanceHeadlist', 5, 'LoanAdvanceHeadlist', '#frmLoanAdvRequest', 'N', '#Remove-LoanAdvanceHead-LoanAdvRequest', 'Lookup_table', 'PageNavPosition');
            event.preventDefault();
        });
        $('#Remove-LoanAdvanceHead-LoanAdvRequest').button().on('click', function (event) {
            //var a = [], b;
            //a = $('#LoanAdvanceHeadlist').P2BGetTableDataonSelectedRow('#LoanAdvanceHeadlist', 0);
            //b = a[0];
            var selectedRows = [];
            selectedRows = $('#LoanAdvanceHeadlist').P2BGetTableDataonSelectedRow('#LoanAdvanceHeadlist', 0);
            $('<div></div>').P2BPartialDeleteModalDialog('', selectedRows, 0, 'Are you sure want to delete record???', 'Message : ', 'Request failed', '#LoanAdvanceHeadlist', $('#LoanAdvanceHeadlist').val(), 200, 200, '#frmLoanAdvRequest', '#LoanAdvanceHeadlist', '');
            event.preventDefault();
        });

        $('#Lookup-LoanAccBranch-LoanAdvRequest').button().on('click', function (event) {
            $('.dialog').P2BLookUpModal('@Url.Action("PopulateDropDownLocList", "LoanAdvRequest")', '', 'LookupDiv', 'Look Up Data', '#LoanAccBranchlist', 'LoanAccBranchlist', 5, 'LoanAccBranchlist', '#frmLoanAdvRequest', 'N', '#Remove-LoanAccBranch-LoanAdvRequest', 'Lookup_table', 'PageNavPosition');
            event.preventDefault();
        });
        $('#Remove-LoanAccBranch-LoanAdvRequest').button().on('click', function (event) {
            //var a = [], b;
            //a = $('#LoanAccBranchlist').P2BGetTableDataonSelectedRow('#LoanAccBranchlist', 0);
            //b = a[0];
            var selectedRows = [];
            selectedRows = $('#LoanAccBranchlist').P2BGetTableDataonSelectedRow('#LoanAccBranchlist', 0);
            $('<div></div>').P2BPartialDeleteModalDialog('', selectedRows, 0, 'Are you sure want to delete record???', 'Message : ', 'Request failed', '#LoanAccBranchlist', $('#LoanAccBranchlist').val(), 200, 200, '#frmLoanAdvRequest', '#LoanAccBranchlist', '');
            event.preventDefault();
        });

        $('#Btn-Upload-Data').on('click', function (e) {
            $('<div></div>').PartialCreateDialog({
                height: '500',
                width: '700',
                form: '#frmlookup',
                title: 'Upload',
                htmlurl: '@Url.Action("PARTIAL","JSONUPLOAD")',
                state: "open",
                mode: 'edit',
                editurl: null,
                submiturl: null,
                editdata: 'a',
                forwarddata: 'a',
                returndatafunction: function (data) {
                    console.log(data);
                },
                submitfun: function (data) {
                    console.log(data);
                }
            });
        });

        $('.popup_radio_button').controlgroup();
        $('#SalaryHeadReleaselist').selectmenu().selectmenu("menuWidget");
        $('#Autho').onClickGrid('#JqGrid', '@Url.Action("P2BGrid")', '@Url.Action("P2BGrid")');
        $('#Code').ValidateTextBox({ maxlength: 10, AlphaNum: true });
        $('#Name').MaxLength(50);
        $('#LoanAppliedAmount,#LoanSanctionedAmount,#MonthlyInstallmentAmount,#TotalInstall,#MonthlyPricipalAmount,#MonthlyInterest').ForceAmount();
        $('#RequisitionDate,#SanctionedDate,#EnforcementDate,#CloserDate').P2BDatePicker();

    });
</script>
