@{
    ViewBag.Title = "ResignationRequest";
}
@model EMS.ResignationRequest
<html>
<head>
    <title></title>
    <style>
        .icon-row {
            position: relative;
            left: 130px;
            top: -150px;
        }

        .popup-content-label {
            display: block;
            float: left;
            width: 237px;
        }

        .popup-content-textbox {
            margin-bottom: 1px;
            min-width: 150px;
        }

        .row3 {
            width: 548px;
        }

        .row2 {
            display: inline-block;
            width: 333px;
        }

        .add-dialog-content {
            float: right;
            right: 0;
            width: 678px;
        }

        .form-of-element {
            display: block;
            border: #DEDEDE solid 0.1px;
            width: auto;
            height: 351px;
            padding: 5px 2px;
            margin-top: 3px;
        }

        .select_div {
        }
    </style>

</head>
<body>
    <div class="Form_Bg">
        <div class="Form_Input">
            <div class="Button_Container">
              
                @*<button class="button" id="add">Add</button>*@
             
                <button class="button" id="Create">Create</button>
                <button class="button" data-typeofbtn="process" id="View">View</button>
                <button class="button" data-typeofbtn="release" id="Edit">Edit</button>
                <button class="button" data-typeofbtn="delete" id="Delete">Delete</button>
                <div id="Grid_Form">
                    <div>
                        <table id="JqGrid"></table>
                        <div id="pager2"></div>
                    </div>
                </div>

            </div>
        </div>
    </div>

    @*<div id="Grid_Form">
        <div>
            <div id="Container" class="container">
                <div id="Demo">
                    <table id="MyTable" class="display" cellspacing="0" width="100%">
                        <thead>
                            <tr>
                                <th>DD</th>
                                <th>Code</th>
                                <th>Name</th>
                                <th>Location</th>
                                <th>ID</th>
                            </tr>
                        </thead>
                       
                    </table>
                </div>
            </div>
          
        </div>
    </div>*@

    <div class="dialog">
        <div title="LookUp Data">
            <div class="LookupDiv"></div>
        </div>
        <div id="PageNavPosition">

        </div>
    </div>
    <div id="Create_Dialog">
        @using (Html.BeginForm(null, null, FormMethod.Post, new { Id = "frmResignationRequest", name = "frmResignationRequest" }))
        {
            <input id="Autho_Action" type="hidden" name="Autho_Action" />
            <input id="Autho_Allow" type="hidden" name="Autho_Allow" />
            <input id="BlockId" type="hidden" name="BlockId" />
            <input id="geo_id" name="geo_id" class="filter_structure_id" />
            <input id="pay_id" name="pay_id" class="filter_structure_id" />
            <input id="fun_id" name="fun_id" class="filter_structure_id" />
            <div class="filter-div">
                <label class="advance_filter_label">Advance Filter<span class="advance_filter_sysmbol_class_plus" id="Advance-Filter-Symbol"></span></label>
                <div id="FormFilter"></div>
            </div>
            <div class="form-of-element">

                <div class="fileremployee" id="Empl_list_h">
                    <div class=" employee-transcationdiv" style="float:left">
                    <div><label>Search : </label><input type="text" id="Employee-Search" /></div>
                    <table cellspacing="0" cellpadding="1" class="employee-transcationtable" id="Employee-Table">
                        <tr><th><input type="checkbox" id="Case-Employee" /></th><th>Employee</th></tr>
                    </table>
                </div>
                </div>

                <div class="add-dialog-content">
                    <div class="row3 content_margine">
                        @Html.LabelFor(m => m.ResignDate, "Resign Date :", new { @class = "popup-content-label must" })@Html.TextBoxFor(m => m.ResignDate, new { @class = "popup-content-textbox must", @maxlength = "10" })
                    </div>
                    <div class="row3 content_margine">
                        @Html.LabelFor(m => m.LastWorkingDateByEmp, "Last Working Date By Emp :", new { @class = "popup-content-label must" })@Html.TextBoxFor(m => m.LastWorkingDateByEmp, new { @class = "popup-content-textbox must", @maxlength = "10" })
                    </div>
                    <div class="row3 content_margine">
                        @Html.LabelFor(m => m.LastWorkingDateByPolicy, "Last Working Date By Policy :", new { @class = "popup-content-label must" })@Html.TextBoxFor(m => m.LastWorkingDateByPolicy, new { @class = "popup-content-textbox must", @maxlength = "10", @readonly = "readonly" })
                    </div>

                    <div class="row3 content_margine">
                        @Html.LabelFor(m => m.IsRequestForNoticePeriodWaiveOff, "Is Request For Notice Period WaiveOff :", new { @class = "popup-content-label must" })
                        <div class="popup_radio_button radio_button_div_1">
                            <span class="popup_radio_button radio_button_div_1">
                                <input type="radio" id="radio5" name="IsRequestForNoticePeriodWaiveOff" value="true" /><label class="ui-corner-left" for="radio5">Yes</label>
                                <input type="radio" id="radio6" name="IsRequestForNoticePeriodWaiveOff" value="false" checked="checked" /><label class="ui-corner-right" for="radio6">No</label>
                            </span>
                        </div>
                    </div>

                    <div class="row3 content_margine">
                        @Html.LabelFor(m => m.IsReadyForNoticePeriodPay, "Is Ready For Notice Period Pay :", new { @class = "popup-content-label must" })
                        <div class="popup_radio_button radio_button_div_2">
                            <span class="popup_radio_button radio_button_div_2">
                                <input type="radio" id="radio3" name="IsReadyForNoticePeriodPay" value="true" /><label class="ui-corner-left" for="radio3">Yes</label>
                                <input type="radio" id="radio4" name="IsReadyForNoticePeriodPay" value="false" checked="checked" /><label class="ui-corner-right" for="radio4">No</label>
                            </span>
                        </div>
                    </div>


                    <div class="row3 content_margine">
                        @Html.LabelFor(m => m.ReasonOfLeaving, "Reason Of Leaving  :", new { @class = "popup-content-label must" })@Html.TextBoxFor(m => m.ReasonOfLeaving, new { @class = "popup-content-textbox must" })
                    </div>


                    <div class="row3 content_margine">
                        @Html.LabelFor(m => m.Narration, "Narration  :", new { @class = "popup-content-label must" })@Html.TextBoxFor(m => m.Narration, new { @class = "popup-content-textbox must" })
                    </div>

                    <div class="row3 content_margine">
                        @Html.LabelFor(m => m.IsRequestAck, "Is Request Ack :", new { @class = "popup-content-label must" })
                        <div class="popup_radio_button radio_button_div_1">
                            <span class="popup_radio_button radio_button_div_1">
                                <input type="radio" id="radio1" name="IsRequestAck" value="true" /><label class="ui-corner-left" for="radio1">Yes</label>
                                <input type="radio" id="radio2" name="IsRequestAck" value="false" checked="checked" /><label class="ui-corner-right" for="radio2">No</label>
                            </span>
                        </div>
                    </div>
                                       
                    <div id="RequestAckdiv1" class="row3 content_margine">
                        @Html.LabelFor(m => m.RequestAckDate, "Request Ack Date :", new { @class = "popup-content-label " })@Html.TextBoxFor(m => m.RequestAckDate, new { @class = "popup-content-textbox", @maxlength = "10" })
                    </div>


                   

                    
                  

                    

                    
                    @*<div class="row2 select_div content_margine"><label class="popup-content-label must">LTC Block</label><input name="txtLTCBlock" type="text" id="txtLTCBlock" /></div>
                        <div class="row2 select_div content_margine">@Html.LabelFor(m => m.LTC_TYPE, "LTC Type :", new { @class = "popup-content-label must" })<select id="LTCTypelist" name="LTCTypelist" class="drop must" style="width:159px;"><option value="0">-Select-</option></select></div>
                        <div class="row2 content_margine">
                            @Html.LabelFor(m => m.LvNewReq, "Leave Requisition:", new { @class = "popup-content-label must" })<select id="LvReqList" name="LvReqList" style="width:161px;" class="drop must"><option value="0">-Select-</option></select>
                        </div>
                        <div class="row2 content_margine">@Html.LabelFor(m => m.DateOfAppl, "Requisition Date :", new { @class = "popup-content-label must" })@Html.TextBoxFor(m => m.DateOfAppl, new { @class = "popup-content-textbox must" })</div>
                        <div class="row2 content_margine">@Html.LabelFor(m => m.TravelStartDate, "Travel Start Date :", new { @class = "popup-content-label must" })@Html.TextBoxFor(m => m.TravelStartDate, new { @class = "popup-content-textbox must" })</div>
                        <div class="row2 content_margine">@Html.LabelFor(m => m.TravelEndDate, "Travel End Date :", new { @class = "popup-content-label must" })@Html.TextBoxFor(m => m.TravelEndDate, new { @class = "popup-content-textbox must" })</div>
                        <div class="row2 content_margine">@Html.LabelFor(m => m.ProposedPlace, "Proposed Place :", new { @class = "popup-content-label must" })@Html.TextBoxFor(m => m.ProposedPlace, new { @class = "popup-content-textbox must" })</div>
                        <div class="row2 content_margine">@Html.LabelFor(m => m.LTC_Eligible_Amt, "LTC Eligible Amount :", new { @class = "popup-content-label must" })@Html.TextBoxFor(m => m.LTC_Eligible_Amt, new { @class = "popup-content-textbox must" })</div>
                        <div class="row2 content_margine">@Html.LabelFor(m => m.LTCAdvAmt, "LTC Advance Amount :", new { @class = "popup-content-label must" })@Html.TextBoxFor(m => m.LTCAdvAmt, new { @class = "popup-content-textbox must" })</div>
                        <div class="row2 content_margine">@Html.LabelFor(m => m.LTCSanctionedAmt, "LTC Sanctioned Amount :", new { @class = "popup-content-label must" })@Html.TextBoxFor(m => m.LTCSanctionedAmt, new { @class = "popup-content-textbox must" })</div>
                        <div class="row2 content_margine">@Html.LabelFor(m => m.Remark, "Remark :", new { @class = "popup-content-label must" })@Html.TextBoxFor(m => m.Remark, new { @class = "popup-content-textbox must" })</div>*@


                </div>
            </div>

        }
    </div>
</body>
</html>
<script>
    $(document).ready(function (e) {
        $('button').button();

       
        var ColNames = [];
        var ColModel = [];
        var SortName, Caption, url, width, height;
        ColModel = ['Code', 'Name', 'ResignDate', 'EmplastWorkdate', 'CompPolicyLastWorkdate', 'Id'];
        ColNames = ['Code', 'Name', 'ResignDate', 'EmplastWorkdate', 'CompPolicyLastWorkdate', 'Id'];
        SortName = 'Id';
        Caption = 'Resignation Request';
        url = '@Url.Action("P2BGrid")';
        width = 1000;
        height = 150;
        $('#JqGrid').P2BGrid(ColNames, ColModel, SortName, Caption, url, width, height);
       
       

        @*$('#MyTable').MultiLevelInlineEditGrid({
            url: "@Url.Action("Emp_Grid")",
            editurl: "@Url.Action("EditGridDetails", "ResignationRequest")",
            htmurl: "@Url.Action("partial", "ResignationRequest")",
            submiturl: "@Url.Action("GridEditSave", "ResignationRequest")",
            columnname: ["Code", "Name", "Location", "Id"],
            childheader: ["BlockPeriod", "ReqDate", "LTCType", "TravelStartDate", "TravelEndDate", "ProposedPlace", "EligibleAmt", "AdvanceAmt", "Remark", "ClaimSettleStatus", "Id"],
            //childheader: ["Id", "LoanAdvHead", "RequisitionDate", "EnforcementDate", "LoanAppliedAmt", "LoanSanctionedAmt", "MonthlyInstallmentAmt", "TotalInstallment", "LoanAccBranch", "LoanAccNo"],
            childurl: "@Url.Action("Get_LTCAdvClaim", "ResignationRequest")",
            tableheader: "LTC Advance Claim",
            childurlColumnNo: "4"
        });

        $.DataTableChildManipulation = function (init, id, parentid, htmurl, editurl, submiturl) {
            var parent_element = $(init).parents('td:last').parent().prev();
            var chhassa = $(parent_element).find('td:eq(1)').html();
            console.log(parent_element);
            var dt = $('#MyTable').DataTable();
            var htmlcomponant = {
                init: init,
                Id: id,
                idx: parentid,
                htmurl: htmurl,
                editurl: editurl,
                submiturl: submiturl,
            };
            if ($(init).hasClass('ui-icon-newwin')) {
                $('<div></div>').PartialCreateDialog({
                    height: 'auto',
                    width: 'auto',
                    form: "#Edit-ResignationRequest",
                    htmlurl: "@Url.Action("GridPartial", "ResignationRequest")",
                    state: "open",
                    mode: "View",
                    editurl: "@Url.Action("GridEditData", "ResignationRequest")",
                    submiturl: "@Url.Action("GridEditSave", "ResignationRequest")",
                    editdata: id,
                    forwarddata: id,
                    returndatafunction: function (returndata) {
                        $.each(returndata.returndata, function (i, k) {
                            $('#Edit-ProposedPlace').val(k.ProposedPlace);
                            $('#Edit-LTCEligibleAmount').val(k.EligibleAmount);
                            $('#Edit-LTCAdvanceAmount').val(k.AdvanceAmount);
                            $('#Edit-Remark').val(k.Remark);


                        });
                    },
                });
            } else if ($(init).hasClass('ui-icon-pencil')) {
                // //debugger
                $('<div></div>').PartialCreateDialog({
                    height: 'auto',
                    width: '35%',
                    form: "#EditGridForm",
                    htmlurl: "@Url.Action("GridPartial", "ResignationRequest")",
                    state: "open",
                    mode: "Edit",
                    editurl: "@Url.Action("GridEditData", "ResignationRequest")",
                    submiturl: "@Url.Action("GridEditSave", "ResignationRequest")",
                    editdata: id,
                    forwarddata: id,
                    returndatafunction: function (returndata) {
                        $.each(returndata.returndata, function (i, k) {
                            $('#Edit-ProposedPlace').val(k.ProposedPlace);
                            $('#Edit-LTCEligibleAmount').val(k.EligibleAmount);
                            $('#Edit-LTCAdvanceAmount').val(k.AdvanceAmount);
                            $('#Edit-Remark').val(k.Remark);

                        });
                    },
                    submitfun: function (data) {
                        var row = dt.row(parent_element);
                        if (row.child.isShown()) {
                            parent_element.removeClass('details');
                            row.child.hide();
                        }
                    }
                });
            } else if ($(init).hasClass('ui-icon-trash')) {
                // alert(chhassa);
                $('<div></div>').PartialCreateDialog({
                    state: "open",
                    mode: "Delete",
                    submiturl: "@Url.Action("Delete")",
                    forwarddata: id,
                    editdata: chhassa,
                    submitfun: function (data) {
                        var row = dt.row(parent_element);
                        if (row.child.isShown()) {
                            parent_element.removeClass('details');
                            row.child.hide();
                        }
                    }
                });
            }
        };*@

        function AssignData() {
            dt = $('#JqGrid').P2BGrid.P2BEdDelV('#JqGrid', 'Id');
        }
        $('#ResignDate').P2BDatePicker();

        function DateConvert(JsonDate) {
            var date = new Date(parseInt(JsonDate.substr(6)));
            var displayDate = $.datepicker.formatDate("dd/mm/yy", date);
            return displayDate;
        };
       

        $('input[name="IsRequestAck"]:radio').change(function () {
            if (this.value == "false") {
               
                $("#RequestAckdiv1").fadeOut();
            }
            else {
                $("#RequestAckdiv1").fadeIn();
               
            }
        });
        

       

        function ajaxloaderv2(cameform) {
            $('<a><i class="fa fa-circle-o-notch fa-spin fa-5x fa-fw ajax_loder" style="color: rgba(27, 187, 173, 0.93);z-index:999;" aria-hidden="true"></i></a>').appendTo(cameform);
        };
        $('#ResignDate').on('change', function (event) {
            var e = $('#Employee-Table').P2BGetTableDataonSelectedRow('#Employee-Table', 1);
            //if (e.val == "" || e.length == 0) {
            //    alert("Please select Employee");
            //      return false;
            //    }

            //  alert(e);
            //var h = [];
            //var j = [];
            //var l = [];
            $.ajax({
                url: '@Url.Action("GetPolicyDate", "ResignationRequest")',
                method: "POST",
                //beforeSend: function () {
                //    //$('<div style="width:100%;height:100%;"><i class="fa fa-circle-o-notch fa-spin fa-5x fa-fw ajax_loder" style="color: rgba(27, 187, 173, 0.93);" aria-hidden="true"></i></div>').appendTo($(newDiv1).parent());
                //},
                data: $('#frmResignationRequest').serialize() + '&data=' + e,
                beforeSend: function () {
                    ajaxloaderv2('body');
                },
                success: function (data) {
                    $.each(data, function (i, k) {
                      
                        $("#LastWorkingDateByPolicy").val(k.LastWorkingDateByPolicy);
                       
                    });

                },
                complete: function () {
                    $('.ajax_loder').remove();
                }
            });
            event.preventDefault();
          
        });
        $("#ResignDate").on('focusout', function () {
            // alert('r');

            var a = $('#Employee-Table').P2BGetTableDataonSelectedRow('#Employee-Table', 1);
            if (a.val == "" || a.length == 0) {
                alert("Please select Employee");
                $("#ResignDate").val("");
                $("#LastWorkingDateByEmp").focus();
                return false;
            }
            event.preventDefault();
        });

        $('#Advance-Filter-Symbol').on('click', function () {
            $("<div></div>").FilterDialog({
                width: 1000,
                height: 400,
                title: "Filter",
                htmlurl: "@Url.Action("Advance_partial", "Transcation")",
                returnat: function (data) {
                    //console.log(data);
                    var forwarddata = JSON.stringify(data);
                    $('#Employee-Table').P2BTransactionTableDynamic('#Employee-Search', '#Case-Employee', './Transcation/Get_Employelist_h?geo_id=' + forwarddata + '', "");
                },
                renderat: "#FormFilter", hierarchy: true,
            });
        });


        $('#Create_Dialog').P2BCreateDialog();
        $('#CreateRelease_dialog').P2BCreateDialog();
        //Create Function
        $('#Create').on("click", function (event) {
            $('#Empl_list_h').fadeIn();
            $('#frmResignationRequest').trigger("reset");
            $.LoadEmpByDefault(true, '#TextPayMonth');
            $('#Create_Dialog').P2BCreateDialog('', '', '', '', 'Create Resignation Request', 'open', '@Url.Action("Create")', '#frmResignationRequest', 'Message :', 'Request Falied :', '#JqGrid', 570, 1055, '', '', function (data) { }, '');
            $('#LastWorkingDateByPolicy').attr('readonly', 'readonly');



            event.preventDefault();

        });

        $('#Edit').on('click', function () {
           
            AssignData();
            $('#Empl_list_h').fadeOut();
            @*$('#Create_Dialog').P2BEditModalDialog('@Url.Action("Edit")', dt.Id, '@Url.Action("EditSave")', "Edit Resignation Request Data", '#frmResignationRequest', dt.Id, 'Message : ', 'Request Falied :', '#JqGrid', 570, 1055, '#AddressList,#ContactDetailsList', '', function (data) {*@
            $('#Create_Dialog').P2BEditModalDialog('@Url.Action("Edit")?param=' + dt.Code, dt.Id, '@Url.Action("EditSave")?param=' + dt.Code, "Edit Resisgnation Request Information->" + JSON.stringify(dt) + "", '#frmResignationRequest', dt.Id, 'Message : ', 'Request Falied :', '#JqGrid', 570, 1055, '', '', function (data) {
                // setTimeout(function () {
                $.each(data[0], function (i, k) {
                  
                    $('#ReasonOfLeaving').val(k.ReasonOfLeaving);
                    $('#Narration').val(k.Narration);
                    $('#RequestAckDate').val(DateConvert(k.RequestAckDate));
                    $('#LastWorkingDateByEmp').val(DateConvert(k.LastWorkingDateByEmp));
                    $('#LastWorkingDateByPolicy').val(DateConvert(k.LastWorkingDateByPolicy));
                    $('#ResignDate').val(DateConvert(k.ResignDate));
                    $('[name="IsRequestAck"]').val([k.IsRequestAck]).button().button("refresh");
                    $('[name="IsReadyForNoticePeriodPay"]').val([k.IsReadyForNoticePeriodPay]).button().button("refresh");
                    $('[name="IsRequestForNoticePeriodWaiveOff"]').val([k.IsRequestForNoticePeriodWaiveOff]).button().button("refresh");
                });
                

                $('#Autho_Allow').val(data[3]); //Compulsory for authorisation
                // }, 2000);




            });
        });
      

        //View main page
        $('#View').button().click(function (event) {
            AssignData();
            $('#Empl_list_h').fadeOut();
            $('#Create_Dialog').P2BViewModalDialog('@Url.Action("Edit")', dt.Id, 'View Resignation Request Data', '#AddressList,#ContactDetailsList', '#Lookup-Address-Corporate,#Create-Address-Corporate,#Edit-Address-Corporate,#Remove-Address-Corporate,#Lookup-ContactDetails-Corporate,#Create-ContactDetails-Corporate,#Edit-ContactDetails-Corporate,#Remove-ContactDetails-Corporate', 570, 1055, '#Autho', '@Url.Action("AuthSave")', dt.Id, '', '', '', '', '#JqGrid', function (data) {
                $.each(data[0], function (i, k) {
                 
                    $('#ReasonOfLeaving').val(k.ReasonOfLeaving);
                    $('#Narration').val(k.Narration);
                    $('#RequestAckDate').val(DateConvert(k.RequestAckDate));
                    $('#LastWorkingDateByEmp').val(DateConvert(k.LastWorkingDateByEmp));
                    $('#LastWorkingDateByPolicy').val(DateConvert(k.LastWorkingDateByPolicy));
                    $('#ResignDate').val(DateConvert(k.ResignDate));
                    $('[name="IsRequestAck"]').val([k.IsRequestAck]).button().button("refresh");
                    $('[name="IsReadyForNoticePeriodPay"]').val([k.IsReadyForNoticePeriodPay]).button().button("refresh");
                    $('[name="IsRequestForNoticePeriodWaiveOff"]').val([k.IsRequestForNoticePeriodWaiveOff]).button().button("refresh");
                });

                $('#Autho_Allow').val(data[3]);

            });
        });
        //delete main page
        $('#Delete').button().click(function (event) {
            dt = $('#JqGrid').P2BGrid.P2BEdDelV('#JqGrid', 'Id');
            $('#Create_Dialog').P2BDeleteModalDialog('@Url.Action("Delete")', dt.Id, 'Are you sure want to remove record???', 'Message : ', 'Request failed', '#JqGrid', 200, 200);
            event.preventDefault();
        });
        $(function () {
            //$('#Date-edit,#DateOfCloser-edit,#DateOfMaturity-edit').P2BDatePicker();
            $('button').button();
            $('.popup_radio_button').controlgroup();
            $('#RequestAckDate,#LastWorkingDateByEmp,#ResignDate').P2BDatePicker();
            $('#LastWorkingDateByPolicy').attr('readonly');
        });
        $('.popup_radio_button').controlgroup();
        $('.drop').selectmenu().selectmenu("menuWidget");
        $('#Autho').onClickGrid('#JqGrid', '@Url.Action("P2BGrid")', '@Url.Action("P2BGrid")');


    });
</script>
