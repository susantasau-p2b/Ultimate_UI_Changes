@{
    ViewBag.Title = "TravelHotelBooking";
}
@model Payroll.TravelHotelBooking

<html>
<head>
    <title></title>

    <style>
        .icon-row {
            position: relative;
            left: 95px;
            top: -150px;
        }

        .transactiontablenew {
            border: 1px solid #c5c5c5;
            margin: 0 auto;
            /*width: 200px;*/
            display: block;
            overflow: auto;
            height: 500px;
            border-collapse: collapse;
        }

        .transactiondivnew {
            border: 1px solid #c5c5c5;
            margin: 0 auto;
            width: 507px;
            border-radius: 5px;
            height: 32px;
        }

            .transactiondivnew > div {
                display: inline-block;
                margin: 0 auto;
                padding: 4px;
            }

                .transactiondivnew > div > input {
                    box-sizing: initial;
                    display: inline-block;
                    margin: 0 auto;
                    width: 108px;
                }

        .transactiontablenew th, .transactiontablenew td {
            background: rgba(246, 246, 246, 0.64) none repeat scroll 0 0;
            padding: 5px;
            border-bottom: 1px solid #c5c5c5;
            border-right: 1px solid #c5c5c5;
            text-align: center;
            color: rgba(114, 113, 113, 0.9);
        }

            .transactiontablenew th:nth-child(1) > input, .transactiontablenew td:nth-child(1) > input {
                margin: 0 auto;
            }

            .transactiontablenew th:nth-child(2), .transactiontablenew td:nth-child(2) {
                height: 100%;
                width: 100%;
            }

        .transactiontablenew tr:hover {
            cursor: pointer;
            background: #EEEEEE none repeat scroll 0 0;
        }

        .section1_Leave {
            display: block;
            border: 1.5px solid rgba(207, 207, 207, 0.91);
            height: 688px;
            width: 534px;
            margin: 4px auto;
            position: absolute;
        }

        .section2_Leave {
            display: block;
            border: 1px solid #ddd;
            height: 250px;
            width: 610px;
            margin: 5px 4px;
            position: absolute;
            left: 546px;
        }


        #BusinessType-button {
            font-size: 9px;
            padding-top: 1px;
            font-weight: bold;
        }

        .popup-content-label {
            width: 138px;
            display: block;
            float: left;
            margin: 1px;
        }

        .popup-content-label-2 {
            width: 100px;
            display: block;
            float: left;
            margin: 1px;
        }

        .section1_Leave {
            display: block;
            border: 1.5px solid rgba(207, 207, 207, 0.91);
            height: 688px;
            width: 534px;
            margin: 4px auto;
            position: absolute;
        }

        .section2_Leave {
            display: block;
            border: 2px solid #ddd;
            height: 1041px;
            width: 509px;
            margin: 5px 4px;
            position: absolute;
            left: 546px;
            padding-left: 11px;
        }


        .row3 {
            width: 471px;
        }

        .row4 {
            position: absolute;
            top: 294px;
            width: 400px;
        }

        .row6 {
            width: 370px;
            display: inline-block;
        }

        .popup-content-textbox-long {
            margin-bottom: 1px;
            width: 290px;
        }

        .add_row {
            width: 448px;
        }

        .add_icon-row {
            position: relative;
            left: -20px;
            top: -46px;
        }


        .row2 {
            width: 402px;
        }
    </style>
</head>

<body>
    <div class="Form_Bg">
        <div class="Form_Input">
            <div class="Button_Container">
                <button class="button" id="Create">Create</button>
                @*<button class="button" id="View">View</button>
                    <button class="button" id="Edit">Edit</button>
                    <button class="button" id="Delete">Delete</button>
                    <button class="button" id="Autho">Authorised</button>*@
                @*<div id="Grid_Form">
                        <div>
                            <table id="JqGrid"></table>
                            <div id="pager2"></div>
                        </div>
                    </div>*@
            </div>
        </div>
    </div>

    <div id="Container" class="container">
        <div id="Demo">
            <table id="MyTable" class="datatable-inline" cellspacing="0">
                <thead>
                    <tr>
                        <th>DD</th>
                        <th>ID</th>
                        <th>EmployeeCode</th>
                        <th>EmployeeName</th>
                    </tr>
                </thead>
                <tfoot>
                    <tr>
                        <th>DD</th>
                        <th>ID</th>
                        <th>EmployeeCode</th>
                        <th>EmployeeName</th>
                    </tr>
                </tfoot>
            </table>
        </div>
    </div>

    <div class="dialog">
        <div title="LookUp Data">
            <div class="LookupDiv"></div>
        </div>
        <div id="PageNavPosition">

        </div>
    </div>

    <div id="Create_Dialog">
        @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "frmHolidaybookingrequest", name = "frmHolidaybookingrequest" }))
        {

            <div class="filter-div" id="filterEmp">
            <label class="advance_filter_label">
                Advance Filter<span class="advance_filter_sysmbol_class_plus" id="Advance-Filter-Symbol">
                </span>
            </label>
            <div id="FormFilter"></div>
        </div>

            <div class="section_Method" id="Section_Emp">
                <div class="heading" style="width:1065px">Employee List</div>

                <div class="employeeselectiondiv">
                    <div class="transactiondivnew dynamic addons" style="float:left" id="asd">
                        <div><label>Search : </label><input type="text" id="Employee-Search" style="width: 425px;" /></div>
                        <table cellspacing="0" cellpadding="1" class="transactiontablenew" id="Employee-Table" style="height: 1000px">
                            <tr><th><input type="checkbox" id="Case-Employee" class="Chck_emp" /></th><th>Employee</th></tr>
                        </table>
                    </div>
                    @*<input name="geo_id" type="text" id="geo_id" class="struct_input_val" style="display:none" />
                        <input name="pay_id" type="text" id="pay_id" class="struct_input_val" style="display:none" />
                        <input name="fun_id" type="text" id="fun_id" class="struct_input_val" style="display:none" />*@
                </div>
            </div>


            <div class="section2_Leave">
                <div class=" " style="width: 506px;">

                    <input id="Autho_Action" type="hidden" name="Autho_Action" />
                    <input id="Autho_Allow" type="hidden" name="Autho_Allow" />

                    <div class="row3 content_margine">
                        @Html.LabelFor(m => m.HotelName, "Hotel Name :", new { @class = "popup-content-label must" })@Html.TextBoxFor(m => m.HotelName, new { @class = "popup-content-textbox must" })
                    </div>
                    <div class="row3 content_margine">
                        @Html.LabelFor(m => m.HotelDesc, "Hotel Desc :", new { @class = "popup-content-label " })@Html.TextBoxFor(m => m.HotelDesc, new { @class = "popup-content-textbox must" })
                    </div>
                    <div class="row3 content_margine">
                        @Html.LabelFor(m => m.Country, "Country :", new { @class = "popup-content-label" })
                        <select id="CountryList_DDL" name="CountryList_DDL" class="drop" style="width:180px;">
                            <option></option>
                        </select>
                        <div class="add_icon-row">
                            <button data-p2btooltip="Create Country" class="popup-content-icon-create" id="Create_country">
                                <span class="ui-icon ui-icon-newwin popup-content-iconmark"></span>
                            </button>
                        </div>
                    </div>
                    <div class="row3 content_margine">
                        @Html.LabelFor(m => m.State, "State :", new { @class = "popup-content-label" })
                        <select id="StateList_DDL" name="StateList_DDL" class="drop must" style="width:180px;">
                            <option value="0">-Select-</option>
                        </select>
                        <div class="add_icon-row">
                            <button data-p2btooltip="Create State" class="popup-content-icon-create" id="Create_state">
                                <span class="ui-icon ui-icon-newwin popup-content-iconmark"></span>
                            </button>
                        </div>
                    </div>
                    <div class="add_row content_margine">
                        @Html.LabelFor(m => m.City, "City :", new { @class = "popup-content-label" })
                        <select id="CityList_DDL" name="CityList_DDL" class="drop" style="width:180px;">
                            <option value="0">-Select-</option>
                        </select>
                        <div class="add_icon-row">
                            <button data-p2btooltip="Create City" class="popup-content-icon-create" id="Create_city">
                                <span class="ui-icon ui-icon-newwin popup-content-iconmark"></span>
                            </button>
                        </div>
                    </div>

                    @*<div class="row3 content_margine">
                        <div id="HotelElligibilityPolicy_old"></div>
                        @Html.LabelFor(m => m.HotelEligibilityPolicy, "HotelEligibilityPolicy :", new { @class = "popup-content-label" })
                        <div class="popup-content-table">
                            <table class="lookuptableselected" id="AddressList">
                                <tr><th>Id</th><th>LookUp Selected Description</th></tr>
                            </table>
                        </div>
                        <div class="icon-row">
                            <button data-p2btooltip="Lookup HotelEligibilityPolicy" class="  popup-content-icon-lookup" id="Lookup-HotelEligibilityPolicy"><span class="ui-icon ui-icon-folder-open popup-content-iconmark"></span></button>
                            @*<button data-p2btooltip="Create Address" class="popup-content-icon-create" id="Create-Address-BenefitNominees"><span class="ui-icon ui-icon-newwin popup-content-iconmark"></span></button>*@
                                @*<button data-p2btooltip="Edit Address" class="popup-content-icon-edit" id="Edit-Address-BenefitNominees"><span class="ui-icon ui-icon-pencil popup-content-iconmark"></span></button
                            <button data-p2btooltip="Remove HotelEligibilityPolicy" class="popup-content-icon-remove" id="Remove-HotelEligibilityPolicy"><span class="ui-icon ui-icon-trash popup-content-iconmark"></span></button>
                        </div>
                    </div>*@

                    @*<div class="row3 content_margine ">
                        @Html.LabelFor(m => m.IsFamilyIncl, " IsFamilyIncl:", new { @class = "popup-content-label" })
                        <span class="popup_radio_button">
                            <span><input type="radio" id="radio3" name="IsFamilyIncl" value="true" /> <label for="radio3">Yes</label></span>
                            <span><input type="radio" id="radio4" name="IsFamilyIncl" value="false" /> <label for="radio4">No</label></span>
                        </span>
                    </div>
                    <div id="FamilymemberDiv">
                        <div class="row3 content_margine">
                            <div id="Nomineeslist_old"></div>
                            @Html.LabelFor(m => m.FamilyDetails, "Faimly Member Name :", new { @class = "popup-content-label" })
                            <div class="popup-content-table">
                                <table class="lookuptableselected" id="NomineeNamelist">
                                    <tr><th>Id</th><th>LookUp Selected Description</th></tr>
                                </table>
                            </div>
                            <div class="icon-row">
                                <button data-p2btooltip="Lookup Nomineename" class="  popup-content-icon-lookup" id="Lookup-NomineeName-BenefitNominees"><span class="ui-icon ui-icon-folder-open popup-content-iconmark"></span></button>
                                <button data-p2btooltip="Create Nomineename" class="popup-content-icon-create" id="Create-NomineeName-BenefitNominees"><span class="ui-icon ui-icon-newwin popup-content-iconmark"></span></button>
                                <button data-p2btooltip="Edit Nomineename" class="popup-content-icon-edit" id="Edit-NomineeName-BenefitNominees"><span class="ui-icon ui-icon-pencil popup-content-iconmark"></span></button>
                                <button data-p2btooltip="Remove Nomineename" class="popup-content-icon-remove" id="Remove-NomineeName-BenefitNominees"><span class="ui-icon ui-icon-trash popup-content-iconmark"></span></button>
                            </div>
                        </div>
                    </div>*@

                    <div class="row3 content_margine">
                        <div id="Empdoclist_old"></div>
                        @*@Html.LabelFor(m => m.EmployeeDocuments, "Document details :", new { @class = "popup-content-label add_label" })*@
                        <label class="popup-content-label">Reference Document :</label>
                        <div class="popup-content-table">
                            <table class="lookuptableselected" id="CandidateDocumentslist">
                                <tr><th>ID</th><th>LookUp Selected Description</th></tr>
                            </table>

                        </div>

                        <div class="icon-Document icon-row">
                            <button data-p2btooltip="Lookup Document Details" class=" popup-content-icon-lookup" id="Lookup-CandidateDocuments-Candidate"><span class="ui-icon ui-icon-folder-open popup-content-iconmark"></span></button>
                            <button data-p2btooltip="Create Document Details" class=" popup-content-icon-create" id="Create-CandidateDocuments-Candidate"><span class="ui-icon ui-icon-newwin popup-content-iconmark"></span></button>
                            <button data-p2btooltip="Edit Document Details" class=" popup-content-icon-edit" id="Edit-CandidateDocuments-Candidate"><span class="ui-icon ui-icon-pencil popup-content-iconmark"></span></button>
                            <button data-p2btooltip="Delete Document Details" class=" popup-content-icon-remove" id="Remove-CandidateDocuments-Candidate"><span class="ui-icon ui-icon-trash popup-content-iconmark"></span></button>
                        </div>


                    </div>

                    <div class="row3 content_margine">
                        @Html.LabelFor(m => m.BillNo, "Bill No :", new { @class = "popup-content-label " })@Html.TextBoxFor(m => m.BillNo, new { @class = "popup-content-textbox must" })
                    </div>
                    <div class="row3 content_margine">@Html.LabelFor(m => m.StartDate, "Start Date :", new { @class = "popup-content-label must" })@Html.TextBoxFor(m => m.StartDate, new { @class = "popup-content-textbox must", @maxlength = "10" })</div>
                    <div class="row3 content_margine">@Html.LabelFor(m => m.EndDate, "End Date :", new { @class = "popup-content-label must" })@Html.TextBoxFor(m => m.EndDate, new { @class = "popup-content-textbox must", @maxlength = "10" })</div>


                    <div class="row3 content_margine">
                        @Html.LabelFor(m => m.NoOfRooms, "No of Room :", new { @class = "popup-content-label " })@Html.TextBoxFor(m => m.NoOfRooms, new { @class = "popup-content-textbox must" })
                    </div>
                    @*<div class="row3 content_margine">
                        @Html.LabelFor(m => m.TotFamilyMembers, "Total Family member :", new { @class = "popup-content-label " })@Html.TextBoxFor(m => m.TotFamilyMembers, new { @class = "popup-content-textbox must" })
                    </div>
                    <div class="row3 content_margine">
                        @Html.LabelFor(m => m.TotalAdults, "Total Adults :", new { @class = "popup-content-label " })@Html.TextBoxFor(m => m.TotalAdults, new { @class = "popup-content-textbox must" })
                    </div>
                    <div class="row3 content_margine">
                        @Html.LabelFor(m => m.TotalChild, "Total Child :", new { @class = "popup-content-label " })@Html.TextBoxFor(m => m.TotalChild, new { @class = "popup-content-textbox must" })
                    </div>
                    <div class="row3 content_margine">
                        @Html.LabelFor(m => m.TotalInfant, "Total Infant :", new { @class = "popup-content-label " })@Html.TextBoxFor(m => m.TotalInfant, new { @class = "popup-content-textbox must" })
                    </div>
                    <div class="row3 content_margine">
                        @Html.LabelFor(m => m.TotalSrCitizen, "Total Sr. Citizen :", new { @class = "popup-content-label " })@Html.TextBoxFor(m => m.TotalSrCitizen, new { @class = "popup-content-textbox must" })
                    </div>
                    <div class="row3 content_margine">
                        @Html.LabelFor(m => m.SpecialRemark, "SpecialRemark :", new { @class = "popup-content-label " })@Html.TextBoxFor(m => m.SpecialRemark, new { @class = "popup-content-textbox must" })
                    </div>*@

                    <div class="row3 content_margine">
                        @Html.LabelFor(m => m.RatePerDay, "Rate per day :", new { @class = "popup-content-label " })@Html.TextBoxFor(m => m.RatePerDay, new { @class = "popup-content-textbox must" })
                    </div>
                    <div class="row3 content_margine">
                        @Html.LabelFor(m => m.StdDiscount, "Std. Discount :", new { @class = "popup-content-label " })@Html.TextBoxFor(m => m.StdDiscount, new { @class = "popup-content-textbox must" })
                    </div>
                    <div class="row3 content_margine">
                        @Html.LabelFor(m => m.Taxes, "Taxes :", new { @class = "popup-content-label" })@Html.TextBoxFor(m => m.Taxes, new { @class = "popup-content-textbox must" })
                    </div>

                    <div class="row3 content_margine">
                        @Html.LabelFor(m => m.BillAmount, "Bill Amount  :", new { @class = "popup-content-label " })@Html.TextBoxFor(m => m.BillAmount, new { @class = "popup-content-textbox must" })
                    </div>
                    @*<div class="row3 content_margine">
                        @Html.LabelFor(m => m.Eligible_BillAmount, "Eligible Bill Amount  :", new { @class = "popup-content-label " })@Html.TextBoxFor(m => m.Eligible_BillAmount, new { @class = "popup-content-textbox must" })
                    </div>*@
                    <div class="row3 content_margine">
                        @Html.LabelFor(m => m.Narration, "Narration  :", new { @class = "popup-content-label " })@Html.TextBoxFor(m => m.Narration, new { @class = "popup-content-textbox must" })
                    </div>
                    @*<div class="row3 content_margine ">
                        @Html.LabelFor(m => m.TrClosed, " TrClosed:", new { @class = "popup-content-label" })
                        <span class="popup_radio_button">
                            <span><input type="radio" id="radio5" name="TrClosed" value="true" /> <label for="radio5">Yes</label></span>
                            <span><input type="radio" id="radio6" name="TrClosed" value="false" /> <label for="radio6">No</label></span>
                        </span>
                    </div>
                    <div class="row3 content_margine ">
                        @Html.LabelFor(m => m.TrReject, " TrReject:", new { @class = "popup-content-label" })
                        <span class="popup_radio_button">
                            <span><input type="radio" id="radio7" name="TrReject" value="true" /> <label for="radio7">Yes</label></span>
                            <span><input type="radio" id="radio8" name="TrReject" value="false" /> <label for="radio8">No</label></span>
                        </span>
                    </div>*@

                    @*<div class="row3 content_margine">@Html.LabelFor(m => m.Relation, "Relation :", new { @class = "popup-content-label must" })<select class="must" id="CategoryList_DDL" name="CategoryList_DDL" style="width:161px;"><option></option></select></div>*@



                </div>
            </div>
            <div class="emplist_row">
                <div id="Grid_Form2">

                </div>
            </div>
        }
    </div>

</body>
</html>

<script>
    $(document).ready(function (e) {
        $('button').button();
        var ColNames = [];
        var ColModel = [];
        var SortName, Caption, url, width, height;
        var btndisablenames = "#Edit-Address-BenefitNominees,#Remove-HotelEligibilityPolicy,#Edit-ContactDetails-BenefitNominees,#Remove-ContactDetails-BenefitNominees";
        //ColModel = ['Id', 'DateofBirth', 'Relation'];
        //ColNames = ['Id', 'DateofBirth', 'Relation'];
        ColModel = ['ID', 'Employee Code', 'Employee Name'];
        ColNames = ['ID', 'Employee Code', 'Employee Name'];
        SortName = 'Id';
        Caption = 'Hotel Booking Request';
        url = '@Url.Action("P2BGrid")';
        width = 1000;
        height = 150;
        $("#handicapRemarkdiv").fadeOut();
        $('#lvexcludeleavediv').fadeOut();
        // $('#JqGrid').P2BGrid(ColNames, ColModel, SortName, Caption, url, width, height);

        $('#MyTable').MultiLevelInlineEditGrid({
            url: "@Url.Action("Emp_Grid", "HotelBookingRequest")",
            htmurl: "@Url.Action("Index", "HotelBookingRequest")",
            columnname: ["Id", "Code", "Name"],
            childheader: ["Id", "HotelName", "StartDate", "EndDate", "BillNo", "BillAmount", "TotFamilyMembers", "Country", "State", "City", "TrClosed"],
            childurl: "@Url.Action("Get_LvCancelReq", "HotelBookingRequest")",
            tableheader: "Hotel Booking Request"
        });
        function AssignData() {
            dt = $('#JqGrid').P2BGrid.P2BEdDelV('#JqGrid', 'Id');

        }
        $('#DateofBirth').P2BDatePicker();
        $('#StartDate').P2BDatePicker();
        $('#EndDate').P2BDatePicker();

        //function DateConvert(JsonDate) {
            //    var date = new Date(parseInt(JsonDate.substr(6)));
            //    var displayDate = $.datepicker.formatDate("dd/mm/yy", date);
            //    return displayDate;
        //};

        $('<div></div>').P2BPartialCreateModalDialog();
        $('#Create_country').on("click", function (e) {
            $('<div></div>').P2BPartialCreateModalDialog('@Url.Action("partial", "country")', 'Create Country', 'open', '@Url.Action("Create","Country")', '#FormCountry', 'Message :', 'Request Falied :', '#JqGrid', 217, 339, '', '#CountryList_DDL', 'change', '', '', function (data) {
                $('#CountryList_DDL').P2BSelectMenuAppend("@Url.Action("PopulateDropDownList", "country")", "", data[0], '#StateList_DDL');

            });
            e.preventDefault();
        });

        $('<div></div>').P2BPartialCreateModalDialog();
        $('#Create_state').on("click", function (e) {

            $('<div></div>').P2BPartialCreateModalDialog('@Url.Action("partial", "state") ', 'Create State', 'open', '@Url.Action("Create", "State")', '#FormState', 'Message :', 'Request Falied :', '#JqGrid', 200, 300, $("#CountryList_DDL option:selected").val(), '#CountryList_DDL', 'change', '', '', function (data) {
                $('#StateList_DDL').P2BSelectMenuAppend("@Url.Action("PopulateDropDownList", "state")", "", data[0], '#StateRegionList_DDL');
            });
            e.preventDefault();

        });
        $('<div></div>').P2BPartialCreateModalDialog();
        $('#Create_city').on("click", function (e) {

            $('<div></div>').P2BPartialCreateModalDialog('@Url.Action("partial", "city") ', 'Create City', 'open', '@Url.Action("Create","City")', '#FormCity', 'Message :', 'Request Falied :', '#JqGrid', 200, 300, $("#TalukaList_DDL option:selected").val(), '#TalukaList_DDL', 'change', '', '', function (data) {
                $('#CityList_DDL').P2BSelectMenuAppend("@Url.Action("PopulateDropDownList", "city")", "", data[0], '#AreaList_DDL');
            });
            e.preventDefault();

        });
        //$('#CountryList_DDL').P2BSelectMenuAppend("@@Url.Action("PopulateDropDownList", "country")", "", "", "");

        //$('#CountryList_DDL').P2BSelectMenuOnChange("selectmenuchange", "@@Url.Action("PopulateDropDownList", "state")", '#StateList_DDL', "");
       
        $('#Create_Dialog').P2BCreateDialog();

        @*$('#Advance-Filter-Symbol').on('click', function () {
            $("<div></div>").FilterDialog({
                width: 1000,
                height: 400,
                title: "Filter",
                htmlurl: "@Url.Action("Advance_partial", "Transcation")",
                returnat: function (data) {
                    console.log(data);
                    var forwarddata = JSON.stringify(data);
                    $('#Employee-Table').P2BTransactionTableDynamic('#Employee-Search', '#Case-Employee', './Transcation/Get_Employelist_h?geo_id=' + forwarddata + '', "");
                },
            renderat: "#FormFilter", hierarchy: true,
            });
        });*@

        //Create Function
        $('#Create').on("click", function (event) {
            $('#frmHolidaybookingrequest').trigger("reset");
            $.LoadEmpByDefault(true);
            $('#Advance-Filter-Symbol').on('click', function () {
                $("<div></div>").FilterDialog({
                    width: 1000,
                    height: 400,
                    title: "Filter",
                    htmlurl: "@Url.Action("Advance_partial", "Transcation")",
                    returnat: function (data) {
                        console.log(data);
                        var forwarddata = JSON.stringify(data);
                        $('#Employee-Table').P2BTransactionTableDynamic('#Employee-Search', '#Case-Employee', './Transcation/Get_Employelist_h?geo_id=' + forwarddata + '', "");
                        //$('#Employee-Table').P2BTransactionTableDynamic('#Employee-Search', '#Case-Employee', './Transcation/Get_Employelist?geo_id=' + forwarddata + '', "");
                        //$('#pay_id').val(data.PayStruct);
                        //$('#fun_id').val(data.FunStruct);
                    },
                    renderat: "#FormFilter", hierarchy: true,
                });
                //console.log($('#FormFilter')[0]);
            });
            $('#Section_Emp').fadeIn();
            $('#Create_Dialog').P2BCreateDialog('', '', '', '', 'Create Hotel Booking Request', 'open', '@Url.Action("Create")', '#frmHolidaybookingrequest', 'Message :', 'Request Falied :', '#JqGrid', 493, 1111, '#ContactDetailsList,#NomineeNamelist,#BenefitTypelist', btndisablenames, function (data) { });
          //  $('#CategoryList_DDL').P2BSelectMenuAppend('@@Url.Action("GetLookupValue", "lookup")', 107, ""); // To bind dropdown on page load
            $('#CountryList_DDL').P2BSelectMenuAppend('@Url.Action("PopulateDropDownList", "country")', "", "");
            $('#StateList_DDL').P2BSelectMenuAppend('@Url.Action("PopulateDropDownListState")', "", "");
            $('#CityList_DDL').P2BSelectMenuAppend('@Url.Action("PopulateDropDownListCity")', "", "");

            event.preventDefault();
        });


        $.DataTableChildManipulation = function (init, id, parentid, htmurl, editurl, submiturl) {
            var parent_element = $(init).parents('td:last').parent().prev();
            console.log(id);
            console.log(htmurl);
            console.log(parent_element);
            var dt = $('#MyTable').DataTable();
            var htmlcomponant = {
                init: init,
                Id: id,
                idx: parentid,
                htmurl: htmurl,
                editurl: editurl,
                submiturl: submiturl,
            };
            if ($(init).hasClass('ui-icon-newwin')) {
                return false;
                $('<div></div>').PartialCreateDialog({
                    height: 'auto',
                    width: 'auto',
                    form: "#LvCancelReqGridPartial",
                    htmlurl: "@Url.Action("GridPartial", "LvCancelReq")",
                    state: "open",
                    mode: "View",
                    editurl: "@Url.Action("GridEditData", "LvCancelReq")",
                    submiturl: submiturl,
                    editdata: id,
                    forwarddata: id,
                    returndatafunction: function (data) {
                        $('#Grid-ReqDate').val(data.ReqDate);
                        $('#Grid-LvNewReq').val(data.LvNewReq);
                        $('#Grid-Reason').val(data.Reason);

                    }
                });
            }
            @*else if ($(init).hasClass('ui-icon-pencil')) {
                $('<div></div>').PartialCreateDialog({
                    height: 'auto',
                    width: 'auto',
                    form: "#FormBenefitNominees",
                    htmlurl: "@Url.Action("GridPartial", "EmployeeFamilyDetails")",
                    state: "open",
                    mode: "Edit",
                    editurl: "@Url.Action("GridEditData", "EmployeeFamilyDetails")",
                    submiturl: "@Url.Action("GridEditsave", "EmployeeFamilyDetails")",
                    editdata: id,
                    forwarddata: id,
                    returndatafunction: function (data) {
                        ////;
                        console.log("employeedata");
                        console.log(data.data);
                        $('[name="IShandicap1"]').val([data.data.IsHandicap]).button().button("refresh");
                        $('#Categorylist1').P2BSelectMenuAppend("@Url.Action("GetLookupValue", "lookup")", 107, data.data.Relation);
                        $('#Partial_Datebirthid').val(data.data.DateBirth);
                        if (data.data.IsHandicap == true) {
                            $('#handicapRemarkdiv1').fadeIn();
                            $('#PartialIshandicapid').val(data.data.HandicapRemark);
                        }
                        else {
                            $('#handicapRemarkdiv1').fadeOut();
                        }
                        $('#NomineeNamelist1').P2BLookUpEncapsulate('#NomineeNamelist1', 'NomineeNamelist1', data.data.MemberName, data.data.name_FullDetails, 'NomineeNamelist1', '#Remove-NomineeName-BenefitNominees,#Edit-NomineeName-BenefitNominees', 'N');
                    },
                    submitfun: function (data) {
                        var row = dt.row(parent_element);
                        if (row.child.isShown()) {
                            parent_element.removeClass('details');
                            row.child.hide();
                        }
                    }
                });
            }*@
            else if ($(init).hasClass('ui-icon-trash')) {
                //   return false;
                $('<div></div>').PartialCreateDialog({
                    state: "open",
                    mode: "Delete",
                    submiturl: "@Url.Action("GridDelete", "HotelBookingRequest")",
                    forwarddata: id,
                    submitfun: function (data) {
                        var row = dt.row(parent_element);
                        if (row.child.isShown()) {
                            parent_element.removeClass('details');
                            row.child.hide();
                        }
                    }
                });
            }
        };
        // Main page edit
        $('#Edit').on('click', function () {
            AssignData();
            $('#Section_Emp').fadeOut();
            // $('#Create_Dialog').P2BEditModalDialog('@Url.Action("Edit")', dt.ID, '@Url.Action("EditSave")', "Edit Benefit Nominees Data->" + JSON.stringify(dt) + "", '#frmHolidaybookingrequest', dt.ID, 'Message : ', 'Request Falied :', '#JqGrid', 600, 500, '#AddressList,#ContactDetailsList,#NomineeNamelist,#BenefitTypelist', btndisablenames, function (data) {
            $('#Create_Dialog').P2BEditModalDialog('@Url.Action("Edit")', dt.ID, '@Url.Action("EditSave")', "" + JSON.stringify(dt) + "", '#frmHolidaybookingrequest', dt.ID, 'Message : ', 'Request Falied :', '#JqGrid', 700, 1000, '#AddressList,#ContactDetailsList,#NomineeNamelist,#BenefitTypelist', btndisablenames, function (data) {
                // setTimeout(function () {
                $.each(data[0], function (i, k) {
                    if (k.DateofBirth != null) {
                        //  $('#DateofBirth').val(DateConvert(k.DateofBirth));
                        $('#DateofBirth').val(k.DateofBirth);
                    }


                    $('#CategoryList_DDL').P2BSelectMenuAppend("@Url.Action("GetLookupValue", "lookup")", 107, k.Relations_Id); // Dropdown bind
                });

                //partial page bind
                $.each(data[1], function (i, k) {
                    $('#AddressList').P2BLookUpEncapsulate('#AddressList', 'AddressList', k.Add_Id, k.Address_FullAddress, 'AddressList', '#Edit-Address-BenefitNominees,#Remove-HotelEligibilityPolicy', 'N');
                    $('#ContactDetailsList').P2BLookUpEncapsulate('#ContactDetailsList', 'ContactDetailsList', k.Cont_Id, k.FullContactDetails, 'ContactDetailsList', '#Remove-ContactDetails-BenefitNominees,#Edit-ContactDetails-BenefitNominees', 'N');
                    $('#NomineeNamelist').P2BLookUpEncapsulate('#NomineeNamelist', 'NomineeNamelist', k.name_Id, k.name_FullDetails, 'NomineeNamelist', '#Remove-NomineeName-BenefitNominees,#Edit-NomineeName-BenefitNominees', 'N');

                });
                $.each(data[2], function (i, k) {
                    $('#BenefitTypelist').P2BLookUpEncapsulate('#BenefitTypelist', 'BenefitTypelist', k.benefit_id, k.benefitlist_details, 'BenefitTypelist', '#Edit-BenefitTypelist-BenefitNominees,#Remove-BenefitTypelist-BenefitNominees', 'A');
                });
                //alert(data[3]);
                $('#Autho_Allow').val(data[3]); //Compulsory for authorisation
                // }, 2000);
            });
        });

        //View main page
        $('#View').button().click(function (event) {
            AssignData();
            $('#Section_Emp').fadeOut();
            //
            $('#Create_Dialog').P2BViewModalDialog('@Url.Action("Edit")', dt.ID, "View Benefit Nominees Data->" + JSON.stringify(dt) + "", '#AddressList,#ContactDetailsList,#BenefitTypelist', '  #Lookup-HotelEligibilityPolicy,#Create-Address-BenefitNominees,#Edit-Address-BenefitNominees,#Remove-HotelEligibilityPolicy,#Lookup-ContactDetails-BenefitNominees,#Create-ContactDetails-BenefitNominees,#Edit-ContactDetails-BenefitNominees,#Remove-ContactDetails-BenefitNominees', 493, 1111, '#Autho', '@Url.Action("AuthSave")', dt.ID, '', '', '', '', '#JqGrid', function (data) {
                $.each(data[0], function (i, k) {
                    $('#Autho_Action').val(k.Action);
                    if (k.DateofBirth != null) { $('#DateofBirth').val(DateConvert(k.DateofBirth)); }
                    $('#CategoryList_DDL').P2BSelectMenuAppend("@Url.Action("GetLookupValue", "lookup")", 107, k.Relations_Id);
                });
                $.each(data[1], function (i, k) {
                    $('#AddressList').P2BLookUpEncapsulate('#AddressList', 'AddressList', k.Add_Id, k.Address_FullAddress, 'AddressList', 'view', 'N');
                    $('#ContactDetailsList').P2BLookUpEncapsulate('#ContactDetailsList', 'ContactDetailsList', k.Cont_Id, k.FullContactDetails, 'ContactDetailsList', 'view', 'N');
                    $('#NomineeNamelist').P2BLookUpEncapsulate('#NomineeNamelist', 'NomineeNamelist', k.name_Id, k.name_FullDetails, 'NomineeNamelist', 'view', 'N');
                });
                $.each(data[2], function (i, k) {
                    $('#BenefitTypelist').P2BLookUpEncapsulate('#BenefitTypelist', 'BenefitTypelist', k.benefit_id, k.benefitlist_details, 'BenefitTypelist', 'view', 'A');
                });

                if ($("#Autho").hasClass('auto_active')) {
                    if (data[2] != null) {
                        $('#Name').oldVal(data[2].Name);
                        $('#CategoryList_DDL').oldDropval(data[2].BusinessType_Val);
                        $('#AddressList_Old').oldLookupVal(data[2].Address_Val);
                        $('#ContactDetailsList_Old').oldLookupVal(data[2].Contact_Val);
                    }
                }
            });
        });



        $('input[name="IsFamilyIncl"]:radio').change(function () {
            if (this.value == "false") {
                $('#FamilymemberDiv').fadeOut();
            }
            else {
                $('#FamilymemberDiv').fadeIn();
            }
        });

        $('#Lookup-CandidateDocuments-Candidate').button().on('click', function (e) {
            $('.dialog').P2BLookUpModal('@Url.Action("GetCandDocsLKDetails", "EmployeeDocuments")', '', 'LookupDiv', 'Employee Document Look Up Data', '#CandidateDocumentslist', 'CandidateDocumentslist', 5, 'CandidateDocumentslist', '#FormCandidate', 'N', '#Remove-CandidateDocuments-Candidate', 'CandidateDocumentslist_table', 'PageNavPosition');
            e.preventDefault();
        });

        $('<div></div>').P2BPartialCreateModalDialog();
        $('#Create-CandidateDocuments-Candidate').on("click", function (event) {
            @*$('<div></div>').P2BPartialCreateModalDialog('@Url.Action("partial", "EmployeeDocuments")', 'Create Employee Documents', 'open', '@Url.Action("Create", "EmployeeDocuments")', '#FormCandidateDocs', 'Message :', 'Request Failed :', '#JqGrid', 400, 500, '', '', '', '#FormCandidate', '', function (data) {
                $('#CandidateDocumentslist').P2BLookUpEncapsulate('#CandidateDocumentslist', 'CandidateDocumentslist', data[0], data[1], 'CandidateDocumentslist', '', 'N');
            });*@

            var a = $('#EmpCode').val();

            $('<div></div>').P2BConfidentialModelDialog({
                htmlurl: "@Url.Action("partial", "EmployeeDocuments")",
                submiturl: "@Url.Action("Create", "EmployeeDocuments")?EmpCode=" + a,
            form: '#FormCandidateDocs',
            height: "400",
            type: "FILE",
            width: "500",
            title: "DocumentUpload",
            BeforeSendurl: "true",
            returnfun: function (data) {
                $('#CandidateDocumentslist').P2BLookUpEncapsulate('#CandidateDocumentslist', 'CandidateDocumentslist', data.Id, data.Val, 'CandidateDocumentslist', '', 'A');
            },
            });
        event.preventDefault();
    });

    $('#Edit-CandidateDocuments-Candidate').button().on("click", function (event) {
        var a = [], b;
        a = $('#CandidateDocumentslist').P2BGetTableDataonSelectedRow('#CandidateDocumentslist', 0);
        b = a[0];
        //url, openurl, opendataforward, editurl, maindialogtitle, forwardserializedata, forwarddata, editmessage, editerrormessage, gridreloadname, height, width, classoridoftheonwhichpopupderived, nameclassidofinlinelookup, nameofthelist_inlinelookuptable, nameoftable_inlinelookuptable,multiple_allowed_or_not,nameidclassofbuttontodisable,returndatafunction) {
        @*$('<div></div>').P2BPatialEditModalDialog('@Url.Action("partial", "EmployeeDocuments")', '@Url.Action("edit", "EmployeeDocuments")', b, '@Url.Action("Editsave", "CandidateDocuments")', 'Edit Employee Documents', '#FormCandidateDocuments', b, 'Message :', 'Request Falied :', '#JqGrid', 400, 500, '#FormEmployee', '#CandidateDocumentslist', 'CandidateDocumentslist', 'CandidateDocumentslist', 'N', '#Edit-CandidateDocuments-Candidate,#Remove-CandidateDocuments-Candidate', function (data) {
            // setTimeout(function () {
            //to bind data according to selected id
            $.each(data[0], function (i, k) {
                $('#FormCandidateDocuments').trigger("reset");
                $('#DocTypeList').P2BSelectMenuAppend("@Url.Action("GetLookupValue", "lookup")", 1070, k.DocTypeList);
                $('#SubDocList').P2BSelectMenuAppend("@Url.Action("GetLookupValue", "lookup")", 1071, k.SubDocList);
                if (k.txtUploadDate != null) {
                    $('#txtUploadDate').val(DateConvert(k.txtUploadDate));
                }
                $('#txtDocPath').val(k.txtDocPath);
                $('[name="IsApproved"]').val([k.IsApproved]).button().button("refresh");

                if (k.txtApprovedDate != null) {
                    $('#txtApprovedDate').val(DateConvert(k.txtApprovedDate));
                }
            });
            //}, 3000);


        });*@


         $.post("@Url.Action("CheckUploadFile", "EmployeeDocuments")?Id=" + b, function (data) {

             ////;
             if (data.success == false) {

                 alert("File Not Found");
                 return false;
             } else if (data.fileextension == ".pdf") {
                 window.location = "@Url.Action("GetCompImage", "EmployeeDocuments")?data=" + b;
             }
             else {
                 $('<div></div>').PartialCreateDialog({
                     height: '500',
                     width: '500',
                     form: "#FormImageViewer",
                     title: "Image Viewer",
                     htmlurl: "@Url.Action("Imageviewr", "Upload")",
                     state: "open",
                 mode: "View",
                 editurl: "@Url.Action("GetCompImage", "EmployeeDocuments")",
                 editdata: b,
                 forwarddata: b,
                 returndatafunction: function (data) {
                     ////;
                     console.log(data);

                     if (data != null) {
                         $("#Dashboard-Investment-Viewer").attr('src', "data:image/png;base64," + data + "");
                     } else {
                         alert("First Upload the File");
                     }
                 }
             });
         }
    });


    event.preventDefault();
    });

    $('#Remove-CandidateDocuments-Candidate').button().on('click', function (event) {
        var a = [], b;
        a = $('#CandidateDocumentslist').P2BGetTableDataonSelectedRow('#CandidateDocumentslist', 0);
        b = a[0];
        $('<div></div>').P2BPartialDeleteModalDialog('', b, 0, 'Are you sure want to delete record???', 'Message : ', 'Request failed', '#CandidateDocumentslist', $('#CandidateDocumentslist').val(), 200, 200, '#FormEmployee', '#CandidateDocumentslist', '#Remove-CandidateDocuments-Candidate');
        event.preventDefault();
    });


        //delete main page
        $('#Delete').button().click(function (event) {
            dt = $('#JqGrid').P2BGrid.P2BEdDelV('#JqGrid', 'ID');
            $('#Create_Dialog').P2BDeleteModalDialog('@Url.Action("Delete")', dt.ID, 'Are you sure want to remove record???', 'Message : ', 'Request failed', '#JqGrid', 200, 200);
            event.preventDefault();
        });

        /* Address button click*/
        $('#Lookup-HotelEligibilityPolicy').on('click', function (event) {
            $('.dialog').P2BLookUpModal('@Url.Action("GetHotelEligibilityPolicyDetails")', '', 'LookupDiv', 'Address Look Up Data', '#AddressList', 'AddressList', 5, 'AddressList', '#frmHolidaybookingrequest', 'N', '#Edit-Address-BenefitNominees,#Remove-HotelEligibilityPolicy', 'Lookup_table', 'PageNavPosition');
            event.preventDefault();
        });

        // PArtial page create
        $('<div></div>').P2BPartialCreateModalDialog();
        $('#Create-Address-BenefitNominees').on("click", function (event) {
            $('<div></div>').P2BPartialCreateModalDialog('@Url.Action("partial", "address")', 'Create Address', 'open', '@Url.Action("Create","Address")', '#FormAddress', 'Message :', 'Request Falied :', '#JqGrid', 400, 500, '', '', '', '#frmHolidaybookingrequest', '', function (data) {
                // to show data which is created in partial page
                $('#AddressList').P2BLookUpEncapsulate('#AddressList', 'AddressList', data[0], data[1], 'AddressList', '#Edit-Address-BenefitNominees,#Remove-HotelEligibilityPolicy', 'N');
            });
            event.preventDefault();
        });

        // PArtial page edit
        $('#Edit-Address-BenefitNominees').button().on("click", function (event) {
            var a = [], b;
            a = $('#AddressList').P2BGetTableDataonSelectedRow('#AddressList', 0);
            b = a[0];
            $('<div></div>').P2BPatialEditModalDialog('@Url.Action("partial", "address")', '@Url.Action("edit", "address")', b, '@Url.Action("Editsave","Address")', 'Edit Address', '#FormAddress', b, 'Message :', 'Request Falied :', '#JqGrid', 400, 500, '#frmHolidaybookingrequest', '#AddressList', 'AddressList', 'AddressList', 'N', '#Edit-Address-BenefitNominees,#Remove-HotelEligibilityPolicy', function (data) {
                // setTimeout(function () {
                //to bind data according to selected id
                $.each(data[0], function (i, k) {
                    $('#FormAddress').trigger("reset");
                    $('#Address1').val(k.Address1);
                    $('#Address2').val(k.Address2);
                    $('#Address3').val(k.Address3);
                    $('#Landmark').val(k.Landmark);
                    $('#CountryList_DDL').P2BSelectMenuAppend("@Url.Action("PopulateDropDownList", "country")", "", k.Country_Id, '');
                    $('#StateList_DDL').P2BSelectMenuAppend("@Url.Action("PopulateDropDownList", "state")", "", k.State_Id, '');
                    $('#StateRegionList_DDL').P2BSelectMenuAppend("@Url.Action("PopulateDropDownList", "StateRegion")", "", k.StateRegion_Id, '');
                    $('#DistrictList_DDL').P2BSelectMenuAppend("@Url.Action("PopulateDropDownList", "District")", "", k.District_Id, '');
                    $('#TalukaList_DDL').P2BSelectMenuAppend("@Url.Action("PopulateDropDownList", "Taluka")", "", k.Taluka_Id, '');
                    $('#CityList_DDL').P2BSelectMenuAppend("@Url.Action("PopulateDropDownList", "City")", "", k.City_Id, '');
                    $('#AreaList_DDL').P2BSelectMenuAppend("@Url.Action("PopulateDropDownList", "area")", "", k.Area_Id, '');
                });
                //}, 3000);
            });
            event.preventDefault();
        });


        //partial page delete
        $('#Remove-HotelEligibilityPolicy').button().on('click', function (event) {
            var a = [], b;
            a = $('#AddressList').P2BGetTableDataonSelectedRow('#AddressList', 0);
            b = a[0];
            $('<div></div>').P2BPartialDeleteModalDialog('', b, 0, 'Are you sure want to delete record???', 'Message : ', 'Request failed', '#AddressList', $('#AddressList').val(), 200, 200, '#frmHolidaybookingrequest', '#AddressList', '#Edit-Address-BenefitNominees,#Remove-HotelEligibilityPolicy');
            event.preventDefault();
        });

        /* ContactDetails button click*/



        $('#Lookup-ContactDetails-BenefitNominees').on('click', function (event) {
            @*$('.dialog').P2BLookUpModal('@Url.Action("GetAddressLKDetails", "EmployeeFamilyDetails")', '', 'LookupDiv', 'Address Look Up Data', '#AddressList', 'AddressList', 5, 'AddressList', '#frmHolidaybookingrequest', 'N', '#Edit-Address-BenefitNominees,#Remove-HotelEligibilityPolicy', 'Lookup_table', 'PageNavPosition');*@
            $('.dialog').P2BLookUpModal('@Url.Action("GetContactDetLKDetails", "EmployeeFamilyDetails")', '', 'LookupDiv', 'ContactDetails Look Up Data', '#ContactDetailsList', 'ContactDetailsList', 5, 'ContactDetailsList', '#frmHolidaybookingrequest', 'N', '#Edit-ContactDetails-BenefitNominees,#Remove-ContactDetails-BenefitNominees', 'Lookup_table', 'PageNavPosition');
            // $('.ContactDetLKDiv').P2BLookUpModal('@@Url.Action("GetContactDetLKDetails", "EmployeeFamilyDetails")', '', 'ContactDetLKDiv', 'Look Up Data', '#ContactDetailsList', 'ContactDetailsList', 10, 'ContactDetailsList', '#frmHolidaybookingrequest', 'N', '#Edit-ContactDetails-BenefitNominees,#Remove-ContactDetails-BenefitNominees', 'lookupdiv_ContactDet', 'pageNavPosition_ContactDet');
            event.preventDefault();
        });

        $('<div></div>').P2BPartialCreateModalDialog();
        $('#Create-ContactDetails-BenefitNominees').button().on("click", function (event) {
            //function (url, maindialogtitle, state, submiturl, submitnameformforserilize, savemessage, errormessage, gridreloadname, height, width, forwarddata, ControlName, event, classoridoftheonwhichpopupderived, nameidclassofbuttontodisable, returnfunctiondata) {
            $('<div></div>').P2BPartialCreateModalDialog('@Url.Action("Createcontactdetails_partial", "EmployeeFamilyDetails")', 'Create ContactDetails', 'open', '@Url.Action("CreateSave","ContactDetails")', '#FormContactDetails', 'Message :', 'Request Falied :', '#JqGrid', 400, 500, '', '', '', '#FormContactDetails', '#Edit-ContactNo-ContDetails,#Remove-ContactNo-ContDetails', function (data) {
                $('#ContactDetailsList').P2BLookUpEncapsulate('#ContactDetailsList', 'ContactDetailsList', data[0], data[1], 'ContactDetailsList', '#Edit-ContactDetails-BenefitNominees,#Remove-ContactDetails-BenefitNominees', 'N');
            });
            event.preventDefault();
        });

        $('#Edit-ContactDetails-BenefitNominees').button().on("click", function (event) {
            var a = [], b;
            a = $('#ContactDetailsList').P2BGetTableDataonSelectedRow('#ContactDetailsList', 0);
            b = a[0];
            console.log(b);
            $('<div></div>').P2BPatialEditModalDialog('@Url.Action("Createcontactdetails_partial", "EmployeeFamilyDetails")', '@Url.Action("Editcontactdetails_partial", "EmployeeFamilyDetails")', b, '@Url.Action("EditSave", "ContactDetails")', 'Edit Contact Details', '#FormContactDetails', b, 'Message :', 'Request Falied :', '#JqGrid', 400, 500, '#frmHolidaybookingrequest', '#ContactDetailsList', 'ContactDetailsList', 'ContactDetailsList', 'N', '#Remove-ContactNo-ContDetails,#Edit-ContactNo-ContDetails', function (data) {
                // setTimeout(function () {
                $.each(data[0], function (i, k) {
                    $('#FormContactDetails').trigger('reset');
                    $('#EmailId').val(k.EmailId);
                    $('#Website').val(k.Website);
                    $('#FaxNo').val(k.FaxNo);
                });

                $.each(data[1], function (i, k) {
                    $('#ContactNos_List').P2BLookUpEncapsulate('#ContactNos_List', 'ContactNos_List', k.Id, k.FullContactNumbers, 'ContactNos_List', '#Edit-ContactNo-ContDetails,#Remove-ContactNo-ContDetails', 'A');
                });
                // }, 3000);
            });
            event.preventDefault();
        });

        $('#Remove-ContactDetails-BenefitNominees').button().on('click', function (event) {
            // dt = $('#JqGrid').P2BGrid.P2BEdDelV('#JqGrid', 'Id');
            var a = [], b;
            a = $('#ContactDetailsList').P2BGetTableDataonSelectedRow('#ContactDetailsList', 0);
            b = a[0];
            $('<div></div>').P2BPartialDeleteModalDialog('@Url.Action("DeleteContactDetails","EmployeeFamilyDetails")', b, 0, 'Are you sure want to delete record???', 'Message : ', 'Request failed', '#ContactDetailsList', $('#ContactDetailsList').val(), 200, 200, '#frmHolidaybookingrequest', '#ContactDetailsList', '#Edit-ContactDetails-BenefitNominees,#Remove-ContactDetails-BenefitNominees');
            event.preventDefault();
        });



        @*$('<div></div>').P2BPartialCreateModalDialog();
        $('#Create-BenefitTypelist-BenefitNominees').button().on("click", function (event) {
            $('<div></div>').P2BPartialCreateModalDialog('@Url.Action("Index", "NomineeBenefit")', 'Create NomineeName', 'open', '@Url.Action("Create", "NomineeBenefit")', '#FormNomineeBenefit', 'Message :', 'Request Falied :', '#JqGrid', 400, 500, '', '', '', '#frmHolidaybookingrequest', '', function (data) {
                $('#Type_Nomines').P2BSelectMenuAppend("@Url.Action("GetLookupValue", "lookup")", 311, ""); // Dropdown bind
            });
            event.preventDefault();
        });*@

        $('<div></div>').P2BPartialCreateModalDialog();
        $('#Create-BenefitTypelist-BenefitNominees').button().on("click", function (event) {
            //function (url, maindialogtitle, state, submiturl, submitnameformforserilize, savemessage, errormessage, gridreloadname, height, width, forwarddata, ControlName, event, classoridoftheonwhichpopupderived, nameidclassofbuttontodisable, returnfunctiondata) {
            $('<div></div>').P2BPartialCreateModalDialog('@Url.Action("Index", "NomineeBenefit")', 'Create NomineeName', 'open', '@Url.Action("Create", "NomineeBenefit")', '#FormNomineeBenefit', 'Message :', 'Request Falied :', '#JqGrid', 400, 500, '', '', '', '#frmHolidaybookingrequest', '', function (data) {
                $('#BenefitTypelist').P2BLookUpEncapsulate('#BenefitTypelist', 'BenefitTypelist', data[0], data[1], 'BenefitTypelist', '', 'A');
                $('#Type_Nomines').P2BSelectMenuAppend("@Url.Action("GetLookupValue", "lookup")", 311, "");
            });

            event.preventDefault();
        });
        $('#Lookup-BenefitTypelist-BenefitNominees').on('click', function (event) {
            $('.dialog').P2BLookUpModal('@Url.Action("GetLookupBenefitNominees", "EmployeeFamilyDetails")', '', 'LookupDiv', 'BenefitType Look Up Data', '#BenefitTypelist', 'BenefitTypelist', 5, 'BenefitTypelist', '#frmHolidaybookingrequest', 'A', '#Edit-BenefitTypelist-BenefitNominees,#Remove-BenefitTypelist-BenefitNominees', 'Lookup_table', 'PageNavPosition');
            event.preventDefault();
        });



        $('#Edit-BenefitTypelist-BenefitNominees').button().on("click", function (event) {
            var a = [], b;
            a = $('#BenefitTypelist').P2BGetTableDataonSelectedRow('#BenefitTypelist', 0);
            b = a[0];
            console.log(b);
            $('<div></div>').P2BPatialEditModalDialog('@Url.Action("Index", "NomineeBenefit")', '@Url.Action("Edit", "NomineeBenefit")', b, '@Url.Action("EditSave", "NomineeBenefit")', 'Edit  Details', '#FormNomineeBenefit', b, 'Message :', 'Request Falied :', '#JqGrid', 400, 500, '#frmHolidaybookingrequest', '#BenefitTypelist', 'BenefitTypelist', 'BenefitTypelist', 'A', '#Edit-BenefitTypelist-BenefitNominees,#Remove-BenefitTypelist-BenefitNominees', function (data) {
                // setTimeout(function () {
                $.each(data[0], function (i, k) {
                    $('#FormNomineeBenefit').trigger('reset');
                    $('#BenefitPerc').val(k.BenefitPerc);
                    $('#Type_Nomines').P2BSelectMenuAppend("@Url.Action("GetLookupValue", "lookup")", 311, k.BenefitType_Id);
                });


                // }, 3000);
            });
            event.preventDefault();
        });







        $('#Remove-BenefitTypelist-BenefitNominees').button().on('click', function (event) {
            // dt = $('#JqGrid').P2BGrid.P2BEdDelV('#JqGrid', 'Id');
            var a = [], b;
            a = $('#BenefitTypelist').P2BGetTableDataonSelectedRow('#BenefitTypelist', 0);
            b = a[0];
            $('<div></div>').P2BPartialDeleteModalDialog('@Url.Action("DeleteContactDetails","EmployeeFamilyDetails")', b, 0, 'Are you sure want to delete record???', 'Message : ', 'Request failed', '#BenefitTypelist', $('#BenefitTypelist').val(), 200, 200, '#frmHolidaybookingrequest', '#BenefitTypelist', '#Edit-BenefitTypelist-BenefitNominees,#Remove-BenefitTypelist-BenefitNominees');
            event.preventDefault();
        });




        $('#Lookup-NomineeName-BenefitNominees').on('click', function (event) {
            var a = $('#Employee-Table').P2BGetTableDataonSelectedRow('#Employee-Table', 1);
            if (a.val == "" || a.length == 0) {
                alert("Please select Employee");
                return false;
            }
            $('.dialog').P2BLookUpModal('@Url.Action("GetLookupFamilyName", "EmployeeFamilyDetails")?Empid=' + a, '', 'LookupDiv', 'Family Look Up Data', '#NomineeNamelist', 'NomineeNamelist', 5, 'NomineeNamelist', '#frmHolidaybookingrequest', 'A', '#Edit-NomineeName-BenefitNominees,#Remove-NomineeName-BenefitNominees', 'Lookup_table', 'PageNavPosition');
            event.preventDefault();
        });

        $('<div></div>').P2BPartialCreateModalDialog();
        $('#Create-NomineeName-BenefitNominees').button().on("click", function (event) {
            var a = $('#Employee-Table').P2BGetTableDataonSelectedRow('#Employee-Table', 1);
            if (a.val == "" || a.length == 0) {
                alert("Please select Employee");
                return false;
            }
            @*$('<div></div>').P2BPartialCreateModalDialog('@Url.Action("partial", "NameSingle")', 'Create NomineeName', 'open', '@Url.Action("Create", "NameSingle")', '#FormNameSingle', 'Message :', 'Request Falied :', '#JqGrid', 400, 500, '', '', '', '#frmHolidaybookingrequest', '', function (data) {
                $('#NomineeNamelist').P2BLookUpEncapsulate('#NomineeNamelist', 'NomineeNamelist', data[0], data[1], 'NomineeNamelist', '#Edit-NomineeName-BenefitNominees,#Remove-NomineeName-BenefitNominees', 'N');
            });*@
            $('<div></div>').P2BPartialCreateModalDialog('@Url.Action("GridPartial", "EmployeeFamilyDetails")', 'Create Family Name', 'open', '@Url.Action("GridCreate", "EmployeeFamilyDetails")?Empid='+a, '#FormBenefitNominees', 'Message :', 'Request Falied :', '#JqGrid', 400, 500, '', '', '', '#frmHolidaybookingrequest', '', function (data) {
                $('#NomineeNamelist').P2BLookUpEncapsulate('#NomineeNamelist', 'NomineeNamelist', data[0], data[1], 'NomineeNamelist', '#Edit-NomineeName-BenefitNominees,#Remove-NomineeName-BenefitNominees', 'N');
                $('#Categorylist1').P2BSelectMenuAppend('@Url.Action("GetLookupValue", "lookup")', 107, "");

            });

            event.preventDefault();
        });

        $('#Edit-NomineeName-BenefitNominees').button().on("click", function (event) {
            var a = [], b;
            a = $('#NomineeNamelist').P2BGetTableDataonSelectedRow('#NomineeNamelist', 0);
            b = a[0];
            console.log(b);
            $('<div></div>').P2BPatialEditModalDialog('@Url.Action("partial", "NameSingle")', '@Url.Action("edit", "NameSingle")', b, '@Url.Action("EditSave", "NameSingle")', 'Edit  Details', '#FormNameSingle', b, 'Message :', 'Request Falied :', '#JqGrid', 400, 500, '#frmHolidaybookingrequest', '#NomineeNamelist', 'NomineeNamelist', 'NomineeNamelist', 'N', '#Edit-NomineeName-BenefitNominees,#Remove-NomineeName-BenefitNominees', function (data) {
                // setTimeout(function () {
                var k = data;
                $('#FormNameSingle').trigger("reset");
                $('#FName').val(k.FName);
                $('#MName').val(k.MName);
                $('#LName').val(k.LName);

                $('#title').P2BSelectMenuAppend("@Url.Action("GetLookupValue", "lookup")", 100, k.EmpTitle);


                // }, 3000);
            });
            event.preventDefault();
        });

        $('#Remove-NomineeName-BenefitNominees').button().on('click', function (event) {
            // dt = $('#JqGrid').P2BGrid.P2BEdDelV('#JqGrid', 'Id');
            var a = [], b;
            a = $('#NomineeNamelist').P2BGetTableDataonSelectedRow('#NomineeNamelist', 0);
            b = a[0];
            $('<div></div>').P2BPartialDeleteModalDialog('@Url.Action("DeleteContactDetails","EmployeeFamilyDetails")', b, 0, 'Are you sure want to delete record???', 'Message : ', 'Request failed', '#NomineeNamelist', $('#NomineeNamelist').val(), 200, 200, '#frmHolidaybookingrequest', '#NomineeNamelist', '#Edit-NomineeName-BenefitNominees,#Remove-NomineeName-BenefitNominees');
            event.preventDefault();
        });

        $('.popup_radio_button').controlgroup();
        $('#Autho').makeDisable('#Create,#Edit,#Delete');
        $('.drop').selectmenu().selectmenu('menuWidget');
        $('#CategoryList_DDL').selectmenu().selectmenu("menuWidget");
        $('#Type_Nomines').selectmenu().selectmenu("menuWidget");
        $('#Autho').onClickGrid('#JqGrid', '@Url.Action("P2BGrid")', '@Url.Action("P2BGrid")');
        // $('#NoOfRooms').ForceAmount().MaxLength(10);
        $('#NoOfRooms').attr("value", "0");
        $('#TotFamilyMembers').attr("value", "0");
        $('#TotalAdults').attr("value", "0");
        $('#TotalChild').attr("value", "0");
        $('#TotalInfant').attr("value", "0");
        $('#TotalSrCitizen').attr("value", "0");
        $('#RatePerDay').attr("value", "0");
        $('#StdDiscount').attr("value", "0");
        $('#Taxes').attr("value", "0");
        $('#BillAmount').attr("value", "0");
        $('#Eligible_BillAmount').attr("value", "0");

    });
</script>