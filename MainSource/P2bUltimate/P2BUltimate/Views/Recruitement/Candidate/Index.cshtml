@{
    ViewBag.Title = "Candidate";
}
@model Recruitement.Candidate


<html>
<head>
    <title></title>
    <style>
        .icon-row {
            position: relative;
            left: 49px;
            top: -151px;
        }

        .icon-rowreporting {
            position: relative;
            left: 93px;
            top: -151px;
        }

        .emp_icon-row {
            position: relative;
            left: 324px;
            top: -27px;
        }

        .row1 {
            width: 423px;
        }

        .row4 {
            width: 300px;
            display: inline-block;
        }

        .row5 {
            width: 299px;
            display: inline-block;
        }

        .row6 {
            width: 338px;
            display: inline-block;
        }

        .popup-content-label {
            width: 132px;
            display: block;
            float: left;
            margin: 1.5px;
        }

        .popup-content-textbox {
            width: 206px;
        }

        .row2 {
            width: 506px;
            display: inline-block;
        }

        .row3 {
            width: 300px;
            display: inline-block;
        }

        .section1 {
            display: block;
            border: 1.5px solid rgba(207, 207, 207, 0.91);
            height: 322px;
            width: 426px;
            margin: 4px auto;
            position: absolute;
            left: 4px;
            top: 37px;
        }

        .section6 {
            display: block;
            border: 1.5px solid rgba(207, 207, 207, 0.91);
            height: 241px;
            width: 1037px;
            margin: 4px auto;
            position: absolute;
            top: 323px;
        }

        .section2 {
            display: block;
            border: 1.5px solid rgba(207, 207, 207, 0.91);
            height: 486px;
            width: 1043px;
            margin: 4px auto;
            position: absolute;
            top: 551px;
            left: -5px;
        }

        .section3 {
            display: block;
            border: 1.5px solid rgba(207, 207, 207, 0.91);
            height: 155px;
            width: 613px;
            margin: 4px auto;
            position: absolute;
            left: 429px;
            top: -5px;
        }

        .section4 {
            display: block;
            border: 1.5px solid rgba(207, 207, 207, 0.91);
            height: 92px;
            width: 613px;
            margin: 4px auto;
            position: absolute;
            left: 429px;
            top: 224px;
        }

        .section5 {
            display: block;
            border: 1.5px solid rgba(207, 207, 207, 0.91);
            height: 64px;
            width: 613px;
            margin: 4px auto;
            position: absolute;
            left: 429px;
            top: 154px;
        }

        .short_width {
            width: 74px;
        }

        .date_label {
            width: 107px;
        }

        .popup-content-textbox-short {
            min-width: 45%;
        }

        .short_width_pay {
            width: 74px;
            display: block;
            float: left;
        }

        .add_label {
            display: block;
            float: left;
            width: 88px;
            margin: 1px;
        }

        #Gender-button, #MaritalStatus-button {
            margin-right: 59px;
        }

        .popup-content-drop-icon-edit, .popup-content-drop-icon-create, .popup-content-drop-icon-lookup {
            display: inline-block;
            left: 0;
            top: 4px;
        }

        .popup-content-drop-icon-edit, .popup-content-drop-icon-create, .popup-content-drop-icon-lookup {
            height: 20px;
            margin: auto;
            position: absolute;
            width: 20px;
            left: 24px;
        }

        .popup-content-drop-icon-edit {
            left: 76px;
        }

        .popup-content-drop-icon-lookup {
            left: 29px;
        }

        .popup-content-drop-icon-create {
            left: 52px;
        }
    </style>
</head>
<body>
    <div class="Form_Bg">
        <div class="Form_Input">
            <div class="Button_Container">
                <button class="button" id="Create">Create</button>
                <button class="button" id="View">View</button>
                <button class="button" id="Edit">Edit</button>
                <button class="button" id="Delete">Delete</button>
                <button class="button" id="Autho">Authorized</button>
                <div id="Grid_Form">
                    <div>
                        <table id="JqGrid"></table>
                        <div id="pager2"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="dialog">
        <div title="LookUp Data">
            <div class="LookupDiv" id="lookup"></div>
        </div>
        <div id="PageNavPosition">

        </div>
    </div>
    <div id="Create_Dialog">
        @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "FormCandidate", name = "FormCandidate" }))
        {
            <input id="Autho_Action" type="hidden" name="Autho_Action" />
            <input id="Autho_Allow" type="hidden" name="Autho_Allow" />
            <div id="tabs">
                <ul>
                    <li><a href="#sec1">Candidate Info</a></li>
                    @*<li><a href="#sec2">Reporting Structure</a></li>*@
                </ul>
                <div id="sec1" style="padding: 0em;">
                    <div class="section1">
                        <div class="heading">Identity</div>
                        <div class="row1 content_margine">
                            @Html.LabelFor(m => m.CanCode, "Code", new { @class = "popup-content-label must" })
                            @Html.TextBoxFor(m => m.CanCode, new { @class = "popup-content-textbox must" })
                        </div>

                        <div class="content_margine row1">
                            @Html.LabelFor(m => m.CanName.FullNameFML, "Name:", new { @class = "popup-content-label must" })
                            <input type="text" id="EmpName_id" name="EmpName_id" class="filter_structure_id" />
                            @Html.TextBoxFor(m => m.CanName.FullNameFML, new { @class = "popup-content-textbox must" })
                            <div class="emp_icon-row">
                                <button data-p2btooltip="Lookup FirstName" class="popup-content-drop-icon-lookup" id="Lookup-EmpName-FName">
                                    <span class="ui-icon ui-icon-folder-open popup-content-iconmark"></span>
                                </button>
                                <button data-p2btooltip="Create FirstName" class="popup-content-drop-icon-create" id="Create-EmpName-FName">
                                    <span class="ui-icon ui-icon-newwin popup-content-iconmark"></span>
                                </button>
                                <button data-p2btooltip="Edit FirstName" class="popup-content-drop-icon-edit" id="Edit-EmpName-FName">
                                    <span class="ui-icon ui-icon-pencil popup-content-iconmark"></span>
                                </button>
                            </div>
                        </div>
                        <div class="content_margine row1">
                            @Html.LabelFor(m => m.FatherName.FullNameFML, "Father Name:", new { @class = "popup-content-label" })
                            <input type="text" id="FatherName_id" name="FatherName_id" class="filter_structure_id" />
                            @Html.TextBoxFor(m => m.FatherName.FullNameFML, new { @class = "popup-content-textbox" })
                            <div class="emp_icon-row">
                                <button data-p2btooltip="Lookup FirstName" class="popup-content-drop-icon-lookup" id="Lookup-FatherName-FName">
                                    <span class="ui-icon ui-icon-folder-open popup-content-iconmark"></span>
                                </button>
                                <button data-p2btooltip="Create FirstName" class="popup-content-drop-icon-create" id="Create-FatherName-FName">
                                    <span class="ui-icon ui-icon-newwin popup-content-iconmark"></span>
                                </button>
                                <button data-p2btooltip="Edit FirstName" class="popup-content-drop-icon-edit" id="Edit-FatherName-FName">
                                    <span class="ui-icon ui-icon-pencil popup-content-iconmark"></span>
                                </button>
                            </div>
                        </div>
                        <div class="content_margine row1">
                            @Html.LabelFor(m => m.MotherName.FullNameFML, "Mother Name:", new { @class = "popup-content-label" })
                            <input type="text" id="MotherName_id" name="MotherName_id" class="filter_structure_id" />
                            @Html.TextBoxFor(m => m.MotherName.FullNameFML, new { @class = "popup-content-textbox" })
                            <div class="emp_icon-row">
                                <button data-p2btooltip="Lookup FirstName" class="popup-content-drop-icon-lookup" id="Lookup-MotherName-FName">
                                    <span class="ui-icon ui-icon-folder-open popup-content-iconmark"></span>
                                </button>
                                <button data-p2btooltip="Create FirstName" class="popup-content-drop-icon-create" id="Create-MotherName-FName">
                                    <span class="ui-icon ui-icon-newwin popup-content-iconmark"></span>
                                </button>
                                <button data-p2btooltip="Create FirstName" class="popup-content-drop-icon-edit" id="Edit-MotherName-FName">
                                    <span class="ui-icon ui-icon-pencil popup-content-iconmark"></span>
                                </button>
                            </div>
                        </div>

                        <div class="content_margine row1">
                            @Html.LabelFor(m => m.Gender, "Gender:", new { @class = "popup-content-label must" })
                            <select class="selectmenu must" style="width:215px" id="GenderList_DDL" name="GenderList_DDL"><option value="0">-Select-</option></select>
                        </div>

                        <div class="content_margine row1">
                            @Html.LabelFor(m => m.MaritalStatus, "Marital Status:", new { @class = "popup-content-label" })

                            <select class="selectmenu" style="width:215px; left:-17px" id="MaritalStatusList_DDL" name="MaritalStatusList_DDL"><option value="0">-Select-</option></select>
                        </div>

                        <div id="Husband_disp" class="content_margine row1">
                            @Html.LabelFor(m => m.HusbandName.FullNameFML, "Husband Name:", new { @class = "popup-content-label" })
                            <input type="text" id="HusbandName_id" name="HusbandName_id" class="filter_structure_id" />
                            @Html.TextBoxFor(m => m.HusbandName.FullNameFML, new { @class = "popup-content-textbox" })
                            <div class="emp_icon-row">
                                <button data-p2btooltip="Lookup FirstName" class="popup-content-drop-icon-lookup" id="Lookup-HusbandName-FName">
                                    <span class="ui-icon ui-icon-folder-open popup-content-iconmark"></span>
                                </button>
                                <button data-p2btooltip="Create FirstName" class="popup-content-drop-icon-create" id="Create-HusbandName-FName">
                                    <span class="ui-icon ui-icon-newwin popup-content-iconmark"></span>
                                </button>
                                <button data-p2btooltip="Create FirstName" class="popup-content-drop-icon-edit" id="Edit-HusbandName-FName">
                                    <span class="ui-icon ui-icon-pencil popup-content-iconmark"></span>
                                </button>
                            </div>
                        </div>

                        <div id="BeforeM_disp" class="content_margine row1">
                            @Html.LabelFor(m => m.BeforeMarriageName.FullNameFML, "Before mariage Name:", new { @class = "popup-content-label" })
                            <input type="text" id="BeforeMarriageName_id" name="BeforeMarriageName_id" class="filter_structure_id" />
                            @Html.TextBoxFor(m => m.BeforeMarriageName.FullNameFML, new { @class = "popup-content-textbox" })
                            <div class="emp_icon-row">
                                <button data-p2btooltip="Lookup FirstName" class="popup-content-drop-icon-lookup" id="Lookup-BeforeMarriageName-FName">
                                    <span class="ui-icon ui-icon-folder-open popup-content-iconmark"></span>
                                </button>
                                <button data-p2btooltip="Create FirstName" class="popup-content-drop-icon-create" id="Create-BeforeMarriageName-FName">
                                    <span class="ui-icon ui-icon-newwin popup-content-iconmark"></span>
                                </button>
                                <button data-p2btooltip="Create FirstName" class="popup-content-drop-icon-edit" id="Edit-BeforeMarriageName-FName">
                                    <span class="ui-icon ui-icon-pencil popup-content-iconmark"></span>
                                </button>
                            </div>
                        </div>
                        @*<div class="content_margine row1">
                                @Html.LabelFor(m => m.CardCode, "Card Code:", new { @class = "popup-content-label must" })
                                @Html.TextBoxFor(m => m.CardCode, new { @class = "popup-content-textbox must" })
                            </div>*@
                        <div class="section2">
                            <div class="heading">Contact Details</div>
                            <div class="content_margine row2">
                                @Html.LabelFor(m => m.ResAddr, "Residential Address:", new { @class = "popup-content-label add_label" })
                                <div class="popup-content-table">
                                    <table class="lookuptableselected" id="ResAddrslist">
                                        <tr><th>ID</th><th>LookUp Selected Description</th></tr>
                                    </table>
                                </div>
                                <div class="icon-row">
                                    <button data-p2btooltip="Lookup residence Addrs Details" class=" popup-content-icon-lookup" id="Lookup-ResAddrs-Employee"><span class="ui-icon ui-icon-folder-open popup-content-iconmark"></span></button>
                                    <button data-p2btooltip="Create residence Addrs Details" class=" popup-content-icon-create" id="Create-ResAddrs-Employee"><span class="ui-icon ui-icon-newwin popup-content-iconmark"></span></button>
                                    <button data-p2btooltip="Edit residence Addrs Details" class=" popup-content-icon-edit" id="Edit-ResAddrs-Employee"><span class="ui-icon ui-icon-pencil popup-content-iconmark"></span></button>
                                    <button data-p2btooltip="Delete residence Addrs Details" class=" popup-content-icon-remove" id="Remove-ResAddrs-Employee"><span class="ui-icon ui-icon-trash popup-content-iconmark"></span></button>
                                </div>
                            </div>
                            <div class="content_margine row2">
                                @Html.LabelFor(m => m.ResContact, "Residential  Contacts Details:", new { @class = "popup-content-label add_label" })
                                <div class="popup-content-table">
                                    <table class="lookuptableselected" id="ResContactDetailslist">
                                        <tr><th>ID</th><th>LookUp Selected Description</th></tr>
                                    </table>
                                </div>
                                <div class="icon-row">
                                    <button data-p2btooltip="Lookup residence ContactDetails Details" class=" popup-content-icon-lookup" id="Lookup-ResContactDetails-Employee"><span class="ui-icon ui-icon-folder-open popup-content-iconmark"></span></button>
                                    <button data-p2btooltip="Create residence ContactDetails Details" class=" popup-content-icon-create" id="Create-ResContactDetails-Employee"><span class="ui-icon ui-icon-newwin popup-content-iconmark"></span></button>
                                    <button data-p2btooltip="Edit residence ContactDetails Details" class=" popup-content-icon-edit" id="Edit-ResContactDetails-Employee"><span class="ui-icon ui-icon-pencil popup-content-iconmark"></span></button>
                                    <button data-p2btooltip="Delete residence ContactDetails Details" class=" popup-content-icon-remove" id="Remove-ResContactDetails-Employee"><span class="ui-icon ui-icon-trash popup-content-iconmark"></span></button>
                                </div>
                            </div>
                            <div class="content_margine row2">
                                @Html.LabelFor(m => m.PerAddr, "Permant Address: ", new { @class = "popup-content-label add_label" })
                                <div class="popup-content-table">
                                    <table class="lookuptableselected" id="PermAddrslist">
                                        <tr><th>ID</th><th>LookUp Selected Description</th></tr>
                                    </table>
                                </div>
                                <div class="icon-row">
                                    <button data-p2btooltip="Lookup permanent Addrs Details" class=" popup-content-icon-lookup" id="Lookup-PermAddrs-Employee"><span class="ui-icon ui-icon-folder-open popup-content-iconmark"></span></button>
                                    <button data-p2btooltip="Create permanent Addrs Details" class=" popup-content-icon-create" id="Create-PermAddrs-Employee"><span class="ui-icon ui-icon-newwin popup-content-iconmark"></span></button>
                                    <button data-p2btooltip="Edit permanent Addrs Details" class=" popup-content-icon-edit" id="Edit-PermAddrs-Employee"><span class="ui-icon ui-icon-pencil popup-content-iconmark"></span></button>
                                    <button data-p2btooltip="Delete permanent Addrs Details" class=" popup-content-icon-remove" id="Remove-PermAddrs-Employee"><span class="ui-icon ui-icon-trash popup-content-iconmark"></span></button>
                                </div>
                            </div>
                            <div class="content_margine row2">
                                @Html.LabelFor(m => m.PerContact, "Permant Contact Details:", new { @class = "popup-content-label add_label" })
                                <div class="popup-content-table">
                                    <table class="lookuptableselected" id="PermContactDetailslist">
                                        <tr><th>ID</th><th>LookUp Selected Description</th></tr>
                                    </table>
                                </div>
                                <div class="icon-row">
                                    <button data-p2btooltip="Lookup permanent ContactDetails Details" class=" popup-content-icon-lookup" id="Lookup-PermContactDetails-Employee"><span class="ui-icon ui-icon-folder-open popup-content-iconmark"></span></button>
                                    <button data-p2btooltip="Create permanent ContactDetails Details" class=" popup-content-icon-create" id="Create-PermContactDetails-Employee"><span class="ui-icon ui-icon-newwin popup-content-iconmark"></span></button>
                                    <button data-p2btooltip="Edit permanent ContactDetails Details" class=" popup-content-icon-edit" id="Edit-PermContactDetails-Employee"><span class="ui-icon ui-icon-pencil popup-content-iconmark"></span></button>
                                    <button data-p2btooltip="Delete permanent ContactDetails Details" class=" popup-content-icon-remove" id="Remove-PermContactDetails-Employee"><span class="ui-icon ui-icon-trash popup-content-iconmark"></span></button>
                                </div>
                            </div>
                            <div class="content_margine row2">
                                @Html.LabelFor(m => m.CorAddr, "Corresponds Address:", new { @class = "popup-content-label add_label" })
                                <div class="popup-content-table">
                                    <table class="lookuptableselected" id="CorrsAddrslist">
                                        <tr><th>ID</th><th>LookUp Selected Description</th></tr>
                                    </table>
                                </div>
                                <div class="icon-row">
                                    <button data-p2btooltip="Lookup corresponding sAddrs Details" class=" popup-content-icon-lookup" id="Lookup-CorrsAddrs-Employee"><span class="ui-icon ui-icon-folder-open popup-content-iconmark"></span></button>
                                    <button data-p2btooltip="Create corresponding sAddrs Details" class=" popup-content-icon-create" id="Create-CorrsAddrs-Employee"><span class="ui-icon ui-icon-newwin popup-content-iconmark"></span></button>
                                    <button data-p2btooltip="Edit corresponding sAddrs Details" class=" popup-content-icon-edit" id="Edit-CorrsAddrs-Employee"><span class="ui-icon ui-icon-pencil popup-content-iconmark"></span></button>
                                    <button data-p2btooltip="Delete corresponding sAddrs Details" class=" popup-content-icon-remove" id="Remove-CorrsAddrs-Employee"><span class="ui-icon ui-icon-trash popup-content-iconmark"></span></button>
                                </div>
                            </div>
                            <div class="content_margine row2">
                                @Html.LabelFor(m => m.CorContact, "Corresponds Contact Details:", new { @class = "popup-content-label add_label" })
                                <div class="popup-content-table">
                                    <table class="lookuptableselected" id="CorrsContactDetailslist">
                                        <tr><th>ID</th><th>LookUp Selected Description</th></tr>
                                    </table>
                                </div>
                                <div class="icon-row">
                                    <button data-p2btooltip="Lookup corresponding Contact Details" class=" popup-content-icon-lookup" id="Lookup-CorrsContactDetails-Employee"><span class="ui-icon ui-icon-folder-open popup-content-iconmark"></span></button>
                                    <button data-p2btooltip="Create corresponding Contact Details" class=" popup-content-icon-create" id="Create-CorrsContactDetails-Employee"><span class="ui-icon ui-icon-newwin popup-content-iconmark"></span></button>
                                    <button data-p2btooltip="Edit corresponding Contact Details" class=" popup-content-icon-edit" id="Edit-CorrsContactDetails-Employee"><span class="ui-icon ui-icon-pencil popup-content-iconmark"></span></button>
                                    <button data-p2btooltip="Delete corresponding Contact Details" class=" popup-content-icon-remove" id="Remove-CorrsContactDetails-Employee"><span class="ui-icon ui-icon-trash popup-content-iconmark"></span></button>
                                </div>
                            </div>
                        </div>
                        @*<div class="section3">
                                <div class="heading">GeoGrphical Struct</div>
                                <div class="row3 content_margine">
                                    @Html.LabelFor(m => m.GeoStruct.Corporate, "Corpoarte:", new { @class = "popup-content-label short_width" })
                                    <select class="selectmenu_geo selectmenu" style="width:200px;display:none;" id="CorporateList_DDL" name="CorporateList_DDL"><option value="0">-Select-</option></select>
                                </div>
                                <div class="row3 content_margine">
                                    @Html.LabelFor(m => m.GeoStruct.Region, "Region:", new { @class = "popup-content-label short_width" })
                                    <select class="selectmenu_geo selectmenu" style="width:200px;display:none;" id="RegionList_DDL" name="RegionList_DDL"><option value="0">-Select-</option></select>
                                </div>
                                <div class="row3 content_margine">
                                    @Html.LabelFor(m => m.GeoStruct.Company, "Company:", new { @class = "popup-content-label short_width" })
                                    <select class="selectmenu_geo selectmenu" style="width:200px; left:-32px" id="CompanyList_DDL" name="CompanyList_DDL"><option value="0">-Select-</option></select>
                                </div>
                                <div class="row3 content_margine">
                                    @Html.LabelFor(m => m.GeoStruct.Division, "Division:", new { @class = "popup-content-label short_width" })
                                    <select class="selectmenu_geo selectmenu" style="width:200px; left:-19px" id="DivisionList_DDL" name="DivisionList_DDL"><option value="0">-Select-</option></select>
                                </div>
                                <div class="row3 content_margine">
                                    @Html.LabelFor(m => m.GeoStruct.Location, "Location:", new { @class = "popup-content-label short_width" })
                                    <select class="selectmenu_geo selectmenu" style="width: 200px; left: -32px;" id="LocationList_DDL" name="LocationList_DDL"><option value="0">-Select-</option></select>
                                </div>
                                <div class="row3 content_margine">
                                    @Html.LabelFor(m => m.GeoStruct.Department, "Department:", new { @class = "popup-content-label short_width" })
                                    <select class="selectmenu_geo selectmenu" style="width: 200px; left:-19px" id="DepartmentList_DDL" name="DepartmentList_DDL"><option value="0">-Select-</option></select>
                                </div>
                                <div class="row3 content_margine">
                                    @Html.LabelFor(m => m.GeoStruct.Group, "Group:", new { @class = "popup-content-label short_width" })
                                    <select class="selectmenu_geo selectmenu" style="width:200px;left:-32px;" id="GroupList_DDL" name="GroupList_DDL"><option value="0">-Select-</option></select>
                                </div>
                                <div class="row3 content_margine">
                                    @Html.LabelFor(m => m.GeoStruct.Unit, "Unit:", new { @class = "popup-content-label short_width" })
                                    <select class="selectmenu_geo selectmenu" style="width:200px; left:-19px" id="UnitList_DDL" name="UnitList_DDL"><option value="0">-Select-</option></select>

                                </div>
                            </div>
                            <div class="section4">
                                <div class="heading">Pay Struct</div>
                                <div class="row4 content_margine">
                                    @Html.LabelFor(m => m.PayStruct.Grade, "Grade:", new { @class = "popup-content-label short_width_pay" })
                                    <select class="selectmenu_pay selectmenu" style="width:200px; left:-32px" id="Grade_drop" name="Grade_drop"><option value="0">-Select-</option></select>
                                </div>
                                <div class="row4 content_margine">
                                    @Html.LabelFor(m => m.PayStruct.Level, "Level:", new { @class = "popup-content-label short_width_pay" })
                                    <select class="selectmenu_pay selectmenu" style="width:200px; left:-19px" id="Level_drop" name="Level_drop"><option value="0">-Select-</option></select>
                                </div>
                                <div class="row4 content_margine">
                                    @Html.LabelFor(m => m.PayStruct.JobStatus.EmpStatus, "Job Status:", new { @class = "popup-content-label short_width_pay" })
                                    <select class="selectmenu_pay selectmenu" style="width:200px; left:-32px" id="JobStatus_drop" name="JobStatus_drop"><option value="0">-Select-</option></select>
                                </div>

                            </div>
                            <div class="section5">
                                <div class="heading">Fuctional Struct</div>
                                <div class="row5 content_margine">
                                    @Html.LabelFor(m => m.FuncStruct.Job.Name, "Job", new { @class = "popup-content-label short_width" })
                                    <select class="selectmenu_fun selectmenu" style="width:200px" id="JobList_DDL" name="JobList_DDL"><option value="0">-Select-</option></select>
                                </div>
                                <div class="row5 content_margine">
                                    @Html.LabelFor(m => m.FuncStruct.Job.JobPosition, "Position", new { @class = "popup-content-label short_width" })
                                    <select class="selectmenu_fun selectmenu" style="width:200px" id="JobPositionList_DDL" name="Position_drop"><option value="0">-Select-</option></select>

                                </div>
                            </div>*@
                        <div class="section6">
                            <div class="heading">Service Book Date</div>
                            <div class="row6 content_margine">@Html.LabelFor(m => m.ServiceBookDates.BirthDate, "Birthday Date:", new { @class = "popup-content-label date_label must" })@Html.TextBoxFor(m => m.ServiceBookDates.BirthDate, new { @class = "popup-content-textbox-short date must" })</div>
                            <div class="row6 content_margine">@Html.LabelFor(m => m.ServiceBookDates.JoiningDate, "Joining Date:", new { @class = "popup-content-label date_label must" })@Html.TextBoxFor(m => m.ServiceBookDates.JoiningDate, new { @class = "popup-content-textbox-short date must" })</div>
                            <div class="row6 content_margine">@Html.LabelFor(m => m.ServiceBookDates.ProbationPeriod, "Probation Period:", new { @class = "popup-content-label date_label must" })@Html.TextBoxFor(m => m.ServiceBookDates.ProbationPeriod, new { @class = "popup-content-textbox-short must" })</div>
                            <div class="row6 content_margine">@Html.LabelFor(m => m.ServiceBookDates.ProbationDate, "Probation Date:", new { @class = "popup-content-label date_label" })@Html.TextBoxFor(m => m.ServiceBookDates.ProbationDate, new { @class = "popup-content-textbox-short date" })</div>
                            <div class="row6 content_margine">@Html.LabelFor(m => m.ServiceBookDates.ConfirmPeriod, "Confirm Period:", new { @class = "popup-content-label date_label must" })@Html.TextBoxFor(m => m.ServiceBookDates.ConfirmPeriod, new { @class = "popup-content-textbox-short must" })</div>
                            <div class="row6 content_margine">@Html.LabelFor(m => m.ServiceBookDates.ConfirmationDate, "Confirm Date:", new { @class = "popup-content-label date_label must" })@Html.TextBoxFor(m => m.ServiceBookDates.ConfirmationDate, new { @class = "popup-content-textbox-short date must" })</div>
                            <div class="row6 content_margine">@Html.LabelFor(m => m.ServiceBookDates.LastIncrementDate, "Last Incre Date:", new { @class = "popup-content-label date_label" })@Html.TextBoxFor(m => m.ServiceBookDates.LastIncrementDate, new { @class = "popup-content-textbox-short date" })</div>
                            <div class="row6 content_margine">@Html.LabelFor(m => m.ServiceBookDates.LastPromotionDate, "Last Promo Date:", new { @class = "popup-content-label date_label" })@Html.TextBoxFor(m => m.ServiceBookDates.LastPromotionDate, new { @class = "popup-content-textbox-short date" })</div>
                            <div class="row6 content_margine">@Html.LabelFor(m => m.ServiceBookDates.LastTransferDate, "Last Trans Date :", new { @class = "popup-content-label date_label" })@Html.TextBoxFor(m => m.ServiceBookDates.LastTransferDate, new { @class = "popup-content-textbox-short date" })</div>
                            <div class="row6 content_margine">@Html.LabelFor(m => m.ServiceBookDates.SeniorityDate, "Seniority Date:", new { @class = "popup-content-label date_label" })@Html.TextBoxFor(m => m.ServiceBookDates.SeniorityDate, new { @class = "popup-content-textbox-short date" })</div>
                            <div class="row6 content_margine">@Html.LabelFor(m => m.ServiceBookDates.SeniorityNo, "Seniority No:", new { @class = "popup-content-label date_label" })@Html.TextBoxFor(m => m.ServiceBookDates.SeniorityNo, new { @class = "popup-content-textbox-short" })</div>
                            <div class="row6 content_margine">@Html.LabelFor(m => m.ServiceBookDates.RetirementDate, "Retirement Date:", new { @class = "popup-content-label date_label" })@Html.TextBoxFor(m => m.ServiceBookDates.RetirementDate, new { @class = "popup-content-textbox-short date", @readonly = "readonly" })</div>
                            <div class="row6 content_margine">@Html.LabelFor(m => m.ServiceBookDates.ResignationDate, "ResignationDate:", new { @class = "popup-content-label date_label" })@Html.TextBoxFor(m => m.ServiceBookDates.ResignationDate, new { @class = "popup-content-textbox-short date" })</div>
                            <div class="row6 content_margine">@Html.LabelFor(m => m.ServiceBookDates.ResignReason, "ResignReason:", new { @class = "popup-content-label date_label" })@Html.TextAreaFor(m => m.ServiceBookDates.ResignReason, new { @class = "popup-content-textbox-short  ", @style = "height:9px" })</div>
                            <div class="row6 content_margine">@Html.LabelFor(m => m.ServiceBookDates.ServiceLastDate, "ServiceLastDate:", new { @class = "popup-content-label date_label" })@Html.TextBoxFor(m => m.ServiceBookDates.ServiceLastDate, new { @class = "popup-content-textbox-short date" })</div>
                            <div class="row6 content_margine">@Html.LabelFor(m => m.ServiceBookDates.PFJoingDate, "PFJoingDate:", new { @class = "popup-content-label date_label" })@Html.TextBoxFor(m => m.ServiceBookDates.PFJoingDate, new { @class = "popup-content-textbox-short date" })</div>
                            <div class="row6 content_margine">@Html.LabelFor(m => m.ServiceBookDates.PensionJoingDate, "PensionJoingDate:", new { @class = "popup-content-label date_label" })@Html.TextBoxFor(m => m.ServiceBookDates.PensionJoingDate, new { @class = "popup-content-textbox-short date" })</div>
                            <div class="row6 content_margine">@Html.LabelFor(m => m.ServiceBookDates.PFExitDate, "PFExitDate:", new { @class = "popup-content-label date_label" })@Html.TextBoxFor(m => m.ServiceBookDates.PFExitDate, new { @class = "popup-content-textbox-short date" })</div>
                            <div class="row6 content_margine">@Html.LabelFor(m => m.ServiceBookDates.PensionExitDate, "PensionExitDate:", new { @class = "popup-content-label date_label" })@Html.TextBoxFor(m => m.ServiceBookDates.PensionExitDate, new { @class = "popup-content-textbox-short date" })</div>
                        </div>
                    </div>
                </div>
                @*<div id="sec2" style="padding: 0em;">
                        <div class="empreporting_row content_margine">
                            <label class="popup-content-label">ReportingStructRights :</label>
                            <div class="popup-content-table">
                                <table class="lookuptableselected" id="ReportingStructRightslist">
                                    <tr><th>ID</th><th>LookUp Selected Description</th></tr>
                                </table>
                            </div>
                            <div class="icon-rowreporting icon-row">
                                <button data-p2btooltip="Lookup ReportingStructRights" class=" popup-content-icon-lookup" id="Lookup-ReportingStructRights-Employee"><span class="ui-icon ui-icon-folder-open popup-content-iconmark"></span></button>
                                <button data-p2btooltip="Create ReportingStructRights" class=" popup-content-icon-create" id="Create-ReportingStructRights-Employee"><span class="ui-icon ui-icon-newwin popup-content-iconmark"></span></button>
                                <button data-p2btooltip="Edit ReportingStructRights" class=" popup-content-icon-edit" id="Edit-ReportingStructRights-Employee"><span class="ui-icon ui-icon-pencil popup-content-iconmark"></span></button>
                                <button data-p2btooltip="Remove ReportingStructRights" class=" popup-content-icon-remove" id="Remove-ReportingStructRights-Employee"><span class="ui-icon ui-icon-trash popup-content-iconmark"></span></button>
                            </div>
                        </div>
                    </div>*@
            </div>
        }
    </div>


</body>
</html>
<script>
    $(document).ready(function (e) {
        $("#ServiceBookDates_BirthDate").on('focusout', function () {
            val = $(this).val();
            if (val) {
                $.get("@Url.Action("GetRetirementDay")", { data: val }, function (data) {
                    $("#ServiceBookDates_RetirementDate").val(data);
                });
            }
        });

        $("#ServiceBookDates_BirthDate").on('change', function () {
            $('#ServiceBookDates_JoiningDate').val('');
        });

        $("#GenderList_DDL,#MaritalStatusList_DDL").on("selectmenuchange", function () {

            if ($("#GenderList_DDL :selected").text() == "FEMALE") {
                if ($("#MaritalStatusList_DDL :selected").text() == "MARRIED") {
                    $("#BeforeM_disp,#Husband_disp").fadeIn();
                } else {
                    $("#BeforeM_disp,#Husband_disp").fadeOut();
                }
            }
            else {
                $("#BeforeM_disp,#Husband_disp").fadeOut();
            }
        });

        $("#ServiceBookDates_BirthDate").on('focusout', function () {
            if ($(this).val()) {
                var a = $.DateCheckWithTodayDate("#ServiceBookDates_BirthDate", "<");
                if (a == 0) {
                    alert("BirthDate Date Should Be Less Than TodayDate..!");
                    $("#ServiceBookDates_BirthDate").val('');
                }
            }
        });

        $('#ServiceBookDates_JoiningDate').on('focusout', function (e) {
            if (!$('#ServiceBookDates_BirthDate').val()) {
                alert('Enter Birthdate..!');
                $('#ServiceBookDates_JoiningDate').val('');
                return false;
               // e.preventDefault();
            }
            if ($(this).val()) {
                var a = $.StartEndDateCheck({
                    startdate: '#ServiceBookDates_BirthDate',
                    enddate: '#ServiceBookDates_JoiningDate',
                });
                if (a == 0) {
                    alert("Joining Date Should Be Grater Than BirthDate..!"); $('#ServiceBookDates_JoiningDate').val('');
                }
            }
        });

        $('#ServiceBookDates_ProbationDate').on('focusout', function (e) {
            if (!$('#ServiceBookDates_JoiningDate').val()) {
                alert('Enter Joining Date..!');
                $('#ServiceBookDates_ProbationDate').val('');
                return false;
                // e.preventDefault();
            }
            if ($(this).val()) {
                var a = $.StartEndDateCheck({
                    startdate: '#ServiceBookDates_JoiningDate',
                    enddate: '#ServiceBookDates_ProbationDate ',
                });
                if (a == 0) {
                    alert("  Date Should Be Grater Than Joining Date ..!"); $('#ServiceBookDates_ProbationDate ').val('');
                }
            }
        });


        $('#ServiceBookDates_ConfirmationDate').on('focusout', function (e) {
            if (!$('#ServiceBookDates_JoiningDate').val()) {
                alert('Enter Joining Date..!');
                $('#ServiceBookDates_ConfirmationDate ').val('');
                return false;
                // e.preventDefault();
            }
            if ($(this).val()) {
                var a = $.StartEndDateCheck({
                    startdate: '#ServiceBookDates_JoiningDate',
                    enddate: '#ServiceBookDates_ConfirmationDate  ',
                });
                if (a == 0) {
                    alert("  Date Should Be Grater Than Joining Date ..!"); $('#ServiceBookDates_ConfirmationDates  ').val('');
                }
            }
        });

        $('#ServiceBookDates_LastIncrementDate').on('focusout', function (e) {
            if (!$('#ServiceBookDates_JoiningDate').val()) {
                alert('Enter Joining Date..!');
                $('#ServiceBookDates_LastIncrementDate ').val('');
                return false;
                // e.preventDefault();
            }
            if ($(this).val()) {
                var a = $.StartEndDateCheck({
                    startdate: '#ServiceBookDates_JoiningDate',
                    enddate: '#ServiceBookDates_LastIncrementDate  ',
                });
                if (a == 0) {
                    alert("  Date Should Be Grater Than Joining Date ..!"); $('#ServiceBookDates_LastIncrementDate  ').val('');
                }
            }
        });

        $('#ServiceBookDates_LastPromotionDate').on('focusout', function (e) {
            if (!$('#ServiceBookDates_JoiningDate').val()) {
                alert('Enter Joining Date..!');
                $('#ServiceBookDates_LastPromotionDate ').val('');
                return false;
                // e.preventDefault();
            }
            if ($(this).val()) {
                var a = $.StartEndDateCheck({
                    startdate: '#ServiceBookDates_JoiningDate',
                    enddate: '#ServiceBookDates_LastPromotionDate  ',
                });
                if (a == 0) {
                    alert("  Date Should Be Grater Than Joining Date ..!"); $('#ServiceBookDates_LastPromotionDate  ').val('');
                }
            }
        });

        $('#ServiceBookDates_LastTransferDate').on('focusout', function (e) {
            if (!$('#ServiceBookDates_JoiningDate').val()) {
                alert('Enter Joining Date..!');
                $('#ServiceBookDates_LastTransferDate ').val('');
                return false;
                // e.preventDefault();
            }
            if ($(this).val()) {
                var a = $.StartEndDateCheck({
                    startdate: '#ServiceBookDates_JoiningDate',
                    enddate: '#ServiceBookDates_LastTransferDate  ',
                });
                if (a == 0) {
                    alert("  Date Should Be Grater Than Joining Date ..!"); $('#ServiceBookDates_LastTransferDate  ').val('');
                }
            }
        });

        $('#ServiceBookDates_SeniorityDate').on('focusout', function (e) {
            if (!$('#ServiceBookDates_JoiningDate').val()) {
                alert('Enter Joining Date..!');
                $('#ServiceBookDates_SeniorityDate ').val('');
                return false;
                // e.preventDefault();
            }
            if ($(this).val()) {
                var a = $.StartEndDateCheck({
                    startdate: '#ServiceBookDates_JoiningDate',
                    enddate: '#ServiceBookDates_SeniorityDate  ',
                });
                if (a == 0) {
                    alert("  Date Should Be Grater Than Joining Date ..!"); $('#ServiceBookDates_SeniorityDate  ').val('');
                }
            }
        });

        $('#ServiceBookDates_RetirementDate').on('focusout', function (e) {
            if (!$('#ServiceBookDates_JoiningDate').val()) {
                alert('Enter Joining Date..!');
                $('#ServiceBookDates_RetirementDate ').val('');
                return false;
                // e.preventDefault();
            }
            if ($(this).val()) {
                var a = $.StartEndDateCheck({
                    startdate: '#ServiceBookDates_JoiningDate',
                    enddate: '#ServiceBookDates_RetirementDate  ',
                });
                if (a == 0) {
                    alert("  Date Should Be Grater Than Joining Date ..!"); $('#ServiceBookDates_RetirementDate  ').val('');
                }
            }
        });

        $('#ServiceBookDates_ResignationDate ').on('focusout', function (e) {
            if (!$('#ServiceBookDates_JoiningDate').val()) {
                alert('Enter Joining Date..!');
                $('#ServiceBookDates_ResignationDate ').val('');
                return false;
                // e.preventDefault();
            }
            if ($(this).val()) {
                var a = $.StartEndDateCheck({
                    startdate: '#ServiceBookDates_JoiningDate',
                    enddate: '#ServiceBookDates_ResignationDate  ',
                });
                if (a == 0) {
                    alert("Date Should Be Grater Than Joining Date ..!"); $('#ServiceBookDates_ResignationDate  ').val('');
                }
            }
        });

        $('#ServiceBookDates_ServiceLastDate ').on('focusout', function (e) {
            if (!$('#ServiceBookDates_JoiningDate').val()) {
                alert('Enter Joining Date..!');
                $('#ServiceBookDates_ServiceLastDate ').val('');
                return false;
                // e.preventDefault();
            }
            if ($(this).val()) {
                var a = $.StartEndDateCheck({
                    startdate: '#ServiceBookDates_JoiningDate',
                    enddate: '#ServiceBookDates_ServiceLastDate  ',
                });
                if (a == 0) {
                    alert("Date Should Be Grater Than Joining Date ..!"); $('#ServiceBookDates_ServiceLastDate  ').val('');
                }
            }
        });



        $('#ServiceBookDates_PensionJoingDate ').on('focusout', function (e) {
            if (!$('#ServiceBookDates_JoiningDate').val()) {
                alert('Enter Joining Date..!');
                $('#ServiceBookDates_PensionJoingDate ').val('');
                return false;
                // e.preventDefault();
            }
            if ($(this).val()) {
                var a = $.StartEndDateCheck({
                    startdate: '#ServiceBookDates_JoiningDate',
                    enddate: '#ServiceBookDates_PensionJoingDate  ',
                });
                if (a == 0) {
                    alert("  Date Should Be Grater Than Joining Date ..!"); $('#ServiceBookDates_PensionJoingDate  ').val('');
                }
            }
        });

        $('#ServiceBookDates_PFExitDate ').on('focusout', function (e) {
            if (!$('#ServiceBookDates_JoiningDate').val()) {
                alert('Enter Joining Date..!');
                $('#ServiceBookDates_PFExitDate ').val('');
                return false;
                // e.preventDefault();
            }
            if ($(this).val()) {
                var a = $.StartEndDateCheck({
                    startdate: '#ServiceBookDates_JoiningDate',
                    enddate: '#ServiceBookDates_PFExitDate  ',
                });
                if (a == 0) {
                    alert("  Date Should Be Grater Than Joining Date ..!"); $('# ServiceBookDates_PFExitDate ').val('');
                }
            }
        });

        $('#ServiceBookDates_PensionExitDate ').on('focusout', function (e) {
            if (!$('#ServiceBookDates_JoiningDate').val()) {
                alert('Enter Joining Date..!');
                $('#ServiceBookDates_PensionExitDate ').val('');
                return false;
                // e.preventDefault();
            }
            if ($(this).val()) {
                var a = $.StartEndDateCheck({
                    startdate: '#ServiceBookDates_JoiningDate',
                    enddate: '#ServiceBookDates_PensionExitDate  ',
                });
                if (a == 0) {
                    alert("  Date Should Be Grater Than Joining Date ..!"); $('# ServiceBookDates_PensionExitDate ').val('');
                }
            }
        });


        $('#ServiceBookDates_ConfirmPeriod').on('keyup', function () {
            if ($(this).val()) {
                if ($('#ServiceBookDates_JoiningDate').val()) {
                    var JoiningDate = $('#ServiceBookDates_JoiningDate').val();
                    var ConfirmationPeriod = $('#ServiceBookDates_ConfirmPeriod').val();
                    var temp = JoiningDate.split("/");
                    var ConfirmationDate = new Date(parseInt(temp[2]), parseInt(temp[1]), parseInt(temp[0]));
                    ConfirmationDate.setMonth(ConfirmationDate.getMonth() + parseInt(ConfirmationPeriod) - 1);
                    $('#ServiceBookDates_ConfirmationDate').val($.DateFormateStandardToDDMMYY(ConfirmationDate));
                } else {
                    alert("Enter Joining Date");
                    $('#ServiceBookDates_ConfirmPeriod').val('');
                }
            } else {
                $('#ServiceBookDates_ConfirmationDate').val('');
            }
        });
        $("#Grid_Formnew").hide();
        $('button').button();
        var ColNames = [];
        var ColModel = [];
        var SortName, Caption, url, width, height;
        //a.Id, a.Code, a.AccountNo
        ColModel = ['Id', 'Emp Code', 'FullDetails'];
        ColNames = ['Id', 'Emp Code', 'FullDetails'];
        SortName = 'Id';
        Caption = 'Employee';
        url = '@Url.Action("P2BGrid")';
        width = 1000;
        height = 150;
        var btndisablenames = '#Edit-ResAddrs-Employee,#Remove-ResAddrs-Employee,#Edit-ResContactDetails-Employee,#Remove-ResContactDetails-Employee,#Edit-PermAddrs-Employee,#Remove-PermAddrs-Employee,#Edit-PermContactDetails-Employee,#Remove-PermContactDetails-Employee,#Edit-CorrsAddrs-Employee,#Remove-CorrsAddrs-Employee,#Edit-CorrsContactDetails-Employee,#Remove-CorrsContactDetails-Employee'
        var tablelist = '#ResAddrslist,#ResContactDetailslist,#PermAddrslist,#PermContactDetailslist,#CorrsAddrslist,#CorrsContactDetailslist';
        $('#JqGrid').P2BGrid(ColNames, ColModel, SortName, Caption, url, width, height);
        //$('#JqGrid1').P2BGrid(ColNames, ColModel, SortName, Caption, url, width, height);

        //function DateConvert(JsonDate) {
            //    var date = new Date(parseInt(JsonDate.substr(6)));
            //    var displayDate = $.datepicker.formatDate("dd/mm/yy", date);
            //    return displayDate;
        //};

        function AssignData() {
            dt = $('#JqGrid').P2BGrid.P2BEdDelV('#JqGrid', 'Id');
            //   dl = $('#JqGrid1').P2BGrid.P2BEdDelV('#JqGrid1', 'Id');
        }
        $('#tabs').tabs();
        $('#Create_Dialog').P2BCreateDialog();
        $('#Create').on("click", function () {
            $('#FormCandidate').trigger('reset');
            $('#Create_Dialog').P2BCreateDialog('', '', '', '', 'Create Candidate Master', 'open', '@Url.Action("create")', '#FormCandidate', 'Message :', 'Request Falied :', '#JqGrid', 552, 1188, tablelist, '', function (data) { });

            $('.selectmenu_geo,.selectmenu_pay,.selectmenu_fun').parent().hide();
            $('.selectmenu_geo').DynamicSelectMenuAppend("@Url.Action("PopulateDropDownListGeo")");
            $('.selectmenu_geo').DynamicSelectMenuOnChange("@Url.Action("PopulateDropDownlistOnChangeGeo")");

            $('.selectmenu_pay').DynamicSelectMenuAppend("@Url.Action("PopulateDropDownListPay")");
            $('.selectmenu_pay').DynamicSelectMenuOnChange("@Url.Action("PopulateDropDownlistOnChangePay")");

            $('.selectmenu_fun').DynamicSelectMenuAppend("@Url.Action("PopulateDropDownListFun")");
            $('.selectmenu_fun').DynamicSelectMenuOnChange("@Url.Action("PopulateDropDownlistOnChangeFun")");

            $('#MaritalStatusList_DDL').P2BSelectMenuAppend('@Url.Action("GetLookupValue", "lookup")', 128, '');
            $('#GenderList_DDL').P2BSelectMenuAppend('@Url.Action("GetLookupValue", "lookup")', 129, '');
            $('#ReportingHR_drop').P2BSelectMenuAppend("@Url.Action("PopulateDropDownList", "ReportingStruct")", "", '');

            $('#ReportingLevel1_drop').P2BSelectMenuAppend('@Url.Action("PopulateDropDownList", "ReportingStruct")', "", "");
            $('#ReportingLevel2_drop').P2BSelectMenuAppend('@Url.Action("PopulateDropDownList", "ReportingStruct")', "", "");
            $('#ReportingLevel3_drop').P2BSelectMenuAppend('@Url.Action("PopulateDropDownList", "ReportingStruct")', "", "");
            $("#BeforeM_disp,#Husband_disp").fadeOut();

        });


        function parseJsonDate(jsonDateString) {
            return new Date(parseInt(jsonDateString.replace('/Date(', '')));
        }

        $('#Edit').on('click', function () {
            $('#FormCandidate').trigger('reset');
            AssignData();
            $('.date').off('focusout');
            $('#Create_Dialog').P2BEditModalDialog('@Url.Action("Edit")', dt.Id, '@Url.Action("EditSave")', "Edit Employee Data ->" + JSON.stringify(dt) + "", '#FormCandidate', dt.Id, 'Message : ', 'Request Falied :', '#JqGrid', 552, 1012, tablelist, btndisablenames, function (data) {
                $.each(data[0], function (i, k) {
                    console.log(k.Code);
                    $('#CanCode').val(k.Code);
                    $('#CanCode').attr('readonly', 'readonly');
                    //$('#CardCode').val(k.CardCode);
                    @*if (k.GeoStruct_Corporate_Id != 0) {
                        $('#CorporateList_DDL').P2BSelectMenuAppend("@Url.Action("PopulateCorporateList", "Candidate")", k.GeoStruct_Corporate_Id, k.GeoStruct_Corporate_Id);
                    }
                    else {
                        $('#CorporateList_DDL').selectmenu("widget").hide();
                        $('#CorporateList_DDL').parent('div').hide();
                    }
                    if (k.GeoStruct_Region_Id != 0) {
                        $('#RegionList_DDL').P2BSelectMenuAppend("@Url.Action("PopulateRegionList", "Candidate")", k.GeoStruct_Region_Id, k.GeoStruct_Region_Id);
                    } else {
                        $('#RegionList_DDL').selectmenu("widget").hide();
                        $('#RegionList_DDL').parent('div').hide();
                    }
                    if (k.GeoStruct_Company_Id != 0) {
                        $('#CompanyList_DDL').P2BSelectMenuAppend("@Url.Action("PopulateCompanyList", "Candidate")", k.GeoStruct_Company_Id, k.GeoStruct_Company_Id);
                    } else {
                        $('#CompanyList_DDL').selectmenu("widget").hide();
                        $('#CompanyList_DDL').parent('div').hide();
                    }

                    if (k.GeoStruct_Division_Id != 0) {

                        $('#DivisionList_DDL').P2BSelectMenuAppend("@Url.Action("PopulateDivisionList", "Candidate")", k.GeoStruct_Division_Id, k.GeoStruct_Division_Id);
                    } else {
                        $('#DivisionList_DDL').selectmenu("widget").hide();
                        $('#DivisionList_DDL').parent('div').hide();
                    }
                    if (k.GeoStruct_Location_Id != 0) {

                        $('#LocationList_DDL').P2BSelectMenuAppend("@Url.Action("PopulateLocationList", "Candidate")", k.GeoStruct_Location_Id, k.GeoStruct_Location_Id);
                    } else {
                        $('#LocationList_DDL').selectmenu("widget").hide();
                        $('#LocationList_DDL').parent('div').hide();
                    }
                    if (k.GeoStruct_Department_Id != 0) {

                        $('#DepartmentList_DDL').P2BSelectMenuAppend("@Url.Action("PopulateDepartmentList", "Candidate")", k.GeoStruct_Department_Id, k.GeoStruct_Department_Id);
                    } else {
                        $('#DepartmentList_DDL').selectmenu("widget").hide();
                        $('#DepartmentList_DDL').parent('div').hide();
                    }
                    if (k.GeoStruct_Group_Id != 0) {

                        $('#GroupList_DDL').P2BSelectMenuAppend("@Url.Action("PopulateGroupList", "Candidate")", k.GeoStruct_Group_Id, k.GeoStruct_Group_Id);
                    } else {
                        $('#GroupList_DDL').selectmenu("widget").hide();
                        $('#GroupList_DDL').parent('div').hide();
                    }
                    if (k.GeoStruct_Unit_Id != 0) {

                        $('#UnitList_DDL').P2BSelectMenuAppend("@Url.Action("PopulateUnitList", "Candidate")", k.GeoStruct_Unit_Id, k.GeoStruct_Unit_Id);
                    } else {
                        $('#UnitList_DDL').selectmenu("widget").hide();
                        $('#UnitList_DDL').parent('div').hide();
                    }
                    if (k.PayStruct_Grade_Id != 0) {

                        $('#Grade_drop').P2BSelectMenuAppend("@Url.Action("PopulateGradeList", "Candidate")", k.PayStruct_Grade_Id, k.PayStruct_Grade_Id);
                    } else {
                        $('#Grade_drop').selectmenu("widget").hide();
                        $('#Grade_drop').parent('div').hide();
                    }
                    if (k.PayStruct_Level_Id != 0) {

                        $('#Level_drop').P2BSelectMenuAppend("@Url.Action("PopulateLevelList", "Candidate")", k.PayStruct_Level_Id, k.PayStruct_Level_Id);
                    } else {
                        $('#Level_drop').selectmenu("widget").hide();
                        $('#Level_drop').parent('div').hide();
                    }


                    if (k.FuncStruct_Job_Id != 0) {
                        $('#JobList_DDL').P2BSelectMenuAppend("@Url.Action("PopulateJobNameList", "Candidate")", k.FuncStruct_Job_Id, k.FuncStruct_Job_Id);
                    } else {
                        $('#JobList_DDL').selectmenu("widget").hide();
                        $('#JobList_DDL').parent('div').hide();
                    }

                    if (k.FuncStruct_Position_Id != 0) {
                        $('#JobPositionList_DDL').P2BSelectMenuAppend("@Url.Action("PopulatePositionList", "Candidate")", k.FuncStruct_Position_Id, k.FuncStruct_Position_Id);
                    } else {
                        $('#JobPositionList_DDL').selectmenu("widget").hide();
                        $('#JobPositionList_DDL').parent('div').hide();
                    }

                    if (k.PayStruct_JobStatus_Id != 0) {
                        $('#JobStatus_drop').P2BSelectMenuAppend("@Url.Action("PopulateJobStatusList", "Candidate")", k.PayStruct_JobStatus_Id, k.PayStruct_JobStatus_Id);
                    } else {
                        $('#JobStatus_drop').selectmenu("widget").hide();
                        $('#JobStatus_drop').parent('div').hide();
                    }*@

                    if (k.ServiceBookDates != null) {
                        if (k.ServiceBookDates.BirthDate != null) { $('#ServiceBookDates_BirthDate').val(DateConvert(k.ServiceBookDates.BirthDate)); }
                        if (k.ServiceBookDates.JoiningDate != null) { $('#ServiceBookDates_JoiningDate').val(DateConvert(k.ServiceBookDates.JoiningDate)); }
                        if (k.ServiceBookDates.ProbationDate != null) { $('#ServiceBookDates_ProbationDate').val(DateConvert(k.ServiceBookDates.ProbationDate)); }
                        if (k.ServiceBookDates.ConfirmationDate != null) { $('#ServiceBookDates_ConfirmationDate').val(DateConvert(k.ServiceBookDates.ConfirmationDate)); }
                        if (k.ServiceBookDates.LastIncrementDate != null) { $('#ServiceBookDates_LastIncrementDate').val(DateConvert(k.ServiceBookDates.LastIncrementDate)); }
                        if (k.ServiceBookDates.LastPromotionDate != null) { $('#ServiceBookDates_LastPromotionDate').val(DateConvert(k.ServiceBookDates.LastPromotionDate)); }
                        if (k.ServiceBookDates.LastTransferDate != null) { $('#ServiceBookDates_LastTransferDate').val(DateConvert(k.ServiceBookDates.LastTransferDate)); }
                        if (k.ServiceBookDates.SeniorityDate != null) { $('#ServiceBookDates_SeniorityDate').val(DateConvert(k.ServiceBookDates.SeniorityDate)); }
                        if (k.ServiceBookDates.RetirementDate != null) { $('#ServiceBookDates_RetirementDate').val(DateConvert(k.ServiceBookDates.RetirementDate)); }

                        if (k.ServiceBookDates.ResignationDate != null) { $('#ServiceBookDates_ResignationDate').val(DateConvert(k.ServiceBookDates.ResignationDate)); }
                        if (k.ServiceBookDates.ResignReason != null) { $('#ServiceBookDates_ResignReason').val(DateConvert(k.ServiceBookDates.ResignReason)); }
                        if (k.ServiceBookDates.ServiceLastDate != null) { $('#ServiceBookDates_ServiceLastDate').val(DateConvert(k.ServiceBookDates.ServiceLastDate)); }
                        if (k.ServiceBookDates.PFJoingDate != null) { $('#ServiceBookDates_PFJoingDate').val(DateConvert(k.ServiceBookDates.PFJoingDate)); }
                        if (k.ServiceBookDates.PensionJoingDate != null) { $('#ServiceBookDates_PensionJoingDate').val(DateConvert(k.ServiceBookDates.PensionJoingDate)); }
                        if (k.ServiceBookDates.PFExitDate != null) { $('#ServiceBookDates_PFExitDate').val(DateConvert(k.ServiceBookDates.PFExitDate)); }
                        if (k.ServiceBookDates.PensionExitDate != null) { $('#ServiceBookDates_PensionExitDate').val(DateConvert(k.ServiceBookDates.PensionExitDate)); }
                        $('#ServiceBookDates_ProbationPeriod').val(k.ServiceBookDates.ProbationPeriod);
                        $('#ServiceBookDates_ConfirmPeriod').val(k.ServiceBookDates.ConfirmPeriod);
                        $('#ServiceBookDates_SeniorityNo').val(k.ServiceBookDates.SeniorityNo);
                    }


                    $('#MaritalStatusList_DDL').P2BSelectMenuAppend('@Url.Action("GetLookupValue", "lookup")', 128, k.MaritalStatus_Id);
                    $('#GenderList_DDL').P2BSelectMenuAppend('@Url.Action("GetLookupValue", "lookup")', 129, k.Gender_Id);
                    $('#EmpStatus_drop').P2BSelectMenuAppend('@Url.Action("GetLookupValue", "lookup")', 101, k.EmpStatus_Id);
                    $('#EmpActingStatus_drop').P2BSelectMenuAppend('@Url.Action("GetLookupValue", "lookup")', 102, k.EmpActingStatus_Id);
                    ////;
                    $('#CanName_FullNameFML').val(k.EmpName_FullNameFML);
                    $('#EmpName_id').val(k.EmpName_Id);
                    $('#FatherName_FullNameFML').val(k.FatherName_FullNameFML);
                    $('#FatherName_id').val(k.FatherName_Id);
                    $('#MotherName_FullNameFML').val(k.MotherName_FullNameFML);
                    $('#MotherName_id').val(k.MotherName_Id);
                    $('#HusbandName_FullNameFML').val(k.HusbandName_FullNameFML);
                    $('#HusbandName_id').val(k.HusbandName_Id);
                    $('#BeforeMarriageName_FullNameFML').val(k.BeforeMarriageName_FullNameFML);
                    $('#BeforeMarriageName_id').val(k.BeforeMarriageName_Id);
                    $('#ResAddrslist').P2BLookUpEncapsulate('#ResAddrslist', 'ResAddrslist', k.ResAddrs_Id, k.ResAddrs_FullDetails, 'ResAddrslist', '#Edit-ResAddrs-Employee,#Remove-ResAddrs-Employee', 'N');
                    $('#ResContactDetailslist').P2BLookUpEncapsulate('#ResContactDetailslist', 'ResContactDetailslist', k.ResContactDetails_Id, k.ResContactDetails_FullDetails, 'ResContactDetailslist', '#Edit-ResContactDetails-Employee,#Remove-ResContactDetails-Employee', 'N');

                    $('#PermAddrslist').P2BLookUpEncapsulate('#PermAddrslist', 'PermAddrslist', k.PermAddrs_Id, k.PermAddrs_FullDetails, 'PermAddrslist', '#Edit-PermAddrs-Employee,#Remove-PermAddrs-Employee', 'N');
                    $('#PermContactDetailslist').P2BLookUpEncapsulate('#PermContactDetailslist', 'PermContactDetailslist', k.PermContactDetails_Id, k.PermContactDetails_FullDetails, 'PermContactDetailslist', '#Edit-PermContactDetails-Employee,#Remove-PermContactDetails-Employee', 'N');

                    $('#CorrsAddrslist').P2BLookUpEncapsulate('#CorrsAddrslist', 'CorrsAddrslist', k.CorrsAddrs_Id, k.CorrsAddrs_FullDetails, 'CorrsAddrslist', '#Edit-CorrsAddrs-Employee,#Remove-CorrsAddrs-Employee', 'N');
                    $('#CorrsContactDetailslist').P2BLookUpEncapsulate('#CorrsContactDetailslist', 'CorrsContactDetailslist', k.CorrsContactDetails_Id, k.CorrsContactDetails_FullDetails, 'CorrsContactDetailslist', '#Edit-CorrsContactDetails-Employee,#Remove-CorrsContactDetails-Employee', 'N');

                    $("#GenderList_DDL,#MaritalStatusList_DDL").on("selectmenuchange", function () {

                        if ($("#GenderList_DDL :selected").text() == "FEMALE") {
                            if ($("#MaritalStatusList_DDL :selected").text() == "MARRIED") {
                                $("#BeforeM_disp,#Husband_disp").fadeIn();
                            } else {
                                $("#BeforeM_disp,#Husband_disp").fadeOut();
                            }
                        }
                        else {
                            $("#BeforeM_disp,#Husband_disp").fadeOut();
                        }
                    });

                });
                //partial page bind
                $.each(data[1], function (i, k) {
                    $('#ReportingStructRightslist').P2BLookUpEncapsulate('#ReportingStructRightslist', 'ReportingStructRightslist', k.id, k.val, 'ReportingStructRightslist', '#Edit-ReportingStructRights-Employee,#Remove-ReportingStructRights-Employee', 'A');
                });
                $('#Autho_Allow').val(data[3]);
            });
        });



        //create Emp offf
        $('#createEmpoff').on("click", function (event) {
            $('<div></div>').P2BPartialCreateModalDialog('@Url.Action("_EmpOfficial", "Candidate")', 'Create Emp Official', 'open', '@Url.Action("CreateEmpoff", "Candidate")', '#FormPayProcessGroup', 'Message :', 'Request Falied :', '#JqGrid', 700, 700, '', '', '', '#FormPayProcessGroup', '#Edit-PayProcessGroup-PayrollPeriod,#Remove-PayProcessGroup-PayrollPeriod', function (data) {
                // to show data which is created in partial page
                $('#PayProcessGrouplist').P2BLookUpEncapsulate('#PayProcessGrouplist', 'PayProcessGrouplist', data[0], data[1], 'PayProcessGrouplist', btndisablenames, 'N');
            });
            event.preventDefault();
        });

        $('#View').button().click(function (event) {
            AssignData();
            $('#FormCandidate').trigger('reset');
            var btnDisnames = '#Lookup-ResAddrs-Employee,#Create-ResAddrs-Employee,#Edit-ResAddrs-Employee,#Remove-ResAddrs-Employee,#Lookup-ResContactDetails-Employee,#Create-ResContactDetails-Employee,#Edit-ResContactDetails-Employee,#Remove-ResContactDetails-Employee,#Lookup-PermAddrs-Employee,#Create-PermAddrs-Employee,#Edit-PermAddrs-Employee,#Remove-PermAddrs-Employee,#Lookup-PermContactDetails-Employee,#Create-PermContactDetails-Employee,#Lookup-PermContactDetails-Employee,#Create-PermContactDetails-Employee,#Edit-PermContactDetails-Employee,#Remove-PermContactDetails-Employee,#Lookup-CorrsAddrs-Employee,#Create-CorrsAddrs-Employee,#Edit-CorrsAddrs-Employee,#Remove-CorrsAddrs-Employee,#Lookup-CorrsContactDetails-Employee,#Create-CorrsContactDetails-Employee,#Edit-CorrsContactDetails-Employee,#Remove-CorrsContactDetails-Employee,#Lookup-EmpName-FName,#Create-EmpName-FName,#Edit-EmpName-FName,#Lookup-FatherName-FName,#Create-FatherName-FName,#Edit-FatherName-FName,#Lookup-MotherName-FName,#Create-MotherName-FName,#Edit-MotherName-FName,#Lookup-HusbandName-FName,#Create-HusbandName-FName,#Edit-HusbandName-FName,#Lookup-BeforeMarriageName-FName,#Create-BeforeMarriageName-FName,#Edit-BeforeMarriageName-FName';

            $('#Create_Dialog').P2BViewModalDialog('@Url.Action("Edit")', dt.Id, 'View Candidate Data', tablelist, btnDisnames, 552, 1012, '#Autho', '@Url.Action("AuthSave")', dt.Id, '', '', '', '', '#JqGrid', function (data) {
                $.each(data[0], function (i, k) {
                    console.log(k.Code);
                    $('#CanCode').val(k.Code);
                    $('#CanCode').attr('readonly', 'readonly');
                    $('#CardCode').val(k.CardCode);
                    @*if (k.GeoStruct_Corporate_Id != 0) {
                        $('#CorporateList_DDL').P2BSelectMenuAppend("@Url.Action("PopulateCorporateList", "Candidate")", k.GeoStruct_Corporate_Id, k.GeoStruct_Corporate_Id);
                    }
                    else {
                        $('#CorporateList_DDL').selectmenu("widget").hide();
                        $('#CorporateList_DDL').parent('div').hide();
                    }
                    if (k.GeoStruct_Region_Id != 0) {
                        $('#RegionList_DDL').P2BSelectMenuAppend("@Url.Action("PopulateRegionList", "Candidate")", k.GeoStruct_Region_Id, k.GeoStruct_Region_Id);
                    } else {
                        $('#RegionList_DDL').selectmenu("widget").hide();
                        $('#RegionList_DDL').parent('div').hide();
                    }
                    if (k.GeoStruct_Company_Id != 0) {
                        $('#CompanyList_DDL').P2BSelectMenuAppend("@Url.Action("PopulateCompanyList", "Candidate")", k.GeoStruct_Company_Id, k.GeoStruct_Company_Id);
                    } else {
                        $('#CompanyList_DDL').selectmenu("widget").hide();
                        $('#CompanyList_DDL').parent('div').hide();
                    }

                    if (k.GeoStruct_Division_Id != 0) {

                        $('#DivisionList_DDL').P2BSelectMenuAppend("@Url.Action("PopulateDivisionList", "Candidate")", k.GeoStruct_Division_Id, k.GeoStruct_Division_Id);
                    } else {
                        $('#DivisionList_DDL').selectmenu("widget").hide();
                        $('#DivisionList_DDL').parent('div').hide();
                    }
                    if (k.GeoStruct_Location_Id != 0) {

                        $('#LocationList_DDL').P2BSelectMenuAppend("@Url.Action("PopulateLocationList", "Candidate")", k.GeoStruct_Location_Id, k.GeoStruct_Location_Id);
                    } else {
                        $('#LocationList_DDL').selectmenu("widget").hide();
                        $('#LocationList_DDL').parent('div').hide();
                    }
                    if (k.GeoStruct_Department_Id != 0) {

                        $('#DepartmentList_DDL').P2BSelectMenuAppend("@Url.Action("PopulateDepartmentList", "Candidate")", k.GeoStruct_Department_Id, k.GeoStruct_Department_Id);
                    } else {
                        $('#DepartmentList_DDL').selectmenu("widget").hide();
                        $('#DepartmentList_DDL').parent('div').hide();
                    }
                    if (k.GeoStruct_Group_Id != 0) {

                        $('#GroupList_DDL').P2BSelectMenuAppend("@Url.Action("PopulateGroupList", "Candidate")", k.GeoStruct_Group_Id, k.GeoStruct_Group_Id);
                    } else {
                        $('#GroupList_DDL').selectmenu("widget").hide();
                        $('#GroupList_DDL').parent('div').hide();
                    }
                    if (k.GeoStruct_Unit_Id != 0) {

                        $('#UnitList_DDL').P2BSelectMenuAppend("@Url.Action("PopulateUnitList", "Candidate")", k.GeoStruct_Unit_Id, k.GeoStruct_Unit_Id);
                    } else {
                        $('#UnitList_DDL').selectmenu("widget").hide();
                        $('#UnitList_DDL').parent('div').hide();
                    }
                    if (k.PayStruct_Grade_Id != 0) {

                        $('#Grade_drop').P2BSelectMenuAppend("@Url.Action("PopulateGradeList", "Candidate")", k.PayStruct_Grade_Id, k.PayStruct_Grade_Id);
                    } else {
                        $('#Grade_drop').selectmenu("widget").hide();
                        $('#Grade_drop').parent('div').hide();
                    }
                    if (k.PayStruct_Level_Id != 0) {

                        $('#Level_drop').P2BSelectMenuAppend("@Url.Action("PopulateLevelList", "Candidate")", k.PayStruct_Level_Id, k.PayStruct_Level_Id);
                    } else {
                        $('#Level_drop').selectmenu("widget").hide();
                        $('#Level_drop').parent('div').hide();
                    }


                    if (k.FuncStruct_Job_Id != 0) {
                        $('#JobList_DDL').P2BSelectMenuAppend("@Url.Action("PopulateJobNameList", "Candidate")", k.FuncStruct_Job_Id, k.FuncStruct_Job_Id);
                    } else {
                        $('#JobList_DDL').selectmenu("widget").hide();
                        $('#JobList_DDL').parent('div').hide();
                    }

                    if (k.FuncStruct_Position_Id != 0) {
                        $('#JobPositionList_DDL').P2BSelectMenuAppend("@Url.Action("PopulatePositionList", "Candidate")", k.FuncStruct_Position_Id, k.FuncStruct_Position_Id);
                    } else {
                        $('#JobPositionList_DDL').selectmenu("widget").hide();
                        $('#JobPositionList_DDL').parent('div').hide();
                    }

                    if (k.PayStruct_JobStatus_Id != 0) {
                        $('#JobStatus_drop').P2BSelectMenuAppend("@Url.Action("PopulateJobStatusList", "Candidate")", k.PayStruct_JobStatus_Id, k.PayStruct_JobStatus_Id);
                    } else {
                        $('#JobStatus_drop').selectmenu("widget").hide();
                        $('#JobStatus_drop').parent('div').hide();
                    }*@

                    if (k.ServiceBookDates.BirthDate != null) { $('#ServiceBookDates_BirthDate').val(DateConvert(k.ServiceBookDates.BirthDate)); }
                    if (k.ServiceBookDates.JoiningDate != null) { $('#ServiceBookDates_JoiningDate').val(DateConvert(k.ServiceBookDates.JoiningDate)); }
                    if (k.ServiceBookDates.ProbationDate != null) { $('#ServiceBookDates_ProbationDate').val(DateConvert(k.ServiceBookDates.ProbationDate)); }
                    if (k.ServiceBookDates.ConfirmationDate != null) { $('#ServiceBookDates_ConfirmationDate').val(DateConvert(k.ServiceBookDates.ConfirmationDate)); }
                    if (k.ServiceBookDates.LastIncrementDate != null) { $('#ServiceBookDates_LastIncrementDate').val(DateConvert(k.ServiceBookDates.LastIncrementDate)); }
                    if (k.ServiceBookDates.LastPromotionDate != null) { $('#ServiceBookDates_LastPromotionDate').val(DateConvert(k.ServiceBookDates.LastPromotionDate)); }
                    if (k.ServiceBookDates.LastTransferDate != null) { $('#ServiceBookDates_LastTransferDate').val(DateConvert(k.ServiceBookDates.LastTransferDate)); }
                    if (k.ServiceBookDates.SeniorityDate != null) { $('#ServiceBookDates_SeniorityDate').val(DateConvert(k.ServiceBookDates.SeniorityDate)); }
                    if (k.ServiceBookDates.RetirementDate != null) { $('#ServiceBookDates_RetirementDate').val(DateConvert(k.ServiceBookDates.RetirementDate)); }


                    if (k.ServiceBookDates.ResignationDate != null) { $('#ServiceBookDates_ResignationDate').val(DateConvert(k.ServiceBookDates.ResignationDate)); }
                    if (k.ServiceBookDates.ResignReason != null) { $('#ServiceBookDates_ResignReason').val(DateConvert(k.ServiceBookDates.ResignReason)); }
                    if (k.ServiceBookDates.ServiceLastDate != null) { $('#ServiceBookDates_ServiceLastDate').val(DateConvert(k.ServiceBookDates.ServiceLastDate)); }
                    if (k.ServiceBookDates.PFJoingDate != null) { $('#ServiceBookDates_PFJoingDate').val(DateConvert(k.ServiceBookDates.PFJoingDate)); }
                    if (k.ServiceBookDates.PensionJoingDate != null) { $('#ServiceBookDates_PensionJoingDate').val(DateConvert(k.ServiceBookDates.PensionJoingDate)); }
                    if (k.ServiceBookDates.PFExitDate != null) { $('#ServiceBookDates_PFExitDate').val(DateConvert(k.ServiceBookDates.PFExitDate)); }
                    if (k.ServiceBookDates.PensionExitDate != null) { $('#ServiceBookDates_PensionExitDate').val(DateConvert(k.ServiceBookDates.PensionExitDate)); }
                    $('#ServiceBookDates_ProbationPeriod').val(k.ServiceBookDates.ProbationPeriod);
                    $('#ServiceBookDates_ConfirmPeriod').val(k.ServiceBookDates.ConfirmPeriod);
                    $('#ServiceBookDates_SeniorityNo').val(k.ServiceBookDates.SeniorityNo);
                    $('#MaritalStatusList_DDL').P2BSelectMenuAppend('@Url.Action("GetLookupValue", "lookup")', 128, k.MaritalStatus_Id);
                    $('#GenderList_DDL').P2BSelectMenuAppend('@Url.Action("GetLookupValue", "lookup")', 129, k.Gender_Id);
                    @*$('#EmpStatus_drop').P2BSelectMenuAppend('@Url.Action("GetLookupValue", "lookup")', 101, k.EmpStatus_Id);
                    $('#EmpActingStatus_drop').P2BSelectMenuAppend('@Url.Action("GetLookupValue", "lookup")', 102, k.EmpActingStatus_Id);*@

                    $('#CanName_FullNameFML').val(k.EmpName_FullNameFML);
                    $('#FatherName_FullNameFML').val(k.FatherName_FullNameFML);
                    $('#MotherName_FullNameFML').val(k.MotherName_FullNameFML);
                    $('#HusbandName_FullNameFML').val(k.HusbandName_FullNameFML);
                    $('#BeforeMarriageName_FullNameFML').val(k.BeforeMarriageName_FullNameFML);

                    $('#ResAddrslist').P2BLookUpEncapsulate('#ResAddrslist', 'ResAddrslist', k.ResAddrs_Id, k.ResAddrs_FullDetails, 'ResAddrslist', 'view', 'N');
                    $('#ResContactDetailslist').P2BLookUpEncapsulate('#ResContactDetailslist', 'ResContactDetailslist', k.ResContactDetails_Id, k.ResContactDetails_FullDetails, 'ResContactDetailslist', 'view', 'N');

                    $('#PermAddrslist').P2BLookUpEncapsulate('#PermAddrslist', 'PermAddrslist', k.PermAddrs_Id, k.PermAddrs_FullDetails, 'PermAddrslist', 'view', 'N');
                    $('#PermContactDetailslist').P2BLookUpEncapsulate('#PermContactDetailslist', 'PermContactDetailslist', k.PermContactDetails_Id, k.PermContactDetails_FullDetails, 'PermContactDetailslist', 'view', 'N');

                    $('#CorrsAddrslist').P2BLookUpEncapsulate('#CorrsAddrslist', 'CorrsAddrslist', k.CorrsAddrs_Id, k.CorrsAddrs_FullDetails, 'CorrsAddrslist', 'view', 'N');
                    $('#CorrsContactDetailslist').P2BLookUpEncapsulate('#CorrsContactDetailslist', 'CorrsContactDetailslist', k.CorrsContactDetails_Id, k.CorrsContactDetails_FullDetails, 'CorrsContactDetailslist', 'view', 'N');

                    $("#GenderList_DDL,#MaritalStatusList_DDL").on("selectmenuchange", function () {

                        if ($("#GenderList_DDL :selected").text() == "FEMALE") {
                            if ($("#MaritalStatusList_DDL :selected").text() == "MARRIED") {
                                $("#BeforeM_disp,#Husband_disp").fadeIn();
                            } else {
                                $("#BeforeM_disp,#Husband_disp").fadeOut();
                            }
                        }
                        else {
                            $("#BeforeM_disp,#Husband_disp").fadeOut();
                        }
                    });
                });
            });
        });

        $('#Delete').button().click(function (event) {
            dt = $('#JqGrid').P2BGrid.P2BEdDelV('#JqGrid', 'Id');
            $('#Create_Dialog').P2BDeleteModalDialog('@Url.Action("Delete")', dt.Id, 'Are you sure want to remove record???', 'Message : ', 'Request failed', '#JqGrid', 200, 200);
            event.preventDefault();
        });

        /* Residential address*/
        $('#Lookup-ResAddrs-Employee').button().on('click', function (e) {
            $('.dialog').P2BLookUpModal('@Url.Action("GetAddressLKDetails", "Candidate")', '', 'LookupDiv', 'Address Look Up Data', '#ResAddrslist', 'ResAddrslist', 5, 'ResAddrslist', '#FormCandidate', 'N', '#Edit-ResAddrs-Employee,#Remove-ResAddrs-Employee', 'ResAddrslist_table', 'PageNavPosition');
            e.preventDefault();
        });

        $('<div></div>').P2BPartialCreateModalDialog();
        $('#Create-ResAddrs-Employee').on("click", function (event) {
            $('<div></div>').P2BPartialCreateModalDialog('@Url.Action("partial", "address")', 'Create Address', 'open', '@Url.Action("Create","Address")', '#FormAddress', 'Message :', 'Request Falied :', '#JqGrid', 400, 500, '', '', '', '#FormCandidate', '', function (data) {
                // to show data which is created in partial page
                $('#ResAddrslist').P2BLookUpEncapsulate('#ResAddrslist', 'ResAddrslist', data[0], data[1], 'ResAddrslist', '#Edit-ResAddrs-Employee,#Remove-ResAddrs-Employee', 'N');
            });
            event.preventDefault();
        });

        $('#Edit-ResAddrs-Employee').button().on("click", function (event) {
            var a = [], b;
            a = $('#ResAddrslist').P2BGetTableDataonSelectedRow('#ResAddrslist', 0);
            b = a[0];
            $('<div></div>').P2BPatialEditModalDialog('@Url.Action("partial", "address")', '@Url.Action("edit", "address")', b, '@Url.Action("Editsave","Address")', 'Edit Address', '#FormAddress', b, 'Message :', 'Request Falied :', '#JqGrid', 400, 500, '#FormCandidate', '#Edit-ResAddrs-Employee,#Remove-ResAddrs-Employee', '#ResAddrslist', 'ResAddrslist', 'ResAddrslist', 'N', function (data) {
                $.each(data[0], function (i, k) {
                    $('#FormAddress').trigger("reset");
                    $('#Address1').val(k.Address1);
                    $('#Address2').val(k.Address2);
                    $('#Address3').val(k.Address3);
                    $('#Landmark').val(k.Landmark);
                    $('#CountryList_DDL').P2BSelectMenuAppend("@Url.Action("PopulateDropDownList", "country")", "", k.Country_Id, '');
                    $('#StateList_DDL').P2BSelectMenuAppend("@Url.Action("PopulateDropDownList", "state")", "", k.State_Id, '');
                    $('#StateRegionList_DDL').P2BSelectMenuAppend("@Url.Action("PopulateDropDownList", "StateRegion")", "", k.StateRegion_Id, '');
                    $('#DistrictList_DDL').P2BSelectMenuAppend("@Url.Action("PopulateDropDownList", "District")", "", k.District_Id, '');
                    $('#TalukaList_DDL').P2BSelectMenuAppend("@Url.Action("PopulateDropDownList", "Taluka")", "", k.Taluka_Id, '');
                    $('#CityList_DDL').P2BSelectMenuAppend("@Url.Action("PopulateDropDownList", "City")", "", k.City_Id, '');
                    $('#AreaList_DDL').P2BSelectMenuAppend("@Url.Action("PopulateDropDownList", "area")", "", k.Area_Id, '');
                });
                //}, 3000);


            });
            event.preventDefault();
        });

        $('#Remove-ResAddrs-Employee').button().on('click', function (event) {
            var a = [], b;
            a = $('#ResAddrslist').P2BGetTableDataonSelectedRow('#ResAddrslist', 0);
            b = a[0];
            $('<div></div>').P2BPartialDeleteModalDialog('', b, 0, 'Are you sure want to delete record???', 'Message : ', 'Request failed', '#ResAddrslist', $('#ResAddrslist').val(), 200, 200, '#FormEmployee', '#ResAddrslist', '#Edit-ResAddrs-Employee,#Remove-ResAddrs-Employee');
            event.preventDefault();
        });

        /* Correspondance address*/
        $('#Lookup-CorrsAddrs-Employee').button().on('click', function (e) {
            $('.dialog').P2BLookUpModal('@Url.Action("GetAddressLKDetails", "Employee")', '', 'LookupDiv', 'Address Look Up Data', '#CorrsAddrslist', 'CorrsAddrslist', 5, 'CorrsAddrslist', '#FormEmployee', 'N', '#Edit-CorrsAddrs-Employee,#Remove-CorrsAddrs-Employee', 'CorrsAddrslist_table', 'PageNavPosition');
            e.preventDefault();
        });

        $('<div></div>').P2BPartialCreateModalDialog();
        $('#Create-CorrsAddrs-Employee').on("click", function (event) {
            $('<div></div>').P2BPartialCreateModalDialog('@Url.Action("partial", "address")', 'Create Address', 'open', '@Url.Action("Create","Address")', '#FormAddress', 'Message :', 'Request Falied :', '#JqGrid', 400, 500, '', '', '', '#FormEmployee', '', function (data) {
                // to show data which is created in partial page
                $('#CorrsAddrslist').P2BLookUpEncapsulate('#CorrsAddrslist', 'CorrsAddrslist', data[0], data[1], 'CorrsAddrslist', '#Edit-CorrsAddrs-Employee,#Remove-CorrsAddrs-Employee', 'N');
            });
            event.preventDefault();
        });

        $('#Edit-CorrsAddrs-Employee').button().on("click", function (event) {
            var a = [], b;
            a = $('#CorrsAddrslist').P2BGetTableDataonSelectedRow('#CorrsAddrslist', 0);
            b = a[0];
            $('<div></div>').P2BPatialEditModalDialog('@Url.Action("partial", "address")', '@Url.Action("edit", "address")', b, '@Url.Action("Editsave","Address")', 'Edit Address', '#FormAddress', b, 'Message :', 'Request Falied :', '#JqGrid', 400, 500, '#FormCandidate', '#Edit-CorrsAddrs-Employee,#Remove-CorrsAddrs-Employee', '#CorrsAddrslist', 'CorrsAddrslist', 'CorrsAddrslist', 'N', function (data) {
                $.each(data[0], function (i, k) {
                    $('#FormAddress').trigger("reset");
                    $('#Address1').val(k.Address1);
                    $('#Address2').val(k.Address2);
                    $('#Address3').val(k.Address3);
                    $('#Landmark').val(k.Landmark);
                    $('#CountryList_DDL').P2BSelectMenuAppend("@Url.Action("PopulateDropDownList", "country")", "", k.Country_Id, '');
                    $('#StateList_DDL').P2BSelectMenuAppend("@Url.Action("PopulateDropDownList", "state")", "", k.State_Id, '');
                    $('#StateRegionList_DDL').P2BSelectMenuAppend("@Url.Action("PopulateDropDownList", "StateRegion")", "", k.StateRegion_Id, '');
                    $('#DistrictList_DDL').P2BSelectMenuAppend("@Url.Action("PopulateDropDownList", "District")", "", k.District_Id, '');
                    $('#TalukaList_DDL').P2BSelectMenuAppend("@Url.Action("PopulateDropDownList", "Taluka")", "", k.Taluka_Id, '');
                    $('#CityList_DDL').P2BSelectMenuAppend("@Url.Action("PopulateDropDownList", "City")", "", k.City_Id, '');
                    $('#AreaList_DDL').P2BSelectMenuAppend("@Url.Action("PopulateDropDownList", "area")", "", k.Area_Id, '');
                });
            });
            event.preventDefault();
        });

        $('#Remove-CorrsAddrs-Employee').button().on('click', function (event) {
            var a = [], b;
            a = $('#CorrsAddrslist').P2BGetTableDataonSelectedRow('#CorrsAddrslist', 0);
            b = a[0];
            $('<div></div>').P2BPartialDeleteModalDialog('', b, 0, 'Are you sure want to delete record???', 'Message : ', 'Request failed', '#CorrsAddrslist', $('#CorrsAddrslist').val(), 200, 200, '#FormCandidate', '#CorrsAddrslist', '#Edit-CorrsAddrs-Employee,#Remove-CorrsAddrs-Employee');
            event.preventDefault();
        });

        /* Permanent address*/
        $('#Lookup-PermAddrs-Employee').button().on('click', function (e) {
            $('.dialog').P2BLookUpModal('@Url.Action("GetAddressLKDetails", "Employee")', '', 'LookupDiv', 'Address Look Up Data', '#PermAddrslist', 'PermAddrslist', 5, 'PermAddrslist', '#FormCandidate', 'N', '#Edit-PermAddrs-Employee,#Remove-PermAddrs-Employee', 'PermAddrslist_table', 'PageNavPosition');
            e.preventDefault();
        });

        $('<div></div>').P2BPartialCreateModalDialog();
        $('#Create-PermAddrs-Employee').on("click", function (event) {
            $('<div></div>').P2BPartialCreateModalDialog('@Url.Action("partial", "address")', 'Create Address', 'open', '@Url.Action("Create","Address")', '#FormAddress', 'Message :', 'Request Falied :', '#JqGrid', 400, 500, '', '', '', '#FormCandidate', '', function (data) {
                // to show data which is created in partial page
                $('#PermAddrslist').P2BLookUpEncapsulate('#PermAddrslist', 'PermAddrslist', data[0], data[1], 'PermAddrslist', '#Edit-PermAddrs-Employee,#Remove-PermAddrs-Employee', 'N');
            });
            event.preventDefault();
        });

        $('#Edit-PermAddrs-Employee').button().on("click", function (event) {
            var a = [], b;
            a = $('#PermAddrslist').P2BGetTableDataonSelectedRow('#PermAddrslist', 0);
            b = a[0];
            $('<div></div>').P2BPatialEditModalDialog('@Url.Action("partial", "address")', '@Url.Action("edit", "address")', b, '@Url.Action("Editsave","Address")', 'Edit Address', '#FormAddress', b, 'Message :', 'Request Falied :', '#JqGrid', 400, 500, '#FormEmployee', '#Edit-PermAddrs-Employee,#Remove-PermAddrs-Employee', '#PermAddrslist', 'PermAddrslist', 'PermAddrslist', 'N', function (data) {
                $.each(data[0], function (i, k) {
                    $('#FormAddress').trigger("reset");
                    $('#Address1').val(k.Address1);
                    $('#Address2').val(k.Address2);
                    $('#Address3').val(k.Address3);
                    $('#Landmark').val(k.Landmark);
                    $('#CountryList_DDL').P2BSelectMenuAppend("@Url.Action("PopulateDropDownList", "country")", "", k.Country_Id, '');
                    $('#StateList_DDL').P2BSelectMenuAppend("@Url.Action("PopulateDropDownList", "state")", "", k.State_Id, '');
                    $('#StateRegionList_DDL').P2BSelectMenuAppend("@Url.Action("PopulateDropDownList", "StateRegion")", "", k.StateRegion_Id, '');
                    $('#DistrictList_DDL').P2BSelectMenuAppend("@Url.Action("PopulateDropDownList", "District")", "", k.District_Id, '');
                    $('#TalukaList_DDL').P2BSelectMenuAppend("@Url.Action("PopulateDropDownList", "Taluka")", "", k.Taluka_Id, '');
                    $('#CityList_DDL').P2BSelectMenuAppend("@Url.Action("PopulateDropDownList", "City")", "", k.City_Id, '');
                    $('#AreaList_DDL').P2BSelectMenuAppend("@Url.Action("PopulateDropDownList", "area")", "", k.Area_Id, '');
                });
            });
            event.preventDefault();
        });

        $('#Remove-PermAddrs-Employee').button().on('click', function (event) {
            var a = [], b;
            a = $('#PermAddrslist').P2BGetTableDataonSelectedRow('#PermAddrslist', 0);
            b = a[0];
            $('<div></div>').P2BPartialDeleteModalDialog('', b, 0, 'Are you sure want to delete record???', 'Message : ', 'Request failed', '#PermAddrslist', $('#PermAddrslist').val(), 200, 200, '#FormCandidate', '#PermAddrslist', '#Edit-PermAddrs-Employee,#Remove-PermAddrs-Employee');
            event.preventDefault();
        });

        /* Residential Contact Details*/
        $('#Lookup-ResContactDetails-Employee').button().on('click', function (e) {
            $('.dialog').P2BLookUpModal('@Url.Action("GetContactDetLKDetails", "Candidate")', '', 'LookupDiv', 'Contact Details Look Up Data', '#ResContactDetailslist', 'ResContactDetailslist', 5, 'ResContactDetailslist', '#FormCandidate', 'N', '#Edit-ResContactDetails-Employee,#Remove-ResContactDetails-Employee', 'ResContactDetailslist_table', 'PageNavPosition');
            e.preventDefault();
        });


        $('<div></div>').P2BPartialCreateModalDialog();
        $('#Create-ResContactDetails-Employee').button().on("click", function (event) {
            $('<div></div>').P2BPartialCreateModalDialog('@Url.Action("Createcontactdetails_partial", "Corporate")', 'Create ContactDetails', 'open', '@Url.Action("CreateSave","ContactDetails")', '#FormContactDetails', 'Message :', 'Request Falied :', '#JqGrid', 400, 500, '', '', '', '#FormContactDetails', '#Edit-ContactNo-ContDetails,#Remove-ContactNo-ContDetails', function (data) {
                $('#ResContactDetailslist').P2BLookUpEncapsulate('#ResContactDetailslist', 'ResContactDetailslist', data[0], data[1], 'ResContactDetailslist', '#Edit-ContactDetails-Corporate,#Remove-ContactDetails-Corporate', 'N');
            });
            event.preventDefault();
        });

        $('#Edit-ResContactDetails-Employee').button().on("click", function (event) {
            var a = [], b;
            a = $('#ResContactDetailslist').P2BGetTableDataonSelectedRow('#ResContactDetailslist', 0);
            b = a[0];
            console.log(b);
            $('<div></div>').P2BPatialEditModalDialog('@Url.Action("Createcontactdetails_partial", "Corporate")', '@Url.Action("Editcontactdetails_partial", "Corporate")', b, '@Url.Action("EditSave", "ContactDetails")', 'Edit Contact Details', '#FormContactDetails', b, 'Message :', 'Request Falied :', '#JqGrid', 400, 500, '#FormCorporate', '#Edit-ResContactDetails-Employee,#Remove-ResContactDetails-Employee', '#ResContactDetailslist', 'ResContactDetailslist', 'ResContactDetailslist', 'N', function (data) {
                // setTimeout(function () {
                $.each(data[0], function (i, k) {
                    $('#FormContactDetails').trigger('reset');
                    $('#EmailId').val(k.EmailId);
                    $('#Website').val(k.Website);
                    $('#FaxNo').val(k.FaxNo);
                });
                $.each(data[1], function (i, k) {
                    $('#ContactNos_List').P2BLookUpEncapsulate('#ContactNos_List', 'ContactNos_List', k.Id, k.FullContactNumbers, 'ContactNos_List', '#Edit-ContactNo-ContDetails,#Remove-ContactNo-ContDetails', 'A');
                });
                // }, 3000);
            });
            event.preventDefault();
        });

        $('#Remove-ResContactDetails-Employee').button().on('click', function (event) {
            // dt = $('#JqGrid').P2BGrid.P2BEdDelV('#JqGrid', 'Id');
            var a = [], b;
            a = $('#ResContactDetailslist').P2BGetTableDataonSelectedRow('#ResContactDetailslist', 0);
            b = a[0];
            $('<div></div>').P2BPartialDeleteModalDialog('@Url.Action("DeleteContactDetails","Corporate")', b, 0, 'Are you sure want to delete record???', 'Message : ', 'Request failed', '#ResContactDetailslist', $('#ResContactDetailslist').val(), 200, 200, '#FormCandidate', '#ResContactDetailslist', '#Edit-ResContactDetails-Employee,#Remove-ResContactDetails-Employee');
            event.preventDefault();
        });

        /* Correspondance Contact Details*/
        $('#Lookup-CorrsContactDetails-Employee').button().on('click', function (e) {
            $('.dialog').P2BLookUpModal('@Url.Action("GetContactDetLKDetails", "Employee")', '', 'LookupDiv', 'Contact Details Look Up Data', '#CorrsContactDetailslist', 'CorrsContactDetailslist', 5, 'CorrsContactDetailslist', '#FormCandidate', 'N', '#Edit-CorrsContactDetails-Employee,#Remove-CorrsContactDetails-Employee', 'CorrsContactDetailslist_table', 'PageNavPosition');
            e.preventDefault();
        });

        $('<div></div>').P2BPartialCreateModalDialog();
        $('#Create-CorrsContactDetails-Employee').button().on("click", function (event) {
            $('<div></div>').P2BPartialCreateModalDialog('@Url.Action("Createcontactdetails_partial", "Corporate")', 'Create ContactDetails', 'open', '@Url.Action("CreateSave","ContactDetails")', '#FormContactDetails', 'Message :', 'Request Falied :', '#JqGrid', 400, 500, '', '', '', '#FormContactDetails', '#Edit-ContactNo-ContDetails,#Remove-ContactNo-ContDetails', function (data) {
                $('#CorrsContactDetailslist').P2BLookUpEncapsulate('#CorrsContactDetailslist', 'CorrsContactDetailslist', data[0], data[1], 'CorrsContactDetailslist', '#Edit-CorrsContactDetails-Employee,#Remove-CorrsContactDetails-Employee', 'N');
            });
            event.preventDefault();
        });

        $('#Edit-CorrsContactDetails-Employee').button().on("click", function (event) {
            var a = [], b;
            a = $('#CorrsContactDetailslist').P2BGetTableDataonSelectedRow('#CorrsContactDetailslist', 0);
            b = a[0];
            console.log(b);
            $('<div></div>').P2BPatialEditModalDialog('@Url.Action("Createcontactdetails_partial", "Corporate")', '@Url.Action("Editcontactdetails_partial", "Corporate")', b, '@Url.Action("EditSave", "ContactDetails")', 'Edit Contact Details', '#FormContactDetails', b, 'Message :', 'Request Falied :', '#JqGrid', 400, 500, '#FormCandidate', '#Edit-CorrsContactDetails-Employee,#Remove-CorrsContactDetails-Employee', '#CorrsContactDetailslist', 'CorrsContactDetailslist', 'CorrsContactDetailslist', 'N', function (data) {
                // setTimeout(function () {
                $.each(data[0], function (i, k) {
                    $('#FormContactDetails').trigger('reset');
                    $('#EmailId').val(k.EmailId);
                    $('#Website').val(k.Website);
                    $('#FaxNo').val(k.FaxNo);
                });

                $.each(data[1], function (i, k) {
                    $('#ContactNos_List').P2BLookUpEncapsulate('#ContactNos_List', 'ContactNos_List', k.Id, k.FullContactNumbers, 'ContactNos_List', '#Edit-ContactNo-ContDetails,#Remove-ContactNo-ContDetails', 'A');
                });
                // }, 3000);
            });
            event.preventDefault();
        });

        $('#Remove-CorrsContactDetails-Employee').button().on('click', function (event) {
            var a = [], b;
            a = $('#CorrsContactDetailslist').P2BGetTableDataonSelectedRow('#CorrsContactDetailslist', 0);
            b = a[0];
            $('<div></div>').P2BPartialDeleteModalDialog('@Url.Action("DeleteContactDetails","Corporate")', b, 0, 'Are you sure want to delete record???', 'Message : ', 'Request failed', '#CorrsContactDetailslist', $('#CorrsContactDetailslist').val(), 200, 200, '#FormCandidate', '#CorrsContactDetailslist', '#Edit-CorrsContactDetails-Employee,#Remove-CorrsContactDetails-Employee');
            event.preventDefault();
        });
        $('#Lookup-PermContactDetails-Employee').button().on('click', function (e) {
            $('.dialog').P2BLookUpModal('@Url.Action("GetContactDetLKDetails", "Employee")', '', 'LookupDiv', 'Contact Details Look Up Data', '#PermContactDetailslist', 'PermContactDetailslist', 5, 'PermContactDetailslist', '#FormCandidate', 'N', '#Edit-PermContactDetails-Employee,#Remove-PermContactDetails-Employee', 'PermContactDetailslist_table', 'PageNavPosition');
            e.preventDefault();
        });

        $('<div></div>').P2BPartialCreateModalDialog();
        $('#Create-PermContactDetails-Employee').button().on("click", function (event) {
            $('<div></div>').P2BPartialCreateModalDialog('@Url.Action("Createcontactdetails_partial", "Corporate")', 'Create ContactDetails', 'open', '@Url.Action("CreateSave","ContactDetails")', '#FormContactDetails', 'Message :', 'Request Falied :', '#JqGrid', 400, 500, '', '', '', '#FormContactDetails', '#Edit-ContactNo-ContDetails,#Remove-ContactNo-ContDetails', function (data) {
                $('#PermContactDetailslist').P2BLookUpEncapsulate('#PermContactDetailslist', 'PermContactDetailslist', data[0], data[1], 'PermContactDetailslist', '#Edit-PermContactDetails-Employee,#Remove-PermContactDetails-Employee', 'N');
            });
            event.preventDefault();
        });

        $('#Edit-PermContactDetails-Employee').button().on("click", function (event) {
            var a = [], b;
            a = $('#PermContactDetailslist').P2BGetTableDataonSelectedRow('#PermContactDetailslist', 0);
            b = a[0];
            console.log(b);
            $('<div></div>').P2BPatialEditModalDialog('@Url.Action("Createcontactdetails_partial", "Corporate")', '@Url.Action("Editcontactdetails_partial", "Corporate")', b, '@Url.Action("EditSave", "ContactDetails")', 'Edit Contact Details', '#FormContactDetails', b, 'Message :', 'Request Falied :', '#JqGrid', 400, 500, '#FormCandidate', '#Edit-PermContactDetails-Employee,#Remove-PermContactDetails-Employee', '#PermContactDetailslist', 'PermContactDetailslist', 'PermContactDetailslist', 'N', function (data) {
                $.each(data[0], function (i, k) {
                    $('#FormContactDetails').trigger('reset');
                    $('#EmailId').val(k.EmailId);
                    $('#Website').val(k.Website);
                    $('#FaxNo').val(k.FaxNo);
                });

                $.each(data[1], function (i, k) {
                    $('#ContactNos_List').P2BLookUpEncapsulate('#ContactNos_List', 'ContactNos_List', k.Id, k.FullContactNumbers, 'ContactNos_List', '#Edit-ContactNo-ContDetails,#Remove-ContactNo-ContDetails', 'A');
                });
            });
            event.preventDefault();
        });

        $('#Remove-PermContactDetails-Employee').button().on('click', function (event) {
            var a = [], b;
            a = $('#PermContactDetailslist').P2BGetTableDataonSelectedRow('#PermContactDetailslist', 0);
            b = a[0];
            $('<div></div>').P2BPartialDeleteModalDialog('@Url.Action("DeleteContactDetails","Corporate")', b, 0, 'Are you sure want to delete record???', 'Message : ', 'Request failed', '#PermContactDetailslist', $('#PermContactDetailslist').val(), 200, 200, '#FormCandidate', '#PermContactDetailslist', '#Edit-PermContactDetails-Employee,#Remove-PermContactDetails-Employee');
            event.preventDefault();
        });

        $('.selectmenu').selectmenu().selectmenu("menuWidget").addClass("overflow");
        $('.popup_radio_button').controlgroup();
        $.fn.CustomeDatePicker = function () {
            return this.each(function () {
                $(this).datetimepicker({
                    lang: 'en',
                    timepicker: false,
                    format: 'd/m/Y',
                    formatDate: 'dd/MM/yyyy',
                });
            });
        };
        $('.date').P2BDatePicker();
        $('.date').attr('readonly', 'readonly');
        $('#Autho').makeDisable('#Create,#Edit,#Delete');
        $('#Autho').onClickGrid('#JqGrid', '@Url.Action("P2BGrid")', '@Url.Action("P2BGrid")');
        $('#Create-EmpName-FName').on('click', function (e) {
            $('<div></div>').P2BPartialCreateModalDialog('@Url.Action("partial", "NameSingle")', 'Create NameSingle', 'open', '@Url.Action("Create", "NameSingle")', '#FormNameSingle', 'Message :', 'Request Falied :', '#JqGrid', 251, 460, '', '#DepartmentObjlist', 'change', '', '', function (data) {
                $('#EmpName_id').val(data[0]);
                $('#EmpName_FullNameFML').val(data[1]);
            });
        });
        $('#Create-FatherName-FName').on('click', function (e) {
            $('<div></div>').P2BPartialCreateModalDialog('@Url.Action("partial", "NameSingle")', 'Create NameSingle', 'open', '@Url.Action("Create", "NameSingle")', '#FormNameSingle', 'Message :', 'Request Falied :', '#JqGrid', 251, 460, '', '#DepartmentObjlist', 'change', '', '', function (data) {
                $('#FatherName_id').val(data[0]);
                $('#FatherName_FullNameFML').val(data[1]);
            });
        });
        $('#Create-MotherName-FName').on('click', function (e) {
            $('<div></div>').P2BPartialCreateModalDialog('@Url.Action("partial", "NameSingle")', 'Create NameSingle', 'open', '@Url.Action("Create", "NameSingle")', '#FormNameSingle', 'Message :', 'Request Falied :', '#JqGrid', 251, 460, '', '#DepartmentObjlist', 'change', '', '', function (data) {
                $('#MotherName_id').val(data[0]);
                $('#MotherName_FullNameFML').val(data[1]);
            });
        });
        $('#Create-HusbandName-FName').on('click', function (e) {
            $('<div></div>').P2BPartialCreateModalDialog('@Url.Action("partial", "NameSingle")', 'Create NameSingle', 'open', '@Url.Action("Create", "NameSingle")', '#FormNameSingle', 'Message :', 'Request Falied :', '#JqGrid', 251, 460, '', '#DepartmentObjlist', 'change', '', '', function (data) {
                $('#HusbandName_id').val(data[0]);
                $('#HusbandName_FullNameFML').val(data[1]);
            });
        });
        $('#Create-BeforeMarriageName-FName').on('click', function (e) {
            $('<div></div>').P2BPartialCreateModalDialog('@Url.Action("partial", "NameSingle")', 'Create NameSingle', 'open', '@Url.Action("Create", "NameSingle")', '#FormNameSingle', 'Message :', 'Request Falied :', '#JqGrid', 251, 460, '', '#DepartmentObjlist', 'change', '', '', function (data) {
                $('#BeforeMarriageName_id').val(data[0]);
                $('#BeforeMarriageName_FullNameFML').val(data[1]);
            });
        });

        $('#Edit-EmpName-FName').button().on("click", function (event) {
            var a = $('#EmpName_id').val() == false ? alert("Select Record..!") : $('#EmpName_id').val();
            if (a == undefined) return false;
            $("<div></div>").CustomeDialog({
                htmlurl: '@Url.Action("partial", "NameSingle")',
                onloaddataurl: '@Url.Action("edit", "NameSingle")',
                onloaddataid: a,
                submiturl: '@Url.Action("EditSave", "NameSingle")',
                form: '#FormNameSingle',
                title: 'Name Single',
                onloadreturnfunction: function (data) {

                    $('#FormNameSingle').trigger('reset');
                    $('#FName').val(data.FName);
                    $('#MName').val(data.MName);
                    $('#LName').val(data.LName);
                    $('#title').P2BSelectMenuAppend("@Url.Action("GetLookupValue", "lookup")", 100, data.EmpTitle);
                    $('#id').val(data.id);
                },
                onsubmitreturnfunction: function (data) {
                    $('#EmpName_id').val(data.Id);
                    $('#EmpName_FullNameFML').val(data.Val);
                }
            });
            event.preventDefault();
        });

        $('#Edit-FatherName-FName').button().on("click", function (event) {
            var a = $('#FatherName_id').val() == false ? alert("Select Record..!") : $('#FatherName_id').val();
            if (a == undefined) return false;
            $("<div></div>").CustomeDialog({
                htmlurl: '@Url.Action("partial", "NameSingle")',
                onloaddataurl: '@Url.Action("edit", "NameSingle")',
                onloaddataid: a,
                submiturl: '@Url.Action("EditSave", "NameSingle")',
                form: '#FormNameSingle',
                title: 'Name Single',
                onloadreturnfunction: function (data) {
                    $('#FormNameSingle').trigger('reset');
                    $('#FName').val(data.FName);
                    $('#MName').val(data.MName);
                    $('#LName').val(data.LName);
                    $('#title').P2BSelectMenuAppend("@Url.Action("GetLookupValue", "lookup")", 100, data.EmpTitle);
                },
                onsubmitreturnfunction: function (data) {
                    $('#FatherName_id').val(data[0]);
                    $('#FatherName_FullNameFML').val(data[1]);
                }
            });
            event.preventDefault();
        });

        $('#Edit-MotherName-FName').button().on("click", function (event) {
            var a = $('#MotherName_id').val() == false ? alert("Select Record..!") : $('#MotherName_id').val();
            if (a == undefined) return false;
            $("<div></div>").CustomeDialog({
                htmlurl: '@Url.Action("partial", "NameSingle")',
                onloaddataurl: '@Url.Action("edit", "NameSingle")',
                onloaddataid: a,
                submiturl: '@Url.Action("EditSave", "NameSingle")',
                form: '#FormNameSingle',
                title: 'Name Single',
                onloadreturnfunction: function (data) {
                    $('#FormNameSingle').trigger('reset');
                    $('#FName').val(data.FName);
                    $('#MName').val(data.MName);
                    $('#LName').val(data.LName);
                    $('#title').P2BSelectMenuAppend("@Url.Action("GetLookupValue", "lookup")", 100, data.EmpTitle);
                },
                onsubmitreturnfunction: function (data) {
                    $('#MotherName_id').val();
                    $('#MotherName_FullNameFML').val(data[1]);
                }
            });
            event.preventDefault();
        });

        $('#Edit-HusbandName-FName').button().on("click", function (event) {
            var a = $('#HusbandName_id').val() == false ? alert("Select Record..!") : $('#HusbandName_id').val();
            if (a == undefined) return false;
            $("<div></div>").CustomeDialog({
                htmlurl: '@Url.Action("partial", "NameSingle")',
                onloaddataurl: '@Url.Action("edit", "NameSingle")',
                onloaddataid: a,
                submiturl: '@Url.Action("EditSave", "NameSingle")',
                form: '#FormNameSingle',
                title: 'Name Single',
                onloadreturnfunction: function (data) {
                    $('#FormNameSingle').trigger('reset');
                    $('#FName').val(data.FName);
                    $('#MName').val(data.MName);
                    $('#LName').val(data.LName);
                    $('#title').P2BSelectMenuAppend("@Url.Action("GetLookupValue", "lookup")", 100, data.EmpTitle);
                },
                onsubmitreturnfunction: function (data) {
                    $('#HusbandName_id').val(data[0]);
                    $('#HusbandName_FullNameFML').val(data[1]);
                }
            });
            event.preventDefault();
        });

        $('#Edit-BeforeMarriageName-FName').button().on("click", function (event) {
            var a = $('#BeforeMarriageName_id').val() == false ? alert("Select Record..!") : $('#BeforeMarriageName_FName').val();
            if (a == undefined) return false;
            $("<div></div>").CustomeDialog({
                htmlurl: '@Url.Action("partial", "NameSingle")',
                onloaddataurl: '@Url.Action("edit", "NameSingle")',
                onloaddataid: a,
                submiturl: '@Url.Action("EditSave", "NameSingle")',
                form: '#FormNameSingle',
                title: 'Name Single',
                onloadreturnfunction: function (data) {
                    $('#FormNameSingle').trigger('reset');
                    $('#FName').val(data.FName);
                    $('#MName').val(data.MName);
                    $('#LName').val(data.LName);
                    $('#title').P2BSelectMenuAppend("@Url.Action("GetLookupValue", "lookup")", 100, data.EmpTitle);
                },
                onsubmitreturnfunction: function (data) {
                    $('#BeforeMarriageName_id').val(data[0]);
                    $('#BeforeMarriageName_FullNameFML').val(data[1]);
                }
            });
            event.preventDefault();
        });

        $('#Lookup-HusbandName-FName').on('click', function () {
            $('.dialog').AddDataToTextbox({
                appendTo: "#HusbandName_FullNameFML",
                appendToId: "#HusbandName_id",
                lookupurl: "@Url.Action("GetLookup_Name", "Candidate")",
                NoOfRecordToShow: "10",
                setnameofthelookupbyppage: "HusbandName_FName-lookup",
                LookupDiv: "LookupDiv",
                lookuppagename: "lookup",
                pagename: "PageNavPosition",
                readonly: true,
            });
        });
        $('#Lookup-MotherName-FName').on('click', function () {
            $('.dialog').AddDataToTextbox({
                appendTo: "#MotherName_FullNameFML",
                appendToId: "#MotherName_id",
                lookupurl: "@Url.Action("GetLookup_Name", "Candidate")",
                NoOfRecordToShow: "10",
                setnameofthelookupbyppage: "MotherName_FName-lookup",
                LookupDiv: "LookupDiv",
                lookuppagename: "lookup", readonly: true,
                pagename: "PageNavPosition"
            });
        });
        $('#Lookup-BeforeMarriageName-FName').on('click', function () {
            $('.dialog').AddDataToTextbox({
                appendTo: "#BeforeMarriageName_FullNameFML",
                lookupurl: "@Url.Action("GetLookup_Name", "Candidate")",
                NoOfRecordToShow: "10",
                setnameofthelookupbyppage: "BeforeMarriageName_FName-lookup",
                LookupDiv: "LookupDiv",
                lookuppagename: "lookup", readonly: true,
                appendToId: "#BeforeMarriageName_id",
                pagename: "PageNavPosition"
            });
        });
        $('#Lookup-FatherName-FName').on('click', function () {

            $('.dialog').AddDataToTextbox({
                appendTo: "#FatherName_FullNameFML",
                lookupurl: "@Url.Action("GetLookup_Name", "Candidate")",
                NoOfRecordToShow: "10",
                setnameofthelookupbyppage: "FatherName_FName-lookup",
                LookupDiv: "LookupDiv",
                appendToId: "#FatherName_id",
                lookuppagename: "lookup", readonly: true,
                pagename: "PageNavPosition"
            });
        });
        $('#Lookup-EmpName-FName').on('click', function () {

            $('.dialog').AddDataToTextbox({
                appendTo: "#CanName_FullNameFML",
                lookupurl: "@Url.Action("GetLookup_Name", "Candidate")",
                NoOfRecordToShow: "10",
                setnameofthelookupbyppage: "EmpName_FName-lookup",
                LookupDiv: "LookupDiv",
                lookuppagename: "lookup",
                appendToId: "#EmpName_id",
                readonly: true,
                pagename: "PageNavPosition"
            });
        });
        $('#EmpName_FullNameFML,#FatherName_FullNameFML,#BeforeMarriageName_FullNameFML,#MotherName_FullNameFML,#MotherName_FullNameFML,#HusbandName_FullNameFML').attr('readonly', true);
        $('#Lookup-ReportingStructRights-Employee').button().on('click', function (e) {
            $('.dialog').P2BLookUpModal('@Url.Action("GetLookup", "ReportingStructRights")', '', 'LookupDiv', 'ReportingStructRights Look Up Data', '#ReportingStructRightslist', 'ReportingStructRightslist', 5, 'ReportingStructRightslist', '#FormCandidate', 'A', '#Edit-CorrsAddrs-Employee,#Remove-CorrsAddrs-Employee', 'CorrsAddrslist_table', 'PageNavPosition');
            e.preventDefault();
        });

        $('#Create-ReportingStructRights-Employee').on("click", function (event) {
            $('<div></div>').P2BPartialCreateModalDialog('@Url.Action("partial", "ReportingStructRights")', 'Create ReportingStructRights', 'open', '@Url.Action("Create","ReportingStructRights")', '#FormReportingStructRights', 'Message :', 'Request Falied :', '#JqGrid', 400, 500, '', '', '', '#FormCandidate', '', function (data) {
                $('#ReportingStructRightslist').P2BLookUpEncapsulate('#ReportingStructRightslist', 'ReportingStructRightslist', data[0], data[1], 'ReportingStructRightslist', '#Edit-ReportingStructRights-Employee,#Remove-ReportingStructRights-Employee', 'A');
            });
            event.preventDefault();
        });

        $('#Edit-ReportingStructRights-Employee').button().on("click", function (event) {
            var a = [], b;
            a = $('#ReportingStructRightslist').P2BGetTableDataonSelectedRow('#ReportingStructRightslist', 0);
            b = a[0];
            $('<div></div>').P2BPatialEditModalDialog('@Url.Action("partial", "ReportingStructRights")', '@Url.Action("edit", "ReportingStructRights")', b, '@Url.Action("Editsave","ReportingStructRights")', 'Edit ReportingStructRights', '#FormReportingStructRights', b, 'Message :', 'Request Falied :', '#JqGrid', 400, 500, '#FormCandidate', '#Edit-CorrsAddrs-Employee,#Remove-CorrsAddrs-Employee', '#ReportingStructRightslist', 'ReportingStructRightslist', 'ReportingStructRightslist', 'A', function (data) {
                $.each(data[0], function (i, k) {
                    @*$('#ReportingLevellist').P2BSelectMenuAppend('@Url.Action("GetLookupValue", "lookup")', 600, k.ReportingLevel_Id, '');*@
                    $('#FuncModuleslist').P2BSelectMenuAppend("@Url.Action("GetLookupValue", "lookup")", 601, k.FuncModules_Id, '');
                    $('#FuncSubModuleslist').P2BSelectMenuAppend("@Url.Action("GetLookupValue", "lookup")", 602, k.FuncSubModules_Id, '');
                    @*$('#AccessRightslist').P2BSelectMenuAppend("@Url.Action("GetLookupValue", "lookup")", 603, k.AccessRights_Id, '');*@
                    $('#AccessRightslist').P2BLookUpEncapsulate('#AccessRightslist', 'AccessRightslist', k.AccessRights_Id, k.AccessRights_Val, 'AccessRightslist', '', 'A');
                    $('#ReportingStructlist').P2BLookUpEncapsulate('#ReportingStructlist', 'ReportingStructlist', k.ReportingStruct_Id, k.ReportingStruct_Val, 'ReportingStructlist', '', 'A');
                });
                $.each(data[1], function (i, k) {
                });
            });
            event.preventDefault();
        });

        $('#Remove-ReportingStructRights-Employee').button().on('click', function (event) {
            var a = [], b;
            a = $('#ReportingStructRightslist').P2BGetTableDataonSelectedRow('#ReportingStructRightslist', 0);
            b = a[0];
            $('<div></div>').P2BPartialDeleteModalDialog('', b, 0, 'Are you sure want to delete record???', 'Message : ', 'Request failed', '#ReportingStructRightslist', $('#ReportingStructRightslist').val(), 200, 200, '#FormCandidate', '#ReportingStructRightslist', '#Edit-CorrsAddrs-Employee,#Remove-CorrsAddrs-Employee');
            event.preventDefault();
        });
    });
</script>

