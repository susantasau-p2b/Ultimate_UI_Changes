@{
    Layout = null;
}
@model P2b.Global.PrevCompExp


<html>
<head>
    <title></title>

    <style>
        .icon-row {
            position: relative;
            left: 95px;
            top: -150px;
        }

        .transactiontablenew {
            border: 1px solid #c5c5c5;
            margin: 0 auto;
            /*width: 200px;*/
            display: block;
            overflow: auto;
            height: 500px;
            border-collapse: collapse;
        }

        .transactiondivnew {
            border: 1px solid #c5c5c5;
            margin: 0 auto;
            width: 507px;
            border-radius: 5px;
            height: 32px;
        }

            .transactiondivnew > div {
                display: inline-block;
                margin: 0 auto;
                padding: 4px;
            }

                .transactiondivnew > div > input {
                    box-sizing: initial;
                    display: inline-block;
                    margin: 0 auto;
                    width: 108px;
                }

        .transactiontablenew th, .transactiontablenew td {
            background: rgba(246, 246, 246, 0.64) none repeat scroll 0 0;
            padding: 5px;
            border-bottom: 1px solid #c5c5c5;
            border-right: 1px solid #c5c5c5;
            text-align: center;
            color: rgba(114, 113, 113, 0.9);
        }

            .transactiontablenew th:nth-child(1) > input, .transactiontablenew td:nth-child(1) > input {
                margin: 0 auto;
            }

            .transactiontablenew th:nth-child(2), .transactiontablenew td:nth-child(2) {
                height: 100%;
                width: 100%;
            }

        .transactiontablenew tr:hover {
            cursor: pointer;
            background: #EEEEEE none repeat scroll 0 0;
        }

        #BusinessType-button {
            font-size: 9px;
            padding-top: 1px;
            font-weight: bold;
        }

        .popup-content-label {
            width: 138px;
            display: block;
            float: left;
            margin: 1px;
        }

        .popup-content-label-2 {
            width: 100px;
            display: block;
            float: left;
            margin: 1px;
        }

        .section1_Leave {
            display: block;
            border: 1.5px solid rgba(207, 207, 207, 0.91);
            height: 688px;
            width: 534px;
            margin: 4px auto;
            position: absolute;
        }

        .section2_Leave {
            display: block;
            border: 2px solid #ddd;
            height: 545px;
            width: 509px;
            margin: 5px 4px;
            position: absolute;
            left: 546px;
        }

        .popup-content-textbox {
            margin-bottom: 1px;
            min-width: 150px;
        }

        .row3 {
            width: 471px;
        }

        .row4 {
            position: absolute;
            top: 294px;
            width: 400px;
        }

        .row6 {
            width: 370px;
            display: inline-block;
        }

        .popup-content-textbox-long {
            margin-bottom: 1px;
            width: 290px;
        }



        .row2 {
            width: 402px;
        }
    </style>
</head>

<body>
    @*<div class="Form_Bg">
            <div class="Form_Input">
                <div class="Button_Container">
                    <button class="button" id="Create">Create</button>
                    <button class="button" id="View">View</button>
                    <button class="button" id="Edit">Edit</button>
                    <button class="button" id="Delete">Delete</button>
                    <button class="button" id="Autho">Authorised</button>
                    <div id="Grid_Form">
                        <div>
                            <table id="JqGrid"></table>
                            <div id="pager2"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>*@

    @*<div class="dialog">
        <div title="LookUp Data">
            <div class="LookupDiv"></div>
        </div>
        <div id="PageNavPosition">

        </div>
    </div>*@

    <div id="Create_Dialog">
        @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "frmPrevCompExp", name = "frmPrevCompExp" }))
        {




            <div class="section2_Leave">
                <div class=" " style="width: 506px;">

                    <input id="Autho_Action" type="hidden" name="Autho_Action" />
                    <input id="Autho_Allow" type="hidden" name="Autho_Allow" />
                    <br />
                    @*<div class="row3 content_margine">@Html.LabelFor(m => m.CompName, "Name :", new { @class = "popup-content-label must" })@Html.TextBoxFor(m => m.CompName, new { @class = "popup-content-textbox must" })</div>*@
                    <div class="row3 content_margine">
                        @Html.LabelFor(m => m.CompName, "Company Name :", new { @class = "popup-content-label must" })@Html.TextBoxFor(m => m.CompName, new { @class = "popup-content-textbox must" })
                    </div>
                    <div class="row3 content_margine">
                        <div id="AddressList_Old"></div>
                        @Html.LabelFor(m => m.CompAddress, "Company Address :", new { @class = "popup-content-label" })
                        <div class="popup-content-table">
                            <table class="lookuptableselected" id="AddressList">
                                <tr><th>Id</th><th>LookUp Selected Description</th></tr>
                            </table>
                        </div>
                        <div class="icon-row">
                            <button data-p2btooltip="Lookup Address" class="  popup-content-icon-lookup" id="Lookup-Address-PrevCompExp"><span class="ui-icon ui-icon-folder-open popup-content-iconmark"></span></button>
                            <button data-p2btooltip="Create Address" class="popup-content-icon-create" id="Create-Address-PrevCompExp"><span class="ui-icon ui-icon-newwin popup-content-iconmark"></span></button>
                            <button data-p2btooltip="Edit Address" class="popup-content-icon-edit" id="Edit-Address-PrevCompExp"><span class="ui-icon ui-icon-pencil popup-content-iconmark"></span></button>
                            <button data-p2btooltip="Remove Address" class="popup-content-icon-remove" id="Remove-Address-PrevCompExp"><span class="ui-icon ui-icon-trash popup-content-iconmark"></span></button>
                        </div>
                    </div>



                    <div class="row3 content_margine">
                        <div id="ContactDetailsList_Old"></div>
                        @Html.LabelFor(m => m.ContactDetails, "Contact Details :", new { @class = "popup-content-label" })
                        <div class="popup-content-table">
                            <table class="lookuptableselected" id="ContactDetailsList">
                                <tr><th>Id</th><th>LookUp Selected Description</th></tr>
                            </table>
                        </div>
                        <div class="icon-row">
                            <button data-p2btooltip="Lookup Contact Details" class="  popup-content-icon-lookup" id="Lookup-ContactDetails-PrevCompExp"><span class="ui-icon ui-icon-folder-open popup-content-iconmark"></span></button>
                            <button data-p2btooltip="Create Contact Details" class="  popup-content-icon-create" id="Create-ContactDetails-PrevCompExp"><span class="ui-icon ui-icon-newwin popup-content-iconmark"></span></button>
                            <button data-p2btooltip="Edit Contact Details" class="  popup-content-icon-edit" id="Edit-ContactDetails-PrevCompExp"><span class="ui-icon ui-icon-pencil popup-content-iconmark"></span></button>
                            <button data-p2btooltip="Remove Contact Details" class="  popup-content-icon-remove" id="Remove-ContactDetails-PrevCompExp"><span class="ui-icon ui-icon-trash popup-content-iconmark"></span></button>
                        </div>
                    </div>

                    <div class="row3 content_margine">
                        @Html.LabelFor(m => m.FromDate, "From Date :", new { @class = "popup-content-label must" })@Html.TextBoxFor(m => m.FromDate, new { @class = "popup-content-textbox  must" })
                    </div>
                    <div class="row3 content_margine">
                        @Html.LabelFor(m => m.ToDate, "To Date :", new { @class = "popup-content-label must" })@Html.TextBoxFor(m => m.ToDate, new { @class = "popup-content-textbox  must" })
                    </div>
                    <div class="row3 content_margine">
                        @Html.LabelFor(m => m.YrOfService, "Years Of Experience :", new { @class = "popup-content-label must" })@Html.TextBoxFor(m => m.YrOfService, new { @class = "popup-content-textbox must" })
                    </div>
                    <div class="row3 content_margine">
                        @Html.LabelFor(m => m.JoiningJobPosition, "Joining Job Position :", new { @class = "popup-content-label" })@Html.TextBoxFor(m => m.JoiningJobPosition, new { @class = "popup-content-textbox" })
                    </div>
                    <div class="row3 content_margine">
                        @Html.LabelFor(m => m.LeaveingJobPosition, "Leaving Job Position :", new { @class = "popup-content-label" })@Html.TextBoxFor(m => m.LeaveingJobPosition, new { @class = "popup-content-textbox" })
                    </div>
                    <div class="row3 content_margine">
                        @Html.LabelFor(m => m.Reason, "Reason :", new { @class = "popup-content-label" })@Html.TextBoxFor(m => m.Reason, new { @class = "popup-content-textbox" })
                    </div>
                    <div class="row3 content_margine">
                        @Html.LabelFor(m => m.LastDrawnSalary, "Last Drawn Salary :", new { @class = "popup-content-label must" })@Html.TextBoxFor(m => m.LastDrawnSalary, new { @class = "popup-content-textbox must" })
                    </div>
                    <div class="row3 content_margine">
                        @Html.LabelFor(m => m.SpecialAchievements, "Special Achievements :", new { @class = "popup-content-label" })@Html.TextBoxFor(m => m.SpecialAchievements, new { @class = "popup-content-textbox" })
                    </div>

                </div>
            </div>
            <div class="section_Method" id="section_emp">
                <div class="heading" style="width:1065px">Employee List</div>

                <div class="employeeselectiondiv">
                    <div class="transactiondivnew dynamic addons" style="float:left" id="asd">
                        <div><label>Search : </label><input type="text" id="Employee-Search" style="width: 425px;" /></div>
                        <table cellspacing="0" cellpadding="1" class="transactiontablenew" id="Employee-Table" style="height:440px">
                            <tr><th><input type="checkbox" id="Case-Employee" class="Chck_emp" /></th><th>Employee</th></tr>
                        </table>
                    </div>
                </div>
            </div>

            <div class="emplist_row">
                <div id="Grid_Form2">

                </div>
            </div>
        }
    </div>

</body>
</html>

<script>
    $(document).ready(function (e) {
        $('button').button();
        // var ColNames = [];
        // var ColModel = [];
        // var SortName, Caption, url, width, height;
        // var btndisablenames = "#Edit-Address-PrevCompExp,#Remove-Address-PrevCompExp,#Edit-ContactDetails-PrevCompExp,#Remove-ContactDetails-PrevCompExp";
        //// ColModel = ['Id', 'Compname', 'YearOfService'];
        //// ColNames = ['Id', 'Compname', 'YearOfService'];
        // ColModel = ['ID', 'Employee Code', 'Employee Name'];
        // ColNames = ['ID', 'Employee Code', 'Employee Name'];
        // SortName = 'ID';
        @*Caption = 'Previous Company Experience';
            url = '@Url.Action("P2BGrid")';*@
        //width = 1000;
        //height = 150;
        //$('#JqGrid').P2BGrid(ColNames, ColModel, SortName, Caption, url, width, height);

        function AssignData() {
            dt = $('#JqGrid').P2BGrid.P2BEdDelV('#JqGrid', 'Id');

        }

        $('#FromDate').P2BDatePicker();
        $('#ToDate').P2BDatePicker();
        $('#LastDrawnSalary').ForceAmount();
        $('#LastDrawnSalary').ValidateTextBox({ maxlength: 10 });
        $('#YrOfService').ForceOnlyNumeric();
        $('#YrOfService').ValidateTextBox({ maxlength: 4 });
        $('#CompName', '#JoiningJobPosition', '#LeaveingJobPosition').ValidateTextBox({ maxlength: 50 });
        $('#Reason').ValidateTextBox({ maxlength: 100 });


        function DateConvert(JsonDate) {
            var date = new Date(parseInt(JsonDate.substr(6)));
            var displayDate = $.datepicker.formatDate("dd/mm/yy", date);
            return displayDate;
        };
        //  var todate = $("ToDate").val();
        ////  alert(todate)
        //  if (todate != undefined) {
        //$("#YrOfService").attr('readonly', true);
        //    $('#ToDate').on('change', function () {
        //        var todate = $("#ToDate").val();
        //        if (todate != null) {
        //            var frm = $("#FromDate").val();


        //            if (frm !=""||frm != undefined||frm!=null) {
        //                var todate = $("#ToDate").val();
        //                var TO = todate.split('/')[2];
        //                var FROM = frm.split('/')[2];
        //                var TOT = (TO) - (FROM);
        //                $("#YrOfService").val(TOT);
        //            }
        //        }
        //    });

        $("#YrOfService").attr('readonly', true);
        //$('#ToDate').on('change', function () {
        //    var todate = $("#ToDate").val();
        //    var TO = todate.split('/');
        //    alert(TO);
        //    if (todate != null) {
        //        var frm = $("#FromDate").val();
        //        var startDay = new Date(frm);
        //        alert(startDay);
        //        var endDay = new Date(todate);

        //        if (frm != "" || frm != undefined || frm != null) {
        //            var todate = $("#ToDate").val();
        //            var millisecondsPerDay = 1000 * 60 * 60 * 24;
        //            var millisBetween = startDay.getTime() - endDay.getTime();
        //            var days = millisBetween / millisecondsPerDay;
        //            alert(days);
        //            var da = (Math.floor(days));
        //            alert(da);
        //            var v3 = (da)/365;
        //            alert(v3);
        //            var v4 = v3.split('.')[0];
        //            alert(v4);
        //            $("#YrOfService").val(Math.floor(days));
        //        }
        //    }
        //});
        $('#ToDate').on('change', function () {
            if (!$('#FromDate').val()) {
                alert('Enter From Date..!');
                $('#ToDate').val('');
                $('#YrOfService').val('');
                return false;
                // e.preventDefault();
            }
            if ($(this).val()) {
                var a = $.StartEndDateCheck({
                    startdate: '#FromDate',
                    enddate: '#ToDate',
                });
                if (a == 0) {
                    alert("To Date Should Be Grater Than From Date..!"); $('#ToDate').val('');
                }
            }
            var one_day = 1000 * 60 * 60 * 24;
            var from = $("#FromDate").val().split("/");
            // alert(from);
            var convertedStartDate = new Date(from[2], from[1] - 1, from[0]);
            var newdate1 = new Date(convertedStartDate);
            // alert(newdate1);

            var to = $("#ToDate").val().split("/");
            //  alert(to);
            var convertedEndDate = new Date(to[2], to[1] - 1, to[0]);
            var newdate2 = new Date(convertedEndDate);
            // alert(newdate2);

            var diff = newdate2.getTime() - newdate1.getTime();
            //  alert(diff);

            var diff2 = Math.round(diff / one_day);
            var v3 = diff2 / 365;
            var v4 = parseFloat(v3).toString();
            var v5 = v4.split('.')[0];
            $("#YrOfService").val(v5);
        });

        $('#FromDate').on('change', function () {
            //if (!$('#ToDate').val()) {
            //    alert('Enter From Date..!');
            //    $('#FromDate').val('');
            //    $('#YrOfService').val('');
            //    return false;
            //    // e.preventDefault();
            //}
            if ($(this).val()) {
                var a = $.StartEndDateCheck({
                    startdate: '#FromDate',
                    enddate: '#ToDate',
                });
                if (a == 0) {
                    alert("To Date Should Be Grater Than From Date..!"); $('#ToDate').val('');
                }
            }
            var one_day = 1000 * 60 * 60 * 24;
            var from = $("#FromDate").val().split("/");
            // alert(from);
            var convertedStartDate = new Date(from[2], from[1] - 1, from[0]);
            var newdate1 = new Date(convertedStartDate);
            // alert(newdate1);

            var to = $("#ToDate").val().split("/");
            //  alert(to);
            var convertedEndDate = new Date(to[2], to[1] - 1, to[0]);
            var newdate2 = new Date(convertedEndDate);
            // alert(newdate2);

            var diff = newdate2.getTime() - newdate1.getTime();
            //  alert(diff);

            var diff2 = Math.round(diff / one_day);
            var v3 = diff2 / 365;
            var v4 = parseFloat(v3).toString();
            var v5 = v4.split('.')[0];
            $("#YrOfService").val(v5);
        });


        //if (diff2 > 364)
        //{

        //    var months = newdate2.getMonth() - newdate1.getMonth() + (12 * (newdate2.getFullYear() - newdate1.getFullYear()));
        //    alert(months);
        //    if (newdate2.getDate() < newdate1.getDate()) {
        //        months--;
        //        alert(months);
        //        $("#YrOfService").val(1);
        //    }
        //} else {
        //    $("#YrOfService").val("0");
        //    // document.getElementById("YrOfService").value = "0";
        //}



        // Round down.

        //  }
        @*$('#Create_Dialog').P2BCreateDialog();
            $('#Create').on("click", function (event) {
                $('#frmPrevCompExp').trigger("reset");
                $.LoadEmpByDefault(true);
                $('#Advance-Filter-Symbol').on('click', function () {
                    $("<div></div>").FilterDialog({
                        width: 1000,
                        height: 400,
                        title: "Filter",
                        htmlurl: "@Url.Action("Advance_partial", "Transcation")",
                        returnat: function (data) {
                            console.log(data);
                            var forwarddata = JSON.stringify(data);
                            $('#Employee-Table').P2BTransactionTableDynamic('#Employee-Search', '#Case-Employee', './Transcation/Get_Employelist_h?geo_id=' + forwarddata + '', "");
                            //$('#Employee-Table').P2BTransactionTableDynamic('#Employee-Search', '#Case-Employee', './Transcation/Get_Employelist?geo_id=' + forwarddata + '', "");
                            //$('#pay_id').val(data.PayStruct);
                            //$('#fun_id').val(data.FunStruct);
                        },
                        renderat: "#FormFilter", hierarchy: true,
                    });
                //console.log($('#FormFilter')[0]);
            });
                $('#section_emp').fadeIn();
                $('#Create_Dialog').P2BCreateDialog('', '', '', '', 'Create Previous Company Experience', 'open', '@Url.Action("Create","PreCompanyExp")', '#frmPrevCompExp', 'Message :', 'Request Falied :', '#JqGrid', 600, 1116, '#AddressList,#ContactDetailsList', btndisablenames, function (data) { });
                // To bind dropdown on page load
                event.preventDefault();
            });*@



        // Main page edit
        @*$('#Edit').on('click', function () {
                AssignData();
                $('#section_emp').fadeOut();

                $('#Create_Dialog').P2BEditModalDialog('@Url.Action("Edit")', dt.ID, '@Url.Action("EditSave")', "Edit Previous Company Experience" + JSON.stringify(dt) + "", '#frmPrevCompExp', dt.ID, 'Message : ', 'Request Falied :', '#JqGrid', 600, 1116, '#AddressList,#ContactDetailsList', btndisablenames, function (data) {
                    $.each(data[0], function (i, k) {
                        $('#CompName').val(k.CompName);
                        $('#FromDate').val(k.FromDate);
                        $('#JoiningJobPosition').val(k.JoiningJobPosition);
                        $('#LastDrawnSalary').val(k.LastDrawnSalary);
                        $('#LeaveingJobPosition').val(k.LeaveingJobPosition);
                        $('#Reason').val(k.Reason);
                        $('#ToDate').val(k.ToDate);
                        $('#YrOfService').val(k.YrOfService);
                        $('#SpecialAchievements').val(k.SpecialAchievements);

                        if (k.FromDate != null) {
                            $('#FromDate').val(DateConvert(k.FromDate));
                        }

                        if (k.ToDate != null) {
                            $('#ToDate').val(DateConvert(k.ToDate));
                        }

                    });

                    $.each(data[1], function (i, k) {
                        $('#AddressList').P2BLookUpEncapsulate('#AddressList', 'AddressList', k.Add_Id, k.Address_FullAddress, 'AddressList', '', 'N');
                        $('#ContactDetailsList').P2BLookUpEncapsulate('#ContactDetailsList', 'ContactDetailsList', k.Cont_Id, k.FullContactDetails, 'ContactDetailsList', '', 'N');
                    });
                    $('#Autho_Allow').val(data[3]); //Compulsory for authorisation

                });
            });*@





        //View main page
        @*$('#View').button().click(function (event) {
                AssignData();
                $('#section_emp').fadeOut();
                $('#Employee-Table').val(JSON.stringify(dt));
                var v1 = JSON.stringify(dt);
                $('#Create_Dialog').P2BViewModalDialog('@Url.Action("Edit")', dt.ID, v1, '#AddressList,#ContactDetailsList', '#Lookup-Address-PrevCompExp,#Create-Address-PrevCompExp,#Edit-Address-PrevCompExp,#Remove-Address-PrevCompExp,#Lookup-ContactDetails-PrevCompExp,#Create-ContactDetails-PrevCompExp,#Edit-ContactDetails-PrevCompExp,#Remove-ContactDetails-PrevCompExp', 600, 1116, '#Autho', '@Url.Action("AuthSave")', dt.ID, '', '', '', '', '#JqGrid', function (data) {
                    $.each(data[0], function (i, k) {
                        $('#Autho_Action').val(k.Action);
                        $('#CompName').val(k.CompName);
                        $('#FromDate').val(k.FromDate);
                        $('#JoiningJobPosition').val(k.JoiningJobPosition);
                        $('#LastDrawnSalary').val(k.LastDrawnSalary);
                        $('#LeaveingJobPosition').val(k.LeaveingJobPosition);
                        $('#Reason').val(k.Reason);
                        $('#ToDate').val(k.ToDate);
                        $('#YrOfService').val(k.YrOfService);
                        $('#SpecialAchievements').val(k.SpecialAchievements);

                        if (k.FromDate != null) {
                            $('#FromDate').val(DateConvert(k.FromDate));
                        }

                        if (k.ToDate != null) {
                            $('#ToDate').val(DateConvert(k.ToDate));
                        }
                    });

                    $.each(data[1], function (i, k) {
                        $('#AddressList').P2BLookUpEncapsulate('#AddressList', 'AddressList', k.Add_Id, k.Address_FullAddress, 'AddressList', 'view', 'N');
                        $('#ContactDetailsList').P2BLookUpEncapsulate('#ContactDetailsList', 'ContactDetailsList', k.Cont_Id, k.FullContactDetails, 'ContactDetailsList', 'view', 'N');
                    });

                    if ($("#Autho").hasClass('auto_active')) {
                        if (data[2] != null) {
                            $('#Name').oldVal(data[2].Name);
                            $('#Categorylist').oldDropval(data[2].BusinessType_Val);
                            $('#AddressList_Old').oldLookupVal(data[2].Address_Val);
                            $('#ContactDetailsList_Old').oldLookupVal(data[2].Contact_Val);
                        }
                    }
                });
            });*@


        //delete main page
        @*$('#Delete').button().click(function (event) {
                dt = $('#JqGrid').P2BGrid.P2BEdDelV('#JqGrid', 'Id');
                $('#Create_Dialog').P2BDeleteModalDialog('@Url.Action("Delete")', dt.ID, 'Are you sure want to remove record???', 'Message : ', 'Request failed', '#JqGrid', 200, 200);
                event.preventDefault();
            });*@




        //To get data in Lookup
        $('#Lookup-Address-PrevCompExp').on('click', function (event) {
            $('.dialog').P2BLookUpModal('@Url.Action("GetAddressLKDetails", "PreCompanyExp")', '', 'LookupDiv', 'Look Up Data', '#AddressList', 'AddressList', 5, 'AddressList', '#frmPrevCompExp', 'N', '#Edit-Address-PrevCompExp,#Remove-Address-PrevCompExp', 'Lookup_table', 'PageNavPosition');
            event.preventDefault();
        });

        // PArtial page create
        $('<div></div>').P2BPartialCreateModalDialog();
        $('#Create-Address-PrevCompExp').on("click", function (event) {
            $('<div></div>').P2BPartialCreateModalDialog('@Url.Action("partial", "address")', 'Create Dialog', 'open', '@Url.Action("Create","Address")', '#FormAddress', 'Message :', 'Request Falied :', '#JqGrid', 400, 500, '', '', '', '#frmPrevCompExp', '', function (data) {
                $('#AddressList').P2BLookUpEncapsulate('#AddressList', 'AddressList', data[0], data[1], 'AddressList', '#Edit-Address-PrevCompExp,#Remove-Address-PrevCompExp');

            });
            event.preventDefault();
        });






        $('#Edit-Address-PrevCompExp').button().on("click", function (event) {
            var a = [], b;
            a = $('#AddressList').P2BGetTableDataonSelectedRow('#AddressList', 0);
            b = a[0];
            //url, openurl, opendataforward, editurl, maindialogtitle, forwardserializedata, forwarddata, editmessage, editerrormessage, gridreloadname, height, width, classoridoftheonwhichpopupderived, nameclassidofinlinelookup, nameofthelist_inlinelookuptable, nameoftable_inlinelookuptable,multiple_allowed_or_not,nameidclassofbuttontodisable,returndatafunction) {
            $('<div></div>').P2BPatialEditModalDialog('@Url.Action("partial", "address")', '@Url.Action("edit", "address")', b, '@Url.Action("Editsave","Address")', 'Edit Address', '#FormAddress', b, 'Message :', 'Request Falied :', '#JqGrid', 400, 500, '#frmPrevCompExp', '#AddressList', 'AddressList', 'AddressList', 'N', '#Edit-Address-PrevCompExp,#Remove-Address-PrevCompExp', function (data) {
                // setTimeout(function () {
                //to bind data according to selected id
                $.each(data[0], function (i, k) {
                    $('#FormAddress').trigger("reset");
                    $('#Address1').val(k.Address1);
                    $('#Address2').val(k.Address2);
                    $('#Address3').val(k.Address3);
                    $('#Landmark').val(k.Landmark);
                    $('#CountryList').P2BSelectMenuAppend("@Url.Action("PopulateDropDownList", "country")", "", k.Country_Id, '');
                    $('#StateList').P2BSelectMenuAppend("@Url.Action("PopulateDropDownList", "state")", "", k.State_Id, '');
                    $('#StateRegionList').P2BSelectMenuAppend("@Url.Action("PopulateDropDownList", "StateRegion")", "", k.StateRegion_Id, '');
                    $('#DistrictList').P2BSelectMenuAppend("@Url.Action("PopulateDropDownList", "District")", "", k.District_Id, '');
                    $('#TalukaList').P2BSelectMenuAppend("@Url.Action("PopulateDropDownList", "Taluka")", "", k.Taluka_Id, '');
                    $('#CityList').P2BSelectMenuAppend("@Url.Action("PopulateDropDownList", "City")", "", k.City_Id, '');
                    $('#AreaList').P2BSelectMenuAppend("@Url.Action("PopulateDropDownList", "area")", "", k.Area_Id, '');
                });
                //}, 3000);


            });
            event.preventDefault();
        });

        $('#Remove-Address-PrevCompExp').button().on('click', function (event) {
            //dt = $('#JqGrid').P2BGrid.P2BEdDelV('#JqGrid', 'Id');
            //var a = [], b;
            //a = $('#AddressList').P2BGetTableDataonSelectedRow('#AddressList', 0);
            //b = a[0];


            var selectedRows = [];
            selectedRows = $('#AddressList').P2BGetTableDataonSelectedRow('#AddressList', 0);
            $('<div></div>').P2BPartialDeleteModalDialog('', selectedRows, 0, 'Are you sure want to delete record???', 'Message : ', 'Request failed', '#AddressList', $('#AddressList').val(), 200, 200, '#frmPrevCompExp', '#AddressList', '#Edit-Address-PrevCompExp,#Remove-Address-PrevCompExp');
            event.preventDefault();
        });

        $('<div></div>').P2BPartialCreateModalDialog();
        $('#Create-ContactDetails-PrevCompExp').button().on("click", function (event) {
            //function (url, maindialogtitle, state, submiturl, submitnameformforserilize, savemessage, errormessage, gridreloadname, height, width, forwarddata, ControlName, event, classoridoftheonwhichpopupderived, nameidclassofbuttontodisable, returnfunctiondata) {
            $('<div></div>').P2BPartialCreateModalDialog('@Url.Action("Createcontactdetails_partial", "PreCompanyExp")', 'Create ContactDetails', 'open', '@Url.Action("CreateSave","ContactDetails")', '#frmContactDetails', 'Message :', 'Request Falied :', '#JqGrid', 400, 500, '', '', '', '#frmContactDetails', '#Edit-ContactDetails-PrevCompExp,#Remove-ContactDetails-PrevCompExp', function (data) {
                $('#ContactDetailsList').P2BLookUpEncapsulate('#ContactDetailsList', 'ContactDetailsList', data[0], data[1], 'ContactDetailsList', '#Edit-ContactDetails-Corporate,#Remove-ContactDetails-Corporate', 'N');
            });
            event.preventDefault();
        });
        /* ContactDetails button click*/

        function AssignData() {
            dt = $('#JqGrid').P2BGrid.P2BEdDelV('#JqGrid', 'Id');
        }

        $('#Lookup-ContactDetails-PrevCompExp').button().on('click', function (event) {
            @*$('.dialog').P2BLookUpModal('@Url.Action("GetAddressLKDetails", "PrevCompExp")', '', 'LookupDiv', 'Address Look Up Data', '#AddressList', 'AddressList', 5, 'AddressList', '#frmPrevCompExp', 'N', '#Edit-Address-PrevCompExp,#Remove-Address-PrevCompExp', 'Lookup_table', 'PageNavPosition');*@
            $('.dialog').P2BLookUpModal('@Url.Action("GetContactDetLKDetails", "PreCompanyExp")', '', 'LookupDiv', 'ContactDetails Look Up Data', '#ContactDetailsList', 'ContactDetailsList', 5, 'ContactDetailsList', '#frmPrevCompExp', 'N', '#Edit-ContactDetails-PrevCompExp,#Remove-ContactDetails-PrevCompExp', 'Lookup_table', 'PageNavPosition');
            event.preventDefault();
        });




        $('#Edit-ContactDetails-PrevCompExp').button().on("click", function (event) {
            var a = [], b;
            a = $('#ContactDetailsList').P2BGetTableDataonSelectedRow('#ContactDetailsList', 0);
            b = a[0];
            console.log(b);
            //url, openurl, opendataforward, editurl, maindialogtitle, forwardserializedata, forwarddata, editmessage, editerrormessage, gridreloadname,                                                                                                                    height, width, classoridoftheonwhichpopupderived, nameidclassofbuttontodisable, nameclassidofinlinelookup, nameofthelist_inlinelookuptable, nameoftable_inlinelookuptable,multiple_allowed_or_not, returndatafunction) {
            $('<div></div>').P2BPatialEditModalDialog('@Url.Action("Createcontactdetails_partial", "PreCompanyExp")', '@Url.Action("Editcontactdetails_partial", "PreCompanyExp")', b, '@Url.Action("EditSave", "ContactDetails")', 'Edit Contact Details', '#frmContactDetails', b, 'Message :', 'Request Falied :', '#JqGrid', 400, 500, '#frmPrevCompExp', '#ContactDetailsList', 'ContactDetailsList', 'ContactDetailsList', 'N', '#Remove-ContactDetails-PrevCompExp,#Edit-ContactDetails-PrevCompExp', function (data) {
                // setTimeout(function () {
                $.each(data[0], function (i, k) {
                    $('#frmContactDetails').trigger('reset');
                    $('#EmailId').val(k.EmailId);
                    $('#Website').val(k.Website);
                    $('#FaxNo').val(k.FaxNo);
                });

                $.each(data[1], function (i, k) {
                    $('#ContactNos_List').P2BLookUpEncapsulate('#ContactNos_List', 'ContactNos_List', k.Id, k.FullContactNumbers, 'ContactNos_List', '#Edit-ContactNo-ContDetails,#Remove-ContactNo-ContDetails', 'A');
                });
                // }, 3000);
            });
            event.preventDefault();
        });





        $('#Remove-ContactDetails-PrevCompExp').button().on('click', function (event) {

            //var a = [], b;
            //a = $('#ContactDetailsList').P2BGetTableDataonSelectedRow('#ContactDetailsList', 0);
            //b = a[0];

            var selectedRows = [];
            selectedRows = $('#ContactDetailsList').P2BGetTableDataonSelectedRow('#ContactDetailsList', 0);

            $('<div></div>').P2BPartialDeleteModalDialog('@Url.Action("DeleteContactDetails", "PreCompanyExp")', selectedRows, 0, 'Are you sure want to delete record???', 'Message : ', 'Request failed', '#ContactDetailsList', $('#ContactDetailsList').val(), 200, 200, '#frmPrevCompExp', '#ContactDetailsList', '#Edit-ContactDetails-PrevCompExp,#Remove-ContactDetails-PrevCompExp');
            event.preventDefault();
        });





        $('.popup_radio_button').controlgroup();
        $('#Autho').makeDisable('#Create,#Edit,#Delete');
        $('#Categorylist').selectmenu().selectmenu("menuWidget");
        $('#Autho').onClickGrid('#JqGrid', '@Url.Action("P2BGrid")', '@Url.Action("P2BGrid")');
    });

</script>