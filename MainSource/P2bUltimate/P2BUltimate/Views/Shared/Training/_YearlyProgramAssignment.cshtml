
@{
    Layout = null;
}

@model Training.YearlyProgramAssignment
<html>
<body>
    <div class="Lookup_Increment1">
        <div title="LookUp Data">
            <div class="lookupdiv22"></div>
        </div>
        <div id="pageNavPosition22">

        </div>
    </div>

    <div id="Create_Dialog" title="Create YearlyTrainingCalendar">

        @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "frmYearlyProgramAssignmentp", name = "frmYearlyProgramAssignmentp" }))
        {

           <div class="heading">Edit YearlyProgramAssignment Details </div>
            <div class="row1 content_margine">
                @*@Html.LabelFor(m => m.StartDate, "Start Date", new { @class = "popup-content-label must" })*@
                <label class="popup-content-label must">Start Date :</label>
                @*@Html.TextBoxFor(m => m.StartDate, new { @class = "popup-content-textbox must" })*@
                <input type="text" id="StartDate1" name="StartDate" class="popup-content-textbox must" />
            </div>
            <div class="row1 content_margine">
                @*@Html.LabelFor(m => m.EndDate, "End Date", new { @class = "popup-content-label must" })*@
                <label class="popup-content-label must">End Date :</label>
                @*@Html.TextBoxFor(m => m.EndDate, new { @class = "popup-content-textbox must" })*@
                <input type="text" id="EndDate1" name="EndDate" class="popup-content-textbox must" />
            </div>

            <div class="row3 content_margine">
                <div id="ProgramListlist_old"></div>
                @*@Html.LabelFor(m => m.ProgramList, "Program List :", new { @class = "popup-content-label" })*@
                <label class="popup-content-label">Program List :</label>
                <div class="popup-content-table">
                    <table class="lookuptableselected" id="ProgramListlistS1">
                        <tr><th>Id</th><th>LookUp Selected ProgramList</th></tr>
                    </table>
                </div>
                <div class="icon-row">
                    <button data-p2btooltip="Lookup Program List Details" class="  popup-content-icon-lookup" id="Lookup-ProgramListlistS-YearlyProgramAssignment"><span class="ui-icon ui-icon-folder-open popup-content-iconmark"></span></button>
                    <button data-p2btooltip="Create Program List Details" class="  popup-content-icon-create" id="Create-ProgramListlistS-YearlyProgramAssignment"><span class="ui-icon ui-icon-newwin popup-content-iconmark"></span></button>
                    <button data-p2btooltip="Edit Program List Details" class="  popup-content-icon-edit" id="Edit-ProgramListlistS-YearlyProgramAssignment"><span class="ui-icon ui-icon-pencil popup-content-iconmark"></span></button>
                    <button data-p2btooltip="Remove Program List Details" class="  popup-content-icon-remove" id="Remove-ProgramListlistS-YearlyProgramAssignment"><span class="ui-icon ui-icon-trash popup-content-iconmark"></span></button>
                </div>
            </div>
        }
    </div>

    </html>
    </body>
<script>
    $(document).ready(function (e) {
        $('button').button();

        function AssignData() {
            dt = $('#JqGrid').P2BGrid.P2BEdDelV('#JqGrid', 'Id');
        }
        $('#StartDate1').P2BDatePicker();
        $('#EndDate1').P2BDatePicker();

        $('#Lookup-ProgramListlistS-YearlyProgramAssignment').button().on('click', function (event) {
            $('.dialog').P2BLookUpModal('@Url.Action("GetLookupDetailsProgramList", "SubCategory")', '', 'LookupDiv', '  Look Up Data', '#ProgramListlistS1', 'ProgramListlistS1', 5, 'ProgramListlistS1', '#frmYearlyProgramAssignmentp', 'A', ' ', 'Lookup_table', 'PageNavPosition');
            event.preventDefault();
        });

        $('<div></div>').P2BPartialCreateModalDialog();
        $('#Create-ProgramListlistS-YearlyProgramAssignment').button().on("click", function (event) {
            //function (url, maindialogtitle, state, submiturl, submitnameformforserilize, savemessage, errormessage, gridreloadname, height, width, forwarddata, ControlName, event, classoridoftheonwhichpopupderived, nameidclassofbuttontodisable, returnfunctiondata) {
            $('<div></div>').P2BPartialCreateModalDialog('@Url.Action("Partial", "ProgramList")', 'Create Programlist', 'open', '@Url.Action("Create", "ProgramList")', '#frmProgramListP', 'Message :', 'Request Falied :', '#JqGrid', 400, 560, '', '', '', '#frmYearlyProgramAssignmentp', '', function (data) {
                $('#ProgramListlistS1').P2BLookUpEncapsulate('#ProgramListlistS1', 'ProgramListlistS1', data[0], data[1], 'ProgramListlistS1', '', 'A');
            });
            event.preventDefault();
        });


        $('#Edit-ProgramListlistS-YearlyProgramAssignment').button().on("click", function (event) {
            var a = [], b;
            a = $('#ProgramListlistS1').P2BGetTableDataonSelectedRow('#ProgramListlistS1', 0);
            b = a[0];
            console.log(b);

            //url, openurl, opendataforward, editurl, maindialogtitle, forwardserializedata, forwarddata, editmessage, editerrormessage, gridreloadname,                                                                                                                    height, width, classoridoftheonwhichpopupderived, nameidclassofbuttontodisable, nameclassidofinlinelookup, nameofthelist_inlinelookuptable, nameoftable_inlinelookuptable,multiple_allowed_or_not, returndatafunction) {
            $('<div></div>').P2BPatialEditModalDialog('@Url.Action("Partial", "ProgramList")', '@Url.Action("Edit", "ProgramList")', b ,'@Url.Action("EditSave", "ProgramList")', 'Edit Program List Details', '#frmProgramListP', b, 'Message :', 'Request Falied :', '#JqGrid', 400, 560, '#frmYearlyProgramAssignmentp', '#ProgramListlistS1', 'ProgramListlistS1', 'ProgramListlistS1', 'A', '', function (data) {
                $.each(data[0], function (i, k) {
                  //  $('#frmProgramListP').trigger('reset');
                    $('#Subject').val(k.Subject).attr("readonly", "readonly");
                    $('#SubjectDetails').val(k.SubjectDetails);
                   // $("#TrainingTypelist").prop("disabled", true);
                    $('#TrainingTypelist').P2BSelectMenuAppend("@Url.Action("GetLookupValue", "lookup")", 1050, k.TrainingType_Id);
                });

                $.each(data[1], function (i, k) {

                    $('#BudgetlistP').P2BLookUpEncapsulate('#BudgetlistP', 'BudgetlistP', k.BudgetDetails_Id, k.BudgetDetails_val, 'BudgetlistP', '', 'N');
                });
                // }, 3000);
            });
            event.preventDefault();
        });

        $('#Remove-ProgramListlistS-YearlyProgramAssignment').button().on('click', function (event) {
            //  dt = $('#JqGrid').P2BGrid.P2BEdDelV('#JqGrid', 'ID');
            var a = [], b;
            a = $('#ProgramListlistS1').P2BGetTableDataonSelectedRow('#ProgramListlistS1', 0);
            b = a[0];
            $('<div></div>').P2BPartialDeleteModalDialog('', b, 0, 'Are you sure want to delete record???', 'Message : ', 'Request failed', '#ProgramListlistS1', $('#ProgramListlistS1').val(), 200, 200, '#frmYearlyProgramAssignmentp', '#ProgramListlistS1');
            event.preventDefault();
        });
    });
    </script>