@{
    ViewBag.Title = "Training Presenty";
}
@model Training.TrainingDetails

<link href="~/Content/Unit/Unit.css" rel="stylesheet" />

<style>
    #Lookup_BatchName {
        left: 293px;
        top: 20px;
    }

    #Lookup_BatchNameP {
        left: 280px;
        top: 8px;
    }

    .icon-row {
        position: relative;
        left: 60px;
        top: -150px;
    }

    .emplist_row {
        width: 400px;
        padding: 2px;
    }

    .emplist_label {
        display: block;
        float: left;
        width: 146px;
    }

    .transactiondiv {
        border: 1px solid #c5c5c5;
        margin: 0 auto;
        width: 192px;
        border-radius: 5px;
        height: 300px;
    }

    .disabled {
        pointer-events: none;
        /*optional opacity: 0.4;*/
    }

    .popup-content-icon-lookup {
        height: 20px;
        left: 400px;
        margin: auto;
        position: absolute;
        width: 20px;
    }


    .namepush {
        margin-right: 2px;
    }

    .radiopush {
        margin-right: 94px;
    }

    .lblwidth {
        width: 100px;
    }

    .Clblwidth {
        width: 97px;
    }

    .radiowidth {
        width: 94px;
    }

    .Cnamepush {
        margin-right: 127px;
    }

    #LvHeadOprationTypelist {
        width: 158px;
        margin-left: -37px;
    }

    .employeeselectiondiv {
        float: left;
    }

    .addons {
        height: 246px;
    }

    .section_Method {
        border: 1px solid rgba(207, 207, 207, 0.91);
        border-radius: 10px;
        margin-top: 20px;
        margin-bottom: 15px;
    }

    .transactiontablenew {
        border: 1px solid #c5c5c5;
        margin: 0 auto;
        /*width: 200px;*/
        display: block;
        overflow: auto;
        height: 500px;
        border-collapse: collapse;
    }

    .transactiondivnew {
        border: 1px solid #c5c5c5;
        margin: 0 auto;
        width: 507px;
        border-radius: 5px;
        height: 32px;
    }

        .transactiondivnew > div {
            display: inline-block;
            margin: 0 auto;
            padding: 4px;
        }

            .transactiondivnew > div > input {
                box-sizing: initial;
                display: inline-block;
                margin: 0 auto;
                width: 108px;
            }

    .transactiontablenew th, .transactiontablenew td {
        background: rgba(246, 246, 246, 0.64) none repeat scroll 0 0;
        padding: 5px;
        border-bottom: 1px solid #c5c5c5;
        border-right: 1px solid #c5c5c5;
        text-align: center;
        color: rgba(114, 113, 113, 0.9);
    }

        .transactiontablenew th:nth-child(1) > input, .transactiontablenew td:nth-child(1) > input {
            margin: 0 auto;
        }

        .transactiontablenew th:nth-child(2), .transactiontablenew td:nth-child(2) {
            height: 100%;
            width: 100%;
        }

    .transactiontablenew tr:hover {
        cursor: pointer;
        background: #EEEEEE none repeat scroll 0 0;
    }


    .section_Method1 {
        border: 1px solid rgba(207, 207, 207, 0.91);
        border-radius: 10px;
        margin-top: 20px;
        margin-bottom: 15px;
        margin-left: 525px;
    }

    .popup-content-icon-lookup1 {
        height: 20px;
        left: 283px;
        margin: auto;
        position: absolute;
        width: 20px;
    }
</style>

<script>
    var firstClick = true;
    $(document).ready(function (e) {
        $('button').button();
        $('.popup_radio_button').controlgroup();

        var btndisablenames = "#Edit-empdetails,#Remove-empdetails";

        var ColNames = [];
        var ColModel = [];
        var SortName, Caption, url, width, height, dt;
        ColModel = ['Id', 'Category', 'SubCategory', 'ProgramList', 'Budget Amt', 'PaybleDays', 'LWPDays', 'PayProcessGroup_Id'];
        ColNames = ['Id', 'Category', 'SubCategory', 'ProgramList', 'Budget Amt', 'PaybleDays', 'LWPDays', 'PayProcessGroup_Id'];

        ColDisplayNames = ['Id', 'EmpCode', 'EmpName', 'StartDate', 'EndDate', 'ProgramList', 'Present', 'Cancelled', 'CancelReason'];
        ColDisplayModel = ['Id', 'EmpCode', 'EmpName', 'StartDate', 'EndDate', 'ProgramList', 'Present', 'Cancelled', 'CancelReason'];
        url = '@Url.Action("P2BInlineGrid")';
        width = 1000;
        height = 150;
        Caption_one = "Training Allocation",
        Caption_second = "Employee List",
        urlD = '@Url.Action("LoadEmp")';
        widthD = 800;
        heightD = 200;
        // jQuery("#JqGrid").jqGrid('hideCol', ["PayScaleAgreement"]);
        //$("#JqGrid").jqGrid('hideCol', ["PayScaleAgreement"]);
        var urlfilter = "@Url.Action("Emp_Grid", "TrainingPresenty")?y=" + $('#BatchName_id').val();
        $('.cancel').fadeOut();

        $('#Create').on('click', function (e) {
            // $('#JqGridNew').PostGridData({ url: urlD, filter: $('#TextPayMonth').val() });
        });

        $('#formfilter').on('click', function () {
            $("<div></div>").FilterDialog({
                width: 1000,
                height: 400,
                title: "Filter",
                htmlurl: "@Url.Action("Advance_partial", "Transcation")",
                returnat: function (data) {
                    console.log(data);
                    var forwarddata = JSON.stringify(data);
                    $('#Employee-Table').P2BTransactionTableDynamic('#Employee-Search', '#Case-Employee', './Transcation/Get_Employelist_h?geo_id=' + forwarddata + '', "");
                }, hierarchy: true,
                renderat: "#FormFilter",
            });
        });

        //var inline_ColNames = [];
        //var inline_ColModel = [];
        //var inline_SortName, inline_Caption, inline_url, inline_width, inline_height;
        //inline_ColModel = ['Id', 'EmpCode', 'EmpName', 'StartDate', 'EndDate', 'ProgramList', 'Present', 'Cancelled', 'CancelReason', 'Editable'];
        //inline_ColNames = ['Id', 'EmpCode', 'EmpName', 'StartDate', 'EndDate', 'ProgramList', 'Present', 'Cancelled', 'CancelReason', 'Editable'];
        //inline_SortName = 'Id';
        //inline_Caption = 'Training Presenty';
        //inline_url = 0;
        //inline_width = 1200;
        //inline_height = 150;

        //$('#JqGrid').InlineEditGrid({
        //    ColNames: inline_ColNames,
        //    ColModel: inline_ColModel,
        //    SortName: inline_SortName,
        //    Caption: inline_Caption,
        //    url: inline_url,
        //    tablename: '#JqGrid',
        //    eddelurl: '',
        //    width: inline_width,
        //    height: inline_height,
        //    CheckCol: "Editable",
        //    EditableCol: ["CancelReason"],
        //    LocalStorageId: "EditClickSalAttendanceT",
        //    onEditClick: true,
        //});
        //$("#JqGrid").jqGrid('hideCol', "PayProcessGroup_Id").trigger('reloadGrid');

        $.LocalStorageHelper("LoanAdvRequest_LoadEmp", "");

        $('#MyTable').MultiLevelInlineEditGrid({
            url: urlfilter,
            htmurl: "@Url.Action("partial", "TrainingPresenty")",
            columnname: ['EmpCode', 'EmpName', 'Id' ],
            childheader: ['BatchName', 'FullDetails', 'ProgramList', 'IsCancel', 'CancelReason', 'IsPresent', 'Id' ],
            childurl: "@Url.Action("Get_Session", "TrainingPresenty")",
            tableheader: "Training Presenty",
            childurlColumnNo: "3"

        });



        $('#Load').on('click', function (e) {
            //var v2 = $("#Batch_Name12").val();
            var v1 = $("#BatchName_id").val();
            if (v1 == "") {
                $('<div></div>').P2BMessageModalDialog('ui-icon-alert', "Please Select Batch!");
                return false;
            }
            $('#MyTable').DataTable().ajax.url('./TrainingPresenty/Emp_Grid?y=' + $('#BatchName_id').val()).load();

        });


        $('#Get-edited-data').on('click', function (e) {
            if (modified_data.data.length > 0) {
                console.log(modified_data.data);
            }
            e.preventDefault();
        });

        //$('#Load').on('click', function (e) {

        //    var v1 = $("#txtPBatchName").val();

        //    $('#JqGrid').PostGridData({ url: url, filter: v1 });
        //});


        @*$('#save').on("click", function (e) {
            var dedtextbox = $('.dedamt').toArray();
            var JsonObj = [];
            $.each(dedtextbox, function (i, j) {
                var k = $(j);
                if (k.attr("data-val") != k.val()) {
                    var putJson = { Id: null, val: null, SalId: null };
                    putJson.Id = k.attr("name");
                    putJson.val = k.val();
                    putJson.SalId = $('#SalaryID').val();
                    JsonObj.push(putJson);
                    console.log("----------------");
                    console.log(putJson);
                    console.log("----------------");
                }
            });
            var stringify_JsonObj = JSON.stringify(JsonObj);
            console.log(stringify_JsonObj);

            $.ajax({
                type: "POST",
                url: '@Url.Action("editdata", "SalaryT")',
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                dataType: 'json',
                data: stringify_JsonObj,
                success: function (data) {
                    if (data.success == true) {
                        $("#empnet").val(data.grossearn);
                        $("#empgross").val(data.totearn);
                        $("#empded").val(data.totded);
                        alert(data.responseText);
                    } else {
                        alert(data.responseText);
                    }
                }, error: function () {

                }
            });
            e.preventDefault();
        });*@

        $('#TextPayMonth').MonthYearPicker();
        $('#Create_PayableDays').val(0).ForceAmount().MaxLength(8);
        if ($("#TextPayMonth").val() == "") {
            var dt = new Date();
            var month = dt.getMonth() + 1;
            month = month < 10 ? '0' + month : '' + month;
            $("#TextPayMonth").val(month + "/" + dt.getFullYear());
        }



        //   $("#JqGrid").jqGrid('hideCol', "Editable").trigger('reloadGrid');
        function AssignData() {
            dt = $('#JqGrid').P2BGrid.P2BEdDelV('#JqGrid', 'Id');
            $.get("@Url.Action("GetPayprocessgroup")", { data: dt.PayProcessGroup_Id }, function (data) {
                $('#payprocessgroup_id').val(data.Id);
                $('#payprocessgroup').val(data.FullDetails).attr("readonly", "readonly");
            });
            $('#PayMonth').val(dt.PayMonth);
            $('#Edit_PaybleDays').val(dt.PaybleDays);
            $('#LWPDays').val(dt.LWPDays);
        };

        //function DateConvert(JsonDate) {
            //    var date = new Date(parseInt(JsonDate.substr(6)));
            //    var displayDate = $.datepicker.formatDate("dd/mm/yy", date);
            //    return displayDate;
        //};

        $('#Advance-Filter-Symbol').on('click', function () {
            var v11 = $("#Batch_Name").val();

            $("<div></div>").FilterDialog({
                width: 1000,
                height: 400,
                title: "Filter",
                htmlurl: "@Url.Action("Advance_partial", "Transcation")",
                returnat: function (data) {

                    console.log("-----------------------------------");
                    console.log(data);
                    console.log("-----------------------------------");

                    if (data.GeoStruct != null) {
                        $('#geo_id').val(data.GeoStruct);
                    }
                    if (data.PayStruct != null) {
                        $('#pay_id').val(data.PayStruct);
                    }
                    if (data.FunStruct != null) {
                        $('#fun_id').val(data.FunStruct);
                    }
                    var forwarddata = JSON.stringify(data);
                    $('#Employee-Table').P2BTransactionTableDynamic('#Employee-Search', '#Case-Employee', './TrainingPresenty/LaodEmp?databatch=' + v11 + '&geo_id=' + forwarddata + '', "");
                },
                renderat: "#FormFilter",
                hierarchy: true,
            });
        });

        $('input[name="IsCancelled"]:radio').change(function () {
            if (this.value == "false") {

                $('#cancel').fadeOut();
            }
            else {

                $('#cancel').fadeIn();
            }
        });

        $('#Create_Dialog').P2BCreateDialog();
        $('#Create').on("click", function (event) {
            $('#FormPaySlipR').trigger("reset");
            $('#FormEditInlineGrid').trigger("reset");

            $('#employee_table>tbody>tr:gt(0)').remove();

            if (!$("#txtPBatchName").val()) {

                alert("Please Select Batch Name.")
                return false;
            }

            $('#Create_Dialog').P2BCreateDialog('', '', '', '', 'Create Training Presenty', 'open', '@Url.Action("Create")', '#FormPaySlipR', 'Message :', 'Request Falied :', '#JqGrid', 700, 920, '#SessionListSch', '', function (data) { });
            $('.ui-dialog-buttonpane').find('button:contains("Submit")').button('disable');



            event.preventDefault();
        });

        $("#Loading").button().on('click', function () {
            var v1 = $("#BatchNameP_id").val();

            //var a = [], b;
            //a = $('#SessionListSch').P2BGetTableDataonSelectedRow('#SessionListSch', 0);
            //alert(a);
            //b = a[0];
            //var v2 = $('#SessionListSch').P2BGetTableDataonSelectedRow('#SessionListSch', 0);
            //alert(b);
            var v2 = [];
            if ($("#SessionListSch tr input").length > 0) {
                $("#SessionListSch tr input").each(function () {
                    v2.push($(this).val());
                });
            } else {
                alert("Please select training session");
                return false;
            }

            if (v1 == "" || v1 == undefined && v2 == "" || v2 == undefined) {
                $('<div></div>').P2BMessageModalDialog('ui-icon-alert', "Kindly Select Batch Name!");
                return false;
            }
            else {
                $('#Employee-Table').P2BTransactionTableDynamic('#Employee-Search', '#Case-Employee', './TrainingPresenty/Get_Employelist?databatch=' + v1 + '&Session=' + v2 + '&geo_id=', "");
            }
        });

        // Main page edit
        $('#Edit_model_dialog').P2BGridDialog();
        $.LocalStorageHelper("EditClickSalAttendanceT", false);
        $('#cancle,#Save').hide();
        $('#Edit').makeDisable1('#Load,#Create,#Delete');
        //  $.LocalStorageHelper("EditClickSalAttendance", "0");
        $('#Edit').on('click', function (e) {
            $("#PayMonthEdit").val($('#TextPayMonth').val());
            var aa = $('#JqGrid').jqGrid('getGridParam', 'selrow');
            dt = $('#JqGrid').P2BGrid.P2BEdDelV('#JqGrid', 'ID');
            if (aa != null) {
                $('#Edit').ProcessConfirmation1({
                    confirmurl: "@Url.Action("ChkProcess")",
                    month: "#TextPayMonth",
                    EmpCode: dt.EmpCode,
                    msg: "Are you sure Want to edit..?Please Confirm..!",
                    status: function (data) {
                        if (data == true) {

                            if (aa != null) {
                                $('#Load,#Create,#Delete,#Edit').button("disable").css("background-color", "rgba(241, 241, 241, 0.66)");
                                $('#cancle,#Save').fadeIn();
                                $.LocalStorageHelper("EditClickSalAttendanceT", true);
                            }
                            //else {
                            //    alert('Please Select Row..!');
                            //}
                            $('#PayMonth').val($('#TextPayMonth').val());
                        }
                        else {
                            $('#cancle,#Save').fadeOut();
                            $('#Load,#Create,#Delete,#Edit').button("enable").css("background-color", "");
                        }
                    }
                });
            }
            else {
                $('#cancle,#Save').fadeOut();
                $('#Load,#Create,#Delete,#Edit').button("enable").css("background-color", "");
                // alert('Please Select Row..!');
            }
        });
        @*$(document).on('click', '#Save', function (e) {
            var a = $('#JqGrid').InlineGridEdittedData.GetData();
            if (a != null) {
                var b = JSON.stringify(a);
                $.post({
                    url: '@Url.Action("EditSave", "TrainingPresenty")',
                    data: { PayMonth: $("#txtPBatchName").val(), forwarddata: b },
                    success: function (data) {
                        if (data != null) {
                            alert(data[2]);
                            $('#JqGrid').InlineGridEdittedData.Empty();
                            $('#JqGrid').trigger('reloadGrid');
                            $.LocalStorageHelper("EditClickSalAttendanceT", false);
                        }
                    }
                });
            } else {
                $('#JqGrid').trigger('reloadGrid');
                $.LocalStorageHelper("EditClickSalAttendanceT", false);
            }
            //$(this).text("Edit");
            $('#cancle,#Save').fadeOut();
            $('#Load,#Create,#Delete,#Edit').button("enable").css("background-color", "");
        });*@



        //$('#cancle').hide();
        $('#cancle').on('click', function (e) {
            location.reload();
        });
        $('#Delete').button().click(function (event) {
            dt = $('#JqGrid').P2BGrid.P2BEdDelV('#JqGrid', 'Id');
            $('#list-employee').P2BDeleteModalDialog('@Url.Action("Delete")', dt.Id, 'Are you sure want to remove record???', 'Message : ', 'Request failed', '#JqGrid', 200, 200);
            event.preventDefault();
        });

        $('#View').on('click', function (e) {
            AssignData();

            $('#Edit_model_dialog').P2BGridDialog({
                maindialogtitle: "Edit attendance entry ",
                submiturl: "@Url.Action("process")",
                form: "#FormEditInlineGrid",
                height: 400,
                width: 900,
                gridname: "#JqGrid",
                state: "open",
                editurl: "@Url.Action("P2BInlineGrid")",
                editdata: dt.Id,
                returnToGrid: "#inline_JqGrid",
            });

        });

        $('.drop').selectmenu().selectmenu("menuWidget");
        if ($("#TextPayMonth").val() == "") {
            var dt = new Date();

            var month = dt.getMonth() + 1;

            month = month < 10 ? '0' + month : '' + month;
            $("#TextPayMonth").val(month + "/" + dt.getFullYear());

        }


        var monthyear1 = $('#Create_Paymonth').MonthYearPicker();
        $("#Create_Paymonth").on("change", function () {
            var monthyear = $("#Create_Paymonth").val();
            $.ajax(
                {
                    type: "Post",
                    data: { 'monthyear': monthyear },

                    url: "@Url.Action("getdays", "SalAttendanceT")",
                    success: function (data) {

                        $("#Create_PayableDays").val(data)
                    }
                });
        });
        $('#Lookup_BatchName').on('click', function () {
            $('.dialog').AddDataToTextbox({
                appendTo: "#txtPBatchName",
                appendToId: "#BatchName_id",
                lookupurl: "@Url.Action("GetBatchNameDetails", "TrainingPresenty")",
                NoOfRecordToShow: 10,
                setnameofthelookupbyppage: "HusbandName_FName-lookup",
                LookupDiv: "LookupDiv",
                lookuppagename: "lookup",
                pagename: "PageNavPosition",
                readonly: true,
            });
        });
        $('#Edit_model_dialog').P2BGridDialog();

        $('#Lookup_BatchNameP').on('click', function () {
            $('.dialog').AddDataToTextbox({
                appendTo: "#txtBatchNameP",
                appendToId: "#BatchNameP_id",
                lookupurl: "@Url.Action("GetBatchNameDetails1", "TrainingPresenty")",
                NoOfRecordToShow: 10,
                setnameofthelookupbyppage: "txtBatchNameP",
                LookupDiv: "LookupDiv",
                lookuppagename: "lookup",
                pagename: "PageNavPosition",
                readonly: true,
            });
        });
        $('#Edit_model_dialog').P2BGridDialog();

        $('#Lookup_FinancialYear').on('click', function (event) {
            $('.dialog').P2BLookUpModal('@Url.Action("GetCalendarDetails", "Budget")', '', 'LookupDiv', ' Look Up Data', '#FinancialYearList', 'FinancialYearList', 5, 'FinancialYearList', '#FormEditInlineGrid', 'N', '#Remove_FinancialYear', 'Lookup_table', 'PageNavPosition');
            event.preventDefault();
        });

        $('#LookUp_Session_TrnPresenty').button().on('click', function (event) {
            var forwarddata = $('#BatchNameP_id').val();
            if (forwarddata == "") {
                $('<div></div>').P2BMessageModalDialog('ui-icon-alert', "Kindly Select Batch Name!");
                return false;
            }
            $('.dialog').P2BLookUpModal('@Url.Action("GetLookupDetailsSessionInfo", "TrainingPresenty")?ts=' + forwarddata, '', 'LookupDiv', 'Look Up Data', '#SessionListSch', 'SessionListSch', 5, 'SessionListSch', '#FormPaySlipR', 'N', '#Edit_Session_TrnPresenty,#Remove_Session_TrnPresenty', 'Lookup_table', 'PageNavPosition');

            event.preventDefault();
        });

        $('#Remove_Session_TrnPresenty').button().on('click', function (event) {
            // dt = $('#JqGrid').P2BGrid.P2BEdDelV('#JqGrid', 'Id');
            //var a = [], b;
            //a = $('#SessionListSch').P2BGetTableDataonSelectedRow('#SessionListSch', 0);
            //b = a[0];

            var selectedRows = [];
            selectedRows = $('#SessionListSch').P2BGetTableDataonSelectedRow('#SessionListSch', 0);
            console.log("Verify...");
            $('<div></div>').P2BPartialDeleteModalDialog('', selectedRows, 0, 'Are you sure want to delete record???', 'Message : ', 'Request failed', '#SessionListSch', $('#SessionListSch').val(), 200, 200, '#FormPaySlipR', '#SessionListSch', '#Edit_Session_TrnPresenty,#Remove_Session_TrnPresenty');
            event.preventDefault();
        });

        $('#Lookup_BatchNameP').on('click', function () {

            $("#SessionListSch tr:gt(0)").remove();

        });

        $('#Create-load').on('click', function (e) {
            if (!firstClick) {
                $("#JqGridNew11").jqGrid('setGridParam', {
                    url: "@Url.Action("LoadEmp", "SalAttendanceT")?param=" + $("#Create_Paymonth").val() + "",
                    datatype: "json"
                }).trigger("reloadGrid");
            }

            firstClick = false;
            console.log($("#Create_Paymonth").val());
            $('#JqGridNew11').P2BGrid(ColDisplayNames, ColDisplayModel, SortName, Caption_second, "@Url.Action("LoadEmp", "SalAttendanceT")?param=" + $("#Create_Paymonth").val() + "", widthD, heightD, '#pager22', { multiple: true, rowNum: 30, selectall: true });

            // $('#JqGridNew11').PostGridData({ url: '@Url.Action("LoadEmp")', filter: $('#Create_Paymonth').val() });
            e.preventDefault();

        });
    });


    $(document).on('click', '#save', function (e) {
        $.post({
            url: '@Url.Action("Create", "TrainingPresenty")',
            data: $('#FormPaySlipR').serialize(),
            method: "POST",
            //data: forms + "&forwarddata=" + b,
            success: function (data) {
                if (data.success == true) {
                    alert(data.responseText[0]);
                    var v1 = $("#BatchNameP_id").val();

                    //var a = [], b;
                    //a = $('#SessionListSch').P2BGetTableDataonSelectedRow('#SessionListSch', 0);
                    //alert(a);
                    //b = a[0];
                    //var v2 = $('#SessionListSch').P2BGetTableDataonSelectedRow('#SessionListSch', 0);
                    //alert(b);
                    var v2 = [];
                    if ($("#SessionListSch tr input").length > 0) {
                        $("#SessionListSch tr input").each(function () {
                            v2.push($(this).val());
                        });
                    }
                    $('#Employee-Table').P2BTransactionTableDynamic('#Employee-Search', '#Case-Employee', './TrainingPresenty/Get_Employelist?databatch=' + v1 + '&Session=' + v2 + '&geo_id=', "");

                }
                console.log(data);
            }
        });
    });
    $('<div></div>').P2BPartialCreateModalDialog();

    $.DataTableChildManipulation = function (init, id, parentid, htmurl, editurl, submiturl) {
        var parent_element = $(init).parents('td:last').parent().prev();
        console.log(id);
        console.log(htmurl);
        console.log(parent_element);
        var dt = $('#MyTable').DataTable();
        var htmlcomponant = {
            init: init,
            Id: id,
            idx: parentid,
            htmurl: htmurl,
            editurl: editurl,
            submiturl: submiturl,
        };
        if ($(init).hasClass('ui-icon-newwin')) {

            $('<div></div>').PartialCreateDialog({
                height: 500,
                width: 600,
                form: "#FormTrainigDetailSessionInfo",
                htmlurl: "@Url.Action("GridPartial", "TrainingPresenty")",
                state: "open",
                mode: "View",
                editurl: "@Url.Action("GridEditData", "TrainingPresenty")",
                submiturl: submiturl,
                editdata: id,
                forwarddata: id,
                returndatafunction: function (data) {
                    $.each(data[0], function (i, k) {
                        $('[name="IsPresent1"]').val([k.IsPresent]).button().button("refresh");
                        $('[name="IsCancelled1"]').val([k.IsCancelled]).button().button("refresh");
                        $('#CancelReason1').val(k.CancelReason);
                        if (k.IsCancelled == false) {

                            $('#cancel').fadeOut();
                        }
                    });


                }
            });
        } else if ($(init).hasClass('ui-icon-pencil')) {
            
            $('<div></div>').PartialCreateDialog({
                height: 300,
                width: 400,
                form: "#FormTrainigDetailSessionInfo",
                htmlurl: "@Url.Action("GridPartial", "TrainingPresenty")",
                state: "open",
                mode: "Edit",
                editurl: "@Url.Action("GridEditData", "TrainingPresenty")?batch=" + $('#BatchName_id').val(),
                submiturl: "@Url.Action("GridEditSave", "TrainingPresenty")",
                editdata: id,
                forwarddata: id,
                returndatafunction: function (data) {


                    $.each(data[0], function (i, k) {
                        $('[name="IsPresent1"]').val([k.IsPresent]).button().button("refresh");
                        $('[name="IsCancelled1"]').val([k.IsCancelled]).button().button("refresh");
                        $('#CancelReason1').val(k.CancelReason);
                        $('#batchname').val(k.Batchname);
                        if (k.IsCancelled == false) {

                            $('#cancel').fadeOut();
                        }

                    });

                },
                submitfun: function (data) {
                    var row = dt.row(parent_element);
                    if (row.child.isShown()) {
                        parent_element.removeClass('details');
                        row.child.hide();
                    }
                }

            });
        } else if ($(init).hasClass('ui-icon-trash')) {
            return false;
            $('<div></div>').PartialCreateDialog({
                state: "open",
                mode: "Delete",
                submiturl: "@Url.Action("GridDelete", "TrainingPresenty")",
                forwarddata: id,
                submitfun: function (data) {
                    var row = dt.row(parent_element);
                    if (row.child.isShown()) {
                        parent_element.removeClass('details');
                        row.child.hide();
                    }
                }
            });
        }
    };

</script>

<div class="Form_Bg">
    <div class="Form_Input">
        <div class="Button_Container">

            <div style="float:left;width:290px">
                <label id="lblBatchName" class="popup-content-label must">Batch Name:</label>
                <input name="txtPBatchName" type="text" id="txtPBatchName" class="date-picker" />
                <input type="text" id="BatchName_id" name="BatchName_id" class="filter_structure_id must" />

                <button data-p2btooltip="Lookup FinancialYear Details" class="button popup-content-icon-lookup" id="Lookup_BatchName"><span class="ui-icon ui-icon-folder-open popup-content-iconmark"></span></button>

            </div>
            <span>
                <button class="button" id="Load">Load</button>
                <button class="button" id="Create">Create</button>
                @*<button class="button" id="Edit">Edit</button>*@
                @*<button class="button" id="Save">Save</button>
                    <button class="button" id="cancle">Cancel</button>*@
                @*<button class="button" id="Delete">Delete</button>*@
            </span>
            @*<div id="Grid_Form">
                    <div>

                        <table id="JqGrid"></table>
                        <div id="JqGrid_pager"></div>
                    </div>
                </div>*@

        </div>
    </div>
</div>

<div id="Grid_Form">
    <div>
        <div id="Container" class="container">
            <div id="Demo">
                <table id="MyTable" class="display" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            <th>DD</th>
                            <th>Code</th>
                            <th>Name</th>
                            <th>ID</th>
                        </tr>
                    </thead>
                    <tfoot>
                        <tr>
                            <th>DD</th>
                            <th>Code</th>
                            <th>Name</th>
                            <th>ID</th>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>
    </div>
</div>

<div class="dialog">
    <div title="LookUp Data">
        <div class="LookupDiv" id="lookup"></div>
    </div>
    <div id="PageNavPosition">

    </div>
</div>

<div id="Create_Dialog" title="Create Training Assignment">

    @using (Html.BeginForm(null, null, FormMethod.Post, new { Id = "FormPaySlipR", name = "FormPaySlipR" }))
    {
        <input id="Autho_Action" type="hidden" name="Autho_Action" />
        <input id="Autho_Allow" type="hidden" name="Autho_Allow" />
        <input id="geo_id" class="filter_structure_id" name="geo_id" />
        <input id="pay_id" class="filter_structure_id" name="pay_id" />
        <input id="fun_id" class="filter_structure_id" name="fun_id" />


        <div class="row3 content_margine">
            <div>
                @*@Html.LabelFor(m => m.BatchName, "BatchName:", new { @class = "popup-content-label must" })
                    @Html.TextBoxFor(m => m.BatchName, new { @class = "popup-content-textbox  must" })*@


                <label id="lblBatchNameP" class="popup-content-label must">Batch Name:</label>
                <input name="txtBatchNameP" type="text" id="txtBatchNameP" class="date-picker" />
                <input type="text" id="BatchNameP_id" name="BatchNameP_id" class="filter_structure_id must" />

                <button data-p2btooltip="Lookup Batch Name" class="button popup-content-icon-lookup" id="Lookup_BatchNameP"><span class="ui-icon ui-icon-folder-open popup-content-iconmark"></span></button>



            </div>

        </div>

        <div class="row1 content_margine">
            <div id="SessionList_old"></div>
            <label class="popup-content-label">TrainingSession :</label>
            <div class="popup-content-table">
                <table class="lookuptableselected" id="SessionListSch">
                    <tr><th>ID</th><th>LookUp Selected Description</th></tr>
                </table>
            </div>
            <div class="icon-row">

                <button data-p2btooltip="LookUp Session" class="popup-content-icon-lookup" id="LookUp_Session_TrnPresenty" style="left:346px"><span class="ui-icon ui-icon-folder-open popup-content-iconmark"></span></button>
                @*<button data-p2btooltip="Create Session" class="popup-content-icon-create" id="Create_Session_TrnSchedule"><span class="ui-icon ui-icon-newwin popup-content-iconmark"></span></button>
                    <button data-p2btooltip="Edit Sessions" class="popup-content-icon-edit" id="Edit_Session_TrnSchedule"><span class="ui-icon ui-icon-pencil popup-content-iconmark"></span></button>*@
                <button data-p2btooltip="Remove Session" class="popup-content-icon-remove" id="Remove_Session_TrnPresenty"><span class="ui-icon ui-icon-trash popup-content-iconmark"></span></button>
            </div>
        </div>


        <input type="button" name="Loading" value="Load" id="Loading">
        <div class="section_Method">
            <div class="heading">Filter View</div>
            <div class="filter-div">
                <label class="advance_filter_label">Advance Filter<span class="advance_filter_sysmbol_class_plus" id="Advance-Filter-Symbol"></span></label>
                <div id="FormFilter"></div>
            </div>
        </div>
        <div class="section_Method">
            <div class="heading">Employee List</div>
            <div class="employeeselectiondiv">
                <div class="transactiondivnew dynamic addons" style="float:left">
                    <div><label>Search : </label><input type="text" id="Employee-Search" style="width: 425px;" /></div>
                    <table cellspacing="0" cellpadding="1" class="transactiontablenew" id="Employee-Table">
                        <tr><th><input type="checkbox" id="Case-Employee" /></th><th>Employee</th></tr>
                    </table>
                    @*<span class="btn-span1" aria-hidden="true">
                            <button id="load_emp" class="loan-btn">Load Employee</button>
                        </span>*@
                </div>
                <input name="geo_id" type="text" id="geo_id" class="struct_input_val" style="display:none" />
                <input name="pay_id" type="text" id="pay_id" class="struct_input_val" style="display:none" />
                <input name="fun_id" type="text" id="fun_id" class="struct_input_val" style="display:none" />
            </div>
        </div>

        <div class="section_Method1">
            <div class="row3 content_margine">
                @*<div>
                    @Html.LabelFor(m => m.IsBatchClose, "IsBatchClose:", new { @class = "popup-content-label" })
                    <span class="popup_radio_button radiopush">
                        <span><input type="radio" id="radio3" name="IsBatchClose" value="true" /> <label for="radio3">Yes</label></span>
                        <span><input type="radio" id="radio4" name="IsBatchClose" value="false" checked="checked" /> <label for="radio4">No</label></span>
                    </span>
                      </div>*@
                <br>
                <div>
                    @*@Html.LabelFor(m => m.IsCancelled, "IsCancelled:", new { @class = "popup-content-label" })*@
                    <label class="popup-content-label must">IsCancelled:</label>
                    <span class="popup_radio_button radiopush">
                        <input type="radio" id="radio1" name="IsCancelled" value="true" /> <label for="radio1">Yes</label>
                        <input type="radio" id="radio2" name="IsCancelled" value="false" checked="checked" /> <label for="radio2">No</label>
                    </span>
                </div><br>

                <div class="row3 content_margine cancel" id="cancel">
                    <div>
                        @*@Html.LabelFor(m => m.CancelReason, "Cancel Reason:", new { @class = "popup-content-label " })*@
                        <label class="popup-content-label must">Cancel Reason:</label>
                        @Html.TextBoxFor(m => m.TrainingSchedule.CancelReason, new { @class = "popup-content-textbox " })
                    </div>

                </div>
                <br>


                <div>
                    @*@Html.LabelFor(m => m.TrainingSchedule., "IsPresent:", new { @class = "popup-content-label" })*@
                    <label class="popup-content-label must">IsPresent:</label>
                    <span class="popup_radio_button radiopush">
                        <input type="radio" id="radio5" name="IsPresent" value="true" /> <label for="radio5">Yes</label>
                        <input type="radio" id="radio6" name="IsPresent" value="false" checked="checked" /> <label for="radio6">No</label>
                    </span>
                </div><br>
                <button style="float:right" id="save">Save</button>

            </div>
        </div>
    }
</div>



<div id="Edit_model_dialog">
    @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "FormEditInlineGrid", name = "FormEditInlineGrid" }))
    {
        <input name="PayMonthEdit" type="text" id="PayMonthEdit" class="date-picker" />
        <div class="emplist_row">

            <label for="payprocessgroup_drop" class="emplist_label">Pay Process Group :</label>
            <input type="text" style="display:none" id="payprocessgroup_id" name="payprocessgroup_id" />
            <input type="text" id="payprocessgroup" name="payprocessgroup" />
        </div>

        @*<div class="emplist_row">
                <div class="emplist_row">
                    <label id="lblpaymonth" class="emplist_label">Pay Month :</label>
                    <input type="text" id="PayMonth" name="PayMonth" class="popup-content-textbox-rowfirst must" />
                </div>
            </div>*@
        <div class="section2_Leave">
            <div class="heading">Training Year Selection</div>
            <div class="row3 content_margine">

                <div id="FinancialYearList_old"></div>
                @*@Html.LabelFor(m => m., "Financial year:", new { @class = "popup-content-label" })*@
                <label id="lblcreatepaymonth" class="popup-content-label must">Financial year :</label>
                <input type="text" hidden id="dispcalender_id" name="FinancialYearList" />
                <input type="text" readonly id="dispcalender" name="" style="width:270px" />

            </div>
            <br />

        </div>
        <div>
            <table id="inline_JqGrid"></table>
            <div id="inline_pager"></div>
        </div>
    }
</div>
