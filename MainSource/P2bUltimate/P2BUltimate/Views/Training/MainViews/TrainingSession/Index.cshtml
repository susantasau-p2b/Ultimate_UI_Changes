@{
    ViewBag.Title = "Training Session";
}

@model Training.TrainingSession

<html>

<head>
    <title></title>
    <style>
        .icon-row {
            position: relative;
            left: 104px;
            top: -150px;
        }

        .popup-content-label {
            display: block;
            float: left;
            width: 145px;
        }

        .popup-content-textboxs {
            margin-bottom: 1px;
            min-width: 150px;
        }

        .rows3 {
            width: 1055px;
        }


        .popup-content-textboxs-long {
            margin-bottom: 1px;
            width: 290px;
        }
    </style>
</head>

<body>
    <div class="Form_Bg">
        <div class="Form_Input">
            <div class="Button_Container">
                <button class="button" id="Create">Create</button>
                <button class="button" id="View">View</button>
                <button class="button" id="Edit">Edit</button>
                <button class="button" id="Delete">Delete</button>
                <button class="button" id="Autho">Authorised</button>
                <div id="Grid_Form">
                    <div>
                        <table id="JqGrid"></table>
                        <div id="pager2"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="dialog">
        <div title="LookUp Data">
            <div class="LookupDiv"></div>
        </div>
        <div id="PageNavPosition">

        </div>
    </div>

    <div id="Create_Dialog" title="Create Corpoarte" style="width: 557px; height: 385px;">

        @using (Html.BeginForm(null, null, FormMethod.Post, new { Id = "frmTrainingSession", name = "frmTrainingSession" }))
        {
            <input id="Autho_Action" type="hidden" name="Autho_Action" />
            <input id="Autho_Allow" type="hidden" name="Autho_Allow" />

             <div class="rows3 content_margine">
                <div id="AddressList_Old"></div>
                @Html.LabelFor(m => m.TrainingProgramCalendar, "TrainingProgCalendar :", new { @class = "popup-content-label" })
                <div class="popup-content-table">
                    <table class="lookuptableselected" id="TrainingProgramCalendar_List">

                        <tr><th>Id</th><th>LookUp Selected Description</th></tr>
                    </table>
                </div>
                <div class="icon-row">
                    <button data-p2btooltip="Lookup TrainingProgramCalendar" class="  popup-content-icon-lookup" id="Lookup-TrainingProgramCalendar-TrainingSession"><span class="ui-icon ui-icon-folder-open popup-content-iconmark"></span></button>
                    @*<button data-p2btooltip="Create TrainingProgramCalendar" class="popup-content-icon-create" id="Create-TrainingProgramCalendar-TrainingSession"><span class="ui-icon ui-icon-newwin popup-content-iconmark"></span></button>
                    <button data-p2btooltip="Edit TrainingProgramCalendar" class="popup-content-icon-edit" id="Edit-TrainingProgramCalendar-TrainingSession"><span class="ui-icon ui-icon-pencil popup-content-iconmark"></span></button>*@
                    <button data-p2btooltip="Remove TrainingProgramCalendar" class="popup-content-icon-remove" id="Remove-TrainingProgramCalendar-TrainingSession"><span class="ui-icon ui-icon-trash popup-content-iconmark"></span></button>
                </div>
            </div>

            <div class="dropdown_row1 rows3 content_margine">@Html.LabelFor(m => m.SessionType, "Session Type :", new { @class = "popup-content-label must" })<select id="Categorylist1" name="Categorylist1" class="must" style="width:161px;"><option></option></select></div>
            <div class="rows3 content_margine">@Html.LabelFor(m => m.SessionDate, "Session Date :", new { @class = "popup-content-label must" })@Html.TextBoxFor(m => m.SessionDate, new { @class = "popup-content-textboxs must", @id = "SessionDate" })</div>
            <div class="rows3 content_margine">@Html.LabelFor(m => m.StartTime, "Start Time  :", new { @class = "popup-content-label must" })@Html.TextBoxFor(m => m.StartTime, new { @class = "popup-content-textboxs must", @id = "StartTime" })</div>
            <div class="rows3 content_margine">@Html.LabelFor(m => m.EndTime, "End Time  :", new { @class = "popup-content-label must" })@Html.TextBoxFor(m => m.EndTime, new { @class = "popup-content-textboxs must", @id = "EndTime" })</div>
            <div class="rows3 content_margine">@Html.LabelFor(m => m.TotalHours, "Total Hours   :", new { @class = "popup-content-label must" })@Html.TextBoxFor(m => m.TotalHours, new { @class = "popup-content-textboxs must force", @id = "TotalHours" })</div>

            <div class="rows3 content_margine">
                <div id="AddressList_Old"></div>
                @Html.LabelFor(m => m.Faculty, "Faculty :", new { @class = "popup-content-label" })
                <div class="popup-content-table">
                    <table class="lookuptableselected" id="Faculty_List">

                        <tr><th>Id</th><th>LookUp Selected Description</th></tr>
                    </table>
                </div>
                <div class="icon-row">
                    <button data-p2btooltip="Lookup Faculty" class="  popup-content-icon-lookup" id="Lookup-Faculty-TrainingSession"><span class="ui-icon ui-icon-folder-open popup-content-iconmark"></span></button>
                    @*<button data-p2btooltip="Create Faculty" class="popup-content-icon-create" id="Create-Faculty-TrainingSession"><span class="ui-icon ui-icon-newwin popup-content-iconmark"></span></button>*@
                    @*<button data-p2btooltip="Edit Faculty" class="popup-content-icon-edit" id="Edit-Faculty-TrainingSession"><span class="ui-icon ui-icon-pencil popup-content-iconmark"></span></button>*@
                    <button data-p2btooltip="Remove Faculty" class="popup-content-icon-remove" id="Remove-Faculty-TrainingSession"><span class="ui-icon ui-icon-trash popup-content-iconmark"></span></button>
                </div>
            </div>
            
            <div class="rows3 content_margine">@Html.LabelFor(m => m.TrainerName, "TrainerName :", new { @class = "popup-content-label must" })@Html.TextBoxFor(m => m.TrainerName, new { @class = "popup-content-textboxs must force", @id = "TrainerName" })</div>

           
            
        }
    </div>

</body>
</html>
<script>
    $(document).ready(function () {
        //$('#txt_box1').ValidateTextBox({ maxlength: 5, AlphaNum: 0 });
        //  $('#Code').ValidateTextBox({ maxlength: 10, alphanum: true });
        //  $('#Code').MaxLength(10);
        //$('#Name').ForceOnlyAlphaNumeric();
        // $('#Name').MaxLength(50);
        //   $('#Name').ValidateTextBox({ maxlength: 50, name: true });

    });
    $(document).ready(function (e) {
        $('button').button();
        var ColNames = [];
        var ColModel = [];
        var SortName, Caption, url, width, height;
        //  var btndisablenames = "#Edit-Address-Corporate,#Remove-Address-Corporate,#Edit-ContactDetails-Corporate,#Remove-ContactDetails-Corporate";
        ColModel = ['SessionDate', 'StartTime', 'Endtime', 'SessionType', 'TrainingProgramCalendar', 'Id'];
        ColNames = ['session date', 'start time', 'end time', 'session type', 'TrainingProgramCalendar', 'Id'];
        SortName = 'Id';
        Caption = 'Training Session';
        url = '@Url.Action("P2BGrid")';
        width = 1100;
        height = 150;
        $('#JqGrid').P2BGrid(ColNames, ColModel, SortName, Caption, url, width, height);
        $('#SessionDate').P2BDatePicker();
        $('#StartTime').P2BTimePicker();
        $('#EndTime').P2BTimePicker();
        $("#StartTime").ForceOnlyAlphaNumeric();
        $("#EndTime").ForceOnlyAlphaNumeric();
        $("#TotalHours").ForceOnlyNumeric();

        function AssignData() {
            dt = $('#JqGrid').P2BGrid.P2BEdDelV('#JqGrid', 'Id');
        }

        function DateConvert(JsonDate) {
            var date = new Date(parseInt(JsonDate.substr(6)));
            var displayDate = $.datepicker.formatDate("dd/mm/yy", date);
            return displayDate;
        };
        //function DateConvert(JsonDate) {
        //    var time = new Date(parseInt(JsonDate.substr(6)));
        //    time = time.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true });
        //    return time;
        //};

        //function sum() {
        //    var start = document.getElementById('StartTime').value;
        //    var end = document.getElementById('EndTime').value;
        //    var result = parseInt(start) + parseInt(end);
        //    if (!isNaN(result)) {
        //        document.getElementById('TotalHours').value = result;
        //    }
        //}


        $('#Create_Dialog').P2BCreateDialog();
        $('#Create').on("click", function (event) {
            $('#frmTrainingSession').trigger("reset");
            $('#Create_Dialog').P2BCreateDialog('', '', '', '', 'Create Training Session', 'open', '@Url.Action("Create")', '#frmTrainingSession', 'Message :', 'Request Falied :', '#JqGrid', 500, 620, '#Faculty_List', '', function (data) { });
            $('#Categorylist1').trigger("reset");
            $('#SessionDate').attr('readonly', 'readonly');
            $("#StartTime").attr('readonly', 'readonly');
            $("#EndTime").attr('readonly', 'readonly');
            $("#TotalHours").attr('readonly', 'readonly');

            $('#Categorylist1').P2BSelectMenuAppend('@Url.Action("GetLookupValue", "lookup")', 1055, ""); // To bind dropdown on page load
            event.preventDefault();
        });

        // Main page edit
        $('#Edit').on('click', function () {
            AssignData();
            $('#Create_Dialog').P2BEditModalDialog('@Url.Action("Edit")', dt.Id, '@Url.Action("EditSave")', "Edit Training Session Data", '#frmTrainingSession', dt.Id, 'Message : ', 'Request Falied :', '#JqGrid', 500, 620, '#Faculty_List', '', function (data) {
                $('#SessionDate').attr('readonly', 'readonly');
                $("#StartTime").attr('readonly', 'readonly');
                $("#EndTime").attr('readonly', 'readonly');
                $("#TotalHours").attr('readonly', 'readonly'); // setTimeout(function () {
                $.each(data[0], function (i, k) {
                    $('#StartTime').val(k.StartTime);
                    $('#EndTime').val(k.EndTime);
                    $('#TotalHours').val(k.TotalHours);
                    $('#SessionDate').val(k.SessionDate);
                    if (k.SessionDate != null) {
                        $('#SessionDate').val(DateConvert(k.SessionDate));
                    }

                    $('#Categorylist1').P2BSelectMenuAppend("@Url.Action("GetLookupValue", "lookup")", 1055, k.SessionType_Id); // Dropdown bind

                    $('#TrainerName').val(k.TrainerName);

                });
                //partial page bind
                $.each(data[1], function (i, k) {
                    $('#Faculty_List').P2BLookUpEncapsulate('#Faculty_List', 'Faculty_List', k.Faculty_Id, k.Faculty_Details, 'Faculty_List', '#Edit-Faculty-TrainingSession,#Remove-Faculty-TrainingSession', 'N');
                    $('#TrainingProgramCalendar_List').P2BLookUpEncapsulate('#TrainingProgramCalendar_List', 'TrainingProgramCalendar_List', k.TraProgCal, k.TraProgCal_Details, 'TrainingProgramCalendar_List', '#Edit-TrainingProgramCalendar-TrainingSession,#Remove-TrainingProgramCalendar-TrainingSession', 'N');


                });
                //alert(data[3]);
                $('#Autho_Allow').val(data[3]); //Compulsory for authorisation
                // }, 2000);
            });
        });


        //View main page
        $('#View').button().click(function (event) {
            AssignData();
            $('#Create_Dialog').P2BViewModalDialog('@Url.Action("Edit")', dt.Id, 'View Training Session Data', '#Faculty_List', '#Lookup-Faculty-TrainingSession,#Create-Faculty-TrainingSession,#Edit-Faculty-TrainingSession,#Remove-Address-Corporate,#Lookup-Faculty-TrainingSession', 500, 620, '#Autho', '@Url.Action("AuthSave")', dt.Id, '', '', '', '', '#JqGrid', function (data) {
                $.each(data[0], function (i, k) {
                    $('#Autho_Action').val(k.Action);
                    $('#StartTime').val(k.StartTime);
                    $('#EndTime').val(k.EndTime);
                    $('#TotalHours').val(k.TotalHours);
                    $('#SessionDate').val(k.SessionDate);
                    if (k.SessionDate != null) {
                        $('#SessionDate').val(DateConvert(k.SessionDate));
                    }

                    $('#Categorylist1').P2BSelectMenuAppend("@Url.Action("GetLookupValue", "lookup")", 1055, k.SessionType_Id); // Dropdown bind

                    $('#TrainerName').val(k.TrainerName);
                });

                $.each(data[1], function (i, k) {
                    $('#Faculty_List').P2BLookUpEncapsulate('#Faculty_List', 'Faculty_List', k.Faculty_Id, k.Faculty_Details, 'Faculty_List', 'view', 'N');
                    $('#TrainingProgramCalendar_List').P2BLookUpEncapsulate('#TrainingProgramCalendar_List', 'TrainingProgramCalendar_List', k.TraProgCal, k.TraProgCal_Details, 'TrainingProgramCalendar_List', 'view', 'N');
                });
                if ($("#Autho").hasClass('auto_active')) {
                    if (data[2] != null) {
                        $('#Name').oldVal(data[2].Name);
                        $('#Categorylist').oldDropval(data[2].BusinessType_Val);
                        $('#AddressList_Old').oldLookupVal(data[2].Address_Val);
                        $('#ContactDetailsList_Old').oldLookupVal(data[2].Contact_Val);
                    }
                }
            });
        });

        //delete main page
        $('#Delete').button().click(function (event) {
            dt = $('#JqGrid').P2BGrid.P2BEdDelV('#JqGrid', 'Id');
            $('#Create_Dialog').P2BDeleteModalDialog('@Url.Action("Delete")', dt.Id, 'Are you sure want to remove record???', 'Message : ', 'Request failed', '#JqGrid', 200, 200);
            event.preventDefault();
        });

        /* Address button click*/

        //To get data in Lookup
        $('#Lookup-Faculty-TrainingSession').on('click', function (event) {
            $('.dialog').P2BLookUpModal('@Url.Action("GetLookupDetailsFacultyExternal", "TrainingSession")', '', 'LookupDiv', 'Faculty Look Up Data', '#Faculty_List', 'Faculty_List', 5, 'Faculty_List', '#frmTrainingSession', 'N', '#Edit-Faculty-TrainingSession,#Remove-Faculty-TrainingSession', 'Lookup_table', 'PageNavPosition');
            event.preventDefault();
        });
        $('#EndTime, #StartTime').on('change', function () {
            if ($('#StartTime').val() && $('#EndTime').val()) {
                //  alert('hi');
                var start = $('#StartTime').val();
                //  alert(start);
                var end = $('#EndTime').val();
                //  alert(end);

                s = start.split(':');
                e = end.split(':');
                min = e[1] - s[1];
                hour_carry = 0;
                if (min < 0) {
                    min += 60;
                    hour_carry += 1;
                }
                hour = e[0] - s[0] - hour_carry;
                min = ((min / 60) * 60).toString()
                diff = hour + ":" + min.substring(0, 2);
                //var chk = new Date(start) - new Date(end);
                //var time1 = $("#StartTime").val().split(':'),
                //    time2 = $("#EndTime").val().split(':');
                //var hours1 = parseInt(time1[0], 10),
                //    hours2 = parseInt(time2[0], 10),
                //    mins1 = parseInt(time1[1], 10),
                //    mins2 = parseInt(time2[1], 10);
                //var hours = hours2 - hours1, mins = 0;

                //// get hours
                //if (hours < 0) hours = 24 + hours;

                //// get minutes
                //if (mins2 >= mins1) {
                //    mins = mins2 - mins1;
                //}
                //else {
                //    mins = (mins2 + 60) - mins1;
                //    hours--;
                //}

                //// convert to fraction of 60
                //mins = mins / 60;
                //hours += mins;
                //hours = hours.toFixed(2);
                $("#TotalHours").val(diff);
                //  alert(hours);
            }
        });

        // PArtial page create
        $('<div></div>').P2BPartialCreateModalDialog();
        $('#Create-Faculty-TrainingSession').on("click", function (event) {
            $('<div></div>').P2BPartialCreateModalDialog('@Url.Action("CreateFacultyExternal_partial", "TrainingSession")', 'Create Faculty', 'open', '@Url.Action("Create", "FacultyInternalExternal")', '#frmFacultyInternalExternal', 'Message :', 'Request Falied :', '#JqGrid', 550, 1114, '', '', '', '#frmTrainingSession', '', function (data) {
                $('#section_emp').fadeIn();
                // to show data which is created in partial page
                $('#Faculty_List').P2BLookUpEncapsulate('#Faculty_List', 'Faculty_List', data[0], data[1], 'Faculty_List', '#Edit-Faculty-TrainingSession,#Remove-Faculty-TrainingSession', 'N');
                $('#Categorylist').P2BSelectMenuAppend('@Url.Action("GetLookupValue", "lookup")', 1051, "");

            });
            event.preventDefault();
        });


        $('#Edit-Faculty-TrainingSession').button().on("click", function (event) {
            var a = [], b;
            a = $('#Faculty_List').P2BGetTableDataonSelectedRow('#Faculty_List', 0);
            b = a[0];
            console.log(b);
            //url, openurl, opendataforward, editurl, maindialogtitle, forwardserializedata, forwarddata, editmessage, editerrormessage, gridreloadname,                                                                                                                    height, width, classoridoftheonwhichpopupderived, nameidclassofbuttontodisable, nameclassidofinlinelookup, nameofthelist_inlinelookuptable, nameoftable_inlinelookuptable,multiple_allowed_or_not, returndatafunction) {
            $('<div></div>').P2BPatialEditModalDialog('@Url.Action("CreateFacultyExternal_partial", "TrainingSession")', '@Url.Action("Edit", "FacultyInternalExternal")', b, '@Url.Action("EditSave", "FacultyInternalExternal")', 'Edit Faculty Internal External Details', '#frmFacultyInternalExternal', b, 'Message :', 'Request Falied :', '#JqGrid', 550, 1114, '#frmTrainingSession', '#Faculty_List', 'Faculty_List', 'Faculty_List', 'N', '#Edit-Faculty-TrainingSession,#Remove-Faculty-TrainingSession', function (data) {
                $('#section_emp').fadeOut();
                // setTimeout(function () {
                $.each(data[0], function (i, k) {
                    $('#frmFacultyInternalExternal').trigger("reset");
                    $('#Categorylist').P2BSelectMenuAppend("@Url.Action("GetLookupValue", "lookup")", 1051, k.FacultyType_Id); // Dropdown bind
                    $('#Code').val(k.Code);
                    $('#Code').attr('readonly', 'readonly');
                    $('#Name').val(k.Name);
                    $('#Name').attr('readonly', 'readonly');
                    $('#Narration').val(k.Narration);


                    if (k.FacultyType_Id != "") {
                        // console.log($('#Categorylist'));
                        trf = "1";

                        //console.log($('#Categorylist-button[ span[.ui-selectmenu-text]]'));
                        //if (k.FacultyType_Id == "2097") {          //internal
                        //    $('#FacultySpecializationhide').fadeIn();
                        //    $('#Addresshide').fadeIn();
                        //    $('#ContactDetailshide').fadeIn();
                        //    $('#section_emp').fadeOut();
                        //    $('#TrainingInstituehide').fadeOut();
                        //} else if (k.FacultyType_Id == "2098") {       //external
                        //    $('#TrainingInstituehide').fadeIn();
                        //    $('#section_emp').fadeOut();
                        //    $('#FacultySpecializationhide').fadeOut();
                        //    $('#Addresshide').fadeOut();
                        //    $('#ContactDetailshide').fadeOut();
                        //}
                    }
                });
                //if (trf == 1) {

                //    var value = $("#Categorylist option:selected").text().toUpperCase();

                //    console.log(value);

                //    if (value == "INTERNAL") {          //internal
                //        $('#section_emp').fadeOut();
                //        $('#FacultySpecializationhide').fadeIn();
                //        $('#Addresshide').fadeIn();
                //        $('#ContactDetailshide').fadeIn();
                //        $('#TrainingInstituehide').fadeOut();
                //    } else if (value == "EXTERNAL") {       //external
                //        $('#TrainingInstituehide').fadeIn();
                //        $('#section_emp').fadeOut();
                //        $('#FacultySpecializationhide').fadeOut();
                //        $('#Addresshide').fadeOut();
                //        $('#ContactDetailshide').fadeOut();
                //    }
                //}


                $.each(data[1], function (i, k) {
                    $('#TrainingInstitutelist').P2BLookUpEncapsulate('#TrainingInstitutelist', 'TrainingInstitutelist', k.Train_Id, k.Train_Details, 'TrainingInstitutelist', '', 'N');
                    $('#Address_List').P2BLookUpEncapsulate('#Address_List', 'Address_List', k.Add_Id, k.Address_FullAddress, 'Address_List', '#Address_Edit,#Address_remove', 'N');
                    $('#Contact_List').P2BLookUpEncapsulate('#Contact_List', 'Contact_List', k.Cont_Id, k.FullContactDetails, 'Contact_List', '#Contact_Edit-FacultyInternal,#Contact_Remove-FacultyInternal', 'N');

                });

                $.each(data[2], function (i, k) {
                    $('#FacultySpecializationlist').P2BLookUpEncapsulate('#FacultySpecializationlist', 'FacultySpecializationlist', k.SA_id, k.SA_val, 'FacultySpecializationlist', '#Edit-ContactNo-ContDetails,#Remove-ContactNo-ContDetails', 'A');

                   // var value = $("#Categorylist option:selected").text().toUpperCase();

                    $('#Categorylist').on('selectmenuchange', function () {
                        var value = $("#Categorylist option:selected").text().toUpperCase();
                       // console.log(value);
                        //alert(value);
                  //  console.log(value);
                  //  alert(value);
                    if (value == "INTERNAL") {          //internal
                        $('#section_emp').fadeOut();
                        $('#FacultySpecializationhide').fadeIn();
                        $('#Addresshide').fadeIn();
                        $('#ContactDetailshide').fadeIn();
                        $('#TrainingInstituehide').fadeOut();
                    } else if (value == "EXTERNAL") {       //external
                        $('#TrainingInstituehide').fadeIn();
                        $('#section_emp').fadeOut();
                        $('#FacultySpecializationhide').fadeOut();
                        $('#Addresshide').fadeOut();
                        $('#ContactDetailshide').fadeOut();
                    }
                    });
                });
                // }, 3000);
            });
            event.preventDefault();
        });

       
        //partial page delete
        $('#Remove-Faculty-TrainingSession').button().on('click', function (event) {
            //dt = $('#JqGrid').P2BGrid.P2BEdDelV('#JqGrid', 'Id');
            //var a = [], b;
            //a = $('#Faculty_List').P2BGetTableDataonSelectedRow('#Faculty_List', 0);
            //b = a[0];
            var selectedRows = [];
            selectedRows = $('#Faculty_List').P2BGetTableDataonSelectedRow('#Faculty_List', 0);
            $('<div></div>').P2BPartialDeleteModalDialog('', selectedRows, 0, 'Are you sure want to delete record???', 'Message : ', 'Request failed', '#Faculty_List', $('#Faculty_List').val(), 200, 200, '#frmTrainingSession', '#Faculty_List', '#Edit-Faculty-TrainingSession,#Remove-Faculty-TrainingSession');
            event.preventDefault();
        });

        //////////////TrainingProgramCalendar 

        //To get data in Lookup
        $('#Lookup-TrainingProgramCalendar-TrainingSession').on('click', function (event) {
            $('.dialog').P2BLookUpModal('@Url.Action("GetTrainingProgramCalendar", "TrainingSession")', '', 'LookupDiv', 'Look Up Data', '#TrainingProgramCalendar_List', 'TrainingProgramCalendar_List', 5, 'TrainingProgramCalendar_List', '#frmTrainingSession', 'N', '#Edit-TrainingProgramCalendar-TrainingSession,#Remove-TrainingProgramCalendar-TrainingSession', 'Lookup_table', 'PageNavPosition');
            event.preventDefault();
        });

        // PArtial page create
        $('<div></div>').P2BPartialCreateModalDialog();
        $('#Create-TrainingProgramCalendar-TrainingSession').on("click", function (event) {
            $('<div></div>').P2BPartialCreateModalDialog('@Url.Action("partial", "TrainingProgramCalendar")', 'Create TrainingProgramCalendar', 'open', '@Url.Action("Create", "EmailAddress")', '#frmEmailAddress', 'Message :', 'Request Falied :', '#JqGrid', 400, 500, '', '', '', '#frmTrainingSession', '', function (data) {
                // to show data which is created in partial page
                $('#TrainingProgramCalendar_List').P2BLookUpEncapsulate('#TrainingProgramCalendar_List', 'TrainingProgramCalendar_List', data[0], data[1], 'TrainingProgramCalendar_List', '', 'N');
            });
            event.preventDefault();
        });

        // Partial page edit
        $('#Edit-TrainingProgramCalendar-TrainingSession').button().on("click", function (event) {
            var a = [], b;
            a = $('#TrainingProgramCalendar_List').P2BGetTableDataonSelectedRow('#TrainingProgramCalendar_List', 0);
            b = a[0];
            //url, openurl, opendataforward, editurl, maindialogtitle, forwardserializedata, forwarddata, editmessage, editerrormessage, gridreloadname, height, width, classoridoftheonwhichpopupderived, nameclassidofinlinelookup, nameofthelist_inlinelookuptable, nameoftable_inlinelookuptable,multiple_allowed_or_not,nameidclassofbuttontodisable,returndatafunction) {
            $('<div></div>').P2BPatialEditModalDialog('@Url.Action("partial", "TrainingProgramCalendar")', '@Url.Action("edit", "EmailAddress")', b, '@Url.Action("Editsave", "EmailAddress")', 'Edit TrainingProgramCalendar', '#frmEmailAddress', b, 'Message :', 'Request Falied :', '#JqGrid', 400, 500, '#frmTrainingSession', '#TrainingProgramCalendar_List', 'TrainingProgramCalendar_List', 'TrainingProgramCalendar_List', 'N', '#Edit-TrainingProgramCalendar-TrainingSession,#Remove-TrainingProgramCalendar-TrainingSession', function (data) {
              
                $.each(data[0], function (i, k) {
                    $('#TrainingProgramCalendar_List').trigger("reset");

                    $('#Address1').val(k.Address1);

                    $('#CountryList').P2BSelectMenuAppend("@Url.Action("PopulateDropDownList", "country")", "", k.Country_Id, '');

                });


            });
            event.preventDefault();
        });

        //partial page delete
        $('#Remove-TrainingProgramCalendar-TrainingSession').button().on('click', function (event) {
            //dt = $('#JqGrid').P2BGrid.P2BEdDelV('#JqGrid', 'Id');
            //var a = [], b;
            //a = $('#TrainingProgramCalendar_List').P2BGetTableDataonSelectedRow('#TrainingProgramCalendar_List', 0);
            //b = a[0];
            var selectedRows = [];
            selectedRows = $('#TrainingProgramCalendar_List').P2BGetTableDataonSelectedRow('#TrainingProgramCalendar_List', 0);
            $('<div></div>').P2BPartialDeleteModalDialog('', selectedRows, 0, 'Are you sure want to delete record???', 'Message : ', 'Request failed', '#TrainingProgramCalendar_List', $('#TrainingProgramCalendar_List').val(), 200, 200, '#frmTrainingSession', '#TrainingProgramCalendar_List', '#Edit-TrainingProgramCalendar-TrainingSession,#Remove-TrainingProgramCalendar-TrainingSession');
            event.preventDefault();
        });

        


        $('.popup_radio_button').controlgroup();
        $('#Categorylist1').selectmenu().selectmenu("menuWidget");
        $('#Categorylist').selectmenu().selectmenu("menuWidget");
        $('#Autho').makeDisable('#Create,#Edit,#Delete');
        $('#Autho').onClickGrid('#JqGrid', '@Url.Action("P2BGrid")', '@Url.Action("P2BGrid")');
    });
</script>